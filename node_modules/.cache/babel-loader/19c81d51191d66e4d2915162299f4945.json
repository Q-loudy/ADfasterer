{"ast":null,"code":"// This component is used for every instance of interval/bulk display; uses passed-in values, only defaulting to\n// autobuyer attributes if there isn't anything passed in\nexport default {\n  name: \"AutobuyerIntervalLabel\",\n  props: {\n    autobuyer: {\n      type: Object,\n      required: false,\n      default: null\n    },\n    intervalIn: {\n      type: Number,\n      required: false,\n      default: null\n    },\n    bulkIn: {\n      type: Number,\n      required: false,\n      default: null\n    }\n  },\n\n  data() {\n    return {\n      interval: 0,\n      bulk: 0,\n      isShowingBulk: false\n    };\n  },\n\n  computed: {\n    intervalText() {\n      // We want to special-case auto-crunch because break infinity relies on getting its interval below 0.1s, which\n      // may otherwise render as \"Instant\" with slow update rates\n      if (this.interval < player.options.updateRate && this.autobuyer.name !== \"Infinity\") return \"Instant\";\n      return `${format(TimeSpan.fromMilliseconds(this.interval).totalSeconds, 2, 2)} seconds`;\n    },\n\n    bulkText() {\n      return `Current bulk: ${Number.isFinite(this.bulk) ? formatX(this.bulk, 2) : \"Unlimited\"}`;\n    }\n\n  },\n  methods: {\n    update() {\n      var _ref, _this$bulkIn;\n\n      const buyer = this.autobuyer;\n      this.interval = (_ref = this.intervalIn || (buyer === null || buyer === void 0 ? void 0 : buyer.interval)) !== null && _ref !== void 0 ? _ref : 0;\n      this.bulk = (_this$bulkIn = this.bulkIn) !== null && _this$bulkIn !== void 0 ? _this$bulkIn : buyer.hasUnlimitedBulk ? Infinity : buyer.bulk;\n      this.isShowingBulk = this.bulk !== 0 && Number.isFinite(this.bulk);\n    }\n\n  }\n};","map":{"version":3,"sources":["AutobuyerIntervalLabel.vue"],"names":[],"mappings":"AACA;AACA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,wBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KADA;AAMA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KANA;AAWA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AAXA,GAFA;;AAmBA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CADA;AAEA,MAAA,IAAA,EAAA,CAFA;AAGA,MAAA,aAAA,EAAA;AAHA,KAAA;AAKA,GAzBA;;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,GAAA;AACA;AACA;AACA,UAAA,KAAA,QAAA,GAAA,MAAA,CAAA,OAAA,CAAA,UAAA,IAAA,KAAA,SAAA,CAAA,IAAA,KAAA,UAAA,EAAA,OAAA,SAAA;AACA,aAAA,GAAA,MAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,KAAA,QAAA,EAAA,YAAA,EAAA,CAAA,EAAA,CAAA,CAAA,UAAA;AACA,KANA;;AAOA,IAAA,QAAA,GAAA;AACA,aAAA,iBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,IAAA,IAAA,OAAA,CAAA,KAAA,IAAA,EAAA,CAAA,CAAA,GAAA,WAAA,EAAA;AACA;;AATA,GA1BA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AAAA;;AACA,YAAA,KAAA,GAAA,KAAA,SAAA;AACA,WAAA,QAAA,WAAA,KAAA,UAAA,KAAA,KAAA,aAAA,KAAA,uBAAA,KAAA,CAAA,QAAA,CAAA,uCAAA,CAAA;AACA,WAAA,IAAA,mBAAA,KAAA,MAAA,uDAAA,KAAA,CAAA,gBAAA,GAAA,QAAA,GAAA,KAAA,CAAA,IAAA;AACA,WAAA,aAAA,GAAA,KAAA,IAAA,KAAA,CAAA,IAAA,MAAA,CAAA,QAAA,CAAA,KAAA,IAAA,CAAA;AACA;;AANA;AArCA,CAAA","sourcesContent":["<script>\r\n// This component is used for every instance of interval/bulk display; uses passed-in values, only defaulting to\r\n// autobuyer attributes if there isn't anything passed in\r\nexport default {\r\n  name: \"AutobuyerIntervalLabel\",\r\n  props: {\r\n    autobuyer: {\r\n      type: Object,\r\n      required: false,\r\n      default: null\r\n    },\r\n    intervalIn: {\r\n      type: Number,\r\n      required: false,\r\n      default: null\r\n    },\r\n    bulkIn: {\r\n      type: Number,\r\n      required: false,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      interval: 0,\r\n      bulk: 0,\r\n      isShowingBulk: false,\r\n    };\r\n  },\r\n  computed: {\r\n    intervalText() {\r\n      // We want to special-case auto-crunch because break infinity relies on getting its interval below 0.1s, which\r\n      // may otherwise render as \"Instant\" with slow update rates\r\n      if (this.interval < player.options.updateRate && this.autobuyer.name !== \"Infinity\") return \"Instant\";\r\n      return `${format(TimeSpan.fromMilliseconds(this.interval).totalSeconds, 2, 2)} seconds`;\r\n    },\r\n    bulkText() {\r\n      return `Current bulk: ${Number.isFinite(this.bulk) ? formatX(this.bulk, 2) : \"Unlimited\"}`;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      const buyer = this.autobuyer;\r\n      this.interval = (this.intervalIn || buyer?.interval) ?? 0;\r\n      this.bulk = this.bulkIn ?? (buyer.hasUnlimitedBulk ? Infinity : buyer.bulk);\r\n      this.isShowingBulk = this.bulk !== 0 && Number.isFinite(this.bulk);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"c-autobuyer-box__small-text\">\r\n    Current interval: {{ intervalText }}\r\n    <span v-if=\"isShowingBulk\">\r\n      <br>\r\n      {{ bulkText }}\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/autobuyers"},"metadata":{},"sourceType":"module"}