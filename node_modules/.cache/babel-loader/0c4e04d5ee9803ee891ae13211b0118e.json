{"ast":null,"code":"import { MultiplierTabHelper } from \"./helper-functions\";\nimport { MultiplierTabIcons } from \"./icons\"; // See index.js for documentation\n\nexport const galaxies = {\n  // Note: none of the galaxy types use the global multiplier that applies to all of them within multValue, which\n  // very slightly reduces performance impact and is okay because it's applied consistently\n  antimatter: {\n    name: \"Antimatter Galaxies\",\n    displayOverride: () => {\n      const num = player.galaxies + GalaxyGenerator.galaxies;\n      const mult = MultiplierTabHelper.globalGalaxyMult();\n      return `${formatInt(num)}, ${formatX(mult, 2, 2)} strength`;\n    },\n    multValue: () => Decimal.pow10(player.galaxies + GalaxyGenerator.galaxies),\n    isActive: true,\n    icon: MultiplierTabIcons.ANTIMATTER\n  },\n  replicanti: {\n    name: \"Replicanti Galaxies\",\n    displayOverride: () => {\n      const num = Replicanti.galaxies.total;\n      let rg = Replicanti.galaxies.bought;\n      rg *= 1 + Effects.sum(TimeStudy(132), TimeStudy(133));\n      rg += Replicanti.galaxies.extra;\n      rg += Math.min(Replicanti.galaxies.bought, ReplicantiUpgrade.galaxies.value) * Effects.sum(EternityChallenge(8).reward);\n      const mult = rg / Math.clampMin(num, 1) * MultiplierTabHelper.globalGalaxyMult();\n      return `${formatInt(num)}, ${formatX(mult, 2, 2)} strength`;\n    },\n    multValue: () => {\n      let rg = Replicanti.galaxies.bought;\n      rg *= 1 + Effects.sum(TimeStudy(132), TimeStudy(133));\n      rg += Replicanti.galaxies.extra;\n      rg += Math.min(Replicanti.galaxies.bought, ReplicantiUpgrade.galaxies.value) * Effects.sum(EternityChallenge(8).reward);\n      return Decimal.pow10(rg);\n    },\n    isActive: () => Replicanti.areUnlocked,\n    icon: MultiplierTabIcons.SPECIFIC_GLYPH(\"replication\")\n  },\n  tachyon: {\n    name: \"Tachyon Galaxies\",\n    displayOverride: () => {\n      const num = player.dilation.totalTachyonGalaxies;\n      const mult = MultiplierTabHelper.globalGalaxyMult() * (1 + Math.max(0, Replicanti.amount.log10() / 1e6) * AlchemyResource.alternation.effectValue);\n      return `${formatInt(num)}, ${formatX(mult, 2, 2)} strength`;\n    },\n    multValue: () => {\n      const num = player.dilation.totalTachyonGalaxies;\n      const mult = 1 + Math.max(0, Replicanti.amount.log10() / 1e6) * AlchemyResource.alternation.effectValue;\n      return Decimal.pow10(num * mult);\n    },\n    isActive: () => player.dilation.totalTachyonGalaxies > 0,\n    icon: MultiplierTabIcons.SPECIFIC_GLYPH(\"dilation\")\n  },\n  nerfPelle: {\n    name: \"Doomed Reality\",\n    displayOverride: () => `All Galaxy strength /${formatInt(2)}`,\n    powValue: 0.5,\n    isActive: () => Pelle.isDoomed,\n    icon: MultiplierTabIcons.PELLE\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/multiplier-tab/galaxies.js"],"names":["MultiplierTabHelper","MultiplierTabIcons","galaxies","antimatter","name","displayOverride","num","player","GalaxyGenerator","mult","globalGalaxyMult","formatInt","formatX","multValue","Decimal","pow10","isActive","icon","ANTIMATTER","replicanti","Replicanti","total","rg","bought","Effects","sum","TimeStudy","extra","Math","min","ReplicantiUpgrade","value","EternityChallenge","reward","clampMin","areUnlocked","SPECIFIC_GLYPH","tachyon","dilation","totalTachyonGalaxies","max","amount","log10","AlchemyResource","alternation","effectValue","nerfPelle","powValue","Pelle","isDoomed","PELLE"],"mappings":"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","sourcesContent":["import { MultiplierTabHelper } from \"./helper-functions\";\r\nimport { MultiplierTabIcons } from \"./icons\";\r\n\r\n// See index.js for documentation\r\nexport const galaxies = {\r\n  // Note: none of the galaxy types use the global multiplier that applies to all of them within multValue, which\r\n  // very slightly reduces performance impact and is okay because it's applied consistently\r\n  antimatter: {\r\n    name: \"Antimatter Galaxies\",\r\n    displayOverride: () => {\r\n      const num = player.galaxies + GalaxyGenerator.galaxies;\r\n      const mult = MultiplierTabHelper.globalGalaxyMult();\r\n      return `${formatInt(num)}, ${formatX(mult, 2, 2)} strength`;\r\n    },\r\n    multValue: () => Decimal.pow10(player.galaxies + GalaxyGenerator.galaxies),\r\n    isActive: true,\r\n    icon: MultiplierTabIcons.ANTIMATTER,\r\n  },\r\n  replicanti: {\r\n    name: \"Replicanti Galaxies\",\r\n    displayOverride: () => {\r\n      const num = Replicanti.galaxies.total;\r\n      let rg = Replicanti.galaxies.bought;\r\n      rg *= (1 + Effects.sum(TimeStudy(132), TimeStudy(133)));\r\n      rg += Replicanti.galaxies.extra;\r\n      rg += Math.min(Replicanti.galaxies.bought, ReplicantiUpgrade.galaxies.value) *\r\n          Effects.sum(EternityChallenge(8).reward);\r\n      const mult = rg / Math.clampMin(num, 1) * MultiplierTabHelper.globalGalaxyMult();\r\n      return `${formatInt(num)}, ${formatX(mult, 2, 2)} strength`;\r\n    },\r\n    multValue: () => {\r\n      let rg = Replicanti.galaxies.bought;\r\n      rg *= (1 + Effects.sum(TimeStudy(132), TimeStudy(133)));\r\n      rg += Replicanti.galaxies.extra;\r\n      rg += Math.min(Replicanti.galaxies.bought, ReplicantiUpgrade.galaxies.value) *\r\n          Effects.sum(EternityChallenge(8).reward);\r\n      return Decimal.pow10(rg);\r\n    },\r\n    isActive: () => Replicanti.areUnlocked,\r\n    icon: MultiplierTabIcons.SPECIFIC_GLYPH(\"replication\"),\r\n  },\r\n  tachyon: {\r\n    name: \"Tachyon Galaxies\",\r\n    displayOverride: () => {\r\n      const num = player.dilation.totalTachyonGalaxies;\r\n      const mult = MultiplierTabHelper.globalGalaxyMult() *\r\n          (1 + Math.max(0, Replicanti.amount.log10() / 1e6) * AlchemyResource.alternation.effectValue);\r\n      return `${formatInt(num)}, ${formatX(mult, 2, 2)} strength`;\r\n    },\r\n    multValue: () => {\r\n      const num = player.dilation.totalTachyonGalaxies;\r\n      const mult = 1 + Math.max(0, Replicanti.amount.log10() / 1e6) * AlchemyResource.alternation.effectValue;\r\n      return Decimal.pow10(num * mult);\r\n    },\r\n    isActive: () => player.dilation.totalTachyonGalaxies > 0,\r\n    icon: MultiplierTabIcons.SPECIFIC_GLYPH(\"dilation\"),\r\n  },\r\n  nerfPelle: {\r\n    name: \"Doomed Reality\",\r\n    displayOverride: () => `All Galaxy strength /${formatInt(2)}`,\r\n    powValue: 0.5,\r\n    isActive: () => Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.PELLE,\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}