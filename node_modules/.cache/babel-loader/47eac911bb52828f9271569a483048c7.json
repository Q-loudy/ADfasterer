{"ast":null,"code":"/* eslint-disable no-console */\nimport { RichPresenceInfo } from \"@/core/discord-parser\";\nimport { hasPendingPurchaseConfirmations, loginPlayFabWithSteam, purchaseIAP, purchaseShopItem, validatePurchases } from \"./steam-purchases\";\nimport * as Greenworks from \"./bindings/greenworks\";\nimport { MAC, STEAM } from \"@/env\";\nlet isInitialized = false;\nlet isActive = false;\nlet achievementNames = [];\nexport const SteamRuntime = {\n  initialize() {\n    if (isInitialized) {\n      throw Error(\"Steam Runtime was initialized already.\");\n    }\n\n    isInitialized = true;\n\n    if (!STEAM || !Greenworks.isModuleLoaded() || !Greenworks.initAPI()) {\n      return;\n    }\n\n    isActive = true;\n    const steamId = Greenworks.getSteamId();\n    loginPlayFab(steamId);\n    loginFirebase(steamId);\n    achievementNames = Greenworks.getAchievementNames();\n    Greenworks.on(\"micro-txn-authorization-response\", (data, ordered, orderState) => {\n      if (orderState === true) {\n        validatePurchases();\n      }\n    });\n\n    if (!MAC) {\n      initializeDiscord();\n      createForceRefreshCanvas();\n    }\n  },\n\n  get isActive() {\n    if (!isInitialized) {\n      throw Error(\"Steam Runtime was called before init.\");\n    }\n\n    return isActive;\n  },\n\n  get screenName() {\n    var _Greenworks$getSteamI, _Greenworks$getSteamI2;\n\n    if (!this.isActive) {\n      return \"Non-Steam user\";\n    }\n\n    return (_Greenworks$getSteamI = (_Greenworks$getSteamI2 = Greenworks.getSteamId()) === null || _Greenworks$getSteamI2 === void 0 ? void 0 : _Greenworks$getSteamI2.screenName) !== null && _Greenworks$getSteamI !== void 0 ? _Greenworks$getSteamI : \"Steam user\";\n  },\n\n  activateAchievement(id) {\n    if (!this.isActive) {\n      return;\n    }\n\n    const name = `Achievement${id}`;\n\n    if (!achievementNames.includes(name)) {\n      return;\n    }\n\n    Greenworks.activateAchievement(name);\n  },\n\n  async purchaseIAP(std) {\n    if (!this.isActive) {\n      return;\n    }\n\n    await purchaseIAP(std);\n  },\n\n  validatePurchases() {\n    if (!this.isActive) {\n      return;\n    }\n\n    validatePurchases();\n  },\n\n  async purchaseShopItem(key, cost, cosmeticId) {\n    if (!this.isActive) {\n      GameUI.notify.error(\"Shop purchases are not available.\");\n      return false;\n    }\n\n    try {\n      await purchaseShopItem(key, cost, cosmeticId);\n      return true;\n    } catch (e) {\n      var _e$errorMessage;\n\n      GameUI.notify.error((_e$errorMessage = e.errorMessage) !== null && _e$errorMessage !== void 0 ? _e$errorMessage : e);\n      return false;\n    }\n  },\n\n  get hasPendingPurchaseConfirmations() {\n    if (!this.isActive) {\n      return false;\n    }\n\n    return hasPendingPurchaseConfirmations();\n  }\n\n};\n\nasync function loginPlayFab(steamId) {\n  try {\n    const screenName = steamId.screenName;\n    const ticket = await Greenworks.getAuthSessionTicket();\n    await loginPlayFabWithSteam(ticket.ticket.toString(\"hex\"), screenName);\n    GameUI.notify.info(\"Logged in to PlayFab Cloud\");\n  } catch (error) {\n    GameUI.notify.error(\"Couldn't log in to PlayFab Cloud.\");\n    throw error;\n  }\n}\n\nasync function loginFirebase(steamId) {\n  const accountId = steamId.accountId;\n  const staticAccountId = steamId.staticAccountId;\n  const screenName = steamId.screenName;\n  await Cloud.loginWithSteam(accountId, staticAccountId, screenName);\n}\n\nfunction initializeDiscord() {\n  Greenworks.initDiscordAPI(\"1057439416819396689\", 1399720);\n  setDiscordActivity();\n  Greenworks.runDiscordCallbacks();\n  setInterval(setDiscordActivity, 8000);\n  setInterval(Greenworks.runDiscordCallbacks, 4000);\n}\n\nfunction setDiscordActivity() {\n  Greenworks.setDiscordActivity(RichPresenceInfo.state, RichPresenceInfo.details);\n}\n\nfunction createForceRefreshCanvas() {\n  // This canvas is required for Steam overlay to properly work in Electron.\n  // Makopaz:\n  // \"essentially it makes the overlay have a refresh rate, otherwise it only\n  // updates based on parts of the screen which change, so without it the small\n  // areas of the screen where antimatter and such increment would be the only\n  // small portions of the overlay showing.\"\n  // There should be a less expensive approach. Please create a new issue or\n  // PR on GitHub if you know one, the planet will say thank you for saving\n  // megawatts of electricity spent on this canvas.\n  const canvas = document.createElement(\"canvas\");\n  canvas.classList.add(\"_steam-refresh-canvas\");\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n\n  function forceRefresh() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    window.requestAnimationFrame(forceRefresh);\n  }\n\n  forceRefresh();\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/steam/steam-runtime.js"],"names":["RichPresenceInfo","hasPendingPurchaseConfirmations","loginPlayFabWithSteam","purchaseIAP","purchaseShopItem","validatePurchases","Greenworks","MAC","STEAM","isInitialized","isActive","achievementNames","SteamRuntime","initialize","Error","isModuleLoaded","initAPI","steamId","getSteamId","loginPlayFab","loginFirebase","getAchievementNames","on","data","ordered","orderState","initializeDiscord","createForceRefreshCanvas","screenName","activateAchievement","id","name","includes","std","key","cost","cosmeticId","GameUI","notify","error","e","errorMessage","ticket","getAuthSessionTicket","toString","info","accountId","staticAccountId","Cloud","loginWithSteam","initDiscordAPI","setDiscordActivity","runDiscordCallbacks","setInterval","state","details","canvas","document","createElement","classList","add","body","appendChild","ctx","getContext","forceRefresh","clearRect","width","height","window","requestAnimationFrame"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\r\nimport { RichPresenceInfo } from \"@/core/discord-parser\";\r\n\r\nimport {\r\n  hasPendingPurchaseConfirmations,\r\n  loginPlayFabWithSteam,\r\n  purchaseIAP,\r\n  purchaseShopItem,\r\n  validatePurchases\r\n} from \"./steam-purchases\";\r\n\r\nimport * as Greenworks from \"./bindings/greenworks\";\r\n\r\nimport { MAC, STEAM } from \"@/env\";\r\n\r\nlet isInitialized = false;\r\nlet isActive = false;\r\nlet achievementNames = [];\r\n\r\nexport const SteamRuntime = {\r\n  initialize() {\r\n    if (isInitialized) {\r\n      throw Error(\"Steam Runtime was initialized already.\");\r\n    }\r\n\r\n    isInitialized = true;\r\n\r\n    if (!STEAM || !Greenworks.isModuleLoaded() || !Greenworks.initAPI()) {\r\n      return;\r\n    }\r\n\r\n    isActive = true;\r\n\r\n    const steamId = Greenworks.getSteamId();\r\n    loginPlayFab(steamId);\r\n    loginFirebase(steamId);\r\n\r\n    achievementNames = Greenworks.getAchievementNames();\r\n\r\n    Greenworks.on(\"micro-txn-authorization-response\", (data, ordered, orderState) => {\r\n      if (orderState === true) {\r\n        validatePurchases();\r\n      }\r\n    });\r\n\r\n    if (!MAC) {\r\n      initializeDiscord();\r\n      createForceRefreshCanvas();\r\n    }\r\n  },\r\n\r\n  get isActive() {\r\n    if (!isInitialized) {\r\n      throw Error(\"Steam Runtime was called before init.\");\r\n    }\r\n\r\n    return isActive;\r\n  },\r\n\r\n  get screenName() {\r\n    if (!this.isActive) {\r\n      return \"Non-Steam user\";\r\n    }\r\n\r\n    return Greenworks.getSteamId()?.screenName ?? \"Steam user\";\r\n  },\r\n\r\n  activateAchievement(id) {\r\n    if (!this.isActive) {\r\n      return;\r\n    }\r\n\r\n    const name = `Achievement${id}`;\r\n    if (!achievementNames.includes(name)) {\r\n      return;\r\n    }\r\n\r\n    Greenworks.activateAchievement(name);\r\n  },\r\n\r\n  async purchaseIAP(std) {\r\n    if (!this.isActive) {\r\n      return;\r\n    }\r\n\r\n    await purchaseIAP(std);\r\n  },\r\n\r\n  validatePurchases() {\r\n    if (!this.isActive) {\r\n      return;\r\n    }\r\n\r\n    validatePurchases();\r\n  },\r\n\r\n  async purchaseShopItem(key, cost, cosmeticId) {\r\n    if (!this.isActive) {\r\n      GameUI.notify.error(\"Shop purchases are not available.\");\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await purchaseShopItem(key, cost, cosmeticId);\r\n      return true;\r\n    } catch (e) {\r\n      GameUI.notify.error(e.errorMessage ?? e);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  get hasPendingPurchaseConfirmations() {\r\n    if (!this.isActive) {\r\n      return false;\r\n    }\r\n\r\n    return hasPendingPurchaseConfirmations();\r\n  }\r\n};\r\n\r\nasync function loginPlayFab(steamId) {\r\n  try {\r\n    const screenName = steamId.screenName;\r\n    const ticket = await Greenworks.getAuthSessionTicket();\r\n    await loginPlayFabWithSteam(ticket.ticket.toString(\"hex\"), screenName);\r\n    GameUI.notify.info(\"Logged in to PlayFab Cloud\");\r\n  } catch (error) {\r\n    GameUI.notify.error(\"Couldn't log in to PlayFab Cloud.\");\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function loginFirebase(steamId) {\r\n  const accountId = steamId.accountId;\r\n  const staticAccountId = steamId.staticAccountId;\r\n  const screenName = steamId.screenName;\r\n  await Cloud.loginWithSteam(accountId, staticAccountId, screenName);\r\n}\r\n\r\nfunction initializeDiscord() {\r\n  Greenworks.initDiscordAPI(\"1057439416819396689\", 1399720);\r\n  setDiscordActivity();\r\n  Greenworks.runDiscordCallbacks();\r\n  setInterval(setDiscordActivity, 8000);\r\n  setInterval(Greenworks.runDiscordCallbacks, 4000);\r\n}\r\n\r\nfunction setDiscordActivity() {\r\n  Greenworks.setDiscordActivity(RichPresenceInfo.state, RichPresenceInfo.details);\r\n}\r\n\r\nfunction createForceRefreshCanvas() {\r\n  // This canvas is required for Steam overlay to properly work in Electron.\r\n  // Makopaz:\r\n  // \"essentially it makes the overlay have a refresh rate, otherwise it only\r\n  // updates based on parts of the screen which change, so without it the small\r\n  // areas of the screen where antimatter and such increment would be the only\r\n  // small portions of the overlay showing.\"\r\n  // There should be a less expensive approach. Please create a new issue or\r\n  // PR on GitHub if you know one, the planet will say thank you for saving\r\n  // megawatts of electricity spent on this canvas.\r\n  const canvas = document.createElement(\"canvas\");\r\n  canvas.classList.add(\"_steam-refresh-canvas\");\r\n  document.body.appendChild(canvas);\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  function forceRefresh() {\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    window.requestAnimationFrame(forceRefresh);\r\n  }\r\n\r\n  forceRefresh();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}