{"ast":null,"code":"import ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\nexport default {\n  name: \"PurgeAllUnprotectedGlyphsModal\",\n  components: {\n    ModalWrapperChoice\n  },\n\n  data() {\n    return {\n      isRefining: false,\n      isSacrificing: false\n    };\n  },\n\n  computed: {\n    refiningSacrificingOrDeleting() {\n      if (this.isRefining) return `Refine`;\n      if (this.isSacrificing) return `Sacrifice`;\n      return `delete`;\n    },\n\n    topLabel() {\n      return `You are about to ${this.refiningSacrificingOrDeleting} all unprotected Glyphs`;\n    },\n\n    message() {\n      return `Are you sure you want to ${this.refiningSacrificingOrDeleting} all unprotected Glyphs\n        in your inventory?`;\n    },\n\n    extraMessage() {\n      if (this.glyphsDeleted === 0) return `This will ${this.refiningSacrificingOrDeleting} no Glyphs.`;\n\n      if (this.glyphsDeleted === this.glyphsTotal) {\n        return `This will ${this.refiningSacrificingOrDeleting} all your Glyphs.`;\n      }\n\n      return `This will ${this.refiningSacrificingOrDeleting} \n        ${formatInt(this.glyphsDeleted)}/${formatInt(this.glyphsTotal)} of your Glyphs.`;\n    },\n\n    // These two don't need to be reactive since the modal force-closes itself whenever glyphs change\n    glyphsTotal() {\n      return Glyphs.inventory.filter(slot => slot !== null).length;\n    },\n\n    glyphsDeleted() {\n      return Glyphs.autoClean(0, false);\n    }\n\n  },\n  methods: {\n    update() {\n      this.isRefining = GlyphSacrificeHandler.isRefining;\n      this.isSacrificing = GlyphSacrificeHandler.canSacrifice;\n    },\n\n    handleYesClick() {\n      Glyphs.deleteAllUnprotected();\n    }\n\n  }\n};","map":{"version":3,"sources":["PurgeAllUnprotectedGlyphsModal.vue"],"names":[],"mappings":"AACA,OAAA,kBAAA,MAAA,wCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gCADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,aAAA,EAAA;AAFA,KAAA;AAIA,GAVA;;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,6BAAA,GAAA;AACA,UAAA,KAAA,UAAA,EAAA,OAAA,QAAA;AACA,UAAA,KAAA,aAAA,EAAA,OAAA,WAAA;AACA,aAAA,QAAA;AACA,KALA;;AAMA,IAAA,QAAA,GAAA;AACA,aAAA,oBAAA,KAAA,6BAAA,yBAAA;AACA,KARA;;AASA,IAAA,OAAA,GAAA;AACA,aAAA,4BAAA,KAAA,6BAAA;AACA,2BADA;AAEA,KAZA;;AAaA,IAAA,YAAA,GAAA;AACA,UAAA,KAAA,aAAA,KAAA,CAAA,EAAA,OAAA,aAAA,KAAA,6BAAA,aAAA;;AACA,UAAA,KAAA,aAAA,KAAA,KAAA,WAAA,EAAA;AACA,eAAA,aAAA,KAAA,6BAAA,mBAAA;AACA;;AACA,aAAA,aAAA,KAAA,6BAAA;AACA,UAAA,SAAA,CAAA,KAAA,aAAA,CAAA,IAAA,SAAA,CAAA,KAAA,WAAA,CAAA,kBADA;AAEA,KApBA;;AAsBA;AACA,IAAA,WAAA,GAAA;AACA,aAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,EAAA,MAAA;AACA,KAzBA;;AA0BA,IAAA,aAAA,GAAA;AACA,aAAA,MAAA,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,CAAA;AACA;;AA5BA,GAXA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,UAAA,GAAA,qBAAA,CAAA,UAAA;AACA,WAAA,aAAA,GAAA,qBAAA,CAAA,YAAA;AACA,KAJA;;AAKA,IAAA,cAAA,GAAA;AACA,MAAA,MAAA,CAAA,oBAAA;AACA;;AAPA;AAzCA,CAAA","sourcesContent":["<script>\r\nimport ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\r\n\r\nexport default {\r\n  name: \"PurgeAllUnprotectedGlyphsModal\",\r\n  components: {\r\n    ModalWrapperChoice\r\n  },\r\n  data() {\r\n    return {\r\n      isRefining: false,\r\n      isSacrificing: false,\r\n    };\r\n  },\r\n  computed: {\r\n    refiningSacrificingOrDeleting() {\r\n      if (this.isRefining) return `Refine`;\r\n      if (this.isSacrificing) return `Sacrifice`;\r\n      return `delete`;\r\n    },\r\n    topLabel() {\r\n      return `You are about to ${this.refiningSacrificingOrDeleting} all unprotected Glyphs`;\r\n    },\r\n    message() {\r\n      return `Are you sure you want to ${this.refiningSacrificingOrDeleting} all unprotected Glyphs\r\n        in your inventory?`;\r\n    },\r\n    extraMessage() {\r\n      if (this.glyphsDeleted === 0) return `This will ${this.refiningSacrificingOrDeleting} no Glyphs.`;\r\n      if (this.glyphsDeleted === this.glyphsTotal) {\r\n        return `This will ${this.refiningSacrificingOrDeleting} all your Glyphs.`;\r\n      }\r\n      return `This will ${this.refiningSacrificingOrDeleting} \r\n        ${formatInt(this.glyphsDeleted)}/${formatInt(this.glyphsTotal)} of your Glyphs.`;\r\n    },\r\n\r\n    // These two don't need to be reactive since the modal force-closes itself whenever glyphs change\r\n    glyphsTotal() {\r\n      return Glyphs.inventory.filter(slot => slot !== null).length;\r\n    },\r\n    glyphsDeleted() {\r\n      return Glyphs.autoClean(0, false);\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isRefining = GlyphSacrificeHandler.isRefining;\r\n      this.isSacrificing = GlyphSacrificeHandler.canSacrifice;\r\n    },\r\n    handleYesClick() {\r\n      Glyphs.deleteAllUnprotected();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ModalWrapperChoice\r\n    option=\"sacrificeAll\"\r\n    @confirm=\"handleYesClick\"\r\n  >\r\n    <template #header>\r\n      {{ topLabel }}\r\n    </template>\r\n    <div class=\"c-modal-message__text\">\r\n      {{ message }}\r\n    </div>\r\n    <br>\r\n    <div class=\"c-modal-hard-reset-danger\">\r\n      {{ extraMessage }}\r\n    </div>\r\n  </ModalWrapperChoice>\r\n</template>\r\n"],"sourceRoot":"src/components/modals/glyph-management"},"metadata":{},"sourceType":"module"}