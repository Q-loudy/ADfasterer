{"ast":null,"code":"import PrimaryButton from \"@/components/PrimaryButton\";\nexport default {\n  name: \"LoadGameEntry\",\n  components: {\n    PrimaryButton\n  },\n  props: {\n    saveId: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    const save = GameStorage.saves[this.saveId];\n    return {\n      antimatter: new Decimal(save ? save.antimatter || save.money : 10),\n      fileName: save ? save.options.saveFileName : \"\"\n    };\n  },\n\n  computed: {\n    isSelected() {\n      return GameStorage.currentSlot === this.saveId;\n    }\n\n  },\n  methods: {\n    load() {\n      GameStorage.loadSlot(this.saveId);\n    },\n\n    formatAntimatter(antimatter) {\n      return formatPostBreak(antimatter, 2, 1);\n    },\n\n    update() {\n      if (this.isSelected) {\n        this.antimatter.copyFrom(Currency.antimatter);\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["LoadGameEntry.vue"],"names":[],"mappings":"AACA,OAAA,aAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GALA;;AAWA,EAAA,IAAA,GAAA;AACA,UAAA,IAAA,GAAA,WAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,IAAA,OAAA,CAAA,IAAA,GAAA,IAAA,CAAA,UAAA,IAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CADA;AAEA,MAAA,QAAA,EAAA,IAAA,GAAA,IAAA,CAAA,OAAA,CAAA,YAAA,GAAA;AAFA,KAAA;AAIA,GAjBA;;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,UAAA,GAAA;AACA,aAAA,WAAA,CAAA,WAAA,KAAA,KAAA,MAAA;AACA;;AAHA,GAlBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,IAAA,GAAA;AACA,MAAA,WAAA,CAAA,QAAA,CAAA,KAAA,MAAA;AACA,KAHA;;AAIA,IAAA,gBAAA,CAAA,UAAA,EAAA;AACA,aAAA,eAAA,CAAA,UAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AACA,KANA;;AAOA,IAAA,MAAA,GAAA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,aAAA,UAAA,CAAA,QAAA,CAAA,QAAA,CAAA,UAAA;AACA;AACA;;AAXA;AAvBA,CAAA","sourcesContent":["<script>\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\n\r\nexport default {\r\n  name: \"LoadGameEntry\",\r\n  components: {\r\n    PrimaryButton\r\n  },\r\n  props: {\r\n    saveId: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    const save = GameStorage.saves[this.saveId];\r\n    return {\r\n      antimatter: new Decimal(save ? save.antimatter || save.money : 10),\r\n      fileName: save ? save.options.saveFileName : \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    isSelected() {\r\n      return GameStorage.currentSlot === this.saveId;\r\n    }\r\n  },\r\n  methods: {\r\n    load() {\r\n      GameStorage.loadSlot(this.saveId);\r\n    },\r\n    formatAntimatter(antimatter) {\r\n      return formatPostBreak(antimatter, 2, 1);\r\n    },\r\n    update() {\r\n      if (this.isSelected) {\r\n        this.antimatter.copyFrom(Currency.antimatter);\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-modal-options__save-record\">\r\n    <h3>Save #{{ saveId + 1 }}:<span v-if=\"isSelected\"> (selected)</span></h3>\r\n    <span v-if=\"fileName\">File name: {{ fileName }}</span>\r\n    <span>Antimatter: {{ formatAntimatter(antimatter) }}</span>\r\n    <PrimaryButton\r\n      class=\"o-primary-btn--width-medium\"\r\n      @click=\"load\"\r\n    >\r\n      Load\r\n    </PrimaryButton>\r\n  </div>\r\n</template>\r\n"],"sourceRoot":"src/components/modals"},"metadata":{},"sourceType":"module"}