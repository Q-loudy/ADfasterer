{"ast":null,"code":"import { DC } from \"./constants\";\n/**\r\n * @abstract\r\n */\n\nclass MathOperations {\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n  add(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  subtract(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  multiply(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  divide(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  max(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  min(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  eq(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  gt(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  gte(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  lt(left, right) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n  // eslint-disable-next-line no-unused-vars\n\n\n  lte(left, right) {\n    throw new NotImplementedError();\n  }\n\n}\n\nMathOperations.number = new class NumberMathOperations extends MathOperations {\n  add(left, right) {\n    return left + right;\n  }\n\n  subtract(left, right) {\n    return left - right;\n  }\n\n  multiply(left, right) {\n    return left * right;\n  }\n\n  divide(left, right) {\n    return left / right;\n  }\n\n  max(left, right) {\n    return Math.max(left, right);\n  }\n\n  min(left, right) {\n    return Math.min(left, right);\n  }\n\n  eq(left, right) {\n    return left === right;\n  }\n\n  gt(left, right) {\n    return left > right;\n  }\n\n  gte(left, right) {\n    return left >= right;\n  }\n\n  lt(left, right) {\n    return left < right;\n  }\n\n  lte(left, right) {\n    return left <= right;\n  }\n\n}();\nMathOperations.decimal = new class DecimalMathOperations extends MathOperations {\n  add(left, right) {\n    return Decimal.add(left, right);\n  }\n\n  subtract(left, right) {\n    return Decimal.subtract(left, right);\n  }\n\n  multiply(left, right) {\n    return Decimal.multiply(left, right);\n  }\n\n  divide(left, right) {\n    return Decimal.divide(left, right);\n  }\n\n  max(left, right) {\n    return Decimal.max(left, right);\n  }\n\n  min(left, right) {\n    return Decimal.min(left, right);\n  }\n\n  eq(left, right) {\n    return Decimal.eq(left, right);\n  }\n\n  gt(left, right) {\n    return Decimal.gt(left, right);\n  }\n\n  gte(left, right) {\n    return Decimal.gte(left, right);\n  }\n\n  lt(left, right) {\n    return Decimal.lt(left, right);\n  }\n\n  lte(left, right) {\n    return Decimal.lte(left, right);\n  }\n\n}();\n/**\r\n * @abstract\r\n */\n\nexport class Currency {\n  /**\r\n   * @abstract\r\n   */\n  get value() {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n\n\n  set value(value) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   * @type {MathOperations}\r\n   */\n\n\n  get operations() {\n    throw new NotImplementedError();\n  }\n\n  add(amount) {\n    this.value = this.operations.add(this.value, amount);\n  }\n\n  subtract(amount) {\n    this.value = this.operations.max(this.operations.subtract(this.value, amount), 0);\n  }\n\n  multiply(amount) {\n    this.value = this.operations.multiply(this.value, amount);\n  }\n\n  divide(amount) {\n    this.value = this.operations.divide(this.value, amount);\n  }\n\n  eq(amount) {\n    return this.operations.eq(this.value, amount);\n  }\n\n  gt(amount) {\n    return this.operations.gt(this.value, amount);\n  }\n\n  gte(amount) {\n    return this.operations.gte(this.value, amount);\n  }\n\n  lt(amount) {\n    return this.operations.lt(this.value, amount);\n  }\n\n  lte(amount) {\n    return this.operations.lte(this.value, amount);\n  }\n\n  purchase(cost) {\n    if (!this.gte(cost)) return false;\n    this.subtract(cost);\n    return true;\n  }\n\n  bumpTo(value) {\n    this.value = this.operations.max(this.value, value);\n  }\n\n  dropTo(value) {\n    this.value = this.operations.min(this.value, value);\n  }\n\n  get startingValue() {\n    throw new NotImplementedError();\n  }\n\n  reset() {\n    this.value = this.startingValue;\n  }\n\n}\n/**\r\n * @abstract\r\n */\n\nclass NumberCurrency extends Currency {\n  get operations() {\n    return MathOperations.number;\n  }\n\n  get startingValue() {\n    return 0;\n  }\n\n}\n/**\r\n * @abstract\r\n */\n\n\nclass DecimalCurrency extends Currency {\n  get operations() {\n    return MathOperations.decimal;\n  }\n\n  get mantissa() {\n    return this.value.mantissa;\n  }\n\n  get exponent() {\n    return this.value.exponent;\n  }\n\n  get startingValue() {\n    return DC.D0;\n  }\n\n}\n\nwindow.DecimalCurrency = DecimalCurrency;\nCurrency.antimatter = new class extends DecimalCurrency {\n  get value() {\n    return player.antimatter;\n  }\n\n  set value(value) {\n    if (InfinityChallenges.nextIC) InfinityChallenges.notifyICUnlock(value);\n\n    if (GameCache.cheapestAntimatterAutobuyer.value && value.gte(GameCache.cheapestAntimatterAutobuyer.value)) {\n      // Clicking into the automation tab clears the trigger and prevents it from retriggering as long as the player\n      // stays on the tab; leaving the tab with an available autobuyer will immediately force it to trigger again\n      TabNotification.newAutobuyer.clearTrigger();\n      TabNotification.newAutobuyer.tryTrigger();\n    }\n\n    player.antimatter = value;\n    player.records.thisInfinity.maxAM = player.records.thisInfinity.maxAM.max(value);\n    player.records.thisEternity.maxAM = player.records.thisEternity.maxAM.max(value);\n    player.records.thisReality.maxAM = player.records.thisReality.maxAM.max(value);\n\n    if (Pelle.isDoomed) {\n      player.celestials.pelle.records.totalAntimatter = player.celestials.pelle.records.totalAntimatter.max(value);\n    }\n  }\n\n  add(amount) {\n    super.add(amount);\n\n    if (amount.gt(0)) {\n      player.records.totalAntimatter = player.records.totalAntimatter.add(amount);\n      player.requirementChecks.reality.noAM = false;\n    }\n  }\n\n  get productionPerSecond() {\n    return NormalChallenge(12).isRunning ? AntimatterDimension(1).productionPerRealSecond.plus(AntimatterDimension(2).productionPerRealSecond) : AntimatterDimension(1).productionPerRealSecond;\n  }\n\n  get startingValue() {\n    if (Pelle.isDisabled()) return new Decimal(100);\n    return Effects.max(10, Perk.startAM, Achievement(21), Achievement(37), Achievement(54), Achievement(55), Achievement(78)).toDecimal();\n  }\n\n}();\nCurrency.matter = new class extends DecimalCurrency {\n  get value() {\n    return player.matter;\n  }\n\n  set value(value) {\n    player.matter = Decimal.min(value, Decimal.MAX_VALUE);\n  }\n\n}();\nCurrency.infinities = new class extends DecimalCurrency {\n  get value() {\n    return player.infinities;\n  }\n\n  set value(value) {\n    player.infinities = value;\n  }\n\n}();\nCurrency.infinitiesBanked = new class extends DecimalCurrency {\n  get value() {\n    return player.infinitiesBanked;\n  }\n\n  set value(value) {\n    player.infinitiesBanked = value;\n  }\n\n}();\nCurrency.infinitiesTotal = new class extends DecimalCurrency {\n  get value() {\n    return player.infinities.plus(player.infinitiesBanked);\n  }\n\n  set value(value) {\n    player.infinities = value;\n  }\n\n}();\nCurrency.infinityPoints = new class extends DecimalCurrency {\n  get value() {\n    return player.infinityPoints;\n  }\n\n  set value(value) {\n    player.infinityPoints = value;\n    player.records.thisEternity.maxIP = player.records.thisEternity.maxIP.max(value);\n    player.records.thisReality.maxIP = player.records.thisReality.maxIP.max(value);\n\n    if (Pelle.isDoomed) {\n      player.celestials.pelle.records.totalInfinityPoints = player.celestials.pelle.records.totalInfinityPoints.max(value);\n    }\n  }\n\n  get startingValue() {\n    if (Pelle.isDisabled()) return new Decimal(0);\n    return Effects.max(0, Perk.startIP1, Perk.startIP2, Achievement(104)).toDecimal();\n  }\n\n  reset() {\n    super.reset();\n    player.records.thisEternity.maxIP = this.startingValue;\n  }\n\n}();\nCurrency.infinityPower = new class extends DecimalCurrency {\n  get value() {\n    return player.infinityPower;\n  }\n\n  set value(value) {\n    player.infinityPower = value;\n  }\n\n}();\nCurrency.eternities = new class extends DecimalCurrency {\n  get value() {\n    return player.eternities;\n  }\n\n  set value(value) {\n    player.eternities = value;\n  }\n\n  get startingValue() {\n    if (Pelle.isDoomed) return new Decimal(0);\n    return Effects.max(0, RealityUpgrade(10)).toDecimal();\n  }\n\n}();\nCurrency.eternityPoints = new class extends DecimalCurrency {\n  get value() {\n    return player.eternityPoints;\n  }\n\n  set value(value) {\n    player.eternityPoints = value;\n    player.records.thisReality.maxEP = player.records.thisReality.maxEP.max(value);\n\n    if (player.records.bestReality.bestEP.lt(value)) {\n      player.records.bestReality.bestEP = value;\n      player.records.bestReality.bestEPSet = Glyphs.copyForRecords(Glyphs.active.filter(g => g !== null));\n    }\n\n    if (Pelle.isDoomed) {\n      player.celestials.pelle.records.totalEternityPoints = player.celestials.pelle.records.totalEternityPoints.max(value);\n    }\n  }\n\n  get startingValue() {\n    if (Pelle.isDisabled()) return new Decimal(0);\n    return Effects.max(0, Perk.startEP1, Perk.startEP2, Perk.startEP3).toDecimal();\n  }\n\n  reset() {\n    super.reset();\n    player.records.thisReality.maxEP = this.startingValue;\n  }\n\n}();\nCurrency.timeShards = new class extends DecimalCurrency {\n  get value() {\n    return player.timeShards;\n  }\n\n  set value(value) {\n    player.timeShards = value;\n  }\n\n}();\nCurrency.timeTheorems = new class extends DecimalCurrency {\n  get value() {\n    return player.timestudy.theorem;\n  }\n\n  set value(value) {\n    player.timestudy.theorem = value;\n    player.timestudy.maxTheorem = value.plus(TimeTheorems.calculateTimeStudiesCost());\n  }\n\n  get max() {\n    return player.timestudy.maxTheorem;\n  }\n\n  add(amount) {\n    super.add(amount);\n    player.timestudy.maxTheorem = player.timestudy.maxTheorem.plus(amount);\n  }\n\n  reset() {\n    respecTimeStudies(true);\n    super.reset();\n    TimeTheoremPurchaseType.am.reset();\n    TimeTheoremPurchaseType.ip.reset();\n    TimeTheoremPurchaseType.ep.reset();\n    player.timestudy.maxTheorem = this.startingValue;\n  }\n\n}();\nCurrency.tachyonParticles = new class extends DecimalCurrency {\n  get value() {\n    return player.dilation.tachyonParticles;\n  }\n\n  set value(value) {\n    player.dilation.tachyonParticles = value;\n  }\n\n}();\nCurrency.dilatedTime = new class extends DecimalCurrency {\n  get value() {\n    return player.dilation.dilatedTime;\n  }\n\n  set value(value) {\n    player.dilation.dilatedTime = value;\n    player.records.thisReality.maxDT = player.records.thisReality.maxDT.max(value);\n  }\n\n}();\nCurrency.realities = new class extends NumberCurrency {\n  get value() {\n    return player.realities;\n  }\n\n  set value(value) {\n    player.realities = value;\n  }\n\n}();\nCurrency.realityMachines = new class extends DecimalCurrency {\n  get value() {\n    return player.reality.realityMachines;\n  }\n\n  set value(value) {\n    const newValue = Decimal.min(value, MachineHandler.hardcapRM);\n    const addedThisReality = newValue.minus(player.reality.realityMachines);\n    player.reality.realityMachines = newValue;\n    player.reality.maxRM = Decimal.max(player.reality.maxRM, newValue);\n\n    if (player.records.bestReality.RM.lt(addedThisReality)) {\n      player.records.bestReality.RM = addedThisReality;\n      player.records.bestReality.RMSet = Glyphs.copyForRecords(Glyphs.active.filter(g => g !== null));\n    }\n  }\n\n}();\nCurrency.perkPoints = new class extends NumberCurrency {\n  get value() {\n    return player.reality.perkPoints;\n  }\n\n  set value(value) {\n    player.reality.perkPoints = value;\n  }\n\n}();\nCurrency.relicShards = new class extends NumberCurrency {\n  get value() {\n    return player.celestials.effarig.relicShards;\n  }\n\n  set value(value) {\n    player.celestials.effarig.relicShards = value;\n  }\n\n}();\nCurrency.imaginaryMachines = new class extends NumberCurrency {\n  get value() {\n    return player.reality.imaginaryMachines;\n  }\n\n  set value(value) {\n    player.reality.imaginaryMachines = Math.clampMax(value, MachineHandler.currentIMCap);\n  }\n\n}();\nCurrency.darkMatter = new class extends DecimalCurrency {\n  get value() {\n    return player.celestials.laitela.darkMatter;\n  }\n\n  set value(value) {\n    const capped = Decimal.min(value, Number.MAX_VALUE);\n    player.celestials.laitela.darkMatter = capped;\n    player.celestials.laitela.maxDarkMatter = player.celestials.laitela.maxDarkMatter.max(capped);\n  }\n\n  get max() {\n    return player.celestials.laitela.maxDarkMatter;\n  }\n\n  set max(value) {\n    player.celestials.laitela.maxDarkMatter = value;\n  }\n\n}();\nCurrency.darkEnergy = new class extends NumberCurrency {\n  get value() {\n    return player.celestials.laitela.darkEnergy;\n  }\n\n  set value(value) {\n    player.celestials.laitela.darkEnergy = value;\n  }\n\n  get productionPerSecond() {\n    return DarkMatterDimensions.all.map(d => d.productionPerSecond).sum();\n  }\n\n}();\nCurrency.singularities = new class extends NumberCurrency {\n  get value() {\n    return player.celestials.laitela.singularities;\n  }\n\n  set value(value) {\n    player.celestials.laitela.singularities = value;\n  }\n\n}();\nCurrency.remnants = new class extends NumberCurrency {\n  get value() {\n    return player.celestials.pelle.remnants;\n  }\n\n  set value(value) {\n    player.celestials.pelle.remnants = value;\n  }\n\n}();\nCurrency.realityShards = new class extends DecimalCurrency {\n  get value() {\n    return player.celestials.pelle.realityShards;\n  }\n\n  set value(value) {\n    player.celestials.pelle.realityShards = value;\n  }\n\n}();\nCurrency.replicanti = new class extends DecimalCurrency {\n  get value() {\n    return player.replicanti.amount;\n  }\n\n  set value(value) {\n    player.replicanti.amount = value;\n  }\n\n}();\nCurrency.galaxyGeneratorGalaxies = new class extends NumberCurrency {\n  get value() {\n    return player.galaxies + GalaxyGenerator.galaxies;\n  }\n\n  set value(value) {\n    const spent = player.galaxies + GalaxyGenerator.galaxies - value;\n    player.celestials.pelle.galaxyGenerator.spentGalaxies += spent;\n  }\n\n}();","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/currency.js"],"names":["DC","MathOperations","add","left","right","NotImplementedError","subtract","multiply","divide","max","min","eq","gt","gte","lt","lte","number","NumberMathOperations","Math","decimal","DecimalMathOperations","Decimal","Currency","value","operations","amount","purchase","cost","bumpTo","dropTo","startingValue","reset","NumberCurrency","DecimalCurrency","mantissa","exponent","D0","window","antimatter","player","InfinityChallenges","nextIC","notifyICUnlock","GameCache","cheapestAntimatterAutobuyer","TabNotification","newAutobuyer","clearTrigger","tryTrigger","records","thisInfinity","maxAM","thisEternity","thisReality","Pelle","isDoomed","celestials","pelle","totalAntimatter","requirementChecks","reality","noAM","productionPerSecond","NormalChallenge","isRunning","AntimatterDimension","productionPerRealSecond","plus","isDisabled","Effects","Perk","startAM","Achievement","toDecimal","matter","MAX_VALUE","infinities","infinitiesBanked","infinitiesTotal","infinityPoints","maxIP","totalInfinityPoints","startIP1","startIP2","infinityPower","eternities","RealityUpgrade","eternityPoints","maxEP","bestReality","bestEP","bestEPSet","Glyphs","copyForRecords","active","filter","g","totalEternityPoints","startEP1","startEP2","startEP3","timeShards","timeTheorems","timestudy","theorem","maxTheorem","TimeTheorems","calculateTimeStudiesCost","respecTimeStudies","TimeTheoremPurchaseType","am","ip","ep","tachyonParticles","dilation","dilatedTime","maxDT","realities","realityMachines","newValue","MachineHandler","hardcapRM","addedThisReality","minus","maxRM","RM","RMSet","perkPoints","relicShards","effarig","imaginaryMachines","clampMax","currentIMCap","darkMatter","laitela","capped","Number","maxDarkMatter","darkEnergy","DarkMatterDimensions","all","map","d","sum","singularities","remnants","realityShards","replicanti","galaxyGeneratorGalaxies","galaxies","GalaxyGenerator","spent","galaxyGenerator","spentGalaxies"],"mappings":"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","sourcesContent":["import { DC } from \"./constants\";\r\n\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass MathOperations {\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  add(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  subtract(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  multiply(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  divide(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  max(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  min(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  eq(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  gt(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  gte(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  lt(left, right) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  lte(left, right) { throw new NotImplementedError(); }\r\n}\r\n\r\nMathOperations.number = new class NumberMathOperations extends MathOperations {\r\n  add(left, right) { return left + right; }\r\n  subtract(left, right) { return left - right; }\r\n  multiply(left, right) { return left * right; }\r\n  divide(left, right) { return left / right; }\r\n  max(left, right) { return Math.max(left, right); }\r\n  min(left, right) { return Math.min(left, right); }\r\n  eq(left, right) { return left === right; }\r\n  gt(left, right) { return left > right; }\r\n  gte(left, right) { return left >= right; }\r\n  lt(left, right) { return left < right; }\r\n  lte(left, right) { return left <= right; }\r\n}();\r\n\r\nMathOperations.decimal = new class DecimalMathOperations extends MathOperations {\r\n  add(left, right) { return Decimal.add(left, right); }\r\n  subtract(left, right) { return Decimal.subtract(left, right); }\r\n  multiply(left, right) { return Decimal.multiply(left, right); }\r\n  divide(left, right) { return Decimal.divide(left, right); }\r\n  max(left, right) { return Decimal.max(left, right); }\r\n  min(left, right) { return Decimal.min(left, right); }\r\n  eq(left, right) { return Decimal.eq(left, right); }\r\n  gt(left, right) { return Decimal.gt(left, right); }\r\n  gte(left, right) { return Decimal.gte(left, right); }\r\n  lt(left, right) { return Decimal.lt(left, right); }\r\n  lte(left, right) { return Decimal.lte(left, right); }\r\n}();\r\n\r\n/**\r\n * @abstract\r\n */\r\nexport class Currency {\r\n  /**\r\n   * @abstract\r\n   */\r\n  get value() { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  set value(value) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   * @type {MathOperations}\r\n   */\r\n  get operations() { throw new NotImplementedError(); }\r\n\r\n  add(amount) {\r\n    this.value = this.operations.add(this.value, amount);\r\n  }\r\n\r\n  subtract(amount) {\r\n    this.value = this.operations.max(this.operations.subtract(this.value, amount), 0);\r\n  }\r\n\r\n  multiply(amount) {\r\n    this.value = this.operations.multiply(this.value, amount);\r\n  }\r\n\r\n  divide(amount) {\r\n    this.value = this.operations.divide(this.value, amount);\r\n  }\r\n\r\n  eq(amount) {\r\n    return this.operations.eq(this.value, amount);\r\n  }\r\n\r\n  gt(amount) {\r\n    return this.operations.gt(this.value, amount);\r\n  }\r\n\r\n  gte(amount) {\r\n    return this.operations.gte(this.value, amount);\r\n  }\r\n\r\n  lt(amount) {\r\n    return this.operations.lt(this.value, amount);\r\n  }\r\n\r\n  lte(amount) {\r\n    return this.operations.lte(this.value, amount);\r\n  }\r\n\r\n  purchase(cost) {\r\n    if (!this.gte(cost)) return false;\r\n    this.subtract(cost);\r\n    return true;\r\n  }\r\n\r\n  bumpTo(value) {\r\n    this.value = this.operations.max(this.value, value);\r\n  }\r\n\r\n  dropTo(value) {\r\n    this.value = this.operations.min(this.value, value);\r\n  }\r\n\r\n  get startingValue() { throw new NotImplementedError(); }\r\n\r\n  reset() {\r\n    this.value = this.startingValue;\r\n  }\r\n}\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass NumberCurrency extends Currency {\r\n  get operations() { return MathOperations.number; }\r\n  get startingValue() { return 0; }\r\n}\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass DecimalCurrency extends Currency {\r\n  get operations() { return MathOperations.decimal; }\r\n  get mantissa() { return this.value.mantissa; }\r\n  get exponent() { return this.value.exponent; }\r\n  get startingValue() { return DC.D0; }\r\n}\r\nwindow.DecimalCurrency = DecimalCurrency;\r\n\r\nCurrency.antimatter = new class extends DecimalCurrency {\r\n  get value() { return player.antimatter; }\r\n\r\n  set value(value) {\r\n    if (InfinityChallenges.nextIC) InfinityChallenges.notifyICUnlock(value);\r\n    if (GameCache.cheapestAntimatterAutobuyer.value && value.gte(GameCache.cheapestAntimatterAutobuyer.value)) {\r\n      // Clicking into the automation tab clears the trigger and prevents it from retriggering as long as the player\r\n      // stays on the tab; leaving the tab with an available autobuyer will immediately force it to trigger again\r\n      TabNotification.newAutobuyer.clearTrigger();\r\n      TabNotification.newAutobuyer.tryTrigger();\r\n    }\r\n    player.antimatter = value;\r\n    player.records.thisInfinity.maxAM = player.records.thisInfinity.maxAM.max(value);\r\n    player.records.thisEternity.maxAM = player.records.thisEternity.maxAM.max(value);\r\n    player.records.thisReality.maxAM = player.records.thisReality.maxAM.max(value);\r\n\r\n    if (Pelle.isDoomed) {\r\n      player.celestials.pelle.records.totalAntimatter = player.celestials.pelle.records.totalAntimatter.max(value);\r\n    }\r\n  }\r\n\r\n  add(amount) {\r\n    super.add(amount);\r\n    if (amount.gt(0)) {\r\n      player.records.totalAntimatter = player.records.totalAntimatter.add(amount);\r\n      player.requirementChecks.reality.noAM = false;\r\n    }\r\n  }\r\n\r\n  get productionPerSecond() {\r\n    return NormalChallenge(12).isRunning\r\n      ? AntimatterDimension(1).productionPerRealSecond.plus(AntimatterDimension(2).productionPerRealSecond)\r\n      : AntimatterDimension(1).productionPerRealSecond;\r\n  }\r\n\r\n  get startingValue() {\r\n    if (Pelle.isDisabled()) return new Decimal(100);\r\n    return Effects.max(\r\n      10,\r\n      Perk.startAM,\r\n      Achievement(21),\r\n      Achievement(37),\r\n      Achievement(54),\r\n      Achievement(55),\r\n      Achievement(78)\r\n    ).toDecimal();\r\n  }\r\n}();\r\n\r\nCurrency.matter = new class extends DecimalCurrency {\r\n  get value() { return player.matter; }\r\n  set value(value) {\r\n    player.matter = Decimal.min(value, Decimal.MAX_VALUE);\r\n  }\r\n}();\r\n\r\nCurrency.infinities = new class extends DecimalCurrency {\r\n  get value() { return player.infinities; }\r\n  set value(value) { player.infinities = value; }\r\n}();\r\n\r\nCurrency.infinitiesBanked = new class extends DecimalCurrency {\r\n  get value() { return player.infinitiesBanked; }\r\n  set value(value) { player.infinitiesBanked = value; }\r\n}();\r\n\r\nCurrency.infinitiesTotal = new class extends DecimalCurrency {\r\n  get value() { return player.infinities.plus(player.infinitiesBanked); }\r\n  set value(value) { player.infinities = value; }\r\n}();\r\n\r\nCurrency.infinityPoints = new class extends DecimalCurrency {\r\n  get value() { return player.infinityPoints; }\r\n  set value(value) {\r\n    player.infinityPoints = value;\r\n    player.records.thisEternity.maxIP = player.records.thisEternity.maxIP.max(value);\r\n    player.records.thisReality.maxIP = player.records.thisReality.maxIP.max(value);\r\n\r\n    if (Pelle.isDoomed) {\r\n      player.celestials.pelle.records.totalInfinityPoints =\r\n        player.celestials.pelle.records.totalInfinityPoints.max(value);\r\n    }\r\n  }\r\n\r\n  get startingValue() {\r\n    if (Pelle.isDisabled()) return new Decimal(0);\r\n    return Effects.max(\r\n      0,\r\n      Perk.startIP1,\r\n      Perk.startIP2,\r\n      Achievement(104)\r\n    ).toDecimal();\r\n  }\r\n\r\n  reset() {\r\n    super.reset();\r\n    player.records.thisEternity.maxIP = this.startingValue;\r\n  }\r\n}();\r\n\r\nCurrency.infinityPower = new class extends DecimalCurrency {\r\n  get value() { return player.infinityPower; }\r\n  set value(value) { player.infinityPower = value; }\r\n}();\r\n\r\nCurrency.eternities = new class extends DecimalCurrency {\r\n  get value() { return player.eternities; }\r\n  set value(value) { player.eternities = value; }\r\n\r\n  get startingValue() {\r\n    if (Pelle.isDoomed) return new Decimal(0);\r\n    return Effects.max(\r\n      0,\r\n      RealityUpgrade(10)\r\n    ).toDecimal();\r\n  }\r\n}();\r\n\r\nCurrency.eternityPoints = new class extends DecimalCurrency {\r\n  get value() { return player.eternityPoints; }\r\n  set value(value) {\r\n    player.eternityPoints = value;\r\n    player.records.thisReality.maxEP = player.records.thisReality.maxEP.max(value);\r\n    if (player.records.bestReality.bestEP.lt(value)) {\r\n      player.records.bestReality.bestEP = value;\r\n      player.records.bestReality.bestEPSet = Glyphs.copyForRecords(Glyphs.active.filter(g => g !== null));\r\n    }\r\n\r\n    if (Pelle.isDoomed) {\r\n      player.celestials.pelle.records.totalEternityPoints =\r\n        player.celestials.pelle.records.totalEternityPoints.max(value);\r\n    }\r\n  }\r\n\r\n  get startingValue() {\r\n    if (Pelle.isDisabled()) return new Decimal(0);\r\n    return Effects.max(\r\n      0,\r\n      Perk.startEP1,\r\n      Perk.startEP2,\r\n      Perk.startEP3\r\n    ).toDecimal();\r\n  }\r\n\r\n  reset() {\r\n    super.reset();\r\n    player.records.thisReality.maxEP = this.startingValue;\r\n  }\r\n}();\r\n\r\nCurrency.timeShards = new class extends DecimalCurrency {\r\n  get value() { return player.timeShards; }\r\n  set value(value) { player.timeShards = value; }\r\n}();\r\n\r\nCurrency.timeTheorems = new class extends DecimalCurrency {\r\n  get value() { return player.timestudy.theorem; }\r\n  set value(value) {\r\n    player.timestudy.theorem = value;\r\n    player.timestudy.maxTheorem = value.plus(TimeTheorems.calculateTimeStudiesCost());\r\n  }\r\n\r\n  get max() { return player.timestudy.maxTheorem; }\r\n\r\n  add(amount) {\r\n    super.add(amount);\r\n    player.timestudy.maxTheorem = player.timestudy.maxTheorem.plus(amount);\r\n  }\r\n\r\n  reset() {\r\n    respecTimeStudies(true);\r\n    super.reset();\r\n    TimeTheoremPurchaseType.am.reset();\r\n    TimeTheoremPurchaseType.ip.reset();\r\n    TimeTheoremPurchaseType.ep.reset();\r\n    player.timestudy.maxTheorem = this.startingValue;\r\n  }\r\n}();\r\n\r\nCurrency.tachyonParticles = new class extends DecimalCurrency {\r\n  get value() { return player.dilation.tachyonParticles; }\r\n  set value(value) { player.dilation.tachyonParticles = value; }\r\n}();\r\n\r\nCurrency.dilatedTime = new class extends DecimalCurrency {\r\n  get value() { return player.dilation.dilatedTime; }\r\n  set value(value) {\r\n    player.dilation.dilatedTime = value;\r\n    player.records.thisReality.maxDT = player.records.thisReality.maxDT.max(value);\r\n  }\r\n}();\r\n\r\nCurrency.realities = new class extends NumberCurrency {\r\n  get value() { return player.realities; }\r\n  set value(value) { player.realities = value; }\r\n}();\r\n\r\nCurrency.realityMachines = new class extends DecimalCurrency {\r\n  get value() { return player.reality.realityMachines; }\r\n  set value(value) {\r\n    const newValue = Decimal.min(value, MachineHandler.hardcapRM);\r\n    const addedThisReality = newValue.minus(player.reality.realityMachines);\r\n    player.reality.realityMachines = newValue;\r\n    player.reality.maxRM = Decimal.max(player.reality.maxRM, newValue);\r\n    if (player.records.bestReality.RM.lt(addedThisReality)) {\r\n      player.records.bestReality.RM = addedThisReality;\r\n      player.records.bestReality.RMSet = Glyphs.copyForRecords(Glyphs.active.filter(g => g !== null));\r\n    }\r\n  }\r\n}();\r\n\r\nCurrency.perkPoints = new class extends NumberCurrency {\r\n  get value() { return player.reality.perkPoints; }\r\n  set value(value) { player.reality.perkPoints = value; }\r\n}();\r\n\r\nCurrency.relicShards = new class extends NumberCurrency {\r\n  get value() { return player.celestials.effarig.relicShards; }\r\n  set value(value) { player.celestials.effarig.relicShards = value; }\r\n}();\r\n\r\nCurrency.imaginaryMachines = new class extends NumberCurrency {\r\n  get value() { return player.reality.imaginaryMachines; }\r\n  set value(value) {\r\n    player.reality.imaginaryMachines = Math.clampMax(value, MachineHandler.currentIMCap);\r\n  }\r\n}();\r\n\r\nCurrency.darkMatter = new class extends DecimalCurrency {\r\n  get value() { return player.celestials.laitela.darkMatter; }\r\n  set value(value) {\r\n    const capped = Decimal.min(value, Number.MAX_VALUE);\r\n    player.celestials.laitela.darkMatter = capped;\r\n    player.celestials.laitela.maxDarkMatter = player.celestials.laitela.maxDarkMatter.max(capped);\r\n  }\r\n\r\n  get max() { return player.celestials.laitela.maxDarkMatter; }\r\n  set max(value) { player.celestials.laitela.maxDarkMatter = value; }\r\n}();\r\n\r\nCurrency.darkEnergy = new class extends NumberCurrency {\r\n  get value() { return player.celestials.laitela.darkEnergy; }\r\n  set value(value) { player.celestials.laitela.darkEnergy = value; }\r\n\r\n  get productionPerSecond() {\r\n    return DarkMatterDimensions.all\r\n      .map(d => d.productionPerSecond)\r\n      .sum();\r\n  }\r\n}();\r\n\r\nCurrency.singularities = new class extends NumberCurrency {\r\n  get value() { return player.celestials.laitela.singularities; }\r\n  set value(value) { player.celestials.laitela.singularities = value; }\r\n}();\r\n\r\nCurrency.remnants = new class extends NumberCurrency {\r\n  get value() { return player.celestials.pelle.remnants; }\r\n  set value(value) { player.celestials.pelle.remnants = value; }\r\n}();\r\n\r\nCurrency.realityShards = new class extends DecimalCurrency {\r\n  get value() { return player.celestials.pelle.realityShards; }\r\n  set value(value) { player.celestials.pelle.realityShards = value; }\r\n}();\r\n\r\nCurrency.replicanti = new class extends DecimalCurrency {\r\n  get value() { return player.replicanti.amount; }\r\n  set value(value) { player.replicanti.amount = value; }\r\n}();\r\n\r\nCurrency.galaxyGeneratorGalaxies = new class extends NumberCurrency {\r\n  get value() {\r\n    return player.galaxies + GalaxyGenerator.galaxies;\r\n  }\r\n\r\n  set value(value) {\r\n    const spent = player.galaxies + GalaxyGenerator.galaxies - value;\r\n    player.celestials.pelle.galaxyGenerator.spentGalaxies += spent;\r\n  }\r\n}();\r\n"]},"metadata":{},"sourceType":"module"}