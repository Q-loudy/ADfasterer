{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport EnterCelestialsRaPet from \"@/components/modals/prestige/EnterCelestialsRaPet\";\nimport ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\nexport default {\n  name: \"EnterCelestialsModal\",\n  components: {\n    ModalWrapperChoice,\n    EnterCelestialsRaPet\n  },\n  props: {\n    number: {\n      type: Number,\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      laitelaFastest: 3600,\n      teresaBestAM: new Decimal(),\n      teresaRunMult: 0,\n      effarigDone: false,\n      effarigLayer: \"\",\n      enslavedDone: false,\n      laitelaTime: \"\"\n    };\n  },\n\n  computed: {\n    effects() {\n      return GameDatabase.celestials.descriptions[this.number].effects().split(\"\\n\");\n    },\n\n    description() {\n      const description = GameDatabase.celestials.descriptions[this.number].description;\n      return description ? description() : \"\";\n    },\n\n    topLabel() {\n      return `${this.name} Reality`;\n    },\n\n    message() {\n      return `Perform a Reality reset and enter ${this.name} Reality, in which:`;\n    },\n\n    extraLine() {\n      switch (this.number) {\n        case 0:\n          return this.teresaBestAM.eq(1) ? `You have not unlocked the reward for Teresa's Reality yet. Unlocking the reward requires\n              purchasing the Reality study and completing the Reality for the first time.` : `Your highest Teresa completion was for ${format(this.teresaBestAM, 2, 2)} antimatter,\n              gaining you a ${formatX(this.teresaRunMult, 2)} multiplier to Glyph Sacrifice power.`;\n\n        case 1:\n          return this.effarigDone ? \"Effarig is completed!\" : `You are currently on the ${this.effarigLayer} Layer.`;\n\n        case 2:\n          return this.enslavedDone ? \"Have... we... not helped enough...\" : \"We... can help... Let us... help...\";\n\n        case 3:\n          return \"\";\n\n        case 4:\n          return `Within Ra's Reality, some resources will generate Memory Chunks\n          for Celestial Memories based on their amounts:`;\n\n        case 5:\n          return this.laitelaFastest >= 300 ? \"You have not completed Lai'tela at this tier.\" : `Your fastest completion on this tier is ${this.laitelaTime}.`;\n\n        case 6:\n          return \"\";\n\n        default:\n          throw new Error(`Attempted to start an Unknown Celestial in Celestial Modal Confirmation.`);\n      }\n    }\n\n  },\n  methods: {\n    update() {\n      this.teresaBestAM.copyFrom(player.celestials.teresa.bestRunAM);\n      this.teresaRunMult = Teresa.runRewardMultiplier;\n      const effarigStage = Effarig.currentStage;\n      this.effarigDone = effarigStage === EFFARIG_STAGES.COMPLETED;\n      this.effarigLayer = [null, \"Infinity\", \"Eternity\", \"Reality\"][effarigStage];\n      this.enslavedDone = Enslaved.isCompleted;\n      this.laitelaFastest = player.celestials.laitela.fastestCompletion;\n      this.laitelaTime = TimeSpan.fromSeconds(this.laitelaFastest).toStringShort();\n    },\n\n    handleYesClick() {\n      beginProcessReality(getRealityProps(true));\n\n      switch (this.number) {\n        case 0:\n          return Teresa.initializeRun();\n\n        case 1:\n          return Effarig.initializeRun();\n\n        case 2:\n          return Enslaved.initializeRun();\n\n        case 3:\n          return V.initializeRun();\n\n        case 4:\n          return Ra.initializeRun();\n\n        case 5:\n          return Laitela.initializeRun();\n\n        case 6:\n          throw new Error(`Attempted to start Pelle through EnterCelestialsModal instead of ArmageddonModal`);\n\n        default:\n          throw new Error(`Attempted to start an Unknown Celestial in Celestial Modal Confirmation.`);\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["EnterCelestialsModal.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport EnterCelestialsRaPet from \"@/components/modals/prestige/EnterCelestialsRaPet\";\r\nimport ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\r\n\r\nexport default {\r\n  name: \"EnterCelestialsModal\",\r\n  components: {\r\n    ModalWrapperChoice,\r\n    EnterCelestialsRaPet,\r\n  },\r\n  props: {\r\n    number: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      laitelaFastest: 3600,\r\n      teresaBestAM: new Decimal(),\r\n      teresaRunMult: 0,\r\n      effarigDone: false,\r\n      effarigLayer: \"\",\r\n      enslavedDone: false,\r\n      laitelaTime: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    effects() {\r\n      return GameDatabase.celestials.descriptions[this.number].effects().split(\"\\n\");\r\n    },\r\n    description() {\r\n      const description = GameDatabase.celestials.descriptions[this.number].description;\r\n      return description ? description() : \"\";\r\n    },\r\n    topLabel() {\r\n      return `${this.name} Reality`;\r\n    },\r\n    message() {\r\n      return `Perform a Reality reset and enter ${this.name} Reality, in which:`;\r\n    },\r\n    extraLine() {\r\n      switch (this.number) {\r\n        case 0:\r\n          return this.teresaBestAM.eq(1)\r\n            ? `You have not unlocked the reward for Teresa's Reality yet. Unlocking the reward requires\r\n              purchasing the Reality study and completing the Reality for the first time.`\r\n            : `Your highest Teresa completion was for ${format(this.teresaBestAM, 2, 2)} antimatter,\r\n              gaining you a ${formatX(this.teresaRunMult, 2)} multiplier to Glyph Sacrifice power.`;\r\n        case 1: return this.effarigDone\r\n          ? \"Effarig is completed!\"\r\n          : `You are currently on the ${this.effarigLayer} Layer.`;\r\n        case 2: return this.enslavedDone\r\n          ? \"Have... we... not helped enough...\"\r\n          : \"We... can help... Let us... help...\";\r\n        case 3: return \"\";\r\n        case 4: return `Within Ra's Reality, some resources will generate Memory Chunks\r\n          for Celestial Memories based on their amounts:`;\r\n        case 5: return this.laitelaFastest >= 300\r\n          ? \"You have not completed Lai'tela at this tier.\"\r\n          : `Your fastest completion on this tier is ${this.laitelaTime}.`;\r\n        case 6: return \"\";\r\n        default: throw new Error(`Attempted to start an Unknown Celestial in Celestial Modal Confirmation.`);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.teresaBestAM.copyFrom(player.celestials.teresa.bestRunAM);\r\n      this.teresaRunMult = Teresa.runRewardMultiplier;\r\n      const effarigStage = Effarig.currentStage;\r\n      this.effarigDone = effarigStage === EFFARIG_STAGES.COMPLETED;\r\n      this.effarigLayer = [null, \"Infinity\", \"Eternity\", \"Reality\"][effarigStage];\r\n      this.enslavedDone = Enslaved.isCompleted;\r\n      this.laitelaFastest = player.celestials.laitela.fastestCompletion;\r\n      this.laitelaTime = TimeSpan.fromSeconds(this.laitelaFastest).toStringShort();\r\n    },\r\n    handleYesClick() {\r\n      beginProcessReality(getRealityProps(true));\r\n      switch (this.number) {\r\n        case 0: return Teresa.initializeRun();\r\n        case 1: return Effarig.initializeRun();\r\n        case 2: return Enslaved.initializeRun();\r\n        case 3: return V.initializeRun();\r\n        case 4: return Ra.initializeRun();\r\n        case 5: return Laitela.initializeRun();\r\n        case 6: throw new Error(`Attempted to start Pelle through EnterCelestialsModal instead of ArmageddonModal`);\r\n        default: throw new Error(`Attempted to start an Unknown Celestial in Celestial Modal Confirmation.`);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ModalWrapperChoice @confirm=\"handleYesClick\">\r\n    <template #header>\r\n      {{ topLabel }}\r\n    </template>\r\n    <div class=\"c-modal-message__text\">\r\n      {{ message }}\r\n      <br>\r\n      <br>\r\n      <div class=\"c-modal-celestial__run-effects\">\r\n        <div\r\n          v-for=\"(effect, i) in effects\"\r\n          :key=\"i\"\r\n          class=\"c-modal-celestial__run-effects__line\"\r\n        >\r\n          <b v-if=\"effect.trim()\">&bull;</b>\r\n          <b>&nbsp;</b>\r\n          {{ effect }}\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"description\"\r\n        class=\"reality-description\"\r\n      >\r\n        <br><br>\r\n        {{ description }}\r\n      </div>\r\n      <br><br>\r\n      <div>\r\n        {{ extraLine }}\r\n      </div>\r\n      <span v-if=\"number === 4\">\r\n        <EnterCelestialsRaPet\r\n          v-for=\"id in 4\"\r\n          :key=\"id\"\r\n          :pet-id=\"id - 1\"\r\n        />\r\n      </span>\r\n    </div>\r\n    <template #confirm-text>\r\n      Begin\r\n    </template>\r\n  </ModalWrapperChoice>\r\n</template>\r\n\r\n<style scoped>\r\n.c-modal-celestial__run-effects {\r\n  display: inline-block;\r\n  max-width: 45rem;\r\n  text-align: left;\r\n}\r\n.c-modal-celestial__run-effects__line {\r\n  display: flex;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.reality-description {\r\n  padding: 0 2rem;\r\n}\r\n</style>"],"sourceRoot":"src/components/modals/prestige"},"metadata":{},"sourceType":"module"}