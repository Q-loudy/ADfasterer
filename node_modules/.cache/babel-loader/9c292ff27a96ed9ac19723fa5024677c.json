{"ast":null,"code":"import * as Electron from \"./bindings/electron\";\nconst MIN_ZOOM = 0.5;\nconst MAX_ZOOM = 1.5;\nlet zoomFactor = 1;\nexport const ElectronRuntime = {\n  initialize() {\n    if (!this.isActive) {\n      return;\n    }\n\n    zoomFactor = Number(localStorage.getItem(\"Zoom\"));\n    zoomFactor = Number.isFinite(zoomFactor) ? zoomFactor : 1;\n    window.addEventListener(\"resize\", () => this.updateZoom());\n  },\n\n  get isActive() {\n    return Electron.isModuleLoaded();\n  },\n\n  increaseZoom() {\n    if (!this.isActive) {\n      return;\n    }\n\n    if (zoomFactor > MAX_ZOOM) {\n      GameUI.notify.info(\"Zoom Level is at Maximum\");\n      return;\n    }\n\n    this.zoomFactor = Math.round((zoomFactor + 0.1) * 10) / 10;\n  },\n\n  decreaseZoom() {\n    if (!this.isActive) {\n      return;\n    }\n\n    if (zoomFactor < MIN_ZOOM) {\n      GameUI.notify.info(\"Zoom Level is at Minimum\");\n      return;\n    }\n\n    this.zoomFactor = Math.round((zoomFactor - 0.1) * 10) / 10;\n  },\n\n  resetZoom() {\n    if (!this.isActive) {\n      return;\n    }\n\n    this.zoomFactor = 1;\n  },\n\n  get zoomFactor() {\n    return zoomFactor;\n  },\n\n  set zoomFactor(value) {\n    zoomFactor = value;\n    localStorage.setItem(\"Zoom\", zoomFactor.toString());\n    this.updateZoom();\n    GameUI.notify.info(`Size changed to ${Math.round(zoomFactor * 100)}%`);\n  },\n\n  updateZoom() {\n    if (!this.isActive) {\n      return;\n    }\n\n    const setSize = 1020;\n    const sizeDiff = window.outerHeight / setSize;\n    Electron.setZoomFactor(sizeDiff * zoomFactor);\n  }\n\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/steam/electron-runtime.js"],"names":["Electron","MIN_ZOOM","MAX_ZOOM","zoomFactor","ElectronRuntime","initialize","isActive","Number","localStorage","getItem","isFinite","window","addEventListener","updateZoom","isModuleLoaded","increaseZoom","GameUI","notify","info","Math","round","decreaseZoom","resetZoom","value","setItem","toString","setSize","sizeDiff","outerHeight","setZoomFactor"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,qBAA1B;AAEA,MAAMC,QAAQ,GAAG,GAAjB;AACA,MAAMC,QAAQ,GAAG,GAAjB;AAEA,IAAIC,UAAU,GAAG,CAAjB;AAEA,OAAO,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,UAAU,GAAG;AACX,QAAI,CAAC,KAAKC,QAAV,EAAoB;AAClB;AACD;;AAEDH,IAAAA,UAAU,GAAGI,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAAnB;AACAN,IAAAA,UAAU,GAAGI,MAAM,CAACG,QAAP,CAAgBP,UAAhB,IAA8BA,UAA9B,GAA2C,CAAxD;AACAQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM,KAAKC,UAAL,EAAxC;AACD,GAT4B;;AAW7B,MAAIP,QAAJ,GAAe;AACb,WAAON,QAAQ,CAACc,cAAT,EAAP;AACD,GAb4B;;AAe7BC,EAAAA,YAAY,GAAG;AACb,QAAI,CAAC,KAAKT,QAAV,EAAoB;AAClB;AACD;;AAED,QAAIH,UAAU,GAAGD,QAAjB,EAA2B;AACzBc,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,0BAAnB;AACA;AACD;;AAED,SAAKf,UAAL,GAAkBgB,IAAI,CAACC,KAAL,CAAW,CAACjB,UAAU,GAAG,GAAd,IAAqB,EAAhC,IAAsC,EAAxD;AACD,GA1B4B;;AA4B7BkB,EAAAA,YAAY,GAAG;AACb,QAAI,CAAC,KAAKf,QAAV,EAAoB;AAClB;AACD;;AAED,QAAIH,UAAU,GAAGF,QAAjB,EAA2B;AACzBe,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,0BAAnB;AACA;AACD;;AAED,SAAKf,UAAL,GAAkBgB,IAAI,CAACC,KAAL,CAAW,CAACjB,UAAU,GAAG,GAAd,IAAqB,EAAhC,IAAsC,EAAxD;AACD,GAvC4B;;AAyC7BmB,EAAAA,SAAS,GAAG;AACV,QAAI,CAAC,KAAKhB,QAAV,EAAoB;AAClB;AACD;;AAED,SAAKH,UAAL,GAAkB,CAAlB;AACD,GA/C4B;;AAiD7B,MAAIA,UAAJ,GAAiB;AACf,WAAOA,UAAP;AACD,GAnD4B;;AAqD7B,MAAIA,UAAJ,CAAeoB,KAAf,EAAsB;AACpBpB,IAAAA,UAAU,GAAGoB,KAAb;AACAf,IAAAA,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BrB,UAAU,CAACsB,QAAX,EAA7B;AACA,SAAKZ,UAAL;AACAG,IAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAoB,mBAAkBC,IAAI,CAACC,KAAL,CAAWjB,UAAU,GAAG,GAAxB,CAA6B,GAAnE;AACD,GA1D4B;;AA4D7BU,EAAAA,UAAU,GAAG;AACX,QAAI,CAAC,KAAKP,QAAV,EAAoB;AAClB;AACD;;AAED,UAAMoB,OAAO,GAAG,IAAhB;AACA,UAAMC,QAAQ,GAAGhB,MAAM,CAACiB,WAAP,GAAqBF,OAAtC;AACA1B,IAAAA,QAAQ,CAAC6B,aAAT,CAAuBF,QAAQ,GAAGxB,UAAlC;AACD;;AApE4B,CAAxB","sourcesContent":["import * as Electron from \"./bindings/electron\";\r\n\r\nconst MIN_ZOOM = 0.5;\r\nconst MAX_ZOOM = 1.5;\r\n\r\nlet zoomFactor = 1;\r\n\r\nexport const ElectronRuntime = {\r\n  initialize() {\r\n    if (!this.isActive) {\r\n      return;\r\n    }\r\n\r\n    zoomFactor = Number(localStorage.getItem(\"Zoom\"));\r\n    zoomFactor = Number.isFinite(zoomFactor) ? zoomFactor : 1;\r\n    window.addEventListener(\"resize\", () => this.updateZoom());\r\n  },\r\n\r\n  get isActive() {\r\n    return Electron.isModuleLoaded();\r\n  },\r\n\r\n  increaseZoom() {\r\n    if (!this.isActive) {\r\n      return;\r\n    }\r\n\r\n    if (zoomFactor > MAX_ZOOM) {\r\n      GameUI.notify.info(\"Zoom Level is at Maximum\");\r\n      return;\r\n    }\r\n\r\n    this.zoomFactor = Math.round((zoomFactor + 0.1) * 10) / 10;\r\n  },\r\n\r\n  decreaseZoom() {\r\n    if (!this.isActive) {\r\n      return;\r\n    }\r\n\r\n    if (zoomFactor < MIN_ZOOM) {\r\n      GameUI.notify.info(\"Zoom Level is at Minimum\");\r\n      return;\r\n    }\r\n\r\n    this.zoomFactor = Math.round((zoomFactor - 0.1) * 10) / 10;\r\n  },\r\n\r\n  resetZoom() {\r\n    if (!this.isActive) {\r\n      return;\r\n    }\r\n\r\n    this.zoomFactor = 1;\r\n  },\r\n\r\n  get zoomFactor() {\r\n    return zoomFactor;\r\n  },\r\n\r\n  set zoomFactor(value) {\r\n    zoomFactor = value;\r\n    localStorage.setItem(\"Zoom\", zoomFactor.toString());\r\n    this.updateZoom();\r\n    GameUI.notify.info(`Size changed to ${Math.round(zoomFactor * 100)}%`);\r\n  },\r\n\r\n  updateZoom() {\r\n    if (!this.isActive) {\r\n      return;\r\n    }\r\n\r\n    const setSize = 1020;\r\n    const sizeDiff = window.outerHeight / setSize;\r\n    Electron.setZoomFactor(sizeDiff * zoomFactor);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}