{"ast":null,"code":"import \"core-js/modules/es.array-buffer.constructor.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n\n/* eslint-disable no-param-reassign */\n// Copyright (c) 2011, Daniel Guerrero\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n// DISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n\n/**\r\n * Uses the new array typed in javascript to binary base64 encode/decode\r\n * at the moment just decodes a binary base64 encoded\r\n * into either an ArrayBuffer (decodeArrayBuffer)\r\n * or into an Uint8Array (decode)\r\n *\r\n * References:\r\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer\r\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array\r\n */\nconst keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n/* Will return a Uint8Array type */\n\nexport function decodeArrayBuffer(input) {\n  const bytes = input.length / 4 * 3;\n  const ab = new ArrayBuffer(bytes);\n  decodeBase64Binary(input, ab);\n  return ab;\n}\n\nfunction removePaddingChars(input) {\n  const lkey = keyStr.indexOf(input.charAt(input.length - 1));\n\n  if (lkey === 64) {\n    return input.substring(0, input.length - 1);\n  }\n\n  return input;\n}\n\nexport function decodeBase64Binary(input, arrayBuffer) {\n  // Get last chars to see if are valid\n  input = removePaddingChars(input);\n  input = removePaddingChars(input);\n  const bytes = parseInt(input.length / 4 * 3, 10);\n  let array;\n  let chr1, chr2, chr3;\n  let enc1, enc2, enc3, enc4;\n  let i = 0;\n  let j = 0;\n  if (arrayBuffer) array = new Uint8Array(arrayBuffer);else array = new Uint8Array(bytes);\n  input = input.replace(/(?:(?![\\+\\/-9=A-Za-z])[\\s\\S])/g, \"\");\n\n  for (i = 0; i < bytes; i += 3) {\n    // Get the 3 octects in 4 ascii chars\n    enc1 = keyStr.indexOf(input.charAt(j++));\n    enc2 = keyStr.indexOf(input.charAt(j++));\n    enc3 = keyStr.indexOf(input.charAt(j++));\n    enc4 = keyStr.indexOf(input.charAt(j++));\n    chr1 = enc1 << 2 | enc2 >> 4;\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n    chr3 = (enc3 & 3) << 6 | enc4;\n    array[i] = chr1;\n    if (enc3 !== 64) array[i + 1] = chr2;\n    if (enc4 !== 64) array[i + 2] = chr3;\n  }\n\n  return array;\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/storage/base64-binary.js"],"names":["keyStr","decodeArrayBuffer","input","bytes","length","ab","ArrayBuffer","decodeBase64Binary","removePaddingChars","lkey","indexOf","charAt","substring","arrayBuffer","parseInt","array","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","j","Uint8Array","replace"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\r\n\r\n// Copyright (c) 2011, Daniel Guerrero\r\n// All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n//     * Redistributions of source code must retain the above copyright\r\n//       notice, this list of conditions and the following disclaimer.\r\n//     * Redistributions in binary form must reproduce the above copyright\r\n//       notice, this list of conditions and the following disclaimer in the\r\n//       documentation and/or other materials provided with the distribution.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n// DISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY\r\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n//\r\n\r\n/**\r\n * Uses the new array typed in javascript to binary base64 encode/decode\r\n * at the moment just decodes a binary base64 encoded\r\n * into either an ArrayBuffer (decodeArrayBuffer)\r\n * or into an Uint8Array (decode)\r\n *\r\n * References:\r\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer\r\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array\r\n */\r\n\r\nconst keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n/* Will return a Uint8Array type */\r\nexport function decodeArrayBuffer(input) {\r\n  const bytes = (input.length / 4) * 3;\r\n  const ab = new ArrayBuffer(bytes);\r\n  decodeBase64Binary(input, ab);\r\n\r\n  return ab;\r\n}\r\n\r\nfunction removePaddingChars(input) {\r\n  const lkey = keyStr.indexOf(input.charAt(input.length - 1));\r\n  if (lkey === 64) {\r\n    return input.substring(0, input.length - 1);\r\n  }\r\n  return input;\r\n}\r\n\r\nexport function decodeBase64Binary(input, arrayBuffer) {\r\n  // Get last chars to see if are valid\r\n  input = removePaddingChars(input);\r\n  input = removePaddingChars(input);\r\n\r\n  const bytes = parseInt((input.length / 4) * 3, 10);\r\n\r\n  let array;\r\n  let chr1, chr2, chr3;\r\n  let enc1, enc2, enc3, enc4;\r\n  let i = 0;\r\n  let j = 0;\r\n\r\n  if (arrayBuffer)\r\n    array = new Uint8Array(arrayBuffer);\r\n  else\r\n    array = new Uint8Array(bytes);\r\n\r\n  input = input.replace(/[^A-Za-z0-9+/=]/gu, \"\");\r\n\r\n  for (i = 0; i < bytes; i += 3) {\r\n    // Get the 3 octects in 4 ascii chars\r\n    enc1 = keyStr.indexOf(input.charAt(j++));\r\n    enc2 = keyStr.indexOf(input.charAt(j++));\r\n    enc3 = keyStr.indexOf(input.charAt(j++));\r\n    enc4 = keyStr.indexOf(input.charAt(j++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    array[i] = chr1;\r\n    if (enc3 !== 64) array[i + 1] = chr2;\r\n    if (enc4 !== 64) array[i + 2] = chr3;\r\n  }\r\n\r\n  return array;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}