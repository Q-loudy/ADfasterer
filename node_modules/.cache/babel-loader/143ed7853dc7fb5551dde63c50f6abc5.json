{"ast":null,"code":"import AutobuyerBox from \"./AutobuyerBox\";\nimport AutobuyerIntervalButton from \"./AutobuyerIntervalButton\";\nexport default {\n  name: \"TickspeedAutobuyerBox\",\n  components: {\n    AutobuyerBox,\n    AutobuyerIntervalButton\n  },\n\n  data() {\n    return {\n      mode: AUTOBUYER_MODE.BUY_SINGLE,\n      isUnlocked: false\n    };\n  },\n\n  computed: {\n    autobuyer: () => Autobuyer.tickspeed,\n\n    modeDisplay() {\n      switch (this.mode) {\n        case AUTOBUYER_MODE.BUY_SINGLE:\n          return \"Buys singles\";\n\n        case AUTOBUYER_MODE.BUY_MAX:\n          return \"Buys max\";\n      }\n\n      throw \"Unknown tickspeed autobuyer mode\";\n    }\n\n  },\n  methods: {\n    update() {\n      this.mode = this.autobuyer.mode;\n      this.isUnlocked = this.autobuyer.isUnlocked;\n    },\n\n    toggleMode() {\n      this.autobuyer.toggleMode();\n      this.update();\n    }\n\n  }\n};","map":{"version":3,"sources":["TickspeedAutobuyerBox.vue"],"names":[],"mappings":"AACA,OAAA,YAAA,MAAA,gBAAA;AACA,OAAA,uBAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,uBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YADA;AAEA,IAAA;AAFA,GAFA;;AAMA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,cAAA,CAAA,UADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GAXA;;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA,MAAA,SAAA,CAAA,SADA;;AAEA,IAAA,WAAA,GAAA;AACA,cAAA,KAAA,IAAA;AACA,aAAA,cAAA,CAAA,UAAA;AAAA,iBAAA,cAAA;;AACA,aAAA,cAAA,CAAA,OAAA;AAAA,iBAAA,UAAA;AAFA;;AAIA,YAAA,kCAAA;AACA;;AARA,GAZA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,IAAA,GAAA,KAAA,SAAA,CAAA,IAAA;AACA,WAAA,UAAA,GAAA,KAAA,SAAA,CAAA,UAAA;AACA,KAJA;;AAKA,IAAA,UAAA,GAAA;AACA,WAAA,SAAA,CAAA,UAAA;AACA,WAAA,MAAA;AACA;;AARA;AAtBA,CAAA","sourcesContent":["<script>\r\nimport AutobuyerBox from \"./AutobuyerBox\";\r\nimport AutobuyerIntervalButton from \"./AutobuyerIntervalButton\";\r\n\r\nexport default {\r\n  name: \"TickspeedAutobuyerBox\",\r\n  components: {\r\n    AutobuyerBox,\r\n    AutobuyerIntervalButton\r\n  },\r\n  data() {\r\n    return {\r\n      mode: AUTOBUYER_MODE.BUY_SINGLE,\r\n      isUnlocked: false\r\n    };\r\n  },\r\n  computed: {\r\n    autobuyer: () => Autobuyer.tickspeed,\r\n    modeDisplay() {\r\n      switch (this.mode) {\r\n        case AUTOBUYER_MODE.BUY_SINGLE: return \"Buys singles\";\r\n        case AUTOBUYER_MODE.BUY_MAX: return \"Buys max\";\r\n      }\r\n      throw \"Unknown tickspeed autobuyer mode\";\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.mode = this.autobuyer.mode;\r\n      this.isUnlocked = this.autobuyer.isUnlocked;\r\n    },\r\n    toggleMode() {\r\n      this.autobuyer.toggleMode();\r\n      this.update();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <AutobuyerBox\r\n    :autobuyer=\"autobuyer\"\r\n    name=\"Tickspeed Autobuyer\"\r\n    show-interval\r\n  >\r\n    <template #intervalSlot>\r\n      <AutobuyerIntervalButton :autobuyer=\"autobuyer\" />\r\n    </template>\r\n    <template #toggleSlot>\r\n      <button\r\n        v-if=\"isUnlocked\"\r\n        class=\"o-autobuyer-btn\"\r\n        @click=\"toggleMode\"\r\n      >\r\n        {{ modeDisplay }}\r\n      </button>\r\n      <button\r\n        v-else\r\n        class=\"o-autobuyer-btn o-autobuyer-btn--unavailable\"\r\n      >\r\n        Complete the challenge to change mode\r\n      </button>\r\n    </template>\r\n  </AutobuyerBox>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/autobuyers"},"metadata":{},"sourceType":"module"}