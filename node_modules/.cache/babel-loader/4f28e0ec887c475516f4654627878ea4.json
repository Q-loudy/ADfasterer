{"ast":null,"code":"import { DC } from \"../../constants\";\nimport { MultiplierTabIcons } from \"./icons\"; // See index.js for documentation\n\nexport const replicanti = {\n  total: {\n    name: \"Replicanti Speed\",\n    multValue: () => totalReplicantiSpeedMult(Replicanti.amount.gt(replicantiCap())),\n    isActive: () => PlayerProgress.eternityUnlocked(),\n    overlay: [\"Ξ\"]\n  },\n  achievement: {\n    name: \"Achievement 134\",\n    // This is explicitly 2 in the replicanti code as well, inside of a replicanti amount check\n    multValue: 2,\n    isActive: () => Achievement(134).canBeApplied && Replicanti.amount.lte(replicantiCap()) && !Pelle.isDoomed,\n    icon: MultiplierTabIcons.ACHIEVEMENT\n  },\n  timeStudy: {\n    name: \"Time Studies\",\n    multValue: () => {\n      const preReality = Effects.product(TimeStudy(62), TimeStudy(213)) * (TimeStudy(132).isBought ? 1.5 : 1);\n      return preReality * (Perk.studyPassive.isBought && TimeStudy(132).isBought ? 2 : 1);\n    },\n    isActive: () => PlayerProgress.eternityUnlocked() && !Pelle.isDoomed,\n    icon: MultiplierTabIcons.TIME_STUDY\n  },\n  glyph: {\n    name: \"Glyph Effects\",\n    multValue: () => {\n      const baseEffect = (Pelle.isDoomed ? DC.D1 : getAdjustedGlyphEffect(\"replicationspeed\")).times(Pelle.specialGlyphEffect.replication);\n      const alteredEffect = Math.clampMin(Decimal.log10(Replicanti.amount) * getSecondaryGlyphEffect(\"replicationdtgain\"), 1);\n      return GlyphAlteration.isAdded(\"replication\") ? baseEffect.times(alteredEffect) : baseEffect;\n    },\n    isActive: () => PlayerProgress.realityUnlocked() && (!Pelle.isDoomed || Pelle.specialGlyphEffect.replication > 1),\n    icon: MultiplierTabIcons.GENERIC_GLYPH\n  },\n  amplifierRep: {\n    name: \"Reality Upgrade - Replicative Amplifier\",\n    multValue: () => RealityUpgrade(2).effectOrDefault(1),\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\n    icon: MultiplierTabIcons.UPGRADE(\"reality\")\n  },\n  realityUpgrade1: {\n    name: \"Reality Upgrade - Cosmically Duplicate\",\n    multValue: () => RealityUpgrade(6).effectOrDefault(1),\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\n    icon: MultiplierTabIcons.UPGRADE(\"reality\")\n  },\n  realityUpgrade2: {\n    name: \"Reality Upgrade - Replicative Rapidity\",\n    multValue: () => RealityUpgrade(23).effectOrDefault(1),\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\n    icon: MultiplierTabIcons.UPGRADE(\"reality\")\n  },\n  alchemy: {\n    name: \"Alchemy Resource - Replication\",\n    multValue: () => AlchemyResource.replication.effectOrDefault(1),\n    isActive: () => Ra.unlocks.unlockGlyphAlchemy.canBeApplied && !Pelle.isDoomed,\n    icon: MultiplierTabIcons.ALCHEMY\n  },\n  ra: {\n    name: \"Ra Upgrade - Multiplier based on TT\",\n    multValue: () => Ra.unlocks.continuousTTBoost.effects.replicanti.effectOrDefault(1),\n    isActive: () => Ra.unlocks.continuousTTBoost.isUnlocked,\n    icon: MultiplierTabIcons.GENERIC_RA\n  },\n  pelle: {\n    name: \"Pelle Strike - Decay Rift\",\n    multValue: () => PelleRifts.decay.effectValue,\n    isActive: () => Pelle.isDoomed && PelleRifts.decay.effectValue.gt(1),\n    icon: MultiplierTabIcons.PELLE\n  },\n  iap: {\n    name: \"Shop Tab Purchases\",\n    multValue: () => ShopPurchase.replicantiPurchases.currentMult,\n    isActive: () => ShopPurchaseData.totalSTD > 0 && ShopPurchase.replicantiPurchases.currentMult > 1,\n    icon: MultiplierTabIcons.IAP\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/multiplier-tab/replicanti.js"],"names":["DC","MultiplierTabIcons","replicanti","total","name","multValue","totalReplicantiSpeedMult","Replicanti","amount","gt","replicantiCap","isActive","PlayerProgress","eternityUnlocked","overlay","achievement","Achievement","canBeApplied","lte","Pelle","isDoomed","icon","ACHIEVEMENT","timeStudy","preReality","Effects","product","TimeStudy","isBought","Perk","studyPassive","TIME_STUDY","glyph","baseEffect","D1","getAdjustedGlyphEffect","times","specialGlyphEffect","replication","alteredEffect","Math","clampMin","Decimal","log10","getSecondaryGlyphEffect","GlyphAlteration","isAdded","realityUnlocked","GENERIC_GLYPH","amplifierRep","RealityUpgrade","effectOrDefault","UPGRADE","realityUpgrade1","realityUpgrade2","alchemy","AlchemyResource","Ra","unlocks","unlockGlyphAlchemy","ALCHEMY","ra","continuousTTBoost","effects","isUnlocked","GENERIC_RA","pelle","PelleRifts","decay","effectValue","PELLE","iap","ShopPurchase","replicantiPurchases","currentMult","ShopPurchaseData","totalSTD","IAP"],"mappings":"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","sourcesContent":["import { DC } from \"../../constants\";\r\n\r\nimport { MultiplierTabIcons } from \"./icons\";\r\n\r\n// See index.js for documentation\r\nexport const replicanti = {\r\n  total: {\r\n    name: \"Replicanti Speed\",\r\n    multValue: () => totalReplicantiSpeedMult(Replicanti.amount.gt(replicantiCap())),\r\n    isActive: () => PlayerProgress.eternityUnlocked(),\r\n    overlay: [\"Ξ\"],\r\n  },\r\n  achievement: {\r\n    name: \"Achievement 134\",\r\n    // This is explicitly 2 in the replicanti code as well, inside of a replicanti amount check\r\n    multValue: 2,\r\n    isActive: () => Achievement(134).canBeApplied && Replicanti.amount.lte(replicantiCap()) && !Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.ACHIEVEMENT,\r\n  },\r\n  timeStudy: {\r\n    name: \"Time Studies\",\r\n    multValue: () => {\r\n      const preReality = Effects.product(TimeStudy(62), TimeStudy(213)) * (TimeStudy(132).isBought ? 1.5 : 1);\r\n      return preReality * (Perk.studyPassive.isBought && TimeStudy(132).isBought ? 2 : 1);\r\n    },\r\n    isActive: () => PlayerProgress.eternityUnlocked() && !Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.TIME_STUDY,\r\n  },\r\n  glyph: {\r\n    name: \"Glyph Effects\",\r\n    multValue: () => {\r\n      const baseEffect = (Pelle.isDoomed ? DC.D1 : getAdjustedGlyphEffect(\"replicationspeed\"))\r\n        .times(Pelle.specialGlyphEffect.replication);\r\n      const alteredEffect = Math.clampMin(\r\n        Decimal.log10(Replicanti.amount) * getSecondaryGlyphEffect(\"replicationdtgain\"), 1);\r\n      return GlyphAlteration.isAdded(\"replication\") ? baseEffect.times(alteredEffect) : baseEffect;\r\n    },\r\n    isActive: () => PlayerProgress.realityUnlocked() && (!Pelle.isDoomed || Pelle.specialGlyphEffect.replication > 1),\r\n    icon: MultiplierTabIcons.GENERIC_GLYPH,\r\n  },\r\n  amplifierRep: {\r\n    name: \"Reality Upgrade - Replicative Amplifier\",\r\n    multValue: () => RealityUpgrade(2).effectOrDefault(1),\r\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.UPGRADE(\"reality\"),\r\n  },\r\n  realityUpgrade1: {\r\n    name: \"Reality Upgrade - Cosmically Duplicate\",\r\n    multValue: () => RealityUpgrade(6).effectOrDefault(1),\r\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.UPGRADE(\"reality\"),\r\n  },\r\n  realityUpgrade2: {\r\n    name: \"Reality Upgrade - Replicative Rapidity\",\r\n    multValue: () => RealityUpgrade(23).effectOrDefault(1),\r\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.UPGRADE(\"reality\"),\r\n  },\r\n  alchemy: {\r\n    name: \"Alchemy Resource - Replication\",\r\n    multValue: () => AlchemyResource.replication.effectOrDefault(1),\r\n    isActive: () => Ra.unlocks.unlockGlyphAlchemy.canBeApplied && !Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.ALCHEMY,\r\n  },\r\n  ra: {\r\n    name: \"Ra Upgrade - Multiplier based on TT\",\r\n    multValue: () => Ra.unlocks.continuousTTBoost.effects.replicanti.effectOrDefault(1),\r\n    isActive: () => Ra.unlocks.continuousTTBoost.isUnlocked,\r\n    icon: MultiplierTabIcons.GENERIC_RA,\r\n  },\r\n  pelle: {\r\n    name: \"Pelle Strike - Decay Rift\",\r\n    multValue: () => PelleRifts.decay.effectValue,\r\n    isActive: () => Pelle.isDoomed && PelleRifts.decay.effectValue.gt(1),\r\n    icon: MultiplierTabIcons.PELLE,\r\n  },\r\n  iap: {\r\n    name: \"Shop Tab Purchases\",\r\n    multValue: () => ShopPurchase.replicantiPurchases.currentMult,\r\n    isActive: () => ShopPurchaseData.totalSTD > 0 && ShopPurchase.replicantiPurchases.currentMult > 1,\r\n    icon: MultiplierTabIcons.IAP,\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}