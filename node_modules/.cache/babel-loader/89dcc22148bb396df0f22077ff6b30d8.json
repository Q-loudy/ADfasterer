{"ast":null,"code":"class AchievementTimer {\n  constructor(isRealTime) {\n    this.time = 0;\n    this.realTime = isRealTime;\n  }\n\n  reset() {\n    this.time = 0;\n  }\n\n  advance() {\n    const addedTime = this.realTime ? Time.unscaledDeltaTime.totalSeconds : Time.deltaTime;\n    this.time += addedTime;\n  }\n\n  check(condition, duration) {\n    if (!condition) {\n      this.reset();\n      return false;\n    }\n\n    this.advance();\n    return this.time >= duration;\n  }\n\n}\n\nexport const AchievementTimers = {\n  marathon1: new AchievementTimer(false),\n  marathon2: new AchievementTimer(false),\n  pain: new AchievementTimer(true),\n  stats: new AchievementTimer(true)\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/achievements/achievement-timer.js"],"names":["AchievementTimer","constructor","isRealTime","time","realTime","reset","advance","addedTime","Time","unscaledDeltaTime","totalSeconds","deltaTime","check","condition","duration","AchievementTimers","marathon1","marathon2","pain","stats"],"mappings":"AAAA,MAAMA,gBAAN,CAAuB;AACrBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACtB,SAAKC,IAAL,GAAY,CAAZ;AACA,SAAKC,QAAL,GAAgBF,UAAhB;AACD;;AAEDG,EAAAA,KAAK,GAAG;AACN,SAAKF,IAAL,GAAY,CAAZ;AACD;;AAEDG,EAAAA,OAAO,GAAG;AACR,UAAMC,SAAS,GAAG,KAAKH,QAAL,GACdI,IAAI,CAACC,iBAAL,CAAuBC,YADT,GAEdF,IAAI,CAACG,SAFT;AAGA,SAAKR,IAAL,IAAaI,SAAb;AACD;;AAEDK,EAAAA,KAAK,CAACC,SAAD,EAAYC,QAAZ,EAAsB;AACzB,QAAI,CAACD,SAAL,EAAgB;AACd,WAAKR,KAAL;AACA,aAAO,KAAP;AACD;;AACD,SAAKC,OAAL;AACA,WAAO,KAAKH,IAAL,IAAaW,QAApB;AACD;;AAxBoB;;AA2BvB,OAAO,MAAMC,iBAAiB,GAAG;AAC/BC,EAAAA,SAAS,EAAE,IAAIhB,gBAAJ,CAAqB,KAArB,CADoB;AAE/BiB,EAAAA,SAAS,EAAE,IAAIjB,gBAAJ,CAAqB,KAArB,CAFoB;AAG/BkB,EAAAA,IAAI,EAAE,IAAIlB,gBAAJ,CAAqB,IAArB,CAHyB;AAI/BmB,EAAAA,KAAK,EAAE,IAAInB,gBAAJ,CAAqB,IAArB;AAJwB,CAA1B","sourcesContent":["class AchievementTimer {\r\n  constructor(isRealTime) {\r\n    this.time = 0;\r\n    this.realTime = isRealTime;\r\n  }\r\n\r\n  reset() {\r\n    this.time = 0;\r\n  }\r\n\r\n  advance() {\r\n    const addedTime = this.realTime\r\n      ? Time.unscaledDeltaTime.totalSeconds\r\n      : Time.deltaTime;\r\n    this.time += addedTime;\r\n  }\r\n\r\n  check(condition, duration) {\r\n    if (!condition) {\r\n      this.reset();\r\n      return false;\r\n    }\r\n    this.advance();\r\n    return this.time >= duration;\r\n  }\r\n}\r\n\r\nexport const AchievementTimers = {\r\n  marathon1: new AchievementTimer(false),\r\n  marathon2: new AchievementTimer(false),\r\n  pain: new AchievementTimer(true),\r\n  stats: new AchievementTimer(true)\r\n};\r\n"]},"metadata":{},"sourceType":"module"}