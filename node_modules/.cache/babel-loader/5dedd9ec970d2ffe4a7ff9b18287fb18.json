{"ast":null,"code":"import { DC } from \"../../constants\";\nimport wordShift from \"../../word-shift\";\nexport const pelleStrikes = {\n  infinity: {\n    id: 1,\n    requirementDescription: \"Reach Infinity\",\n    penaltyDescription: () => `Antimatter Dimensions are raised to ${formatPow(0.5, 1, 1)}`,\n    rewardDescription: () => `Unlock ${wordShift.wordCycle(PelleRifts.vacuum.name)}\n      and get a permanent Infinity Autobuyer`,\n    rift: () => PelleRifts.vacuum\n  },\n  powerGalaxies: {\n    id: 2,\n    requirementDescription: \"Power-up Galaxies\",\n    penaltyDescription: () => `Infinity Dimensions are raised to ${formatPow(0.5, 1, 1)}`,\n    rewardDescription: () => `Unlock ${wordShift.wordCycle(PelleRifts.decay.name)}`,\n    rift: () => PelleRifts.decay\n  },\n  eternity: {\n    id: 3,\n    requirementDescription: \"Reach Eternity\",\n    penaltyDescription: () => `Replicanti speed slows down even more above ${format(DC.E2000)}`,\n    rewardDescription: () => `Unlock ${wordShift.wordCycle(PelleRifts.chaos.name)}`,\n    rift: () => PelleRifts.chaos\n  },\n  ECs: {\n    id: 4,\n    requirementDescription: () => `Reach ${formatInt(115)} TT`,\n    penaltyDescription: () => `In Eternity Challenges, ${wordShift.wordCycle(PelleRifts.vacuum.name)}\n      IP multiplier is only ${formatPercents(0.3)} as strong and capped at ${formatPercents(0.15)}\n      of the goal`,\n    rewardDescription: () => `Unlock ${wordShift.wordCycle(PelleRifts.recursion.name)}`,\n    rift: () => PelleRifts.recursion\n  },\n  dilation: {\n    id: 5,\n    requirementDescription: \"Dilate Time\",\n    penaltyDescription: \"Time Dilation is permanently active\",\n    rewardDescription: () => `Keep the Time Dilation study across Armageddon, boost Remnant gain, and unlock\n      ${wordShift.wordCycle(PelleRifts.paradox.name)}`,\n    rift: () => PelleRifts.paradox\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/celestials/strikes.js"],"names":["DC","wordShift","pelleStrikes","infinity","id","requirementDescription","penaltyDescription","formatPow","rewardDescription","wordCycle","PelleRifts","vacuum","name","rift","powerGalaxies","decay","eternity","format","E2000","chaos","ECs","formatInt","formatPercents","recursion","dilation","paradox"],"mappings":"AAAA,SAASA,EAAT,QAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,EAAE,EAAE,CADI;AAERC,IAAAA,sBAAsB,EAAE,gBAFhB;AAGRC,IAAAA,kBAAkB,EAAE,MAAO,uCAAsCC,SAAS,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAY,EAH9E;AAIRC,IAAAA,iBAAiB,EAAE,MAAO,UAASP,SAAS,CAACQ,SAAV,CAAoBC,UAAU,CAACC,MAAX,CAAkBC,IAAtC,CAA4C;AACnF,6CALY;AAMRC,IAAAA,IAAI,EAAE,MAAMH,UAAU,CAACC;AANf,GADgB;AAS1BG,EAAAA,aAAa,EAAE;AACbV,IAAAA,EAAE,EAAE,CADS;AAEbC,IAAAA,sBAAsB,EAAE,mBAFX;AAGbC,IAAAA,kBAAkB,EAAE,MAAO,qCAAoCC,SAAS,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAY,EAHvE;AAIbC,IAAAA,iBAAiB,EAAE,MAAO,UAASP,SAAS,CAACQ,SAAV,CAAoBC,UAAU,CAACK,KAAX,CAAiBH,IAArC,CAA2C,EAJjE;AAKbC,IAAAA,IAAI,EAAE,MAAMH,UAAU,CAACK;AALV,GATW;AAgB1BC,EAAAA,QAAQ,EAAE;AACRZ,IAAAA,EAAE,EAAE,CADI;AAERC,IAAAA,sBAAsB,EAAE,gBAFhB;AAGRC,IAAAA,kBAAkB,EAAE,MAAO,+CAA8CW,MAAM,CAACjB,EAAE,CAACkB,KAAJ,CAAW,EAHlF;AAIRV,IAAAA,iBAAiB,EAAE,MAAO,UAASP,SAAS,CAACQ,SAAV,CAAoBC,UAAU,CAACS,KAAX,CAAiBP,IAArC,CAA2C,EAJtE;AAKRC,IAAAA,IAAI,EAAE,MAAMH,UAAU,CAACS;AALf,GAhBgB;AAuB1BC,EAAAA,GAAG,EAAE;AACHhB,IAAAA,EAAE,EAAE,CADD;AAEHC,IAAAA,sBAAsB,EAAE,MAAO,SAAQgB,SAAS,CAAC,GAAD,CAAM,KAFnD;AAGHf,IAAAA,kBAAkB,EAAE,MAAO,2BAA0BL,SAAS,CAACQ,SAAV,CAAoBC,UAAU,CAACC,MAAX,CAAkBC,IAAtC,CAA4C;AACrG,8BAA8BU,cAAc,CAAC,GAAD,CAAM,4BAA2BA,cAAc,CAAC,IAAD,CAAO;AAClG,kBALO;AAMHd,IAAAA,iBAAiB,EAAE,MAAO,UAASP,SAAS,CAACQ,SAAV,CAAoBC,UAAU,CAACa,SAAX,CAAqBX,IAAzC,CAA+C,EAN/E;AAOHC,IAAAA,IAAI,EAAE,MAAMH,UAAU,CAACa;AAPpB,GAvBqB;AAgC1BC,EAAAA,QAAQ,EAAE;AACRpB,IAAAA,EAAE,EAAE,CADI;AAERC,IAAAA,sBAAsB,EAAE,aAFhB;AAGRC,IAAAA,kBAAkB,EAAE,qCAHZ;AAIRE,IAAAA,iBAAiB,EAAE,MAAO;AAC9B,QAAQP,SAAS,CAACQ,SAAV,CAAoBC,UAAU,CAACe,OAAX,CAAmBb,IAAvC,CAA6C,EALzC;AAMRC,IAAAA,IAAI,EAAE,MAAMH,UAAU,CAACe;AANf;AAhCgB,CAArB","sourcesContent":["import { DC } from \"../../constants\";\r\nimport wordShift from \"../../word-shift\";\r\n\r\nexport const pelleStrikes = {\r\n  infinity: {\r\n    id: 1,\r\n    requirementDescription: \"Reach Infinity\",\r\n    penaltyDescription: () => `Antimatter Dimensions are raised to ${formatPow(0.5, 1, 1)}`,\r\n    rewardDescription: () => `Unlock ${wordShift.wordCycle(PelleRifts.vacuum.name)}\r\n      and get a permanent Infinity Autobuyer`,\r\n    rift: () => PelleRifts.vacuum\r\n  },\r\n  powerGalaxies: {\r\n    id: 2,\r\n    requirementDescription: \"Power-up Galaxies\",\r\n    penaltyDescription: () => `Infinity Dimensions are raised to ${formatPow(0.5, 1, 1)}`,\r\n    rewardDescription: () => `Unlock ${wordShift.wordCycle(PelleRifts.decay.name)}`,\r\n    rift: () => PelleRifts.decay\r\n  },\r\n  eternity: {\r\n    id: 3,\r\n    requirementDescription: \"Reach Eternity\",\r\n    penaltyDescription: () => `Replicanti speed slows down even more above ${format(DC.E2000)}`,\r\n    rewardDescription: () => `Unlock ${wordShift.wordCycle(PelleRifts.chaos.name)}`,\r\n    rift: () => PelleRifts.chaos\r\n  },\r\n  ECs: {\r\n    id: 4,\r\n    requirementDescription: () => `Reach ${formatInt(115)} TT`,\r\n    penaltyDescription: () => `In Eternity Challenges, ${wordShift.wordCycle(PelleRifts.vacuum.name)}\r\n      IP multiplier is only ${formatPercents(0.3)} as strong and capped at ${formatPercents(0.15)}\r\n      of the goal`,\r\n    rewardDescription: () => `Unlock ${wordShift.wordCycle(PelleRifts.recursion.name)}`,\r\n    rift: () => PelleRifts.recursion\r\n  },\r\n  dilation: {\r\n    id: 5,\r\n    requirementDescription: \"Dilate Time\",\r\n    penaltyDescription: \"Time Dilation is permanently active\",\r\n    rewardDescription: () => `Keep the Time Dilation study across Armageddon, boost Remnant gain, and unlock\r\n      ${wordShift.wordCycle(PelleRifts.paradox.name)}`,\r\n    rift: () => PelleRifts.paradox\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}