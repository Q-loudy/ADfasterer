{"ast":null,"code":"export default {\n  name: \"DilationButton\",\n\n  data() {\n    return {\n      isUnlocked: false,\n      isRunning: false,\n      hasGain: false,\n      requiredForGain: new Decimal(),\n      canEternity: false,\n      eternityGoal: new Decimal(),\n      tachyonGain: new Decimal(),\n      remnantRequirement: 0,\n      showRequirement: false,\n      creditsClosed: false\n    };\n  },\n\n  computed: {\n    disableText() {\n      // Doesn't need to be reactive or check strike status; it's always permanent once entered in Doomed\n      return Pelle.isDoomed ? \"Dilation is permanent.\" : \"Disable Dilation.\";\n    }\n\n  },\n  methods: {\n    update() {\n      this.isUnlocked = PlayerProgress.dilationUnlocked();\n      this.isRunning = player.dilation.active;\n      this.remnantRequirement = Pelle.remnantRequirementForDilation;\n      this.showRequirement = Pelle.isDoomed && !Pelle.canDilateInPelle;\n      if (!this.isRunning) return;\n      this.canEternity = Player.canEternity; // This lets this.hasGain be true even before eternity.\n\n      this.hasGain = getTachyonGain(false).gt(0);\n\n      if (this.canEternity && this.hasGain) {\n        this.tachyonGain.copyFrom(getTachyonGain(true));\n      } else if (this.hasGain) {\n        this.eternityGoal.copyFrom(Player.eternityGoal);\n      } else {\n        this.requiredForGain.copyFrom(getTachyonReq());\n      }\n\n      this.creditsClosed = GameEnd.creditsEverClosed;\n    },\n\n    dilate() {\n      if (this.creditsClosed) return;\n      startDilatedEternityRequest();\n    }\n\n  }\n};","map":{"version":3,"sources":["DilationButton.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA,KAHA;AAIA,MAAA,eAAA,EAAA,IAAA,OAAA,EAJA;AAKA,MAAA,WAAA,EAAA,KALA;AAMA,MAAA,YAAA,EAAA,IAAA,OAAA,EANA;AAOA,MAAA,WAAA,EAAA,IAAA,OAAA,EAPA;AAQA,MAAA,kBAAA,EAAA,CARA;AASA,MAAA,eAAA,EAAA,KATA;AAUA,MAAA,aAAA,EAAA;AAVA,KAAA;AAYA,GAfA;;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,WAAA,GAAA;AACA;AACA,aAAA,KAAA,CAAA,QAAA,GAAA,wBAAA,GAAA,mBAAA;AACA;;AAJA,GAhBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,UAAA,GAAA,cAAA,CAAA,gBAAA,EAAA;AACA,WAAA,SAAA,GAAA,MAAA,CAAA,QAAA,CAAA,MAAA;AACA,WAAA,kBAAA,GAAA,KAAA,CAAA,6BAAA;AACA,WAAA,eAAA,GAAA,KAAA,CAAA,QAAA,IAAA,CAAA,KAAA,CAAA,gBAAA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA,WAAA,WAAA,GAAA,MAAA,CAAA,WAAA,CANA,CAOA;;AACA,WAAA,OAAA,GAAA,cAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,OAAA,EAAA;AACA,aAAA,WAAA,CAAA,QAAA,CAAA,cAAA,CAAA,IAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,OAAA,EAAA;AACA,aAAA,YAAA,CAAA,QAAA,CAAA,MAAA,CAAA,YAAA;AACA,OAFA,MAEA;AACA,aAAA,eAAA,CAAA,QAAA,CAAA,aAAA,EAAA;AACA;;AACA,WAAA,aAAA,GAAA,OAAA,CAAA,iBAAA;AACA,KAlBA;;AAmBA,IAAA,MAAA,GAAA;AACA,UAAA,KAAA,aAAA,EAAA;AACA,MAAA,2BAAA;AACA;;AAtBA;AAtBA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"DilationButton\",\r\n  data() {\r\n    return {\r\n      isUnlocked: false,\r\n      isRunning: false,\r\n      hasGain: false,\r\n      requiredForGain: new Decimal(),\r\n      canEternity: false,\r\n      eternityGoal: new Decimal(),\r\n      tachyonGain: new Decimal(),\r\n      remnantRequirement: 0,\r\n      showRequirement: false,\r\n      creditsClosed: false\r\n    };\r\n  },\r\n  computed: {\r\n    disableText() {\r\n      // Doesn't need to be reactive or check strike status; it's always permanent once entered in Doomed\r\n      return Pelle.isDoomed ? \"Dilation is permanent.\" : \"Disable Dilation.\";\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isUnlocked = PlayerProgress.dilationUnlocked();\r\n      this.isRunning = player.dilation.active;\r\n      this.remnantRequirement = Pelle.remnantRequirementForDilation;\r\n      this.showRequirement = Pelle.isDoomed && !Pelle.canDilateInPelle;\r\n      if (!this.isRunning) return;\r\n      this.canEternity = Player.canEternity;\r\n      // This lets this.hasGain be true even before eternity.\r\n      this.hasGain = getTachyonGain(false).gt(0);\r\n      if (this.canEternity && this.hasGain) {\r\n        this.tachyonGain.copyFrom(getTachyonGain(true));\r\n      } else if (this.hasGain) {\r\n        this.eternityGoal.copyFrom(Player.eternityGoal);\r\n      } else {\r\n        this.requiredForGain.copyFrom(getTachyonReq());\r\n      }\r\n      this.creditsClosed = GameEnd.creditsEverClosed;\r\n    },\r\n    dilate() {\r\n      if (this.creditsClosed) return;\r\n      startDilatedEternityRequest();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <button\r\n    class=\"o-dilation-btn\"\r\n    :class=\"isUnlocked ? 'o-dilation-btn--unlocked' : 'o-dilation-btn--locked'\"\r\n    @click=\"dilate()\"\r\n  >\r\n    <span v-if=\"!isUnlocked\">Purchase the Dilation Study to unlock.</span>\r\n    <span v-else-if=\"!isRunning\">\r\n      Dilate time.\r\n      <div v-if=\"showRequirement\">\r\n        Requires {{ format(remnantRequirement, 2) }} Remnants\r\n      </div>\r\n    </span>\r\n    <span v-else-if=\"canEternity && hasGain\">\r\n      {{ disableText }}\r\n      <br>\r\n      Gain {{ quantify(\"Tachyon Particle\", tachyonGain, 2, 1) }}.\r\n    </span>\r\n    <span v-else-if=\"hasGain\">\r\n      {{ disableText }}\r\n      <br>\r\n      Reach {{ quantify(\"Infinity Point\", eternityGoal, 1, 0) }} to Eternity and gain Tachyon Particles.\r\n    </span>\r\n    <span v-else>\r\n      {{ disableText }}\r\n      <br>\r\n      Reach {{ format(requiredForGain, 2, 1) }} antimatter to gain more Tachyon Particles.\r\n    </span>\r\n  </button>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/time-dilation"},"metadata":{},"sourceType":"module"}