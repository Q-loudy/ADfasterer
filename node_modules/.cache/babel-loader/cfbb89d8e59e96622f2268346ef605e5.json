{"ast":null,"code":"import ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\nexport default {\n  name: \"PurgeGlyphModal\",\n  components: {\n    ModalWrapperChoice\n  },\n  props: {\n    harsh: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    threshold() {\n      return this.harsh ? 1 : 5;\n    },\n\n    extraMessage() {\n      if (this.glyphsDeleted === 0) return `This will Purge no Glyphs.`;\n      if (this.glyphsDeleted === this.glyphsTotal) return `This will Purge all your Glyphs.`;\n      return `${this.harsh ? `Harsh Purging` : `Purging`} will delete\n        ${formatInt(this.glyphsDeleted)}/${formatInt(this.glyphsTotal)}\n      of your Glyphs.`;\n    },\n\n    explanation() {\n      if (this.harsh) return `Harsh Purging deletes Glyphs that are strictly worse than any other Glyph in your\n        inventory. For example, if a Glyph has all the same effects as another Glyph, but the values\n        of ALL of the effects are worse, then it will be deleted.`;\n      return `Purging deletes Glyphs that are strictly worse than other Glyphs, while keeping enough to equip a full\n        set with those effects. This behaves like Harsh Purge, except that regular Purge will not delete any given\n        Glyph unless it finds five Glyphs which are better (instead of only one).`;\n    },\n\n    topLabel() {\n      return `You are about to ${this.harsh ? `Harsh Purge` : `Purge`} your Glyphs`;\n    },\n\n    // These two don't need to be reactive since the modal force-closes itself whenever glyphs change\n    glyphsTotal() {\n      return Glyphs.inventory.filter(slot => slot !== null).length;\n    },\n\n    glyphsDeleted() {\n      return Glyphs.autoClean(this.threshold, false);\n    }\n\n  },\n  methods: {\n    handleYesClick() {\n      Glyphs.autoClean(this.threshold, true);\n    }\n\n  }\n};","map":{"version":3,"sources":["PurgeGlyphModal.vue"],"names":[],"mappings":"AACA,OAAA,kBAAA,MAAA,wCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GALA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,GAAA;AACA,aAAA,KAAA,KAAA,GAAA,CAAA,GAAA,CAAA;AACA,KAHA;;AAIA,IAAA,YAAA,GAAA;AACA,UAAA,KAAA,aAAA,KAAA,CAAA,EAAA,OAAA,4BAAA;AACA,UAAA,KAAA,aAAA,KAAA,KAAA,WAAA,EAAA,OAAA,kCAAA;AACA,aAAA,GAAA,KAAA,KAAA,GAAA,eAAA,GAAA,SAAA;AACA,UAAA,SAAA,CAAA,KAAA,aAAA,CAAA,IAAA,SAAA,CAAA,KAAA,WAAA,CAAA;AACA,sBAFA;AAGA,KAVA;;AAWA,IAAA,WAAA,GAAA;AACA,UAAA,KAAA,KAAA,EAAA,OAAA;AACA;AACA,kEAFA;AAGA,aAAA;AACA;AACA,kFAFA;AAGA,KAlBA;;AAmBA,IAAA,QAAA,GAAA;AACA,aAAA,oBAAA,KAAA,KAAA,GAAA,aAAA,GAAA,OAAA,cAAA;AACA,KArBA;;AAuBA;AACA,IAAA,WAAA,GAAA;AACA,aAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,EAAA,MAAA;AACA,KA1BA;;AA2BA,IAAA,aAAA,GAAA;AACA,aAAA,MAAA,CAAA,SAAA,CAAA,KAAA,SAAA,EAAA,KAAA,CAAA;AACA;;AA7BA,GAXA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,GAAA;AACA,MAAA,MAAA,CAAA,SAAA,CAAA,KAAA,SAAA,EAAA,IAAA;AACA;;AAHA;AA1CA,CAAA","sourcesContent":["<script>\r\nimport ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\r\n\r\nexport default {\r\n  name: \"PurgeGlyphModal\",\r\n  components: {\r\n    ModalWrapperChoice\r\n  },\r\n  props: {\r\n    harsh: {\r\n      type: Boolean,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    threshold() {\r\n      return this.harsh ? 1 : 5;\r\n    },\r\n    extraMessage() {\r\n      if (this.glyphsDeleted === 0) return `This will Purge no Glyphs.`;\r\n      if (this.glyphsDeleted === this.glyphsTotal) return `This will Purge all your Glyphs.`;\r\n      return `${this.harsh ? `Harsh Purging` : `Purging`} will delete\r\n        ${formatInt(this.glyphsDeleted)}/${formatInt(this.glyphsTotal)}\r\n      of your Glyphs.`;\r\n    },\r\n    explanation() {\r\n      if (this.harsh) return `Harsh Purging deletes Glyphs that are strictly worse than any other Glyph in your\r\n        inventory. For example, if a Glyph has all the same effects as another Glyph, but the values\r\n        of ALL of the effects are worse, then it will be deleted.`;\r\n      return `Purging deletes Glyphs that are strictly worse than other Glyphs, while keeping enough to equip a full\r\n        set with those effects. This behaves like Harsh Purge, except that regular Purge will not delete any given\r\n        Glyph unless it finds five Glyphs which are better (instead of only one).`;\r\n    },\r\n    topLabel() {\r\n      return `You are about to ${this.harsh ? `Harsh Purge` : `Purge`} your Glyphs`;\r\n    },\r\n\r\n    // These two don't need to be reactive since the modal force-closes itself whenever glyphs change\r\n    glyphsTotal() {\r\n      return Glyphs.inventory.filter(slot => slot !== null).length;\r\n    },\r\n    glyphsDeleted() {\r\n      return Glyphs.autoClean(this.threshold, false);\r\n    },\r\n  },\r\n  methods: {\r\n    handleYesClick() {\r\n      Glyphs.autoClean(this.threshold, true);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ModalWrapperChoice\r\n    option=\"autoClean\"\r\n    @confirm=\"handleYesClick\"\r\n  >\r\n    <template #header>\r\n      {{ topLabel }}\r\n    </template>\r\n    <div class=\"c-modal-message__text\">\r\n      This could delete Glyphs in your inventory that are good enough that you might want to use them\r\n      later. Purging will Purge Glyphs based on your Purge mode. Are you sure you want to do this?\r\n      <br>\r\n      <br>\r\n      {{ explanation }}\r\n    </div>\r\n    <br>\r\n    <div class=\"c-modal-hard-reset-danger\">\r\n      {{ extraMessage }}\r\n    </div>\r\n  </ModalWrapperChoice>\r\n</template>\r\n"],"sourceRoot":"src/components/modals/glyph-management"},"metadata":{},"sourceType":"module"}