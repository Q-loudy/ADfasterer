{"ast":null,"code":"export const awayProgressTypes = [{\n  name: \"antimatter\",\n  isUnlocked: () => true\n}, {\n  name: \"dimensionBoosts\",\n  isUnlocked: () => true\n}, {\n  name: \"antimatterGalaxies\",\n  reference: [\"galaxies\"],\n  isUnlocked: () => true\n}, {\n  name: \"infinities\",\n  isUnlocked: () => PlayerProgress.infinityUnlocked()\n}, {\n  name: \"infinityPoints\",\n  isUnlocked: () => PlayerProgress.infinityUnlocked()\n}, {\n  name: \"replicanti\",\n  reference: [\"replicanti\", \"amount\"],\n  isUnlocked: () => PlayerProgress.replicantiUnlocked() || PlayerProgress.eternityUnlocked()\n}, {\n  name: \"replicantiGalaxies\",\n  reference: [\"replicanti\", \"galaxies\"],\n  isUnlocked: () => PlayerProgress.replicantiUnlocked() || PlayerProgress.eternityUnlocked()\n}, {\n  name: \"eternities\",\n  isUnlocked: () => PlayerProgress.eternityUnlocked()\n}, {\n  name: \"eternityPoints\",\n  isUnlocked: () => PlayerProgress.eternityUnlocked()\n}, {\n  name: \"tachyonParticles\",\n  reference: [\"dilation\", \"tachyonParticles\"],\n  isUnlocked: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked()\n}, {\n  name: \"dilatedTime\",\n  reference: [\"dilation\", \"dilatedTime\"],\n  isUnlocked: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked()\n}, {\n  name: \"timeTheorems\",\n  reference: [\"timestudy\", \"theorem\"],\n  isUnlocked: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked()\n}, {\n  name: \"tachyonGalaxies\",\n  reference: [\"dilation\", \"totalTachyonGalaxies\"],\n  isUnlocked: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked()\n}, {\n  name: \"achievementAmount\",\n  reference: [\"achievementBits\"],\n  applyFn: x => x.map(b => countValuesFromBitmask(b)).sum(),\n  isUnlocked: () => PlayerProgress.realityUnlocked()\n}, {\n  name: \"realities\",\n  isUnlocked: () => PlayerProgress.realityUnlocked()\n}, {\n  name: \"realityMachines\",\n  reference: [\"reality\", \"realityMachines\"],\n  isUnlocked: () => PlayerProgress.realityUnlocked()\n}, {\n  name: \"blackHole\",\n  isUnlocked: () => BlackHole(1).isUnlocked,\n  // Functions as the visible option for both first & second BHs, never appears due to having no reference.\n  appearsInAwayModal: false\n}, {\n  name: \"firstBlackHole\",\n  awayOption: \"blackHole\",\n  reference: [\"blackHole\", \"0\", \"activations\"],\n  isUnlocked: () => BlackHole(1).isUnlocked,\n  classObjectReference: \"black-hole\",\n  showOption: false\n}, {\n  name: \"secondBlackHole\",\n  awayOption: \"blackHole\",\n  reference: [\"blackHole\", \"1\", \"activations\"],\n  isUnlocked: () => BlackHole(2).isUnlocked,\n  classObjectReference: \"black-hole\",\n  showOption: false\n}, {\n  name: \"relicShards\",\n  reference: [\"celestials\", \"effarig\", \"relicShards\"],\n  isUnlocked: () => TeresaUnlocks.effarig.canBeApplied\n}, {\n  name: \"celestialMemories\",\n  isUnlocked: () => VUnlocks.raUnlock.isUnlocked,\n  // Functions as the visible option for all Memories, never appears due to having no reference.\n  appearsInAwayModal: false\n}, {\n  name: \"teresaMemories\",\n  awayOption: \"celestialMemories\",\n  reference: [\"celestials\", \"ra\", \"pets\", \"teresa\", \"memories\"],\n  isUnlocked: () => Ra.pets.teresa.isUnlocked && !Ra.pets.teresa.isCapped,\n  showOption: false\n}, {\n  name: \"effarigMemories\",\n  awayOption: \"celestialMemories\",\n  reference: [\"celestials\", \"ra\", \"pets\", \"effarig\", \"memories\"],\n  isUnlocked: () => Ra.pets.effarig.isUnlocked && !Ra.pets.effarig.isCapped,\n  showOption: false\n}, {\n  name: \"enslavedMemories\",\n  forcedName: \"Nameless Memories\",\n  awayOption: \"celestialMemories\",\n  reference: [\"celestials\", \"ra\", \"pets\", \"enslaved\", \"memories\"],\n  isUnlocked: () => Ra.pets.enslaved.isUnlocked && !Ra.pets.enslaved.isCapped,\n  showOption: false\n}, {\n  name: \"vMemories\",\n  awayOption: \"celestialMemories\",\n  reference: [\"celestials\", \"ra\", \"pets\", \"v\", \"memories\"],\n  isUnlocked: () => Ra.pets.v.isUnlocked && !Ra.pets.v.isCapped,\n  showOption: false\n}, {\n  name: \"imaginaryMachines\",\n  reference: [\"reality\", \"imaginaryMachines\"],\n  isUnlocked: () => MachineHandler.isIMUnlocked\n}, {\n  name: \"darkMatter\",\n  reference: [\"celestials\", \"laitela\", \"darkMatter\"],\n  isUnlocked: () => Laitela.isUnlocked\n}, {\n  name: \"darkEnergy\",\n  reference: [\"celestials\", \"laitela\", \"darkEnergy\"],\n  isUnlocked: () => Laitela.isUnlocked\n}, {\n  name: \"singularities\",\n  reference: [\"celestials\", \"laitela\", \"singularities\"],\n  isUnlocked: () => Laitela.isUnlocked\n}, {\n  name: \"realityShards\",\n  reference: [\"celestials\", \"pelle\", \"realityShards\"],\n  isUnlocked: () => Pelle.isDoomed\n}];","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/away-progress-types.js"],"names":["awayProgressTypes","name","isUnlocked","reference","PlayerProgress","infinityUnlocked","replicantiUnlocked","eternityUnlocked","dilationUnlocked","realityUnlocked","applyFn","x","map","b","countValuesFromBitmask","sum","BlackHole","appearsInAwayModal","awayOption","classObjectReference","showOption","TeresaUnlocks","effarig","canBeApplied","VUnlocks","raUnlock","Ra","pets","teresa","isCapped","forcedName","enslaved","v","MachineHandler","isIMUnlocked","Laitela","Pelle","isDoomed"],"mappings":"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","sourcesContent":["export const awayProgressTypes = [\r\n  {\r\n    name: \"antimatter\",\r\n    isUnlocked: () => true,\r\n  }, {\r\n    name: \"dimensionBoosts\",\r\n    isUnlocked: () => true,\r\n  }, {\r\n    name: \"antimatterGalaxies\",\r\n    reference: [\"galaxies\"],\r\n    isUnlocked: () => true,\r\n  }, {\r\n    name: \"infinities\",\r\n    isUnlocked: () => PlayerProgress.infinityUnlocked(),\r\n  }, {\r\n    name: \"infinityPoints\",\r\n    isUnlocked: () => PlayerProgress.infinityUnlocked(),\r\n  }, {\r\n    name: \"replicanti\",\r\n    reference: [\"replicanti\", \"amount\"],\r\n    isUnlocked: () => PlayerProgress.replicantiUnlocked() || PlayerProgress.eternityUnlocked(),\r\n  }, {\r\n    name: \"replicantiGalaxies\",\r\n    reference: [\"replicanti\", \"galaxies\"],\r\n    isUnlocked: () => PlayerProgress.replicantiUnlocked() || PlayerProgress.eternityUnlocked(),\r\n  }, {\r\n    name: \"eternities\",\r\n    isUnlocked: () => PlayerProgress.eternityUnlocked(),\r\n  }, {\r\n    name: \"eternityPoints\",\r\n    isUnlocked: () => PlayerProgress.eternityUnlocked(),\r\n  }, {\r\n    name: \"tachyonParticles\",\r\n    reference: [\"dilation\", \"tachyonParticles\"],\r\n    isUnlocked: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked(),\r\n  }, {\r\n    name: \"dilatedTime\",\r\n    reference: [\"dilation\", \"dilatedTime\"],\r\n    isUnlocked: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked(),\r\n  }, {\r\n    name: \"timeTheorems\",\r\n    reference: [\"timestudy\", \"theorem\"],\r\n    isUnlocked: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked(),\r\n  }, {\r\n    name: \"tachyonGalaxies\",\r\n    reference: [\"dilation\", \"totalTachyonGalaxies\"],\r\n    isUnlocked: () => PlayerProgress.dilationUnlocked() || PlayerProgress.realityUnlocked(),\r\n  }, {\r\n    name: \"achievementAmount\",\r\n    reference: [\"achievementBits\"],\r\n    applyFn: x => x.map(b => countValuesFromBitmask(b)).sum(),\r\n    isUnlocked: () => PlayerProgress.realityUnlocked(),\r\n  }, {\r\n    name: \"realities\",\r\n    isUnlocked: () => PlayerProgress.realityUnlocked(),\r\n  }, {\r\n    name: \"realityMachines\",\r\n    reference: [\"reality\", \"realityMachines\"],\r\n    isUnlocked: () => PlayerProgress.realityUnlocked(),\r\n  }, {\r\n    name: \"blackHole\",\r\n    isUnlocked: () => BlackHole(1).isUnlocked,\r\n    // Functions as the visible option for both first & second BHs, never appears due to having no reference.\r\n    appearsInAwayModal: false,\r\n  }, {\r\n    name: \"firstBlackHole\",\r\n    awayOption: \"blackHole\",\r\n    reference: [\"blackHole\", \"0\", \"activations\"],\r\n    isUnlocked: () => BlackHole(1).isUnlocked,\r\n    classObjectReference: \"black-hole\",\r\n    showOption: false,\r\n  }, {\r\n    name: \"secondBlackHole\",\r\n    awayOption: \"blackHole\",\r\n    reference: [\"blackHole\", \"1\", \"activations\"],\r\n    isUnlocked: () => BlackHole(2).isUnlocked,\r\n    classObjectReference: \"black-hole\",\r\n    showOption: false,\r\n  }, {\r\n    name: \"relicShards\",\r\n    reference: [\"celestials\", \"effarig\", \"relicShards\"],\r\n    isUnlocked: () => TeresaUnlocks.effarig.canBeApplied,\r\n  }, {\r\n    name: \"celestialMemories\",\r\n    isUnlocked: () => VUnlocks.raUnlock.isUnlocked,\r\n    // Functions as the visible option for all Memories, never appears due to having no reference.\r\n    appearsInAwayModal: false,\r\n  }, {\r\n    name: \"teresaMemories\",\r\n    awayOption: \"celestialMemories\",\r\n    reference: [\"celestials\", \"ra\", \"pets\", \"teresa\", \"memories\"],\r\n    isUnlocked: () => Ra.pets.teresa.isUnlocked && !Ra.pets.teresa.isCapped,\r\n    showOption: false,\r\n  }, {\r\n    name: \"effarigMemories\",\r\n    awayOption: \"celestialMemories\",\r\n    reference: [\"celestials\", \"ra\", \"pets\", \"effarig\", \"memories\"],\r\n    isUnlocked: () => Ra.pets.effarig.isUnlocked && !Ra.pets.effarig.isCapped,\r\n    showOption: false,\r\n  }, {\r\n    name: \"enslavedMemories\",\r\n    forcedName: \"Nameless Memories\",\r\n    awayOption: \"celestialMemories\",\r\n    reference: [\"celestials\", \"ra\", \"pets\", \"enslaved\", \"memories\"],\r\n    isUnlocked: () => Ra.pets.enslaved.isUnlocked && !Ra.pets.enslaved.isCapped,\r\n    showOption: false,\r\n  }, {\r\n    name: \"vMemories\",\r\n    awayOption: \"celestialMemories\",\r\n    reference: [\"celestials\", \"ra\", \"pets\", \"v\", \"memories\"],\r\n    isUnlocked: () => Ra.pets.v.isUnlocked && !Ra.pets.v.isCapped,\r\n    showOption: false,\r\n  }, {\r\n    name: \"imaginaryMachines\",\r\n    reference: [\"reality\", \"imaginaryMachines\"],\r\n    isUnlocked: () => MachineHandler.isIMUnlocked,\r\n  }, {\r\n    name: \"darkMatter\",\r\n    reference: [\"celestials\", \"laitela\", \"darkMatter\"],\r\n    isUnlocked: () => Laitela.isUnlocked,\r\n  }, {\r\n    name: \"darkEnergy\",\r\n    reference: [\"celestials\", \"laitela\", \"darkEnergy\"],\r\n    isUnlocked: () => Laitela.isUnlocked,\r\n  }, {\r\n    name: \"singularities\",\r\n    reference: [\"celestials\", \"laitela\", \"singularities\"],\r\n    isUnlocked: () => Laitela.isUnlocked,\r\n  }, {\r\n    name: \"realityShards\",\r\n    reference: [\"celestials\", \"pelle\", \"realityShards\"],\r\n    isUnlocked: () => Pelle.isDoomed,\r\n  },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}