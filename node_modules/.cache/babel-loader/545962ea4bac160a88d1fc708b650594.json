{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport ModalCloseButton from \"@/components/modals/ModalCloseButton\";\nexport default {\n  name: \"H2PModal\",\n  components: {\n    ModalCloseButton\n  },\n\n  data() {\n    return {\n      tabId: 0,\n      searchValue: \"\"\n    };\n  },\n\n  computed: {\n    activeTab: {\n      get() {\n        return GameDatabase.h2p.tabs[this.tabId];\n      },\n\n      set(tab) {\n        this.tabId = tab.id;\n      }\n\n    },\n\n    matchingTabs() {\n      return GameDatabase.h2p.search(this.searchValue).filter(searchObj => searchObj.tab.isUnlocked());\n    },\n\n    topThreshold() {\n      return Math.min(this.matchingTabs[Math.min(this.matchingTabs.length - 1, 4)].relevance + 0.01, 0.5);\n    }\n\n  },\n\n  created() {\n    const unlockedTabs = GameDatabase.h2p.tabs.filter(tab => tab.isUnlocked());\n    const tab = this.$viewModel.tab;\n    const subtab = `${tab}/${this.$viewModel.subtab}`;\n    const matchedEntry = unlockedTabs.find(h2pTab => h2pTab.tab === subtab || h2pTab.tab === tab);\n    this.activeTab = ui.view.h2pForcedTab || matchedEntry || unlockedTabs[0];\n    ui.view.h2pForcedTab = undefined; // Force-show the H2P info initally regardless of tab while the tooltip for the H2P button is still active\n\n    if (Tutorial.emphasizeH2P()) this.activeTab = GameDatabase.h2p.tabs[0];\n  },\n\n  mounted() {\n    this.$refs.input.select();\n  },\n\n  methods: {\n    setActiveTab(tab) {\n      this.activeTab = tab;\n      document.getElementById(\"h2p-body\").scrollTop = 0;\n    },\n\n    isFirstIrrelevant(idx) {\n      const matches = this.matchingTabs;\n      const searchObjThis = matches[idx];\n      const searchObjOther = matches[idx - 1];\n      return idx > 0 && searchObjThis.relevance >= this.topThreshold && searchObjOther.relevance < this.topThreshold;\n    }\n\n  }\n};","map":{"version":3,"sources":["H2PModal.vue"],"names":[],"mappings":";AACA,OAAA,gBAAA,MAAA,sCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAIA,GAVA;;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,GAAA,GAAA;AACA,eAAA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA;AACA,OAHA;;AAIA,MAAA,GAAA,CAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,GAAA,CAAA,EAAA;AACA;;AANA,KADA;;AASA,IAAA,YAAA,GAAA;AACA,aAAA,YAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,MAAA,CAAA,SAAA,IAAA,SAAA,CAAA,GAAA,CAAA,UAAA,EAAA,CAAA;AACA,KAXA;;AAYA,IAAA,YAAA,GAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,KAAA,YAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,GAAA,IAAA,EAAA,GAAA,CAAA;AACA;;AAdA,GAXA;;AA2BA,EAAA,OAAA,GAAA;AACA,UAAA,YAAA,GAAA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,IAAA,GAAA,CAAA,UAAA,EAAA,CAAA;AACA,UAAA,GAAA,GAAA,KAAA,UAAA,CAAA,GAAA;AACA,UAAA,MAAA,GAAA,GAAA,GAAA,IAAA,KAAA,UAAA,CAAA,MAAA,EAAA;AACA,UAAA,YAAA,GAAA,YAAA,CAAA,IAAA,CAAA,MAAA,IAAA,MAAA,CAAA,GAAA,KAAA,MAAA,IAAA,MAAA,CAAA,GAAA,KAAA,GAAA,CAAA;AACA,SAAA,SAAA,GAAA,EAAA,CAAA,IAAA,CAAA,YAAA,IAAA,YAAA,IAAA,YAAA,CAAA,CAAA,CAAA;AACA,IAAA,EAAA,CAAA,IAAA,CAAA,YAAA,GAAA,SAAA,CANA,CAOA;;AACA,QAAA,QAAA,CAAA,YAAA,EAAA,EAAA,KAAA,SAAA,GAAA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,GApCA;;AAqCA,EAAA,OAAA,GAAA;AACA,SAAA,KAAA,CAAA,KAAA,CAAA,MAAA;AACA,GAvCA;;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,CAAA,GAAA,EAAA;AACA,WAAA,SAAA,GAAA,GAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,UAAA,EAAA,SAAA,GAAA,CAAA;AACA,KAJA;;AAKA,IAAA,iBAAA,CAAA,GAAA,EAAA;AACA,YAAA,OAAA,GAAA,KAAA,YAAA;AACA,YAAA,aAAA,GAAA,OAAA,CAAA,GAAA,CAAA;AACA,YAAA,cAAA,GAAA,OAAA,CAAA,GAAA,GAAA,CAAA,CAAA;AAEA,aAAA,GAAA,GAAA,CAAA,IACA,aAAA,CAAA,SAAA,IAAA,KAAA,YADA,IAEA,cAAA,CAAA,SAAA,GAAA,KAAA,YAFA;AAGA;;AAbA;AAxCA,CAAA","sourcesContent":["<script>\r\nimport ModalCloseButton from \"@/components/modals/ModalCloseButton\";\r\n\r\nexport default {\r\n  name: \"H2PModal\",\r\n  components: {\r\n    ModalCloseButton,\r\n  },\r\n  data() {\r\n    return {\r\n      tabId: 0,\r\n      searchValue: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    activeTab: {\r\n      get() {\r\n        return GameDatabase.h2p.tabs[this.tabId];\r\n      },\r\n      set(tab) {\r\n        this.tabId = tab.id;\r\n      }\r\n    },\r\n    matchingTabs() {\r\n      return GameDatabase.h2p.search(this.searchValue).filter(searchObj => searchObj.tab.isUnlocked());\r\n    },\r\n    topThreshold() {\r\n      return Math.min(this.matchingTabs[Math.min(this.matchingTabs.length - 1, 4)].relevance + 0.01, 0.5);\r\n    }\r\n  },\r\n  created() {\r\n    const unlockedTabs = GameDatabase.h2p.tabs.filter(tab => tab.isUnlocked());\r\n    const tab = this.$viewModel.tab;\r\n    const subtab = `${tab}/${this.$viewModel.subtab}`;\r\n    const matchedEntry = unlockedTabs.find(h2pTab => h2pTab.tab === subtab || h2pTab.tab === tab);\r\n    this.activeTab = ui.view.h2pForcedTab || matchedEntry || unlockedTabs[0];\r\n    ui.view.h2pForcedTab = undefined;\r\n    // Force-show the H2P info initally regardless of tab while the tooltip for the H2P button is still active\r\n    if (Tutorial.emphasizeH2P()) this.activeTab = GameDatabase.h2p.tabs[0];\r\n  },\r\n  mounted() {\r\n    this.$refs.input.select();\r\n  },\r\n  methods: {\r\n    setActiveTab(tab) {\r\n      this.activeTab = tab;\r\n      document.getElementById(\"h2p-body\").scrollTop = 0;\r\n    },\r\n    isFirstIrrelevant(idx) {\r\n      const matches = this.matchingTabs;\r\n      const searchObjThis = matches[idx];\r\n      const searchObjOther = matches[idx - 1];\r\n\r\n      return idx > 0 &&\r\n        searchObjThis.relevance >= this.topThreshold &&\r\n        searchObjOther.relevance < this.topThreshold;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-h2p-modal\">\r\n    <ModalCloseButton @click=\"emitClose\" />\r\n    <div class=\"l-h2p-header\">\r\n      <div class=\"c-h2p-title\">\r\n        How To Play\r\n      </div>\r\n    </div>\r\n    <div class=\"l-h2p-container\">\r\n      <div class=\"l-h2p-search-tab\">\r\n        <input\r\n          ref=\"input\"\r\n          v-model=\"searchValue\"\r\n          placeholder=\"Type to search...\"\r\n          class=\"c-h2p-search-bar\"\r\n          @keyup.esc=\"emitClose\"\r\n        >\r\n        <div class=\"l-h2p-tab-list\">\r\n          <div\r\n            v-for=\"(searchObj, searchObjId) in matchingTabs\"\r\n            :key=\"searchObj.tab.name\"\r\n            class=\"o-h2p-tab-button\"\r\n            :class=\"{\r\n              'o-h2p-tab-button--selected': searchObj.tab === activeTab,\r\n              'o-h2p-tab-button--relevant': searchObj.relevance < topThreshold,\r\n              'o-h2p-tab-button--first-irrelevant': isFirstIrrelevant(searchObjId)\r\n            }\"\r\n            @click=\"setActiveTab(searchObj.tab)\"\r\n          >\r\n            {{ searchObj.tab.alias }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"l-h2p-info\">\r\n        <div class=\"c-h2p-body--title\">\r\n          {{ activeTab.name }}\r\n        </div>\r\n        <div\r\n          id=\"h2p-body\"\r\n          class=\"l-h2p-body c-h2p-body\"\r\n          v-html=\"activeTab.info()\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.o-h2p-tab-button--relevant {\r\n  background-color: #df505055;\r\n}\r\n\r\n.o-h2p-tab-button--first-irrelevant {\r\n  border-top: 0.1rem solid black;\r\n  margin-top: 0.8rem;\r\n}\r\n\r\n.s-base--dark .o-h2p-tab-button--first-irrelevant {\r\n  border-top-color: white;\r\n}\r\n\r\n.t-s12 .o-h2p-tab-button--first-irrelevant {\r\n  border-top-color: black;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/modals"},"metadata":{},"sourceType":"module"}