{"ast":null,"code":"export default {\n  name: \"TickspeedRow\",\n\n  data() {\n    return {\n      purchasedTickspeed: 0,\n      freeTickspeed: 0,\n      isVisible: false,\n      mult: new Decimal(0),\n      cost: new Decimal(0),\n      isAffordable: false,\n      tickspeed: new Decimal(0),\n      gameSpeedMult: 1,\n      galaxyCount: 0,\n      isContinuumActive: false,\n      continuumValue: 0,\n      hasTutorial: false,\n      hasRealityButton: false,\n      isEC9: false\n    };\n  },\n\n  computed: {\n    classObject() {\n      return {\n        \"l-tickspeed-container\": true,\n        \"l-tickspeed-container--hidden\": !this.isVisible\n      };\n    },\n\n    multiplierDisplay() {\n      if (InfinityChallenge(3).isRunning) return `Multiply all Antimatter Dimensions by\n        ${formatX(1.05 + this.galaxyCount * 0.005, 3, 3)}`;\n      const tickmult = this.mult;\n      return `${formatX(tickmult.reciprocal(), 2, 3)} faster / upgrade.`;\n    },\n\n    tickspeedDisplay() {\n      return `Tickspeed: ${format(this.tickspeed, 2, 3)} / sec`;\n    },\n\n    continuumString() {\n      return formatFloat(this.continuumValue, 2);\n    },\n\n    upgradeCount() {\n      const purchased = this.purchasedTickspeed;\n      if (!this.freeTickspeed) return quantifyInt(\"Purchased Upgrade\", purchased);\n      if (purchased === 0 || this.isContinuumActive) return `${formatInt(this.freeTickspeed)} Free Upgrades`;\n      return `${formatInt(purchased)} Purchased + ${formatInt(this.freeTickspeed)} Free`;\n    }\n\n  },\n  methods: {\n    update() {\n      this.hasRealityButton = PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought;\n      this.purchasedTickspeed = player.totalTickBought;\n      this.freeTickspeed = FreeTickspeed.amount;\n      this.isEC9 = EternityChallenge(9).isRunning;\n      this.isVisible = Tickspeed.isUnlocked || this.isEC9;\n      if (!this.isVisible) return;\n      this.mult.copyFrom(Tickspeed.multiplier);\n      this.cost.copyFrom(Tickspeed.cost);\n      this.isAffordable = Tickspeed.isAvailableForPurchase && Tickspeed.isAffordable;\n      this.tickspeed.copyFrom(Tickspeed.perSecond);\n      this.gameSpeedMult = getGameSpeedupForDisplay();\n      this.galaxyCount = player.galaxies;\n      this.isContinuumActive = Laitela.continuumActive;\n      if (this.isContinuumActive) this.continuumValue = Tickspeed.continuumValue;\n      this.hasTutorial = Tutorial.isActive(TUTORIAL_STATE.TICKSPEED);\n    },\n\n    buttonClass() {\n      return {\n        \"o-primary-btn\": true,\n        \"tickspeed-btn\": true,\n        \"o-primary-btn--disabled\": !this.isAffordable && !this.isContinuumActive,\n        \"o-non-clickable o-continuum\": this.isContinuumActive,\n        \"tutorial--glow\": this.isAffordable && this.hasTutorial\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["TickspeedRow.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nexport default {\r\n  name: \"TickspeedRow\",\r\n  data() {\r\n    return {\r\n      purchasedTickspeed: 0,\r\n      freeTickspeed: 0,\r\n      isVisible: false,\r\n      mult: new Decimal(0),\r\n      cost: new Decimal(0),\r\n      isAffordable: false,\r\n      tickspeed: new Decimal(0),\r\n      gameSpeedMult: 1,\r\n      galaxyCount: 0,\r\n      isContinuumActive: false,\r\n      continuumValue: 0,\r\n      hasTutorial: false,\r\n      hasRealityButton: false,\r\n      isEC9: false,\r\n    };\r\n  },\r\n  computed: {\r\n    classObject() {\r\n      return {\r\n        \"l-tickspeed-container\": true,\r\n        \"l-tickspeed-container--hidden\": !this.isVisible\r\n      };\r\n    },\r\n    multiplierDisplay() {\r\n      if (InfinityChallenge(3).isRunning) return `Multiply all Antimatter Dimensions by\r\n        ${formatX(1.05 + this.galaxyCount * 0.005, 3, 3)}`;\r\n      const tickmult = this.mult;\r\n      return `${formatX(tickmult.reciprocal(), 2, 3)} faster / upgrade.`;\r\n    },\r\n    tickspeedDisplay() {\r\n      return `Tickspeed: ${format(this.tickspeed, 2, 3)} / sec`;\r\n    },\r\n    continuumString() {\r\n      return formatFloat(this.continuumValue, 2);\r\n    },\r\n    upgradeCount() {\r\n      const purchased = this.purchasedTickspeed;\r\n      if (!this.freeTickspeed) return quantifyInt(\"Purchased Upgrade\", purchased);\r\n      if (purchased === 0 || this.isContinuumActive) return `${formatInt(this.freeTickspeed)} Free Upgrades`;\r\n      return `${formatInt(purchased)} Purchased + ${formatInt(this.freeTickspeed)} Free`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.hasRealityButton = PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought;\r\n      this.purchasedTickspeed = player.totalTickBought;\r\n      this.freeTickspeed = FreeTickspeed.amount;\r\n      this.isEC9 = EternityChallenge(9).isRunning;\r\n      this.isVisible = Tickspeed.isUnlocked || this.isEC9;\r\n      if (!this.isVisible) return;\r\n      this.mult.copyFrom(Tickspeed.multiplier);\r\n      this.cost.copyFrom(Tickspeed.cost);\r\n      this.isAffordable = Tickspeed.isAvailableForPurchase && Tickspeed.isAffordable;\r\n      this.tickspeed.copyFrom(Tickspeed.perSecond);\r\n      this.gameSpeedMult = getGameSpeedupForDisplay();\r\n      this.galaxyCount = player.galaxies;\r\n      this.isContinuumActive = Laitela.continuumActive;\r\n      if (this.isContinuumActive) this.continuumValue = Tickspeed.continuumValue;\r\n      this.hasTutorial = Tutorial.isActive(TUTORIAL_STATE.TICKSPEED);\r\n    },\r\n    buttonClass() {\r\n      return {\r\n        \"o-primary-btn\": true,\r\n        \"tickspeed-btn\": true,\r\n        \"o-primary-btn--disabled\": !this.isAffordable && !this.isContinuumActive,\r\n        \"o-non-clickable o-continuum\": this.isContinuumActive,\r\n        \"tutorial--glow\": this.isAffordable && this.hasTutorial\r\n      };\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div :class=\"classObject\">\r\n    <div class=\"tickspeed-buttons\">\r\n      <button\r\n        v-tooltip=\"upgradeCount\"\r\n        :class=\"buttonClass()\"\r\n        onclick=\"buyTickSpeed()\"\r\n      >\r\n        <span v-if=\"isContinuumActive\">\r\n          Tickspeed Continuum: {{ continuumString }}\r\n        </span>\r\n        <span v-else-if=\"isEC9\">\r\n          Tickspeed Unpurchasable (EC 9)\r\n        </span>\r\n        <span v-else>\r\n          Tickspeed Cost: {{ format(cost) }}\r\n        </span>\r\n        <div\r\n          v-if=\"hasTutorial\"\r\n          class=\"fas fa-circle-exclamation l-notification-icon\"\r\n        />\r\n      </button>\r\n      <button\r\n        v-if=\"!isContinuumActive\"\r\n        class=\"o-primary-btn tickspeed-max-btn\"\r\n        :class=\"{ 'o-primary-btn--disabled': !isAffordable && !isContinuumActive }\"\r\n        onclick=\"buyMaxTickSpeed()\"\r\n      >\r\n        Buy Max\r\n      </button>\r\n    </div>\r\n    <div\r\n      v-if=\"hasRealityButton\"\r\n      class=\"tickspeed-labels\"\r\n    >\r\n      {{ tickspeedDisplay }} | {{ multiplierDisplay }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.o-primary-btn {\r\n  position: relative;\r\n  vertical-align: middle;\r\n}\r\n\r\n.tickspeed-btn {\r\n  position: relative;\r\n  width: 30rem;\r\n  height: 2.5rem;\r\n  padding: 0.25rem;\r\n}\r\n\r\n.tickspeed-labels {\r\n  color: var(--color-text);\r\n  padding: 0.25rem;\r\n}\r\n\r\n.l-tickspeed-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 0.5rem;\r\n}\r\n\r\n.l-tickspeed-container--hidden {\r\n  visibility: hidden;\r\n}\r\n\r\n.tickspeed-max-btn {\r\n  margin-left: 0.5rem;\r\n  width: 10rem;\r\n  height: 2.5rem;\r\n  padding: 0.25rem;\r\n}\r\n\r\n.o-non-clickable {\r\n  cursor: auto;\r\n}\r\n\r\n.o-continuum {\r\n  border-color: var(--color-laitela--accent);\r\n  color: var(--color-laitela--accent);\r\n  background: var(--color-laitela--base);\r\n}\r\n\r\n.o-continuum:hover {\r\n  border-color: var(--color-laitela--accent);\r\n  color: var(--color-laitela--base);\r\n  background: var(--color-laitela--accent);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/antimatter-dimensions"},"metadata":{},"sourceType":"module"}