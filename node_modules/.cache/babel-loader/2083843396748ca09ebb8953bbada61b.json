{"ast":null,"code":"import { MultiplierTabHelper } from \"./helper-functions\";\nimport { MultiplierTabIcons } from \"./icons\"; // See index.js for documentation\n\nexport const gamespeed = {\n  total: {\n    name: \"Game speed\",\n    displayOverride: () => {\n      if (Enslaved.isStoringRealTime) return `Set to ${format(0)} (storing real time)`;\n      if (EternityChallenge(12).isRunning) return `${formatX(1)}/${formatInt(1000)} (fixed)`;\n      const curr = getGameSpeedupFactor();\n      const bh = MultiplierTabHelper.blackHoleSpeeds();\n      const currBH = bh.current;\n      const avgBH = bh.average;\n      const avgSpeed = Enslaved.isAutoReleasing ? getGameSpeedupForDisplay() : curr / currBH * avgBH;\n      const avgString = ` (current) | ${formatX(avgSpeed, 2, 2)} (average)`;\n      return `${formatX(curr, 2, 2)}${curr === avgSpeed ? \"\" : avgString}`;\n    },\n    multValue: () => getGameSpeedupForDisplay(),\n    isActive: () => PlayerProgress.seenAlteredSpeed(),\n    dilationEffect: () => Effarig.isRunning ? Effarig.multDilation : 1,\n    isDilated: true,\n    overlay: [\"Î”\", `<i class=\"fas fa-clock\" />`, `<i class=\"fas fa-circle\" />`]\n  },\n  glyph: {\n    name: \"Equipped Glyphs\",\n    multValue: () => getAdjustedGlyphEffect(\"timespeed\"),\n    powValue: () => getAdjustedGlyphEffect(\"effarigblackhole\"),\n    isActive: () => PlayerProgress.realityUnlocked() && !EternityChallenge(12).isRunning,\n    icon: MultiplierTabIcons.GENERIC_GLYPH\n  },\n  blackHoleCurr: {\n    name: \"Current Black Hole Speedup\",\n    multValue: () => MultiplierTabHelper.blackHoleSpeeds().current,\n    isActive: () => BlackHole(1).isUnlocked && !BlackHoles.arePaused && !EternityChallenge(12).isRunning,\n    icon: MultiplierTabIcons.BLACK_HOLE\n  },\n  blackHoleAvg: {\n    name: \"Average Black Hole Speedup\",\n    multValue: () => MultiplierTabHelper.blackHoleSpeeds().average,\n    isActive: () => BlackHole(1).isUnlocked && !BlackHoles.arePaused && !EternityChallenge(12).isRunning,\n    icon: MultiplierTabIcons.BLACK_HOLE\n  },\n  achievementMult: {\n    name: \"30 V-Achievement Milestone - Achievement Multiplier\",\n    multValue: () => Math.pow(VUnlocks.achievementBH.effectOrDefault(1), BlackHoles.list.countWhere(bh => bh.isUnlocked)),\n    isActive: () => !BlackHoles.arePaused && VUnlocks.achievementBH.canBeApplied && !EternityChallenge(12).isRunning,\n    icon: MultiplierTabIcons.ACHIEVEMENT\n  },\n  pulsing: {\n    name: \"Auto-Discharging Stored Time\",\n    multValue: () => Enslaved.isAutoReleasing ? Math.max(Enslaved.autoReleaseSpeed / getGameSpeedupFactor(), 1) : getGameSpeedupFactor(),\n    isActive: () => Enslaved.canRelease() && Enslaved.isAutoReleasing && !EternityChallenge(12).isRunning,\n    icon: MultiplierTabIcons.BH_PULSE\n  },\n  singularity: {\n    name: \"Singularity Milestone - Game speed based on Singularities\",\n    multValue: () => SingularityMilestone.gamespeedFromSingularities.effectOrDefault(1),\n    isActive: () => SingularityMilestone.gamespeedFromSingularities.canBeApplied && !EternityChallenge(12).isRunning,\n    icon: MultiplierTabIcons.SINGULARITY\n  },\n  pelle: {\n    name: \"Pelle Upgrade - Repeatable Game speed\",\n    multValue: () => PelleUpgrade.timeSpeedMult.effectValue.toNumber(),\n    isActive: () => Pelle.isDoomed && !EternityChallenge(12).isRunning,\n    icon: MultiplierTabIcons.PELLE\n  },\n  ec12: {\n    name: \"Eternity Challenge 12\",\n    multValue: () => 0.001 / getGameSpeedupForDisplay(),\n    isActive: () => EternityChallenge(12).isRunning,\n    icon: MultiplierTabIcons.CHALLENGE(\"eternity\")\n  },\n  chargingBH: {\n    name: \"Black Hole Charging\",\n    // The 0 in multValue is irrelevant; if this upgrade isn't available, the subtab is hidden by 1x total effect\n    multValue: () => Ra.unlocks.autoPulseTime.canBeApplied ? 0.01 : 0,\n    isActive: () => Enslaved.isStoringGameTime,\n    icon: MultiplierTabIcons.BLACK_HOLE\n  },\n  invertedBH: {\n    name: \"Inverted Black Hole\",\n    multValue: () => player.blackHoleNegative,\n    isActive: () => BlackHoles.areNegative,\n    icon: MultiplierTabIcons.CHALLENGE(\"eternity\")\n  },\n  nerfLaitela: {\n    name: \"Lai'tela's Reality\",\n    powValue: () => Math.clampMax(Time.thisRealityRealTime.totalMinutes / 10, 1),\n    isActive: () => Laitela.isRunning,\n    icon: MultiplierTabIcons.GENERIC_LAITELA\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/multiplier-tab/gamespeed.js"],"names":["MultiplierTabHelper","MultiplierTabIcons","gamespeed","total","name","displayOverride","Enslaved","isStoringRealTime","format","EternityChallenge","isRunning","formatX","formatInt","curr","getGameSpeedupFactor","bh","blackHoleSpeeds","currBH","current","avgBH","average","avgSpeed","isAutoReleasing","getGameSpeedupForDisplay","avgString","multValue","isActive","PlayerProgress","seenAlteredSpeed","dilationEffect","Effarig","multDilation","isDilated","overlay","glyph","getAdjustedGlyphEffect","powValue","realityUnlocked","icon","GENERIC_GLYPH","blackHoleCurr","BlackHole","isUnlocked","BlackHoles","arePaused","BLACK_HOLE","blackHoleAvg","achievementMult","Math","pow","VUnlocks","achievementBH","effectOrDefault","list","countWhere","canBeApplied","ACHIEVEMENT","pulsing","max","autoReleaseSpeed","canRelease","BH_PULSE","singularity","SingularityMilestone","gamespeedFromSingularities","SINGULARITY","pelle","PelleUpgrade","timeSpeedMult","effectValue","toNumber","Pelle","isDoomed","PELLE","ec12","CHALLENGE","chargingBH","Ra","unlocks","autoPulseTime","isStoringGameTime","invertedBH","player","blackHoleNegative","areNegative","nerfLaitela","clampMax","Time","thisRealityRealTime","totalMinutes","Laitela","GENERIC_LAITELA"],"mappings":"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","sourcesContent":["import { MultiplierTabHelper } from \"./helper-functions\";\r\nimport { MultiplierTabIcons } from \"./icons\";\r\n\r\n// See index.js for documentation\r\nexport const gamespeed = {\r\n  total: {\r\n    name: \"Game speed\",\r\n    displayOverride: () => {\r\n      if (Enslaved.isStoringRealTime) return `Set to ${format(0)} (storing real time)`;\r\n      if (EternityChallenge(12).isRunning) return `${formatX(1)}/${formatInt(1000)} (fixed)`;\r\n      const curr = getGameSpeedupFactor();\r\n\r\n      const bh = MultiplierTabHelper.blackHoleSpeeds();\r\n      const currBH = bh.current;\r\n      const avgBH = bh.average;\r\n\r\n      const avgSpeed = Enslaved.isAutoReleasing\r\n        ? getGameSpeedupForDisplay()\r\n        : curr / currBH * avgBH;\r\n      const avgString = ` (current) | ${formatX(avgSpeed, 2, 2)} (average)`;\r\n      return `${formatX(curr, 2, 2)}${curr === avgSpeed ? \"\" : avgString}`;\r\n    },\r\n    multValue: () => getGameSpeedupForDisplay(),\r\n    isActive: () => PlayerProgress.seenAlteredSpeed(),\r\n    dilationEffect: () => (Effarig.isRunning ? Effarig.multDilation : 1),\r\n    isDilated: true,\r\n    overlay: [\"Î”\", `<i class=\"fas fa-clock\" />`, `<i class=\"fas fa-circle\" />`],\r\n  },\r\n  glyph: {\r\n    name: \"Equipped Glyphs\",\r\n    multValue: () => getAdjustedGlyphEffect(\"timespeed\"),\r\n    powValue: () => getAdjustedGlyphEffect(\"effarigblackhole\"),\r\n    isActive: () => PlayerProgress.realityUnlocked() && !EternityChallenge(12).isRunning,\r\n    icon: MultiplierTabIcons.GENERIC_GLYPH,\r\n  },\r\n  blackHoleCurr: {\r\n    name: \"Current Black Hole Speedup\",\r\n    multValue: () => MultiplierTabHelper.blackHoleSpeeds().current,\r\n    isActive: () => BlackHole(1).isUnlocked && !BlackHoles.arePaused && !EternityChallenge(12).isRunning,\r\n    icon: MultiplierTabIcons.BLACK_HOLE,\r\n  },\r\n  blackHoleAvg: {\r\n    name: \"Average Black Hole Speedup\",\r\n    multValue: () => MultiplierTabHelper.blackHoleSpeeds().average,\r\n    isActive: () => BlackHole(1).isUnlocked && !BlackHoles.arePaused && !EternityChallenge(12).isRunning,\r\n    icon: MultiplierTabIcons.BLACK_HOLE,\r\n  },\r\n  achievementMult: {\r\n    name: \"30 V-Achievement Milestone - Achievement Multiplier\",\r\n    multValue: () => Math.pow(VUnlocks.achievementBH.effectOrDefault(1),\r\n      BlackHoles.list.countWhere(bh => bh.isUnlocked)),\r\n    isActive: () => !BlackHoles.arePaused && VUnlocks.achievementBH.canBeApplied && !EternityChallenge(12).isRunning,\r\n    icon: MultiplierTabIcons.ACHIEVEMENT,\r\n  },\r\n  pulsing: {\r\n    name: \"Auto-Discharging Stored Time\",\r\n    multValue: () => (Enslaved.isAutoReleasing\r\n      ? Math.max(Enslaved.autoReleaseSpeed / getGameSpeedupFactor(), 1)\r\n      : getGameSpeedupFactor()),\r\n    isActive: () => Enslaved.canRelease() && Enslaved.isAutoReleasing && !EternityChallenge(12).isRunning,\r\n    icon: MultiplierTabIcons.BH_PULSE,\r\n  },\r\n  singularity: {\r\n    name: \"Singularity Milestone - Game speed based on Singularities\",\r\n    multValue: () => SingularityMilestone.gamespeedFromSingularities.effectOrDefault(1),\r\n    isActive: () => SingularityMilestone.gamespeedFromSingularities.canBeApplied && !EternityChallenge(12).isRunning,\r\n    icon: MultiplierTabIcons.SINGULARITY,\r\n  },\r\n  pelle: {\r\n    name: \"Pelle Upgrade - Repeatable Game speed\",\r\n    multValue: () => PelleUpgrade.timeSpeedMult.effectValue.toNumber(),\r\n    isActive: () => Pelle.isDoomed && !EternityChallenge(12).isRunning,\r\n    icon: MultiplierTabIcons.PELLE,\r\n  },\r\n\r\n  ec12: {\r\n    name: \"Eternity Challenge 12\",\r\n    multValue: () => 0.001 / getGameSpeedupForDisplay(),\r\n    isActive: () => EternityChallenge(12).isRunning,\r\n    icon: MultiplierTabIcons.CHALLENGE(\"eternity\"),\r\n  },\r\n  chargingBH: {\r\n    name: \"Black Hole Charging\",\r\n    // The 0 in multValue is irrelevant; if this upgrade isn't available, the subtab is hidden by 1x total effect\r\n    multValue: () => (Ra.unlocks.autoPulseTime.canBeApplied ? 0.01 : 0),\r\n    isActive: () => Enslaved.isStoringGameTime,\r\n    icon: MultiplierTabIcons.BLACK_HOLE,\r\n  },\r\n  invertedBH: {\r\n    name: \"Inverted Black Hole\",\r\n    multValue: () => player.blackHoleNegative,\r\n    isActive: () => BlackHoles.areNegative,\r\n    icon: MultiplierTabIcons.CHALLENGE(\"eternity\"),\r\n  },\r\n  nerfLaitela: {\r\n    name: \"Lai'tela's Reality\",\r\n    powValue: () => Math.clampMax(Time.thisRealityRealTime.totalMinutes / 10, 1),\r\n    isActive: () => Laitela.isRunning,\r\n    icon: MultiplierTabIcons.GENERIC_LAITELA,\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}