{"ast":null,"code":"export default {\n  name: \"GlyphCleanButtonGroup\",\n\n  data() {\n    return {\n      glyphSacrificeUnlocked: false,\n      hasPerkShop: false,\n      hasFilter: false,\n      inventory: [],\n      isRefining: false,\n      removeCount: 0\n    };\n  },\n\n  computed: {\n    removeString() {\n      if (this.isRefining) return \"Refine\";\n      if (this.glyphSacrificeUnlocked) return \"Sacrifice\";\n      return \"Delete\";\n    },\n\n    autoCleanTooltip() {\n      return `${this.removeString} Glyphs that are worse in every way than\n        enough other Glyphs${this.hasPerkShop ? \" (ignores Music Glyphs)\" : \"\"}`;\n    },\n\n    harshAutoCleanTooltip() {\n      return `${this.removeString} Glyphs that are worse in every way than\n        ANY other Glyph${this.hasPerkShop ? \" (includes Music Glyphs)\" : \"\"}`;\n    },\n\n    deleteRejectedTooltip() {\n      const negativeWarning = AutoGlyphProcessor.hasNegativeEffectScore() ? \" You also have some negative Effect Filter scores; this may remove some Glyphs you normally want to keep!\" : \"\";\n      return this.removeCount === 0 ? `This will not remove any Glyphs, adjust your Filter settings to remove some.` : `This will remove ${quantifyInt(\"Glyph\", this.removeCount)}!${negativeWarning}`;\n    }\n\n  },\n  methods: {\n    update() {\n      this.glyphSacrificeUnlocked = GlyphSacrificeHandler.canSacrifice && !Pelle.isDoomed;\n      this.hasPerkShop = TeresaUnlocks.shop.canBeApplied;\n      this.hasFilter = EffarigUnlock.glyphFilter.isUnlocked;\n      this.inventory = Glyphs.inventory.map(GlyphGenerator.copy);\n      this.isRefining = AutoGlyphProcessor.sacMode === AUTO_GLYPH_REJECT.REFINE || AutoGlyphProcessor.sacMode === AUTO_GLYPH_REJECT.REFINE_TO_CAP;\n      this.removeCount = this.inventory.filter(g => g !== null && g.idx >= Glyphs.protectedSlots && !AutoGlyphProcessor.wouldKeep(g)).length;\n    },\n\n    autoClean() {\n      if (player.options.confirmations.autoClean) {\n        Modal.glyphPurge.show({\n          harsh: false\n        });\n      } else {\n        Glyphs.autoClean(5);\n      }\n    },\n\n    harshAutoClean() {\n      if (player.options.confirmations.autoClean) {\n        Modal.glyphPurge.show({\n          harsh: true\n        });\n      } else {\n        Glyphs.autoClean(1);\n      }\n    },\n\n    deleteAllUnprotected() {\n      if (player.options.confirmations.sacrificeAll) {\n        Modal.deleteAllUnprotectedGlyphs.show();\n      } else {\n        Glyphs.autoClean(0);\n      }\n    },\n\n    deleteAllRejected() {\n      if (player.options.confirmations.sacrificeAll) {\n        Modal.deleteAllRejectedGlyphs.show();\n      } else {\n        Glyphs.deleteAllRejected(true);\n      }\n    },\n\n    slotClass(index) {\n      return index < Glyphs.protectedSlots ? \"c-glyph-inventory__protected-slot\" : \"c-glyph-inventory__slot\";\n    }\n\n  }\n};","map":{"version":3,"sources":["GlyphCleanButtonGroup.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nexport default {\r\n  name: \"GlyphCleanButtonGroup\",\r\n  data() {\r\n    return {\r\n      glyphSacrificeUnlocked: false,\r\n      hasPerkShop: false,\r\n      hasFilter: false,\r\n      inventory: [],\r\n      isRefining: false,\r\n      removeCount: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    removeString() {\r\n      if (this.isRefining) return \"Refine\";\r\n      if (this.glyphSacrificeUnlocked) return \"Sacrifice\";\r\n      return \"Delete\";\r\n    },\r\n    autoCleanTooltip() {\r\n      return `${this.removeString} Glyphs that are worse in every way than\r\n        enough other Glyphs${this.hasPerkShop ? \" (ignores Music Glyphs)\" : \"\"}`;\r\n    },\r\n    harshAutoCleanTooltip() {\r\n      return `${this.removeString} Glyphs that are worse in every way than\r\n        ANY other Glyph${this.hasPerkShop ? \" (includes Music Glyphs)\" : \"\"}`;\r\n    },\r\n    deleteRejectedTooltip() {\r\n      const negativeWarning = AutoGlyphProcessor.hasNegativeEffectScore()\r\n        ? \" You also have some negative Effect Filter scores; this may remove some Glyphs you normally want to keep!\"\r\n        : \"\";\r\n      return this.removeCount === 0\r\n        ? `This will not remove any Glyphs, adjust your Filter settings to remove some.`\r\n        : `This will remove ${quantifyInt(\"Glyph\", this.removeCount)}!${negativeWarning}`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.glyphSacrificeUnlocked = GlyphSacrificeHandler.canSacrifice && !Pelle.isDoomed;\r\n      this.hasPerkShop = TeresaUnlocks.shop.canBeApplied;\r\n      this.hasFilter = EffarigUnlock.glyphFilter.isUnlocked;\r\n      this.inventory = Glyphs.inventory.map(GlyphGenerator.copy);\r\n      this.isRefining = AutoGlyphProcessor.sacMode === AUTO_GLYPH_REJECT.REFINE ||\r\n        AutoGlyphProcessor.sacMode === AUTO_GLYPH_REJECT.REFINE_TO_CAP;\r\n      this.removeCount = this.inventory\r\n        .filter(g => g !== null && g.idx >= Glyphs.protectedSlots && !AutoGlyphProcessor.wouldKeep(g))\r\n        .length;\r\n    },\r\n    autoClean() {\r\n      if (player.options.confirmations.autoClean) {\r\n        Modal.glyphPurge.show({ harsh: false });\r\n      } else {\r\n        Glyphs.autoClean(5);\r\n      }\r\n    },\r\n    harshAutoClean() {\r\n      if (player.options.confirmations.autoClean) {\r\n        Modal.glyphPurge.show({ harsh: true });\r\n      } else {\r\n        Glyphs.autoClean(1);\r\n      }\r\n    },\r\n    deleteAllUnprotected() {\r\n      if (player.options.confirmations.sacrificeAll) {\r\n        Modal.deleteAllUnprotectedGlyphs.show();\r\n      } else {\r\n        Glyphs.autoClean(0);\r\n      }\r\n    },\r\n    deleteAllRejected() {\r\n      if (player.options.confirmations.sacrificeAll) {\r\n        Modal.deleteAllRejectedGlyphs.show();\r\n      } else {\r\n        Glyphs.deleteAllRejected(true);\r\n      }\r\n    },\r\n    slotClass(index) {\r\n      return index < Glyphs.protectedSlots ? \"c-glyph-inventory__protected-slot\" : \"c-glyph-inventory__slot\";\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-if=\"glyphSacrificeUnlocked\"\r\n    class=\"o-glyph-inventory-management-group\"\r\n  >\r\n    <div class=\"l-glyph-sacrifice-options__header\">\r\n      Remove weaker Glyphs:\r\n    </div>\r\n    <button\r\n      class=\"c-glyph-inventory-option\"\r\n      @click=\"autoClean\"\r\n    >\r\n      Purge Glyphs\r\n      <div class=\"c-glyph-inventory-option__tooltip\">\r\n        {{ autoCleanTooltip }}\r\n      </div>\r\n    </button>\r\n    <button\r\n      class=\"c-glyph-inventory-option\"\r\n      @click=\"harshAutoClean\"\r\n    >\r\n      Harsh Purge Glyphs\r\n      <div class=\"c-glyph-inventory-option__tooltip\">\r\n        {{ harshAutoCleanTooltip }}\r\n      </div>\r\n    </button>\r\n    <button\r\n      class=\"c-glyph-inventory-option\"\r\n      @click=\"deleteAllUnprotected\"\r\n    >\r\n      {{ removeString }} all unprotected Glyphs\r\n    </button>\r\n    <button\r\n      v-if=\"hasFilter\"\r\n      class=\"c-glyph-inventory-option\"\r\n      @click=\"deleteAllRejected\"\r\n    >\r\n      {{ removeString }} all Glyphs rejected by filtering\r\n      <div\r\n        class=\"c-glyph-inventory-option__tooltip l-rejected-tooltip\"\r\n      >\r\n        {{ deleteRejectedTooltip }}\r\n      </div>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-rejected-tooltip {\r\n  width: 90%;\r\n  left: 5%;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/glyphs/sidebar"},"metadata":{},"sourceType":"module"}