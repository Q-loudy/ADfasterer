{"ast":null,"code":"/**\r\n * Most of the GameDB entries in this folder follow largely the same structure, but have been split into multiple\r\n * for purposes of organization and ease-of-use. All fields may also be functions which may or may not accept an input\r\n * argument, often having differing behavior based on its presence or absence - more often than not, the lack of an\r\n * input argument will instead calculate the total contribution (eg. not providing a dimension tier will calculate\r\n * the total across all dimensions).\r\n * {\r\n *  @property {String} name               Name to associate with this multiplier/effect\r\n *  @property {String} isBase             Suppresses the leading × in multipliers if true. Primarily\r\n *    exists in order to avoid copy-pasting extensive entries in multValue\r\n *  @property {Decimal} displayOverride If present, displays this string instead of multipliers. This\r\n *    has higher priority than isBase\r\n *  @property {Decimal|Number} fakeValue  Value to be used as a stand-in for a total when this entry\r\n *    is the parent resource of a list of other resources. Mostly used in entries that contribute to a whole differently\r\n *    than how they're further broken down (eg. IP/EP contibuting as multipliers but consisting of currencies)\r\n *  @property {Decimal|Number} multValue  Value for multipliers given by this effect. Note that some\r\n *    entries may have a pow10 applied to them in order to \"undo\" logarithmic scaling in the UI\r\n *  @property {Number} powValue           Numerical value for powers given by this effect\r\n *  @property {Number} dilationEffect     Exponent to use for dilation effect\r\n *  @property {Boolean} isDilated         Denotes if the multiplier is already dilated and needs an \"anti-dilation\"\r\n *    calculation to be applied to make the numbers in the UI correct. Defaults to false\r\n *  @property {Boolean} isActive          Conditional determining if this component should be visible\r\n *  @property {Array String} overlay      String array to be used as HTML for an overlay on the tab; all\r\n *    entries in the array are rendered on top of each other\r\n *  @property {Object} icon               An object containing text and color for the bar that this\r\n *    entry has in the Vue component\r\n * }\r\n */\nexport { multiplierTabValues } from \"./values\";\nexport { multiplierTabTree } from \"./tree\";","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/multiplier-tab/index.js"],"names":["multiplierTabValues","multiplierTabTree"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,mBAAT,QAAoC,UAApC;AACA,SAASC,iBAAT,QAAkC,QAAlC","sourcesContent":["/**\r\n * Most of the GameDB entries in this folder follow largely the same structure, but have been split into multiple\r\n * for purposes of organization and ease-of-use. All fields may also be functions which may or may not accept an input\r\n * argument, often having differing behavior based on its presence or absence - more often than not, the lack of an\r\n * input argument will instead calculate the total contribution (eg. not providing a dimension tier will calculate\r\n * the total across all dimensions).\r\n * {\r\n *  @property {String} name               Name to associate with this multiplier/effect\r\n *  @property {String} isBase             Suppresses the leading × in multipliers if true. Primarily\r\n *    exists in order to avoid copy-pasting extensive entries in multValue\r\n *  @property {Decimal} displayOverride If present, displays this string instead of multipliers. This\r\n *    has higher priority than isBase\r\n *  @property {Decimal|Number} fakeValue  Value to be used as a stand-in for a total when this entry\r\n *    is the parent resource of a list of other resources. Mostly used in entries that contribute to a whole differently\r\n *    than how they're further broken down (eg. IP/EP contibuting as multipliers but consisting of currencies)\r\n *  @property {Decimal|Number} multValue  Value for multipliers given by this effect. Note that some\r\n *    entries may have a pow10 applied to them in order to \"undo\" logarithmic scaling in the UI\r\n *  @property {Number} powValue           Numerical value for powers given by this effect\r\n *  @property {Number} dilationEffect     Exponent to use for dilation effect\r\n *  @property {Boolean} isDilated         Denotes if the multiplier is already dilated and needs an \"anti-dilation\"\r\n *    calculation to be applied to make the numbers in the UI correct. Defaults to false\r\n *  @property {Boolean} isActive          Conditional determining if this component should be visible\r\n *  @property {Array String} overlay      String array to be used as HTML for an overlay on the tab; all\r\n *    entries in the array are rendered on top of each other\r\n *  @property {Object} icon               An object containing text and color for the bar that this\r\n *    entry has in the Vue component\r\n * }\r\n */\r\n\r\nexport { multiplierTabValues } from \"./values\";\r\nexport { multiplierTabTree } from \"./tree\";\r\n"]},"metadata":{},"sourceType":"module"}