{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";\nimport { DC } from \"../../constants\";\nexport const normalAchievements = [{\n  id: 11,\n  name: \"You gotta start somewhere\",\n  description: \"Buy a 1st Antimatter Dimension.\",\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 12,\n  name: \"100 antimatter is a lot\",\n  description: \"Buy a 2nd Antimatter Dimension.\",\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 13,\n  name: \"Half life 3 CONFIRMED\",\n  description: \"Buy a 3rd Antimatter Dimension.\",\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 14,\n  name: \"L4D: Left 4 Dimensions\",\n  description: \"Buy a 4th Antimatter Dimension.\",\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 15,\n  name: \"5 Dimension Antimatter Punch\",\n  description: \"Buy a 5th Antimatter Dimension.\",\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 16,\n  name: \"We couldn't afford 9\",\n\n  get description() {\n    return Enslaved.isRunning ? \"Buy a 6th Antimatter Dimension (they never amount to anything)\" : \"Buy a 6th Antimatter Dimension.\";\n  },\n\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 17,\n  name: \"Not a luck related achievement\",\n  description: \"Buy a 7th Antimatter Dimension.\",\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 18,\n  name: \"90 degrees to infinity\",\n\n  get description() {\n    return Enslaved.isRunning ? \"Buy an 8th Antimatter Dimension (don't get used to it)\" : \"Buy an 8th Antimatter Dimension.\";\n  },\n\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 21,\n  name: \"To infinity!\",\n  description: \"Go Infinite.\",\n  checkRequirement: () => true,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Start with ${formatInt(100)} antimatter.`;\n  },\n\n  effect: 100\n}, {\n  id: 22,\n  name: \"FAKE NEWS!\",\n\n  get description() {\n    return `Encounter ${formatInt(50)} different news messages.`;\n  },\n\n  checkRequirement: () => NewsHandler.uniqueTickersSeen >= 50,\n  checkEvent: GAME_EVENT.REALITY_RESET_AFTER\n}, {\n  id: 23,\n  name: \"The 9th Dimension is a lie\",\n\n  get description() {\n    return `Have exactly ${formatInt(99)} 8th Antimatter Dimensions.`;\n  },\n\n  checkRequirement: () => AntimatterDimension(8).amount.eq(99),\n\n  get reward() {\n    return `8th Antimatter Dimensions are ${formatPercents(0.1)} stronger.`;\n  },\n\n  effect: 1.1\n}, {\n  id: 24,\n  name: \"Antimatter Apocalypse\",\n\n  get description() {\n    return `Get over ${format(DC.E80)} antimatter.`;\n  },\n\n  checkRequirement: () => Currency.antimatter.exponent >= 80,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 25,\n  name: \"Boosting to the max\",\n\n  get description() {\n    return `Buy ${formatInt(10)} Dimension Boosts.`;\n  },\n\n  checkRequirement: () => DimBoost.purchasedBoosts >= 10,\n  checkEvent: GAME_EVENT.DIMBOOST_AFTER\n}, {\n  id: 26,\n  name: \"You got past The Big Wall\",\n  description: \"Buy an Antimatter Galaxy.\",\n  checkRequirement: () => true,\n  checkEvent: GAME_EVENT.GALAXY_RESET_BEFORE\n}, {\n  id: 27,\n  name: \"Double Galaxy\",\n\n  get description() {\n    return `Buy ${formatInt(2)} Antimatter Galaxies.`;\n  },\n\n  checkRequirement: () => player.galaxies >= 2,\n  checkEvent: GAME_EVENT.GALAXY_RESET_AFTER\n}, {\n  id: 28,\n  name: \"There's no point in doing that...\",\n\n  get description() {\n    return `Buy a single 1st Antimatter Dimension when you have over ${format(DC.E150)} of them.`;\n  },\n\n  checkRequirement: () => AntimatterDimension(1).amount.exponent >= 150,\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\n\n  get reward() {\n    return `1st Antimatter Dimensions are ${formatPercents(0.1)} stronger.`;\n  },\n\n  effect: 1.1\n}, {\n  id: 31,\n  name: \"I forgot to nerf that\",\n\n  get description() {\n    return `Get any Antimatter Dimension multiplier over ${formatX(DC.E31)}.`;\n  },\n\n  checkRequirement: () => AntimatterDimensions.all.some(x => x.multiplier.exponent >= 31),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `1st Antimatter Dimensions are ${formatPercents(0.05)} stronger.`;\n  },\n\n  effect: 1.05\n}, {\n  id: 32,\n  name: \"The Gods are pleased\",\n\n  get description() {\n    return `Get over ${formatX(600)} from Dimensional Sacrifice outside of Challenge 8.`;\n  },\n\n  checkRequirement: () => !NormalChallenge(8).isOnlyActiveChallenge && Sacrifice.totalBoost.gte(600),\n  checkEvent: GAME_EVENT.SACRIFICE_RESET_AFTER,\n\n  get reward() {\n    return `Dimensional Sacrifice is stronger.\n      ${Sacrifice.getSacrificeDescription({\n      \"Achievement32\": false,\n      \"Achievement57\": false,\n      \"Achievement88\": false\n    })} ➜\n      ${Sacrifice.getSacrificeDescription({\n      \"Achievement32\": true,\n      \"Achievement57\": false,\n      \"Achievement88\": false\n    })}`;\n  },\n\n  effect: 0.1\n}, {\n  id: 33,\n  name: \"That's a lot of infinites\",\n\n  get description() {\n    return `Reach Infinity ${formatInt(10)} times.`;\n  },\n\n  checkRequirement: () => Currency.infinities.gte(10),\n  checkEvent: GAME_EVENT.BIG_CRUNCH_AFTER\n}, {\n  id: 34,\n  name: \"You didn't need it anyway\",\n  description: \"Infinity without having any 8th Antimatter Dimensions.\",\n  checkRequirement: () => AntimatterDimension(8).totalAmount.eq(0),\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Dimensions 1-7 are ${formatPercents(0.02)} stronger.`;\n  },\n\n  effect: 1.02\n}, {\n  id: 35,\n  name: \"Don't you dare sleep\",\n\n  get description() {\n    return `Be offline for a period of over ${formatInt(6)} hours (game real time).`;\n  },\n\n  checkRequirement: () => (Date.now() - player.lastUpdate) * getGlobalSpeedFactor() >= 21600000,\n  checkEvent: GAME_EVENT.GAME_TICK_BEFORE\n}, {\n  id: 36,\n  name: \"Claustrophobic\",\n\n  get description() {\n    return `Infinity with just ${formatInt(1)} Antimatter Galaxy. (Your Antimatter Galaxies are reset on Infinity.)`;\n  },\n\n  checkRequirement: () => player.galaxies === 1,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Multiply starting tick speed by ${format(1.02, 2, 2)}.`;\n  },\n\n  effect: 1 / 1.02\n}, {\n  id: 37,\n  name: \"That's FAST!\",\n\n  get description() {\n    return `Infinity in under ${formatInt(2)} hours.`;\n  },\n\n  checkRequirement: () => Time.thisInfinityRealTime.totalHours <= 2,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Start with ${formatInt(5000)} antimatter.`;\n  },\n\n  effect: 5000\n}, {\n  id: 38,\n  name: \"I don't believe in Gods\",\n\n  get description() {\n    return `Buy an Antimatter Galaxy without Dimensional Sacrificing.\n        (Your Antimatter Galaxies are reset on Infinity.)`;\n  },\n\n  checkRequirement: () => player.requirementChecks.infinity.noSacrifice,\n  checkEvent: GAME_EVENT.GALAXY_RESET_BEFORE\n}, {\n  id: 41,\n  name: \"No DLC required\",\n\n  get description() {\n    return `Buy ${formatInt(16)} Infinity Upgrades.`;\n  },\n\n  checkRequirement: () => player.infinityUpgrades.size >= 16,\n  checkEvent: [GAME_EVENT.INFINITY_UPGRADE_BOUGHT, GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT],\n\n  get reward() {\n    return `Unlock two new Infinity Upgrades- ${formatX(2)} IP multiplier and offline IP generation.`;\n  }\n\n}, {\n  id: 42,\n  name: \"Super Sanic\",\n\n  get description() {\n    return `Have antimatter per second exceed your current antimatter above ${format(DC.E63)}.`;\n  },\n\n  checkRequirement: () => Currency.antimatter.exponent >= 63 && Currency.antimatter.productionPerSecond.gt(Currency.antimatter.value),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 43,\n  name: \"How the antitables have turned..\",\n  description: \"Get the 8th Antimatter Dimension multiplier to be highest, 7th Antimatter Dimension multiplier \" + \" second highest, etc.\",\n  checkRequirement: () => {\n    const multipliers = Array.range(1, 8).map(tier => AntimatterDimension(tier).multiplier);\n\n    for (let i = 0; i < multipliers.length - 1; i++) {\n      if (multipliers[i].gte(multipliers[i + 1])) return false;\n    }\n\n    return true;\n  },\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Each Antimatter Dimension gains a boost proportional to tier\n      (8th gets ${formatPercents(0.08)}, 7th gets ${formatPercents(0.07)}, etc.)`;\n  }\n\n}, {\n  id: 44,\n  name: \"Over in 30 Seconds\",\n\n  get description() {\n    return `Have antimatter per second exceed your current antimatter\n      for ${formatInt(30)} consecutive seconds (game game time).`;\n  },\n\n  checkRequirement: () => AchievementTimers.marathon1.check(Currency.antimatter.productionPerSecond.gt(Currency.antimatter.value), 30),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 45,\n  name: \"Faster than a potato\",\n\n  get description() {\n    return `Get more than ${format(DC.E29)} ticks per second.`;\n  },\n\n  checkRequirement: () => Tickspeed.current.exponent <= -26,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Multiply starting tickspeed by ${formatX(1.02, 0, 2)}.`;\n  },\n\n  effect: 0.98\n}, {\n  id: 46,\n  name: \"Multidimensional\",\n\n  get description() {\n    return `Reach ${format(DC.E12)} of all Antimatter Dimensions except the 8th.`;\n  },\n\n  checkRequirement: () => AntimatterDimension(7).amount.exponent >= 12,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 47,\n  name: \"Daredevil\",\n\n  get description() {\n    return `Complete ${formatInt(3)} Normal Challenges.`;\n  },\n\n  checkRequirement: () => NormalChallenges.all.countWhere(c => c.isCompleted) >= 3,\n  checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT]\n}, {\n  id: 48,\n  name: \"Antichallenged\",\n\n  get description() {\n    return `Complete all ${formatInt(12)} Normal Challenges.`;\n  },\n\n  checkRequirement: () => NormalChallenges.all.countWhere(c => !c.isCompleted) === 0,\n  checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT],\n\n  get reward() {\n    return `All Dimensions are ${formatPercents(0.1)} stronger.`;\n  },\n\n  effect: 1.1\n}, {\n  id: 51,\n  name: \"Limit Break\",\n  description: \"Break Infinity.\",\n  checkRequirement: () => player.break,\n  checkEvent: [GAME_EVENT.BREAK_INFINITY, GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT]\n}, {\n  id: 52,\n  name: \"Age of Automation\",\n  description: \"Max the interval for Antimatter Dimension and Tickspeed upgrade autobuyers.\",\n  checkRequirement: () => Autobuyer.antimatterDimension.zeroIndexed.concat(Autobuyer.tickspeed).every(a => a.isUnlocked && a.hasMaxedInterval),\n  checkEvent: [GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT]\n}, {\n  id: 53,\n  name: \"Definitely not worth it\",\n  description: \"Max the intervals for all normal autobuyers.\",\n  // The upgradeable autobuyers are dimensions, tickspeed, dimension boost,\n  // galaxy, and big crunch (the ones you get from normal challenges).\n  // We don't count autobuyers which can be upgraded via e.g. perks as upgradeable.\n  checkRequirement: () => Autobuyers.upgradeable.every(a => a.isUnlocked && a.hasMaxedInterval),\n  checkEvent: [GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT]\n}, {\n  id: 54,\n  name: \"That's FASTER!\",\n\n  get description() {\n    return `Infinity in ${formatInt(10)} minutes or less.`;\n  },\n\n  checkRequirement: () => Time.thisInfinityRealTime.totalMinutes <= 10,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Start with ${format(5e5)} antimatter.`;\n  },\n\n  effect: 5e5\n}, {\n  id: 55,\n  name: \"Forever isn't that long\",\n\n  get description() {\n    return `Infinity in ${formatInt(1)} minute or less.`;\n  },\n\n  checkRequirement: () => Time.thisInfinityRealTime.totalMinutes <= 1,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Start with ${format(5e10)} antimatter.`;\n  },\n\n  effect: 5e10\n}, {\n  id: 56,\n  name: \"Many Deaths\",\n\n  get description() {\n    return `Complete the 2nd Antimatter Dimension Autobuyer Challenge in ${formatInt(3)} minutes or less.`;\n  },\n\n  checkRequirement: () => NormalChallenge(2).isOnlyActiveChallenge && Time.thisInfinityRealTime.totalMinutes <= 3,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `All Antimatter Dimensions are stronger in the first ${formatInt(3)} minutes of Infinities.`;\n  },\n\n  effect: () => Math.max(6 / (Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() + 3), 1),\n  effectCondition: () => Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() < 3,\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 57,\n  name: \"Gift from the Gods\",\n\n  get description() {\n    return `Complete the 8th Antimatter Dimension Autobuyer Challenge in ${formatInt(3)} minutes or less.`;\n  },\n\n  checkRequirement: () => NormalChallenge(8).isOnlyActiveChallenge && Time.thisInfinityRealTime.totalMinutes <= 3,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Dimensional Sacrifice is stronger.\n      ${Sacrifice.getSacrificeDescription({\n      \"Achievement32\": true,\n      \"Achievement57\": false,\n      \"Achievement88\": false\n    })} ➜\n      ${Sacrifice.getSacrificeDescription({\n      \"Achievement32\": true,\n      \"Achievement57\": true,\n      \"Achievement88\": false\n    })}`;\n  },\n\n  effect: 0.1\n}, {\n  id: 58,\n  name: \"This is fine.\",\n\n  get description() {\n    return `Complete the Tickspeed Autobuyer Challenge in ${formatInt(3)} minutes or less.`;\n  },\n\n  checkRequirement: () => NormalChallenge(9).isOnlyActiveChallenge && Time.thisInfinityRealTime.totalMinutes <= 3,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Increase the multiplier for buying ${formatInt(10)} Antimatter Dimensions by +${formatPercents(0.01)}.`;\n  },\n\n  effect: 1.01\n}, {\n  id: 61,\n  name: \"Bulked Up\",\n\n  get description() {\n    return `Get all of your Antimatter Dimension Autobuyer bulk amounts to\n        ${formatInt(Autobuyer.antimatterDimension.bulkCap)}.`;\n  },\n\n  checkRequirement: () => Autobuyer.antimatterDimension.zeroIndexed.every(x => x.hasMaxedBulk),\n  checkEvent: [GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT, GAME_EVENT.SAVE_CONVERTED_FROM_PREVIOUS_VERSION],\n  reward: \"Dimension Autobuyer bulks are unlimited.\"\n}, {\n  id: 62,\n  name: \"Oh, hey... You're still here?\",\n\n  get description() {\n    return `Reach ${format(DC.E8)} Infinity Points per minute.`;\n  },\n\n  checkRequirement: () => Player.bestRunIPPM.exponent >= 8,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_AFTER\n}, {\n  id: 63,\n  name: \"A new beginning\",\n  description: \"Begin generation of Infinity Power.\",\n  checkRequirement: () => Currency.infinityPower.gt(1),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 64,\n  name: \"Zero Deaths\",\n  description: \"Get to Infinity without Dimension Boosts or Antimatter Galaxies while in a Normal Challenge.\",\n  checkRequirement: () => player.galaxies === 0 && DimBoost.purchasedBoosts === 0 && NormalChallenge.isRunning,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Antimatter Dimensions 1-4 are ${formatPercents(0.25)} stronger.`;\n  },\n\n  effect: 1.25\n}, {\n  id: 65,\n  name: \"Not-so-challenging\",\n\n  get description() {\n    return `Get the sum of all of your Normal Challenge times under ${formatInt(3)} minutes.`;\n  },\n\n  checkRequirement: () => Time.challengeSum.totalMinutes < 3,\n  checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER],\n\n  get reward() {\n    return `All Antimatter Dimensions are stronger in the first ${formatInt(3)} minutes of Infinities,\n      but only in Challenges.`;\n  },\n\n  effect: () => Player.isInAnyChallenge ? Math.max(4 / (Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() + 1), 1) : 1,\n  effectCondition: () => Player.isInAnyChallenge && Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() < 3,\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 66,\n  name: \"Faster than a squared potato\",\n\n  get description() {\n    return `Get more than ${format(DC.E58)} ticks per second.`;\n  },\n\n  checkRequirement: () => Tickspeed.current.exponent <= -55,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Multiply starting tickspeed by ${formatX(1.02, 0, 2)}.`;\n  },\n\n  effect: 0.98\n}, {\n  id: 67,\n  name: \"Infinitely Challenging\",\n  description: \"Complete an Infinity Challenge.\",\n  checkRequirement: () => InfinityChallenges.completed.length > 0,\n  checkEvent: [GAME_EVENT.INFINITY_CHALLENGE_COMPLETED, GAME_EVENT.REALITY_RESET_AFTER]\n}, {\n  id: 68,\n  name: \"You did this again just for the achievement right?\",\n\n  get description() {\n    return `Complete the 3rd Antimatter Dimension Autobuyer Challenge in ${formatInt(10)} seconds or less.`;\n  },\n\n  checkRequirement: () => NormalChallenge(3).isOnlyActiveChallenge && Time.thisInfinityRealTime.totalSeconds <= 10,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `1st Antimatter Dimensions are ${formatPercents(0.5)} stronger.`;\n  },\n\n  effect: 1.5\n}, {\n  id: 71,\n  name: \"ERROR 909: Dimension not found\",\n  description: `Get to Infinity with only a single 1st Antimatter Dimension without Dimension Boosts\n      or Antimatter Galaxies, while in the 2nd Antimatter Dimension Autobuyer Challenge.`,\n  checkRequirement: () => NormalChallenge(2).isOnlyActiveChallenge && AntimatterDimension(1).amount.eq(1) && DimBoost.purchasedBoosts === 0 && player.galaxies === 0,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `1st Antimatter Dimensions are ${formatInt(3)} times stronger.`;\n  },\n\n  effect: 3\n}, {\n  id: 72,\n  name: \"Can't hold all these infinities\",\n\n  get description() {\n    return `Get all Antimatter Dimension multipliers over ${formatX(Decimal.NUMBER_MAX_VALUE, 1)}.`;\n  },\n\n  checkRequirement: () => AntimatterDimensions.all.every(x => x.multiplier.gte(Decimal.NUMBER_MAX_VALUE)),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `All Antimatter Dimensions are ${formatPercents(0.1)} stronger.`;\n  },\n\n  effect: 1.1\n}, {\n  id: 73,\n  name: \"THIS ACHIEVEMENT DOESN'T EXIST\",\n\n  get description() {\n    return `Get ${formatPostBreak(DC.D9_9999E9999, 4)} antimatter.`;\n  },\n\n  checkRequirement: () => Currency.antimatter.gte(DC.D9_9999E9999),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Antimatter Dimensions gain a multiplier based on current antimatter.\",\n  effect: () => Currency.antimatter.value.pow(0.00002).plus(1),\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 74,\n  name: \"Not a second lost\",\n\n  get description() {\n    return `Get the sum of all best Normal Challenge times under ${formatInt(5)} seconds.`;\n  },\n\n  checkRequirement: () => Time.challengeSum.totalSeconds < 5,\n  checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER],\n\n  get reward() {\n    return `All Antimatter Dimensions are ${formatPercents(0.4)} stronger, but only in challenges.`;\n  },\n\n  effect: 1.4,\n  effectCondition: () => Player.isInAnyChallenge\n}, {\n  id: 75,\n  name: \"NEW DIMENSIONS???\",\n  description: \"Unlock the 4th Infinity Dimension.\",\n  checkRequirement: () => InfinityDimension(4).isUnlocked,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Your Achievement bonus affects Infinity Dimensions.\",\n  effect: () => Achievements.power\n}, {\n  id: 76,\n  name: \"One for each dimension\",\n\n  get description() {\n    return `Play for ${formatInt(8)} days (game game time).`;\n  },\n\n  checkRequirement: () => Time.totalTimePlayed.totalDays >= 8,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Extremely small multiplier to Antimatter Dimensions based on time played.\",\n  effect: () => Math.max(Math.pow(Time.totalTimePlayed.totalDays / 2, 0.05), 1),\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 77,\n  name: \"1 Million is a lot\",\n\n  get description() {\n    return `Reach ${format(1e6)} Infinity Power.`;\n  },\n\n  checkRequirement: () => Currency.infinityPower.exponent >= 6,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 78,\n  name: \"Blink of an eye\",\n\n  get description() {\n    return `Infinity in under ${formatInt(250)}ms.`;\n  },\n\n  checkRequirement: () => Time.thisInfinityRealTime.totalMilliseconds <= 250,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Start with ${format(5e25)} antimatter.`;\n  },\n\n  effect: 5e25\n}, {\n  id: 81,\n  name: \"Game Design Is My Passion\",\n\n  get description() {\n    return `Beat Infinity Challenge 5 in ${formatInt(15)} seconds or less.`;\n  },\n\n  checkRequirement: () => InfinityChallenge(5).isRunning && Time.thisInfinityRealTime.totalSeconds <= 15,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE\n}, {\n  id: 82,\n  name: \"Anti-antichallenged\",\n\n  get description() {\n    return `Complete all ${formatInt(8)} Infinity Challenges.`;\n  },\n\n  checkRequirement: () => InfinityChallenges.completed.length === 8,\n  checkEvent: [GAME_EVENT.INFINITY_CHALLENGE_COMPLETED, GAME_EVENT.REALITY_RESET_AFTER]\n}, {\n  id: 83,\n  name: \"YOU CAN GET 50 GALAXIES?!?!\",\n\n  get description() {\n    return `Get ${formatInt(50)} Antimatter Galaxies.`;\n  },\n\n  checkRequirement: () => player.galaxies >= 50,\n  checkEvent: GAME_EVENT.GALAXY_RESET_AFTER,\n\n  get reward() {\n    return `Tickspeed is just over ${formatPercents(0.05)} faster per Antimatter Galaxy.`;\n  },\n\n  effect: () => DC.D0_95.pow(player.galaxies),\n  formatEffect: value => `${formatX(value.recip(), 2, 2)}`\n}, {\n  id: 84,\n  name: \"I got a few to spare\",\n\n  get description() {\n    return `Reach ${formatPostBreak(\"1e35000\")} antimatter.`;\n  },\n\n  checkRequirement: () => Currency.antimatter.exponent >= 35000,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Antimatter Dimensions are stronger the more unspent antimatter you have.\",\n  effect: () => Currency.antimatter.value.pow(0.00002).plus(1),\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 85,\n  name: \"ALL YOUR IP ARE BELONG TO US\",\n\n  get description() {\n    return `Big Crunch for ${format(DC.E150)} Infinity Points.`;\n  },\n\n  checkRequirement: () => gainedInfinityPoints().exponent >= 150,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Additional ${formatX(4)} multiplier to Infinity Points.`;\n  },\n\n  effect: 4\n}, {\n  id: 86,\n  name: \"Do you even bend time bro?\",\n\n  get description() {\n    return `Reach ${formatX(1000)} faster per Tickspeed upgrade.`;\n  },\n\n  checkRequirement: () => Tickspeed.multiplier.recip().gte(1000),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `All Galaxies are ${formatPercents(0.01)} stronger.`;\n  },\n\n  effect: 1.01\n}, {\n  id: 87,\n  name: \"2 MILLION INFINITIES\",\n\n  get description() {\n    return `Infinity ${format(DC.D2E6)} times.`;\n  },\n\n  checkRequirement: () => Currency.infinities.gt(DC.D2E6),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Infinities more than ${formatInt(5)} seconds long\n      give ${formatX(250)} more Infinities.`;\n  },\n\n  effect: 250,\n  effectCondition: () => Time.thisInfinity.totalSeconds > 5\n}, {\n  id: 88,\n  name: \"Yet another infinity reference\",\n\n  get description() {\n    return `Get a ${formatX(Decimal.NUMBER_MAX_VALUE, 1, 0)} multiplier in a single Dimensional Sacrifice.`;\n  },\n\n  checkRequirement: () => Sacrifice.nextBoost.gte(Decimal.NUMBER_MAX_VALUE),\n  checkEvent: GAME_EVENT.SACRIFICE_RESET_BEFORE,\n\n  get reward() {\n    return `Dimensional Sacrifice is stronger.\n      ${Sacrifice.getSacrificeDescription({\n      \"Achievement32\": true,\n      \"Achievement57\": true,\n      \"Achievement88\": false\n    })} ➜\n      ${Sacrifice.getSacrificeDescription({\n      \"Achievement32\": true,\n      \"Achievement57\": true,\n      \"Achievement88\": true\n    })}`;\n  },\n\n  effect: 0.1\n}, {\n  id: 91,\n  name: \"Ludicrous Speed\",\n\n  get description() {\n    return `Big Crunch for ${format(DC.E200)} Infinity Points in ${formatInt(2)} seconds or less.`;\n  },\n\n  checkRequirement: () => gainedInfinityPoints().exponent >= 200 && Time.thisInfinityRealTime.totalSeconds <= 2,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `All Antimatter Dimensions are significantly stronger in the\n      first ${formatInt(5)} seconds of Infinities.`;\n  },\n\n  effect: () => Math.max((5 - Time.thisInfinity.totalSeconds / getGlobalSpeedFactor()) * 60, 1),\n  effectCondition: () => Time.thisInfinity.totalSeconds / getGlobalSpeedFactor() < 5,\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 92,\n  name: \"I brake for NOBODY!\",\n\n  get description() {\n    return `Big Crunch for ${format(DC.E250)} Infinity Points in ${formatInt(20)} seconds or less.`;\n  },\n\n  checkRequirement: () => gainedInfinityPoints().exponent >= 250 && Time.thisInfinityRealTime.totalSeconds <= 20,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `All Antimatter Dimensions are significantly stronger in the\n      first ${formatInt(60)} seconds of Infinities.`;\n  },\n\n  effect: () => Math.max((1 - Time.thisInfinity.totalMinutes / getGlobalSpeedFactor()) * 100, 1),\n  effectCondition: () => Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() < 1,\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 93,\n  name: \"MAXIMUM OVERDRIVE\",\n\n  get description() {\n    return `Big Crunch for ${format(DC.E300)} Infinity Points.`;\n  },\n\n  checkRequirement: () => gainedInfinityPoints().exponent >= 300,\n  checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\n\n  get reward() {\n    return `Additional ${formatX(4)} multiplier to Infinity Points.`;\n  },\n\n  effect: 4\n}, {\n  id: 94,\n  name: \"4.3333 minutes of Infinity\",\n\n  get description() {\n    return `Reach ${format(DC.E260)} Infinity Power.`;\n  },\n\n  checkRequirement: () => Currency.infinityPower.exponent >= 260,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Double Infinity Power gain.\",\n  effect: 2\n}, {\n  id: 95,\n  name: \"Is this safe?\",\n\n  get description() {\n    return `Gain ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} Replicanti in ${formatInt(1)} hour.`;\n  },\n\n  get reward() {\n    return `You keep your Replicanti and ${formatInt(1)} Replicanti Galaxy on Infinity.`;\n  },\n\n  checkRequirement: () => (Replicanti.amount.eq(Decimal.NUMBER_MAX_VALUE) || player.replicanti.galaxies > 0) && Time.thisInfinityRealTime.totalHours <= 1,\n  checkEvent: GAME_EVENT.REPLICANTI_TICK_AFTER\n}, {\n  id: 96,\n  name: \"Time is relative\",\n  description: \"Go Eternal.\",\n  checkRequirement: () => true,\n  checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\n}, {\n  id: 97,\n  name: \"Like jumping on a lego\",\n\n  get description() {\n    return `Get the sum of Infinity Challenge times under ${format(6.66, 2, 2)} seconds.`;\n  },\n\n  checkRequirement: () => Time.infinityChallengeSum.totalSeconds < 6.66,\n  checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER]\n}, {\n  id: 98,\n  name: \"0 degrees from Infinity\",\n  description: \"Unlock the 8th Infinity Dimension.\",\n  checkRequirement: () => InfinityDimension(8).isUnlocked,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 101,\n  name: \"8 nobody got time for that\",\n  description: \"Eternity without buying Antimatter Dimensions 1-7.\",\n  checkRequirement: () => player.requirementChecks.eternity.onlyAD8,\n  checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\n}, {\n  id: 102,\n  name: \"This mile took an eternity\",\n  description: \"Get all Eternity milestones.\",\n  checkRequirement: () => EternityMilestone.all.every(m => m.isReached),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 103,\n  name: \"Tätä saavutusta ei ole olemassa II\",\n\n  get description() {\n    return `Reach ${formatPostBreak(DC.D9_99999E999, 5, 0)} Infinity Points.`;\n  },\n\n  checkRequirement: () => Currency.infinityPoints.exponent >= 1000,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Make the Infinity Point formula better. log(x)/${formatInt(308)} ➜ log(x)/${formatFloat(307.8, 1)}`;\n  },\n\n  effect: 307.8\n}, {\n  id: 104,\n  name: \"That wasn't an eternity\",\n\n  get description() {\n    return `Eternity in under ${formatInt(30)} seconds.`;\n  },\n\n  checkRequirement: () => Time.thisEternity.totalSeconds / getGlobalSpeedFactor() <= 30,\n  checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE,\n\n  get reward() {\n    return `Start Eternities with ${format(5e25)} Infinity Points.`;\n  },\n\n  effect: 5e25\n}, {\n  id: 105,\n  name: \"Infinite Time\",\n\n  get description() {\n    return `Have ${formatInt(308)} Tickspeed upgrades from Time Dimensions.`;\n  },\n\n  checkRequirement: () => player.totalTickGained >= 308,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Time Dimensions gain a multiplier based on tickspeed.\",\n  effect: () => Tickspeed.perSecond.pow(0.000005),\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 106,\n  name: \"The swarm\",\n\n  get description() {\n    return `Get ${formatInt(10)} Replicanti Galaxies in ${formatInt(15)} seconds.`;\n  },\n\n  checkRequirement: () => Replicanti.galaxies.total >= 10 && Time.thisInfinity.totalSeconds / getGlobalSpeedFactor() <= 15,\n  checkEvent: GAME_EVENT.REPLICANTI_TICK_AFTER\n}, {\n  id: 107,\n  name: \"Do you really need a guide for this?\",\n\n  get description() {\n    return `Eternity with less than ${formatInt(10)} Infinities.`;\n  },\n\n  checkRequirement: () => Currency.infinities.lt(10),\n  checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\n}, {\n  id: 108,\n  name: \"We COULD afford 9\",\n\n  get description() {\n    return `Eternity with exactly ${formatInt(9)} Replicanti. Tip: Find a way to slow that down.`;\n  },\n\n  checkRequirement: () => Replicanti.amount.round().eq(9),\n  checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\n}, {\n  id: 111,\n  name: \"Yo dawg, I heard you liked infinities...\",\n\n  get description() {\n    return `Have all your Infinities in your past ${formatInt(10)} Infinities be at least\n      ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} times higher Infinity Points than the previous one.`;\n  },\n\n  checkRequirement: () => {\n    if (player.records.recentInfinities.some(i => i[0] === Number.MAX_VALUE)) return false;\n    const infinities = player.records.recentInfinities.map(run => run[2]);\n\n    for (let i = 0; i < infinities.length - 1; i++) {\n      if (infinities[i].lt(infinities[i + 1].times(Decimal.NUMBER_MAX_VALUE))) return false;\n    }\n\n    return true;\n  },\n  checkEvent: GAME_EVENT.BIG_CRUNCH_AFTER,\n  reward: \"Your antimatter doesn't reset on Dimension Boosts or Antimatter Galaxies.\"\n}, {\n  id: 112,\n  name: \"Never again\",\n\n  get description() {\n    return `Get the sum of Infinity Challenge times below ${formatInt(750)}ms.`;\n  },\n\n  checkRequirement: () => Time.infinityChallengeSum.totalMilliseconds < 750,\n  checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER]\n}, {\n  id: 113,\n  name: \"Eternities are the new infinity\",\n\n  get description() {\n    return `Eternity in under ${formatInt(250)}ms.`;\n  },\n\n  checkRequirement: () => Time.thisEternity.totalMilliseconds / getGlobalSpeedFactor() <= 250,\n  checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE,\n\n  get reward() {\n    return `Gain ${formatX(2)} more Eternities.`;\n  },\n\n  effect: 2\n}, {\n  id: 114,\n  name: \"You're a mistake\",\n  description: \"Fail an Eternity Challenge.\",\n  checkRequirement: () => true,\n  checkEvent: GAME_EVENT.CHALLENGE_FAILED,\n  reward: \"A fading sense of accomplishment.\",\n  effect: () => \"Sense of accomplishment (fading)\"\n}, {\n  id: 115,\n  name: \"I wish I had gotten 7 eternities\",\n  description: \"Start an Infinity Challenge inside an Eternity Challenge.\",\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 116,\n  name: \"Do I really need to infinity\",\n\n  get description() {\n    return `Eternity with only ${formatInt(1)} Infinity.`;\n  },\n\n  checkRequirement: () => Currency.infinities.lte(1),\n  checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE,\n  reward: \"Multiplier to Infinity Points based on Infinities.\",\n  effect: () => Decimal.pow(Currency.infinitiesTotal.value.clampMin(1), LOG10_2 / 4).powEffectOf(TimeStudy(31)),\n  cap: () => Effarig.eternityCap,\n  formatEffect: value => {\n    // Since TS31 is already accounted for in the effect prop, we need to \"undo\" it to display the base value here\n    const mult = formatX(value, 2, 2);\n    return TimeStudy(31).canBeApplied ? `${formatX(value.pow(1 / TimeStudy(31).effectValue), 2, 1)} (After TS31: ${mult})` : mult;\n  }\n}, {\n  id: 117,\n  name: \"Costco sells Dimboosts now!\",\n\n  get description() {\n    return `Bulk buy ${formatInt(750)} Dimension Boosts at once.`;\n  },\n\n  checkRequirement: ([bulk]) => bulk >= 750,\n  checkEvent: GAME_EVENT.DIMBOOST_AFTER,\n\n  get reward() {\n    return `The multiplier from Dimension Boosts to Antimatter Dimensions is ${formatPercents(0.01)} higher.`;\n  },\n\n  effect: 1.01\n}, {\n  id: 118,\n  name: \"IT'S OVER 9000\",\n\n  get description() {\n    return `Get a total Dimensional Sacrifice multiplier of ${formatPostBreak(DC.E9000)}.`;\n  },\n\n  checkRequirement: () => Sacrifice.totalBoost.exponent >= 9000,\n  checkEvent: GAME_EVENT.SACRIFICE_RESET_AFTER,\n  reward: `Dimensional Sacrifice doesn't reset your Antimatter Dimensions\n      and the Autobuyer activates every tick if turned on.`\n}, {\n  id: 121,\n  name: \"Can you get infinite IP?\",\n\n  get description() {\n    return `Reach ${formatPostBreak(\"1e30008\")} Infinity Points.`;\n  },\n\n  checkRequirement: () => Currency.infinityPoints.exponent >= 30008,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 122,\n  name: \"You're already dead.\",\n  description: \"Eternity without buying Antimatter Dimensions 2-8.\",\n  checkRequirement: () => player.requirementChecks.eternity.onlyAD1,\n  checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\n}, {\n  id: 123,\n  name: \"5 more eternities until the update\",\n\n  get description() {\n    return `Complete ${formatInt(50)} unique Eternity Challenge tiers.`;\n  },\n\n  checkRequirement: () => EternityChallenges.completions >= 50,\n  checkEvent: GAME_EVENT.ETERNITY_RESET_AFTER\n}, {\n  id: 124,\n  name: \"Long lasting relationship\",\n\n  get description() {\n    return `Have your Infinity Power per second exceed your Infinity Power\n      for ${formatInt(60)} consecutive seconds during a single Infinity.`;\n  },\n\n  checkRequirement: () => AchievementTimers.marathon2.check(!EternityChallenge(7).isRunning && InfinityDimension(1).productionPerSecond.gt(Currency.infinityPower.value), 60),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 125,\n  name: \"Like feasting on a behind\",\n\n  get description() {\n    return `Reach ${format(DC.E90)} Infinity Points without having any Infinities\n      or any 1st Antimatter Dimensions in your current Eternity.`;\n  },\n\n  checkRequirement: () => Currency.infinityPoints.exponent >= 90 && player.requirementChecks.eternity.noAD1 && Currency.infinities.eq(0),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Infinity Point multiplier based on time spent this Infinity.\",\n\n  effect() {\n    const thisInfinity = Time.thisInfinity.totalSeconds * 10 + 1;\n    return DC.D2.pow(Math.log(thisInfinity) * Math.min(Math.pow(thisInfinity, 0.11), 500));\n  },\n\n  cap: () => Effarig.eternityCap,\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 126,\n  name: \"Popular music\",\n\n  get description() {\n    return `Have ${formatInt(180)} times more Replicanti Galaxies than Antimatter Galaxies.`;\n  },\n\n  checkRequirement: () => Replicanti.galaxies.total >= 180 * player.galaxies && player.galaxies > 0,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Replicanti Galaxies divide your Replicanti by ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)}\n      instead of resetting them to ${formatInt(1)}.`;\n  }\n\n}, {\n  id: 127,\n  name: \"But I wanted another prestige layer...\",\n\n  get description() {\n    return `Reach ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} Eternity Points.`;\n  },\n\n  checkRequirement: () => Currency.eternityPoints.gte(Decimal.NUMBER_MAX_VALUE),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 128,\n  name: \"What do I have to do to get rid of you\",\n\n  get description() {\n    return `Reach ${formatPostBreak(\"1e22000\")} Infinity Points without any Time Studies.`;\n  },\n\n  checkRequirement: () => Currency.infinityPoints.exponent >= 22000 && player.timestudy.studies.length === 0,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Time Dimensions are multiplied by the number of Time Studies you have.\",\n  effect: () => Math.max(player.timestudy.studies.length, 1),\n  formatEffect: value => `${formatX(value)}`\n}, {\n  id: 131,\n  name: \"No ethical consumption\",\n\n  get description() {\n    return `Get ${format(DC.D2E9)} Banked Infinities.`;\n  },\n\n  checkRequirement: () => Currency.infinitiesBanked.gt(DC.D2E9),\n  checkEvent: [GAME_EVENT.ETERNITY_RESET_AFTER, GAME_EVENT.SAVE_CONVERTED_FROM_PREVIOUS_VERSION],\n\n  get reward() {\n    return `You gain ${formatX(2)} times more Infinities and\n      after Eternity you permanently keep ${formatPercents(0.05)} of your Infinities as Banked Infinities.`;\n  },\n\n  effects: {\n    infinitiesGain: 2,\n    bankedInfinitiesGain: () => Currency.infinities.value.times(0.05).floor()\n  }\n}, {\n  id: 132,\n  name: \"Unique snowflakes\",\n\n  get description() {\n    return `Have ${formatInt(569)} Antimatter Galaxies without gaining any\n        Replicanti Galaxies in your current Eternity.`;\n  },\n\n  checkRequirement: () => player.galaxies >= 569 && player.requirementChecks.eternity.noRG,\n  checkEvent: GAME_EVENT.GALAXY_RESET_AFTER,\n  reward: \"Gain a multiplier to Tachyon Particle and Dilated Time gain based on Antimatter Galaxies.\",\n  effect: () => 1.22 * Math.max(Math.pow(player.galaxies, 0.04), 1),\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 133,\n  name: \"I never liked this infinity stuff anyway\",\n\n  get description() {\n    return `Reach ${formatPostBreak(DC.E200000)} Infinity Points without\n      buying any Infinity Dimensions or the ${formatX(2)} Infinity Point multiplier.`;\n  },\n\n  checkRequirement: () => Array.dimensionTiers.map(InfinityDimension).every(dim => dim.baseAmount === 0) && player.IPMultPurchases === 0 && Currency.infinityPoints.exponent >= 200000,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"You start Eternities with all Infinity Challenges unlocked and completed.\"\n}, {\n  id: 134,\n  name: \"When will it be enough?\",\n\n  get description() {\n    return `Reach ${formatPostBreak(DC.E18000)} Replicanti.`;\n  },\n\n  checkRequirement: () => Replicanti.amount.exponent >= 18000,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `You gain Replicanti ${formatInt(2)} times faster under ${format(replicantiCap(), 1)} Replicanti.`;\n  }\n\n}, {\n  id: 135,\n  name: \"Faster than a potato^286078\",\n\n  get description() {\n    return `Get more than ${formatPostBreak(\"1e8296262\")} ticks per second.`;\n  },\n\n  checkRequirement: () => Tickspeed.current.exponent <= -8296262,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 136,\n  name: \"I told you already, time is relative\",\n  description: \"Dilate time.\",\n  checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER\n}, {\n  id: 137,\n  name: \"Now you're thinking with dilation!\",\n\n  get description() {\n    return `Get ${formatPostBreak(\"1e260000\")} antimatter\n      in ${formatInt(1)} minute or less while Dilated.`;\n  },\n\n  checkRequirement: () => Currency.antimatter.exponent >= 260000 && Time.thisEternity.totalMinutes / getGlobalSpeedFactor() <= 1 && player.dilation.active,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Gain ${formatX(2)} Dilated Time and Time Theorems while Dilated.`;\n  },\n\n  effect: () => player.dilation.active ? 2 : 1\n}, {\n  id: 138,\n  name: \"This is what I have to do to get rid of you.\",\n\n  get description() {\n    return `Reach ${formatPostBreak(\"1e26000\")} Infinity Points without any Time Studies while Dilated.`;\n  },\n\n  checkRequirement: () => player.timestudy.studies.length === 0 && player.dilation.active && Currency.infinityPoints.exponent >= 26000,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Removes the downsides from Time Study 131 and 133 in the Active and Idle Time Study paths.\"\n}, {\n  id: 141,\n  name: \"Snap back to reality\",\n  description: \"Make a new Reality.\",\n  checkRequirement: () => true,\n  checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\n\n  get reward() {\n    return `${formatX(4)} Infinity Point gain, and increase the multiplier for buying ${formatInt(10)}\n      Antimatter Dimensions by +${format(0.1, 0, 1)}.`;\n  },\n\n  effects: {\n    ipGain: 4,\n    buyTenMult: 0.1\n  }\n}, {\n  id: 142,\n  name: \"How does this work?\",\n  description: \"Unlock the automator.\",\n  checkRequirement: () => Player.automatorUnlocked,\n  checkEvent: [GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_BOUGHT, GAME_EVENT.PERK_BOUGHT, GAME_EVENT.BLACK_HOLE_UNLOCKED],\n\n  get reward() {\n    return `Dimension Boosts are ${formatPercents(0.5)} stronger.`;\n  },\n\n  effect: 1.5\n}, {\n  id: 143,\n  name: \"Yo dawg, I heard you liked reskins...\",\n\n  get description() {\n    return `Have all your Eternities in your past ${formatInt(10)} Eternities be at least\n      ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} times higher Eternity Points than the previous one.`;\n  },\n\n  checkRequirement: () => {\n    if (player.records.recentEternities.some(i => i[0] === Number.MAX_VALUE)) return false;\n    const eternities = player.records.recentEternities.map(run => run[2]);\n\n    for (let i = 0; i < eternities.length - 1; i++) {\n      if (eternities[i].lt(eternities[i + 1].times(Decimal.NUMBER_MAX_VALUE))) return false;\n    }\n\n    return true;\n  },\n  checkEvent: GAME_EVENT.ETERNITY_RESET_AFTER,\n  reward: \"Galaxies no longer reset Dimension Boosts.\"\n}, {\n  id: 144,\n  name: \"Is this an Interstellar reference?\",\n  description: \"Unlock the Black Hole.\",\n  checkRequirement: () => BlackHole(1).isUnlocked,\n  checkEvent: GAME_EVENT.BLACK_HOLE_UNLOCKED\n}, {\n  id: 145,\n  name: \"Are you sure these are the right way around?\",\n  description: \"Have either Black Hole interval smaller than its duration.\",\n  checkRequirement: () => BlackHoles.list.some(bh => bh.interval < bh.duration),\n  checkEvent: GAME_EVENT.BLACK_HOLE_UPGRADE_BOUGHT,\n\n  get reward() {\n    return `Black Hole intervals are ${formatPercents(0.1)} shorter.`;\n  },\n\n  effect: 0.9\n}, {\n  id: 146,\n  name: \"Perks of living\",\n  description: \"Have all Perks bought.\",\n  checkRequirement: () => player.reality.perks.size === Perks.all.length,\n  checkEvent: GAME_EVENT.PERK_BOUGHT,\n\n  get reward() {\n    return `+${formatPercents(0.01)} Glyph rarity.`;\n  },\n\n  effect: 1\n}, {\n  id: 147,\n  name: \"Master of Reality\",\n  description: \"Have all Reality upgrades bought.\",\n  checkRequirement: () => RealityUpgrades.allBought,\n  checkEvent: GAME_EVENT.REALITY_UPGRADE_BOUGHT,\n  reward: \"Unlock Teresa, the Celestial of Reality.\"\n}, {\n  id: 148,\n  name: \"Royal flush\",\n  description: \"Reality with one of each basic Glyph type.\",\n  checkRequirement: () => BASIC_GLYPH_TYPES.every(type => Glyphs.activeList.some(g => g.type === type)),\n  checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\n  reward: \"Gained Glyph level is increased by number of distinct Glyph types equipped.\",\n  effect: () => new Set(Glyphs.activeWithoutCompanion.map(g => g.type)).size,\n  formatEffect: value => `+${formatInt(value)}`\n}, {\n  id: 151,\n  name: \"You really didn't need it anyway\",\n\n  get description() {\n    return `Get ${formatInt(800)} Antimatter Galaxies without\n      buying 8th Antimatter Dimensions in your current Infinity.`;\n  },\n\n  checkRequirement: () => player.galaxies >= 800 && player.requirementChecks.infinity.noAD8,\n  checkEvent: GAME_EVENT.GALAXY_RESET_AFTER,\n  reward: \"Unlock V, the Celestial of Achievements.\"\n}, {\n  id: 152,\n  name: \"Y'all got any more of them Glyphs?\",\n\n  get description() {\n    return `Have ${formatInt(100)} Glyphs in your inventory.`;\n  },\n\n  checkRequirement: () => Glyphs.inventoryList.length >= 100,\n  checkEvent: GAME_EVENT.GLYPHS_CHANGED\n}, {\n  id: 153,\n  name: \"More like \\\"reallydoesn'tmatter\\\"\",\n  description: \"Reality without producing antimatter.\",\n  checkRequirement: () => player.requirementChecks.reality.noAM,\n  checkEvent: GAME_EVENT.REALITY_RESET_BEFORE\n}, {\n  id: 154,\n  name: \"I am speed\",\n\n  get description() {\n    return `Reality in under ${formatInt(5)} seconds (real game time).`;\n  },\n\n  checkRequirement: () => Time.thisReality.totalSeconds / getGlobalSpeedFactor() <= 5,\n  checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\n\n  get reward() {\n    return `${formatPercents(0.1)} chance each Reality of ${formatX(2)} Realities and Perk Points.`;\n  },\n\n  effect: 0.1\n}, {\n  id: 155,\n  name: \"Achievement #15983\",\n\n  get description() {\n    return `Play for ${formatFloat(13.7, 1)} billion years (game game time).`;\n  },\n\n  checkRequirement: () => Time.totalTimePlayed.totalYears > 13.7e9,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Black Hole durations are ${formatPercents(0.1)} longer.`;\n  },\n\n  effect: 1.1\n}, {\n  id: 156,\n  name: \"College Dropout\",\n  description: \"Reality without buying Time Theorems.\",\n  checkRequirement: () => player.requirementChecks.reality.noPurchasedTT,\n  checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\n\n  get reward() {\n    return `Gain ${formatX(2.5, 0, 1)} generated Time Theorems, and a free coupon to McDonalds™️.`;\n  },\n\n  effect: 2.5\n}, {\n  id: 157,\n  name: \"It's super effective!\",\n\n  get description() {\n    return `Get a Glyph with ${formatInt(4)} effects.`;\n  },\n\n  checkRequirement: () => Glyphs.activeList.concat(Glyphs.inventoryList).map(glyph => getGlyphEffectsFromBitmask(glyph.effects, 0, 0).filter(effect => effect.isGenerated).length).max() >= 4,\n  checkEvent: GAME_EVENT.GLYPHS_CHANGED\n}, {\n  id: 158,\n  name: \"Bruh, are you like, inside the hole?\",\n  description: \"Make both Black Holes permanent.\",\n  checkRequirement: () => BlackHole(1).isPermanent && BlackHole(2).isPermanent,\n  checkEvent: GAME_EVENT.BLACK_HOLE_UPGRADE_BOUGHT,\n\n  get reward() {\n    return `Black Hole power increased by ${formatPercents(0.1)}.`;\n  },\n\n  effect: 1.1\n}, {\n  id: 161,\n  name: \"that's where you're wrong kiddo\",\n\n  get description() {\n    return `Get ${formatPostBreak(DC.E1E8)} antimatter while Dilated.`;\n  },\n\n  checkRequirement: () => Currency.antimatter.exponent >= 100000000 && player.dilation.active,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 162,\n  name: \"Reinstalled the game and rejoined the server\",\n  description: \"Have every Time Study at once.\",\n  checkRequirement: () => player.timestudy.studies.length >= 58,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 163,\n  name: \"Actually, super easy! Barely an inconvenience!\",\n\n  get description() {\n    return `Complete all the Eternity Challenges ${formatInt(5)} times with less than ${formatInt(1)}\n      second (real game time) in your current Reality.`;\n  },\n\n  checkRequirement: () => EternityChallenges.all.map(ec => ec.completions).min() >= 5 && Time.thisReality.totalSeconds / getGlobalSpeedFactor() <= 1,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 164,\n  name: \"Infinity times two\",\n\n  get description() {\n    return `Get ${format(Decimal.NUMBER_MAX_VALUE, 1)} Infinities.`;\n  },\n\n  checkRequirement: () => Currency.infinitiesTotal.gte(Decimal.NUMBER_MAX_VALUE),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Gain ×${formatInt(1024)} more Infinities.`;\n  },\n\n  effect: 1024\n}, {\n  id: 165,\n  name: \"Perfectly balanced\",\n\n  get description() {\n    return `Get a level ${formatInt(5000)} Glyph with all Glyph level factors equally weighted.`;\n  },\n\n  checkRequirement: () => gainedGlyphLevel().actualLevel >= 5000 && [\"repl\", \"dt\", \"eternities\"].every(i => player.celestials.effarig.glyphWeights[i] === player.celestials.effarig.glyphWeights.ep),\n  checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\n  reward: \"Unlock optimal automatic Glyph level factor adjustment.\"\n}, {\n  id: 166,\n  name: \"Nicenice.\",\n\n  get description() {\n    return `Get a Glyph with level exactly ${formatInt(6969)}.`;\n  },\n\n  checkRequirement: () => gainedGlyphLevel().actualLevel === 6969,\n  checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\n\n  get reward() {\n    return `+${formatInt(69)} to Glyph level.`;\n  },\n\n  effect: 69\n}, {\n  id: 167,\n  name: \"Mr. Layer? Sorry, you're not on the list\",\n\n  get description() {\n    return `Reach ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} Reality Machines.`;\n  },\n\n  checkRequirement: () => Currency.realityMachines.gte(Decimal.NUMBER_MAX_VALUE),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n  reward: \"Gain more Reality Machines based on your current Reality Machines.\",\n  effect: () => Math.clampMin(1, Currency.realityMachines.value.log2()),\n  formatEffect: value => `${formatX(value, 2, 2)}`\n}, {\n  id: 168,\n  name: \"Woah, we're halfway there\",\n\n  get description() {\n    return `Get ${formatInt(50)} total Ra Celestial Memory levels.`;\n  },\n\n  checkRequirement: () => Ra.totalPetLevel >= 50,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER,\n\n  get reward() {\n    return `Get ${formatPercents(0.1)} more memories.`;\n  },\n\n  effect: 1.1\n}, {\n  id: 171,\n  name: \"The god is delighted\",\n  description: \"Sacrifice every sacrificable Glyph type at least once.\",\n  checkRequirement: () => Object.values(player.reality.glyphs.sac).every(s => s > 0),\n  checkEvent: GAME_EVENT.GLYPHS_CHANGED,\n\n  get reward() {\n    return `Glyph sacrifice is ${formatX(2)} stronger.`;\n  },\n\n  effect: 2\n}, {\n  id: 172,\n  name: \"Hitchhiker's Guide to Reality\",\n\n  get description() {\n    return `Reality for ${format(Decimal.NUMBER_MAX_VALUE, 1)} Reality Machines without having\n      any Charged Infinity Upgrades, having any equipped Glyphs, or buying any Triad Studies.`;\n  },\n\n  checkRequirement: () => MachineHandler.gainedRealityMachines.gte(Decimal.NUMBER_MAX_VALUE) && player.celestials.ra.charged.size === 0 && Glyphs.activeWithoutCompanion.length === 0 && player.requirementChecks.reality.noTriads,\n  checkEvent: GAME_EVENT.REALITY_RESET_BEFORE\n}, {\n  id: 173,\n  name: \"Cet accomplissement n'existe pas III\",\n\n  get description() {\n    return `Reach ${formatPostBreak(DC.D9_99999E999, 5, 0)} Reality Machines.`;\n  },\n\n  checkRequirement: () => player.reality.realityMachines.gte(DC.D9_99999E999),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 174,\n  name: \"Don't you already have two of these?\",\n  description: \"Get a Singularity.\",\n  checkRequirement: () => true,\n  checkEvent: GAME_EVENT.SINGULARITY_RESET_BEFORE\n}, {\n  id: 175,\n  name: \"The First Antihistorian\",\n\n  get description() {\n    return `Get ${formatInt(Ra.alchemyResourceCap)} of all Alchemy Resources.`;\n  },\n\n  checkRequirement: () => AlchemyResources.all.every(x => x.amount >= Ra.alchemyResourceCap),\n  checkEvent: GAME_EVENT.REALITY_RESET_AFTER,\n\n  get reward() {\n    return `Synergism can go above ${formatPercents(1)} and Momentum increases ${formatX(10)} faster.`;\n  },\n\n  effect: 10\n}, {\n  id: 176,\n  name: \"Mom counted to 3\",\n  description: \"Annihilate your Dark Matter Dimensions.\"\n}, {\n  id: 177,\n  name: \"This mile took a celestial\",\n  description: \"Complete all Singularity Milestones at least once.\",\n  checkRequirement: () => SingularityMilestones.all.every(x => x.completions > 0),\n  checkEvent: GAME_EVENT.SINGULARITY_RESET_AFTER\n}, {\n  id: 178,\n  name: \"Destroyer of Worlds\",\n\n  get description() {\n    return `Get ${formatInt(100000)} Antimatter Galaxies.`;\n  },\n\n  checkRequirement: () => player.galaxies >= 100000,\n  checkEvent: GAME_EVENT.GALAXY_RESET_AFTER,\n\n  get reward() {\n    return `All Galaxies are ${formatPercents(0.01)} stronger.`;\n  },\n\n  effect: 1.01\n}, {\n  id: 181,\n  displayId: 666,\n  name: \"Antimatter Dimensions Eternal\",\n  description: \"Doom your Reality.\",\n  checkRequirement: () => Pelle.isDoomed,\n  checkEvent: GAME_EVENT.REALITY_RESET_AFTER\n}, {\n  id: 182,\n  name: \"One more time\",\n  description: \"Permanently gain back all Antimatter Dimension autobuyers.\",\n  checkRequirement: () => PelleUpgrade.antimatterDimAutobuyers1.canBeApplied && PelleUpgrade.antimatterDimAutobuyers2.canBeApplied,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 183,\n  name: \"Déjà vOoM\",\n  description: \"Complete Infinity Challenge 5 while Doomed.\",\n  checkRequirement: () => Pelle.isDoomed && InfinityChallenge(5).isCompleted,\n  checkEvent: GAME_EVENT.INFINITY_CHALLENGE_COMPLETED,\n\n  // Weirdly specific reward? Yes, its V's ST bonus because we forgot to disable it\n  // when balancing Pelle and only realised too late.\n  get reward() {\n    return `All Antimatter Dimensions are raised to ${formatPow(1.0812403840463596, 0, 3)}`;\n  },\n\n  effect: 1.0812403840463596\n}, {\n  id: 184,\n  name: \"You're out!\",\n  description: \"Encounter the third Pelle Strike.\",\n  checkRequirement: () => PelleStrikes.eternity.hasStrike,\n  checkEvent: GAME_EVENT.PELLE_STRIKE_UNLOCKED\n}, {\n  id: 185,\n  name: \"Four score and seven years ago\",\n  description: \"Encounter the fourth Pelle Strike.\",\n  checkRequirement: () => PelleStrikes.ECs.hasStrike,\n  checkEvent: GAME_EVENT.PELLE_STRIKE_UNLOCKED\n}, {\n  id: 186,\n  displayId: 181,\n  name: \"An unhealthy obsession\",\n  description: `Purchase Time Study 181 while Doomed.`\n}, {\n  id: 187,\n  name: \"The One with Dilated Time\",\n  description: \"Unlock Dilation while Doomed.\",\n  checkRequirement: () => PelleStrikes.dilation.hasStrike,\n  checkEvent: GAME_EVENT.PELLE_STRIKE_UNLOCKED,\n\n  // We forgot to disable a singularity milestone while balancing Pelle; now it's disabled\n  // and this upgrade has the same effect as it used to.\n  get reward() {\n    return `Increase the multiplier per repeatable Dilated Time\n      multiplier upgrade by ${formatX(1.35, 0, 2)}.`;\n  },\n\n  effect: 1.35\n}, {\n  id: 188,\n  name: \"The End\",\n  description: \"Beat the game.\",\n  checkRequirement: () => GameEnd.endState > END_STATE_MARKERS.GAME_END && !GameEnd.removeAdditionalEnd,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}];","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/achievements/normal-achievements.js"],"names":["DC","normalAchievements","id","name","description","checkEvent","GAME_EVENT","ACHIEVEMENT_EVENT_OTHER","Enslaved","isRunning","checkRequirement","BIG_CRUNCH_BEFORE","reward","formatInt","effect","NewsHandler","uniqueTickersSeen","REALITY_RESET_AFTER","AntimatterDimension","amount","eq","formatPercents","format","E80","Currency","antimatter","exponent","GAME_TICK_AFTER","DimBoost","purchasedBoosts","DIMBOOST_AFTER","GALAXY_RESET_BEFORE","player","galaxies","GALAXY_RESET_AFTER","E150","formatX","E31","AntimatterDimensions","all","some","x","multiplier","NormalChallenge","isOnlyActiveChallenge","Sacrifice","totalBoost","gte","SACRIFICE_RESET_AFTER","getSacrificeDescription","infinities","BIG_CRUNCH_AFTER","totalAmount","Date","now","lastUpdate","getGlobalSpeedFactor","GAME_TICK_BEFORE","Time","thisInfinityRealTime","totalHours","requirementChecks","infinity","noSacrifice","infinityUpgrades","size","INFINITY_UPGRADE_BOUGHT","REALITY_UPGRADE_TEN_BOUGHT","E63","productionPerSecond","gt","value","multipliers","Array","range","map","tier","i","length","AchievementTimers","marathon1","check","E29","Tickspeed","current","E12","NormalChallenges","countWhere","c","isCompleted","break","BREAK_INFINITY","Autobuyer","antimatterDimension","zeroIndexed","concat","tickspeed","every","a","isUnlocked","hasMaxedInterval","Autobuyers","upgradeable","totalMinutes","Math","max","thisInfinity","effectCondition","formatEffect","bulkCap","hasMaxedBulk","SAVE_CONVERTED_FROM_PREVIOUS_VERSION","E8","Player","bestRunIPPM","infinityPower","challengeSum","isInAnyChallenge","E58","InfinityChallenges","completed","INFINITY_CHALLENGE_COMPLETED","totalSeconds","Decimal","NUMBER_MAX_VALUE","formatPostBreak","D9_9999E9999","pow","plus","InfinityDimension","Achievements","power","totalTimePlayed","totalDays","totalMilliseconds","InfinityChallenge","D0_95","recip","gainedInfinityPoints","D2E6","nextBoost","SACRIFICE_RESET_BEFORE","E200","E250","E300","E260","Replicanti","replicanti","REPLICANTI_TICK_AFTER","ETERNITY_RESET_BEFORE","infinityChallengeSum","eternity","onlyAD8","EternityMilestone","m","isReached","D9_99999E999","infinityPoints","formatFloat","thisEternity","totalTickGained","perSecond","total","lt","round","records","recentInfinities","Number","MAX_VALUE","run","times","CHALLENGE_FAILED","lte","infinitiesTotal","clampMin","LOG10_2","powEffectOf","TimeStudy","cap","Effarig","eternityCap","mult","canBeApplied","effectValue","bulk","E9000","onlyAD1","EternityChallenges","completions","ETERNITY_RESET_AFTER","marathon2","EternityChallenge","E90","noAD1","D2","log","min","eternityPoints","timestudy","studies","D2E9","infinitiesBanked","effects","infinitiesGain","bankedInfinitiesGain","floor","noRG","E200000","dimensionTiers","dim","baseAmount","IPMultPurchases","E18000","replicantiCap","dilation","active","REALITY_RESET_BEFORE","ipGain","buyTenMult","automatorUnlocked","REALITY_UPGRADE_BOUGHT","PERK_BOUGHT","BLACK_HOLE_UNLOCKED","recentEternities","eternities","BlackHole","BlackHoles","list","bh","interval","duration","BLACK_HOLE_UPGRADE_BOUGHT","reality","perks","Perks","RealityUpgrades","allBought","BASIC_GLYPH_TYPES","type","Glyphs","activeList","g","Set","activeWithoutCompanion","noAD8","inventoryList","GLYPHS_CHANGED","noAM","thisReality","totalYears","noPurchasedTT","glyph","getGlyphEffectsFromBitmask","filter","isGenerated","isPermanent","E1E8","ec","gainedGlyphLevel","actualLevel","celestials","effarig","glyphWeights","ep","realityMachines","log2","Ra","totalPetLevel","Object","values","glyphs","sac","s","MachineHandler","gainedRealityMachines","ra","charged","noTriads","SINGULARITY_RESET_BEFORE","alchemyResourceCap","AlchemyResources","SingularityMilestones","SINGULARITY_RESET_AFTER","displayId","Pelle","isDoomed","PelleUpgrade","antimatterDimAutobuyers1","antimatterDimAutobuyers2","formatPow","PelleStrikes","hasStrike","PELLE_STRIKE_UNLOCKED","ECs","GameEnd","endState","END_STATE_MARKERS","GAME_END","removeAdditionalEnd"],"mappings":"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","sourcesContent":["import { DC } from \"../../constants\";\r\n\r\nexport const normalAchievements = [\r\n  {\r\n    id: 11,\r\n    name: \"You gotta start somewhere\",\r\n    description: \"Buy a 1st Antimatter Dimension.\",\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"100 antimatter is a lot\",\r\n    description: \"Buy a 2nd Antimatter Dimension.\",\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Half life 3 CONFIRMED\",\r\n    description: \"Buy a 3rd Antimatter Dimension.\",\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"L4D: Left 4 Dimensions\",\r\n    description: \"Buy a 4th Antimatter Dimension.\",\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"5 Dimension Antimatter Punch\",\r\n    description: \"Buy a 5th Antimatter Dimension.\",\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"We couldn't afford 9\",\r\n    get description() {\r\n      return Enslaved.isRunning\r\n        ? \"Buy a 6th Antimatter Dimension (they never amount to anything)\"\r\n        : \"Buy a 6th Antimatter Dimension.\";\r\n    },\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"Not a luck related achievement\",\r\n    description: \"Buy a 7th Antimatter Dimension.\",\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"90 degrees to infinity\",\r\n    get description() {\r\n      return Enslaved.isRunning\r\n        ? \"Buy an 8th Antimatter Dimension (don't get used to it)\"\r\n        : \"Buy an 8th Antimatter Dimension.\";\r\n    },\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 21,\r\n    name: \"To infinity!\",\r\n    description: \"Go Infinite.\",\r\n    checkRequirement: () => true,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `Start with ${formatInt(100)} antimatter.`; },\r\n    effect: 100\r\n  },\r\n  {\r\n    id: 22,\r\n    name: \"FAKE NEWS!\",\r\n    get description() { return `Encounter ${formatInt(50)} different news messages.`; },\r\n    checkRequirement: () => NewsHandler.uniqueTickersSeen >= 50,\r\n    checkEvent: GAME_EVENT.REALITY_RESET_AFTER\r\n  },\r\n  {\r\n    id: 23,\r\n    name: \"The 9th Dimension is a lie\",\r\n    get description() { return `Have exactly ${formatInt(99)} 8th Antimatter Dimensions.`; },\r\n    checkRequirement: () => AntimatterDimension(8).amount.eq(99),\r\n    get reward() { return `8th Antimatter Dimensions are ${formatPercents(0.1)} stronger.`; },\r\n    effect: 1.1\r\n  },\r\n  {\r\n    id: 24,\r\n    name: \"Antimatter Apocalypse\",\r\n    get description() { return `Get over ${format(DC.E80)} antimatter.`; },\r\n    checkRequirement: () => Currency.antimatter.exponent >= 80,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 25,\r\n    name: \"Boosting to the max\",\r\n    get description() { return `Buy ${formatInt(10)} Dimension Boosts.`; },\r\n    checkRequirement: () => DimBoost.purchasedBoosts >= 10,\r\n    checkEvent: GAME_EVENT.DIMBOOST_AFTER\r\n  },\r\n  {\r\n    id: 26,\r\n    name: \"You got past The Big Wall\",\r\n    description: \"Buy an Antimatter Galaxy.\",\r\n    checkRequirement: () => true,\r\n    checkEvent: GAME_EVENT.GALAXY_RESET_BEFORE\r\n  },\r\n  {\r\n    id: 27,\r\n    name: \"Double Galaxy\",\r\n    get description() { return `Buy ${formatInt(2)} Antimatter Galaxies.`; },\r\n    checkRequirement: () => player.galaxies >= 2,\r\n    checkEvent: GAME_EVENT.GALAXY_RESET_AFTER\r\n  },\r\n  {\r\n    id: 28,\r\n    name: \"There's no point in doing that...\",\r\n    get description() {\r\n      return `Buy a single 1st Antimatter Dimension when you have over ${format(DC.E150)} of them.`;\r\n    },\r\n    checkRequirement: () => AntimatterDimension(1).amount.exponent >= 150,\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n    get reward() { return `1st Antimatter Dimensions are ${formatPercents(0.1)} stronger.`; },\r\n    effect: 1.1\r\n  },\r\n  {\r\n    id: 31,\r\n    name: \"I forgot to nerf that\",\r\n    get description() { return `Get any Antimatter Dimension multiplier over ${formatX(DC.E31)}.`; },\r\n    checkRequirement: () => AntimatterDimensions.all.some(x => x.multiplier.exponent >= 31),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() { return `1st Antimatter Dimensions are ${formatPercents(0.05)} stronger.`; },\r\n    effect: 1.05\r\n  },\r\n  {\r\n    id: 32,\r\n    name: \"The Gods are pleased\",\r\n    get description() { return `Get over ${formatX(600)} from Dimensional Sacrifice outside of Challenge 8.`; },\r\n    checkRequirement: () => !NormalChallenge(8).isOnlyActiveChallenge && Sacrifice.totalBoost.gte(600),\r\n    checkEvent: GAME_EVENT.SACRIFICE_RESET_AFTER,\r\n    get reward() {\r\n      return `Dimensional Sacrifice is stronger.\r\n      ${Sacrifice.getSacrificeDescription({ \"Achievement32\": false, \"Achievement57\": false, \"Achievement88\": false })} ➜\r\n      ${Sacrifice.getSacrificeDescription({ \"Achievement32\": true, \"Achievement57\": false, \"Achievement88\": false })}`;\r\n    },\r\n    effect: 0.1,\r\n  },\r\n  {\r\n    id: 33,\r\n    name: \"That's a lot of infinites\",\r\n    get description() { return `Reach Infinity ${formatInt(10)} times.`; },\r\n    checkRequirement: () => Currency.infinities.gte(10),\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_AFTER\r\n  },\r\n  {\r\n    id: 34,\r\n    name: \"You didn't need it anyway\",\r\n    description: \"Infinity without having any 8th Antimatter Dimensions.\",\r\n    checkRequirement: () => AntimatterDimension(8).totalAmount.eq(0),\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `Dimensions 1-7 are ${formatPercents(0.02)} stronger.`; },\r\n    effect: 1.02\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Don't you dare sleep\",\r\n    get description(){return `Be offline for a period of over ${formatInt(6)} hours (game real time).`;},\r\n    checkRequirement: () => (((Date.now() - player.lastUpdate) * getGlobalSpeedFactor()) >= 21600000),\r\n    checkEvent: GAME_EVENT.GAME_TICK_BEFORE\r\n  },\r\n  {\r\n    id: 36,\r\n    name: \"Claustrophobic\",\r\n    get description() {\r\n      return `Infinity with just ${formatInt(1)} Antimatter Galaxy. (Your Antimatter Galaxies are reset on Infinity.)`;\r\n    },\r\n    checkRequirement: () => player.galaxies === 1,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `Multiply starting tick speed by ${format(1.02, 2, 2)}.`; },\r\n    effect: 1 / 1.02\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"That's FAST!\",\r\n    get description() { return `Infinity in under ${formatInt(2)} hours.`; },\r\n    checkRequirement: () => Time.thisInfinityRealTime.totalHours <= 2,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `Start with ${formatInt(5000)} antimatter.`; },\r\n    effect: 5000\r\n  },\r\n  {\r\n    id: 38,\r\n    name: \"I don't believe in Gods\",\r\n    get description() {\r\n      return `Buy an Antimatter Galaxy without Dimensional Sacrificing.\r\n        (Your Antimatter Galaxies are reset on Infinity.)`;\r\n    },\r\n    checkRequirement: () => player.requirementChecks.infinity.noSacrifice,\r\n    checkEvent: GAME_EVENT.GALAXY_RESET_BEFORE\r\n  },\r\n  {\r\n    id: 41,\r\n    name: \"No DLC required\",\r\n    get description() { return `Buy ${formatInt(16)} Infinity Upgrades.`; },\r\n    checkRequirement: () => player.infinityUpgrades.size >= 16,\r\n    checkEvent: [\r\n      GAME_EVENT.INFINITY_UPGRADE_BOUGHT,\r\n      GAME_EVENT.REALITY_RESET_AFTER,\r\n      GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT\r\n    ],\r\n    get reward() {\r\n      return `Unlock two new Infinity Upgrades- ${formatX(2)} IP multiplier and offline IP generation.`;\r\n    },\r\n  },\r\n  {\r\n    id: 42,\r\n    name: \"Super Sanic\",\r\n    get description() {\r\n      return `Have antimatter per second exceed your current antimatter above ${format(DC.E63)}.`;\r\n    },\r\n    checkRequirement: () =>\r\n      Currency.antimatter.exponent >= 63 &&\r\n      Currency.antimatter.productionPerSecond.gt(Currency.antimatter.value),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 43,\r\n    name: \"How the antitables have turned..\",\r\n    description:\r\n      \"Get the 8th Antimatter Dimension multiplier to be highest, 7th Antimatter Dimension multiplier \" +\r\n      \" second highest, etc.\",\r\n    checkRequirement: () => {\r\n      const multipliers = Array.range(1, 8).map(tier => AntimatterDimension(tier).multiplier);\r\n      for (let i = 0; i < multipliers.length - 1; i++) {\r\n        if (multipliers[i].gte(multipliers[i + 1])) return false;\r\n      }\r\n      return true;\r\n    },\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() {\r\n      return `Each Antimatter Dimension gains a boost proportional to tier\r\n      (8th gets ${formatPercents(0.08)}, 7th gets ${formatPercents(0.07)}, etc.)`;\r\n    }\r\n  },\r\n  {\r\n    id: 44,\r\n    name: \"Over in 30 Seconds\",\r\n    get description() {\r\n      return `Have antimatter per second exceed your current antimatter\r\n      for ${formatInt(30)} consecutive seconds (game game time).`;\r\n    },\r\n    checkRequirement: () => AchievementTimers.marathon1\r\n      .check(Currency.antimatter.productionPerSecond.gt(Currency.antimatter.value), 30),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n  },\r\n  {\r\n    id: 45,\r\n    name: \"Faster than a potato\",\r\n    get description() { return `Get more than ${format(DC.E29)} ticks per second.`; },\r\n    checkRequirement: () => Tickspeed.current.exponent <= -26,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() { return `Multiply starting tickspeed by ${formatX(1.02, 0, 2)}.`; },\r\n    effect: 0.98\r\n  },\r\n  {\r\n    id: 46,\r\n    name: \"Multidimensional\",\r\n    get description() { return `Reach ${format(DC.E12)} of all Antimatter Dimensions except the 8th.`; },\r\n    checkRequirement: () => AntimatterDimension(7).amount.exponent >= 12,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 47,\r\n    name: \"Daredevil\",\r\n    get description() { return `Complete ${formatInt(3)} Normal Challenges.`; },\r\n    checkRequirement: () => NormalChallenges.all.countWhere(c => c.isCompleted) >= 3,\r\n    checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT],\r\n  },\r\n  {\r\n    id: 48,\r\n    name: \"Antichallenged\",\r\n    get description() { return `Complete all ${formatInt(12)} Normal Challenges.`; },\r\n    checkRequirement: () => NormalChallenges.all.countWhere(c => !c.isCompleted) === 0,\r\n    checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT],\r\n    get reward() { return `All Dimensions are ${formatPercents(0.1)} stronger.`; },\r\n    effect: 1.1\r\n  },\r\n  {\r\n    id: 51,\r\n    name: \"Limit Break\",\r\n    description: \"Break Infinity.\",\r\n    checkRequirement: () => player.break,\r\n    checkEvent: [GAME_EVENT.BREAK_INFINITY, GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT],\r\n  },\r\n  {\r\n    id: 52,\r\n    name: \"Age of Automation\",\r\n    description: \"Max the interval for Antimatter Dimension and Tickspeed upgrade autobuyers.\",\r\n    checkRequirement: () => Autobuyer.antimatterDimension.zeroIndexed.concat(Autobuyer.tickspeed)\r\n      .every(a => a.isUnlocked && a.hasMaxedInterval),\r\n    checkEvent: [GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT]\r\n  },\r\n  {\r\n    id: 53,\r\n    name: \"Definitely not worth it\",\r\n    description: \"Max the intervals for all normal autobuyers.\",\r\n    // The upgradeable autobuyers are dimensions, tickspeed, dimension boost,\r\n    // galaxy, and big crunch (the ones you get from normal challenges).\r\n    // We don't count autobuyers which can be upgraded via e.g. perks as upgradeable.\r\n    checkRequirement: () => Autobuyers.upgradeable\r\n      .every(a => a.isUnlocked && a.hasMaxedInterval),\r\n    checkEvent: [GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT]\r\n  },\r\n  {\r\n    id: 54,\r\n    name: \"That's FASTER!\",\r\n    get description() { return `Infinity in ${formatInt(10)} minutes or less.`; },\r\n    checkRequirement: () => Time.thisInfinityRealTime.totalMinutes <= 10,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `Start with ${format(5e5)} antimatter.`; },\r\n    effect: 5e5\r\n  },\r\n  {\r\n    id: 55,\r\n    name: \"Forever isn't that long\",\r\n    get description() { return `Infinity in ${formatInt(1)} minute or less.`; },\r\n    checkRequirement: () => Time.thisInfinityRealTime.totalMinutes <= 1,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `Start with ${format(5e10)} antimatter.`; },\r\n    effect: 5e10\r\n  },\r\n  {\r\n    id: 56,\r\n    name: \"Many Deaths\",\r\n    get description() {\r\n      return `Complete the 2nd Antimatter Dimension Autobuyer Challenge in ${formatInt(3)} minutes or less.`;\r\n    },\r\n    checkRequirement: () => NormalChallenge(2).isOnlyActiveChallenge && Time.thisInfinityRealTime.totalMinutes <= 3,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() {\r\n      return `All Antimatter Dimensions are stronger in the first ${formatInt(3)} minutes of Infinities.`;\r\n    },\r\n    effect: () => Math.max(6 / (Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() + 3), 1),\r\n    effectCondition: () => Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() < 3,\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 57,\r\n    name: \"Gift from the Gods\",\r\n    get description() {\r\n      return `Complete the 8th Antimatter Dimension Autobuyer Challenge in ${formatInt(3)} minutes or less.`;\r\n    },\r\n    checkRequirement: () => NormalChallenge(8).isOnlyActiveChallenge && Time.thisInfinityRealTime.totalMinutes <= 3,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() {\r\n      return `Dimensional Sacrifice is stronger.\r\n      ${Sacrifice.getSacrificeDescription({ \"Achievement32\": true, \"Achievement57\": false, \"Achievement88\": false })} ➜\r\n      ${Sacrifice.getSacrificeDescription({ \"Achievement32\": true, \"Achievement57\": true, \"Achievement88\": false })}`;\r\n    },\r\n    effect: 0.1\r\n  },\r\n  {\r\n    id: 58,\r\n    name: \"This is fine.\",\r\n    get description() { return `Complete the Tickspeed Autobuyer Challenge in ${formatInt(3)} minutes or less.`; },\r\n    checkRequirement: () => NormalChallenge(9).isOnlyActiveChallenge && Time.thisInfinityRealTime.totalMinutes <= 3,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() {\r\n      return `Increase the multiplier for buying ${formatInt(10)} Antimatter Dimensions by +${formatPercents(0.01)}.`;\r\n    },\r\n    effect: 1.01\r\n  },\r\n  {\r\n    id: 61,\r\n    name: \"Bulked Up\",\r\n    get description() {\r\n      return `Get all of your Antimatter Dimension Autobuyer bulk amounts to\r\n        ${formatInt(Autobuyer.antimatterDimension.bulkCap)}.`;\r\n    },\r\n    checkRequirement: () => Autobuyer.antimatterDimension.zeroIndexed.every(x => x.hasMaxedBulk),\r\n    checkEvent: [GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_TEN_BOUGHT,\r\n      GAME_EVENT.SAVE_CONVERTED_FROM_PREVIOUS_VERSION],\r\n    reward: \"Dimension Autobuyer bulks are unlimited.\"\r\n  },\r\n  {\r\n    id: 62,\r\n    name: \"Oh, hey... You're still here?\",\r\n    get description() { return `Reach ${format(DC.E8)} Infinity Points per minute.`; },\r\n    checkRequirement: () => Player.bestRunIPPM.exponent >= 8,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_AFTER\r\n  },\r\n  {\r\n    id: 63,\r\n    name: \"A new beginning\",\r\n    description: \"Begin generation of Infinity Power.\",\r\n    checkRequirement: () => Currency.infinityPower.gt(1),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 64,\r\n    name: \"Zero Deaths\",\r\n    description: \"Get to Infinity without Dimension Boosts or Antimatter Galaxies while in a Normal Challenge.\",\r\n    checkRequirement: () => player.galaxies === 0 && DimBoost.purchasedBoosts === 0 && NormalChallenge.isRunning,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `Antimatter Dimensions 1-4 are ${formatPercents(0.25)} stronger.`; },\r\n    effect: 1.25\r\n  },\r\n  {\r\n    id: 65,\r\n    name: \"Not-so-challenging\",\r\n    get description() { return `Get the sum of all of your Normal Challenge times under ${formatInt(3)} minutes.`; },\r\n    checkRequirement: () => Time.challengeSum.totalMinutes < 3,\r\n    checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER],\r\n    get reward() {\r\n      return `All Antimatter Dimensions are stronger in the first ${formatInt(3)} minutes of Infinities,\r\n      but only in Challenges.`;\r\n    },\r\n    effect: () => (Player.isInAnyChallenge ? Math.max(4 / (Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() + 1), 1) : 1),\r\n    effectCondition: () => Player.isInAnyChallenge && Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() < 3,\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 66,\r\n    name: \"Faster than a squared potato\",\r\n    get description() { return `Get more than ${format(DC.E58)} ticks per second.`; },\r\n    checkRequirement: () => Tickspeed.current.exponent <= -55,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() { return `Multiply starting tickspeed by ${formatX(1.02, 0, 2)}.`; },\r\n    effect: 0.98\r\n  },\r\n  {\r\n    id: 67,\r\n    name: \"Infinitely Challenging\",\r\n    description: \"Complete an Infinity Challenge.\",\r\n    checkRequirement: () => InfinityChallenges.completed.length > 0,\r\n    checkEvent: [GAME_EVENT.INFINITY_CHALLENGE_COMPLETED, GAME_EVENT.REALITY_RESET_AFTER]\r\n  },\r\n  {\r\n    id: 68,\r\n    name: \"You did this again just for the achievement right?\",\r\n    get description() {\r\n      return `Complete the 3rd Antimatter Dimension Autobuyer Challenge in ${formatInt(10)} seconds or less.`;\r\n    },\r\n    checkRequirement: () => NormalChallenge(3).isOnlyActiveChallenge && Time.thisInfinityRealTime.totalSeconds <= 10,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `1st Antimatter Dimensions are ${formatPercents(0.5)} stronger.`; },\r\n    effect: 1.5\r\n  },\r\n  {\r\n    id: 71,\r\n    name: \"ERROR 909: Dimension not found\",\r\n    description:\r\n      `Get to Infinity with only a single 1st Antimatter Dimension without Dimension Boosts\r\n      or Antimatter Galaxies, while in the 2nd Antimatter Dimension Autobuyer Challenge.`,\r\n    checkRequirement: () =>\r\n      NormalChallenge(2).isOnlyActiveChallenge &&\r\n      AntimatterDimension(1).amount.eq(1) &&\r\n      DimBoost.purchasedBoosts === 0 &&\r\n      player.galaxies === 0,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `1st Antimatter Dimensions are ${formatInt(3)} times stronger.`; },\r\n    effect: 3\r\n  },\r\n  {\r\n    id: 72,\r\n    name: \"Can't hold all these infinities\",\r\n    get description() {\r\n      return `Get all Antimatter Dimension multipliers over ${formatX(Decimal.NUMBER_MAX_VALUE, 1)}.`;\r\n    },\r\n    checkRequirement: () => AntimatterDimensions.all.every(x => x.multiplier.gte(Decimal.NUMBER_MAX_VALUE)),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() { return `All Antimatter Dimensions are ${formatPercents(0.1)} stronger.`; },\r\n    effect: 1.1\r\n  },\r\n  {\r\n    id: 73,\r\n    name: \"THIS ACHIEVEMENT DOESN'T EXIST\",\r\n    get description() { return `Get ${formatPostBreak(DC.D9_9999E9999, 4)} antimatter.`; },\r\n    checkRequirement: () => Currency.antimatter.gte(DC.D9_9999E9999),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Antimatter Dimensions gain a multiplier based on current antimatter.\",\r\n    effect: () => Currency.antimatter.value.pow(0.00002).plus(1),\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 74,\r\n    name: \"Not a second lost\",\r\n    get description() { return `Get the sum of all best Normal Challenge times under ${formatInt(5)} seconds.`; },\r\n    checkRequirement: () => Time.challengeSum.totalSeconds < 5,\r\n    checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER],\r\n    get reward() { return `All Antimatter Dimensions are ${formatPercents(0.4)} stronger, but only in challenges.`; },\r\n    effect: 1.4,\r\n    effectCondition: () => Player.isInAnyChallenge\r\n  },\r\n  {\r\n    id: 75,\r\n    name: \"NEW DIMENSIONS???\",\r\n    description: \"Unlock the 4th Infinity Dimension.\",\r\n    checkRequirement: () => InfinityDimension(4).isUnlocked,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Your Achievement bonus affects Infinity Dimensions.\",\r\n    effect: () => Achievements.power\r\n  },\r\n  {\r\n    id: 76,\r\n    name: \"One for each dimension\",\r\n    get description() { return `Play for ${formatInt(8)} days (game game time).`; },\r\n    checkRequirement: () => Time.totalTimePlayed.totalDays >= 8,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Extremely small multiplier to Antimatter Dimensions based on time played.\",\r\n    effect: () => Math.max(Math.pow(Time.totalTimePlayed.totalDays / 2, 0.05), 1),\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 77,\r\n    name: \"1 Million is a lot\",\r\n    get description() { return `Reach ${format(1e6)} Infinity Power.`; },\r\n    checkRequirement: () => Currency.infinityPower.exponent >= 6,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 78,\r\n    name: \"Blink of an eye\",\r\n    get description() { return `Infinity in under ${formatInt(250)}ms.`; },\r\n    checkRequirement: () => Time.thisInfinityRealTime.totalMilliseconds <= 250,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() {\r\n      return `Start with ${format(5e25)} antimatter.`;\r\n    },\r\n    effect: 5e25\r\n  },\r\n  {\r\n    id: 81,\r\n    name: \"Game Design Is My Passion\",\r\n    get description() { return `Beat Infinity Challenge 5 in ${formatInt(15)} seconds or less.`; },\r\n    checkRequirement: () => InfinityChallenge(5).isRunning && Time.thisInfinityRealTime.totalSeconds <= 15,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE\r\n  },\r\n  {\r\n    id: 82,\r\n    name: \"Anti-antichallenged\",\r\n    get description() { return `Complete all ${formatInt(8)} Infinity Challenges.`; },\r\n    checkRequirement: () => InfinityChallenges.completed.length === 8,\r\n    checkEvent: [GAME_EVENT.INFINITY_CHALLENGE_COMPLETED, GAME_EVENT.REALITY_RESET_AFTER],\r\n  },\r\n  {\r\n    id: 83,\r\n    name: \"YOU CAN GET 50 GALAXIES?!?!\",\r\n    get description() { return `Get ${formatInt(50)} Antimatter Galaxies.`; },\r\n    checkRequirement: () => player.galaxies >= 50,\r\n    checkEvent: GAME_EVENT.GALAXY_RESET_AFTER,\r\n    get reward() { return `Tickspeed is just over ${formatPercents(0.05)} faster per Antimatter Galaxy.`; },\r\n    effect: () => DC.D0_95.pow(player.galaxies),\r\n    formatEffect: value => `${formatX(value.recip(), 2, 2)}`\r\n  },\r\n  {\r\n    id: 84,\r\n    name: \"I got a few to spare\",\r\n    get description() { return `Reach ${formatPostBreak(\"1e35000\")} antimatter.`; },\r\n    checkRequirement: () => Currency.antimatter.exponent >= 35000,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Antimatter Dimensions are stronger the more unspent antimatter you have.\",\r\n    effect: () => Currency.antimatter.value.pow(0.00002).plus(1),\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 85,\r\n    name: \"ALL YOUR IP ARE BELONG TO US\",\r\n    get description() { return `Big Crunch for ${format(DC.E150)} Infinity Points.`; },\r\n    checkRequirement: () => gainedInfinityPoints().exponent >= 150,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `Additional ${formatX(4)} multiplier to Infinity Points.`; },\r\n    effect: 4\r\n  },\r\n  {\r\n    id: 86,\r\n    name: \"Do you even bend time bro?\",\r\n    get description() { return `Reach ${formatX(1000)} faster per Tickspeed upgrade.`; },\r\n    checkRequirement: () => Tickspeed.multiplier.recip().gte(1000),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() { return `All Galaxies are ${formatPercents(0.01)} stronger.`; },\r\n    effect: 1.01\r\n  },\r\n  {\r\n    id: 87,\r\n    name: \"2 MILLION INFINITIES\",\r\n    get description() { return `Infinity ${format(DC.D2E6)} times.`; },\r\n    checkRequirement: () => Currency.infinities.gt(DC.D2E6),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() {\r\n      return `Infinities more than ${formatInt(5)} seconds long\r\n      give ${formatX(250)} more Infinities.`;\r\n    },\r\n    effect: 250,\r\n    effectCondition: () => Time.thisInfinity.totalSeconds > 5\r\n  },\r\n  {\r\n    id: 88,\r\n    name: \"Yet another infinity reference\",\r\n    get description() {\r\n      return `Get a ${formatX(Decimal.NUMBER_MAX_VALUE, 1, 0)} multiplier in a single Dimensional Sacrifice.`;\r\n    },\r\n    checkRequirement: () => Sacrifice.nextBoost.gte(Decimal.NUMBER_MAX_VALUE),\r\n    checkEvent: GAME_EVENT.SACRIFICE_RESET_BEFORE,\r\n    get reward() {\r\n      return `Dimensional Sacrifice is stronger.\r\n      ${Sacrifice.getSacrificeDescription({ \"Achievement32\": true, \"Achievement57\": true, \"Achievement88\": false })} ➜\r\n      ${Sacrifice.getSacrificeDescription({ \"Achievement32\": true, \"Achievement57\": true, \"Achievement88\": true })}`;\r\n    },\r\n    effect: 0.1\r\n  },\r\n  {\r\n    id: 91,\r\n    name: \"Ludicrous Speed\",\r\n    get description() {\r\n      return `Big Crunch for ${format(DC.E200)} Infinity Points in ${formatInt(2)} seconds or less.`;\r\n    },\r\n    checkRequirement: () => gainedInfinityPoints().exponent >= 200 && Time.thisInfinityRealTime.totalSeconds <= 2,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() {\r\n      return `All Antimatter Dimensions are significantly stronger in the\r\n      first ${formatInt(5)} seconds of Infinities.`;\r\n    },\r\n    effect: () => Math.max((5 - Time.thisInfinity.totalSeconds / getGlobalSpeedFactor()) * 60, 1),\r\n    effectCondition: () => Time.thisInfinity.totalSeconds / getGlobalSpeedFactor() < 5,\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 92,\r\n    name: \"I brake for NOBODY!\",\r\n    get description() {\r\n      return `Big Crunch for ${format(DC.E250)} Infinity Points in ${formatInt(20)} seconds or less.`;\r\n    },\r\n    checkRequirement: () => gainedInfinityPoints().exponent >= 250 && Time.thisInfinityRealTime.totalSeconds <= 20,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() {\r\n      return `All Antimatter Dimensions are significantly stronger in the\r\n      first ${formatInt(60)} seconds of Infinities.`;\r\n    },\r\n    effect: () => Math.max((1 - Time.thisInfinity.totalMinutes / getGlobalSpeedFactor()) * 100, 1),\r\n    effectCondition: () => Time.thisInfinity.totalMinutes / getGlobalSpeedFactor() < 1,\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 93,\r\n    name: \"MAXIMUM OVERDRIVE\",\r\n    get description() { return `Big Crunch for ${format(DC.E300)} Infinity Points.`; },\r\n    checkRequirement: () => gainedInfinityPoints().exponent >= 300,\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_BEFORE,\r\n    get reward() { return `Additional ${formatX(4)} multiplier to Infinity Points.`; },\r\n    effect: 4\r\n  },\r\n  {\r\n    id: 94,\r\n    name: \"4.3333 minutes of Infinity\",\r\n    get description() { return `Reach ${format(DC.E260)} Infinity Power.`; },\r\n    checkRequirement: () => Currency.infinityPower.exponent >= 260,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Double Infinity Power gain.\",\r\n    effect: 2\r\n  },\r\n  {\r\n    id: 95,\r\n    name: \"Is this safe?\",\r\n    get description() { return `Gain ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} Replicanti in ${formatInt(1)} hour.`; },\r\n    get reward() { return `You keep your Replicanti and ${formatInt(1)} Replicanti Galaxy on Infinity.`; },\r\n    checkRequirement: () =>\r\n      (Replicanti.amount.eq(Decimal.NUMBER_MAX_VALUE) || player.replicanti.galaxies > 0) &&\r\n      Time.thisInfinityRealTime.totalHours <= 1,\r\n    checkEvent: GAME_EVENT.REPLICANTI_TICK_AFTER\r\n  },\r\n  {\r\n    id: 96,\r\n    name: \"Time is relative\",\r\n    description: \"Go Eternal.\",\r\n    checkRequirement: () => true,\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\r\n  },\r\n  {\r\n    id: 97,\r\n    name: \"Like jumping on a lego\",\r\n    get description() { return `Get the sum of Infinity Challenge times under ${format(6.66, 2, 2)} seconds.`; },\r\n    checkRequirement: () => Time.infinityChallengeSum.totalSeconds < 6.66,\r\n    checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER],\r\n  },\r\n  {\r\n    id: 98,\r\n    name: \"0 degrees from Infinity\",\r\n    description: \"Unlock the 8th Infinity Dimension.\",\r\n    checkRequirement: () => InfinityDimension(8).isUnlocked,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 101,\r\n    name: \"8 nobody got time for that\",\r\n    description: \"Eternity without buying Antimatter Dimensions 1-7.\",\r\n    checkRequirement: () => player.requirementChecks.eternity.onlyAD8,\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\r\n  },\r\n  {\r\n    id: 102,\r\n    name: \"This mile took an eternity\",\r\n    description: \"Get all Eternity milestones.\",\r\n    checkRequirement: () => EternityMilestone.all.every(m => m.isReached),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 103,\r\n    name: \"Tätä saavutusta ei ole olemassa II\",\r\n    get description() { return `Reach ${formatPostBreak(DC.D9_99999E999, 5, 0)} Infinity Points.`; },\r\n    checkRequirement: () => Currency.infinityPoints.exponent >= 1000,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() {\r\n      return `Make the Infinity Point formula better. log(x)/${formatInt(308)} ➜ log(x)/${formatFloat(307.8, 1)}`;\r\n    },\r\n    effect: 307.8\r\n  },\r\n  {\r\n    id: 104,\r\n    name: \"That wasn't an eternity\",\r\n    get description() { return `Eternity in under ${formatInt(30)} seconds.`; },\r\n    checkRequirement: () => Time.thisEternity.totalSeconds / getGlobalSpeedFactor() <= 30,\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE,\r\n    get reward() { return `Start Eternities with ${format(5e25)} Infinity Points.`; },\r\n    effect: 5e25\r\n  },\r\n  {\r\n    id: 105,\r\n    name: \"Infinite Time\",\r\n    get description() { return `Have ${formatInt(308)} Tickspeed upgrades from Time Dimensions.`; },\r\n    checkRequirement: () => player.totalTickGained >= 308,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Time Dimensions gain a multiplier based on tickspeed.\",\r\n    effect: () => Tickspeed.perSecond.pow(0.000005),\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 106,\r\n    name: \"The swarm\",\r\n    get description() { return `Get ${formatInt(10)} Replicanti Galaxies in ${formatInt(15)} seconds.`; },\r\n    checkRequirement: () => Replicanti.galaxies.total >= 10 && Time.thisInfinity.totalSeconds / getGlobalSpeedFactor() <= 15,\r\n    checkEvent: GAME_EVENT.REPLICANTI_TICK_AFTER\r\n  },\r\n  {\r\n    id: 107,\r\n    name: \"Do you really need a guide for this?\",\r\n    get description() { return `Eternity with less than ${formatInt(10)} Infinities.`; },\r\n    checkRequirement: () => Currency.infinities.lt(10),\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\r\n  },\r\n  {\r\n    id: 108,\r\n    name: \"We COULD afford 9\",\r\n    get description() { return `Eternity with exactly ${formatInt(9)} Replicanti. Tip: Find a way to slow that down.`; },\r\n    checkRequirement: () => Replicanti.amount.round().eq(9),\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\r\n  },\r\n  {\r\n    id: 111,\r\n    name: \"Yo dawg, I heard you liked infinities...\",\r\n    get description() {\r\n      return `Have all your Infinities in your past ${formatInt(10)} Infinities be at least\r\n      ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} times higher Infinity Points than the previous one.`;\r\n    },\r\n    checkRequirement: () => {\r\n      if (player.records.recentInfinities.some(i => i[0] === Number.MAX_VALUE)) return false;\r\n      const infinities = player.records.recentInfinities.map(run => run[2]);\r\n      for (let i = 0; i < infinities.length - 1; i++) {\r\n        if (infinities[i].lt(infinities[i + 1].times(Decimal.NUMBER_MAX_VALUE))) return false;\r\n      }\r\n      return true;\r\n    },\r\n    checkEvent: GAME_EVENT.BIG_CRUNCH_AFTER,\r\n    reward: \"Your antimatter doesn't reset on Dimension Boosts or Antimatter Galaxies.\"\r\n  },\r\n  {\r\n    id: 112,\r\n    name: \"Never again\",\r\n    get description() { return `Get the sum of Infinity Challenge times below ${formatInt(750)}ms.`; },\r\n    checkRequirement: () => Time.infinityChallengeSum.totalMilliseconds < 750,\r\n    checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.REALITY_RESET_AFTER]\r\n  },\r\n  {\r\n    id: 113,\r\n    name: \"Eternities are the new infinity\",\r\n    get description() { return `Eternity in under ${formatInt(250)}ms.`; },\r\n    checkRequirement: () => Time.thisEternity.totalMilliseconds / getGlobalSpeedFactor() <= 250,\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE,\r\n    get reward() { return `Gain ${formatX(2)} more Eternities.`; },\r\n    effect: 2,\r\n  },\r\n  {\r\n    id: 114,\r\n    name: \"You're a mistake\",\r\n    description: \"Fail an Eternity Challenge.\",\r\n    checkRequirement: () => true,\r\n    checkEvent: GAME_EVENT.CHALLENGE_FAILED,\r\n    reward: \"A fading sense of accomplishment.\",\r\n    effect: () => \"Sense of accomplishment (fading)\"\r\n  },\r\n  {\r\n    id: 115,\r\n    name: \"I wish I had gotten 7 eternities\",\r\n    description: \"Start an Infinity Challenge inside an Eternity Challenge.\",\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 116,\r\n    name: \"Do I really need to infinity\",\r\n    get description() { return `Eternity with only ${formatInt(1)} Infinity.`; },\r\n    checkRequirement: () => Currency.infinities.lte(1),\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE,\r\n    reward: \"Multiplier to Infinity Points based on Infinities.\",\r\n    effect: () => Decimal.pow(Currency.infinitiesTotal.value.clampMin(1), LOG10_2 / 4).powEffectOf(TimeStudy(31)),\r\n    cap: () => Effarig.eternityCap,\r\n    formatEffect: value => {\r\n      // Since TS31 is already accounted for in the effect prop, we need to \"undo\" it to display the base value here\r\n      const mult = formatX(value, 2, 2);\r\n      return TimeStudy(31).canBeApplied\r\n        ? `${formatX(value.pow(1 / TimeStudy(31).effectValue), 2, 1)} (After TS31: ${mult})`\r\n        : mult;\r\n    }\r\n  },\r\n  {\r\n    id: 117,\r\n    name: \"Costco sells Dimboosts now!\",\r\n    get description() { return `Bulk buy ${formatInt(750)} Dimension Boosts at once.`; },\r\n    checkRequirement: ([bulk]) => bulk >= 750,\r\n    checkEvent: GAME_EVENT.DIMBOOST_AFTER,\r\n    get reward() {\r\n      return `The multiplier from Dimension Boosts to Antimatter Dimensions is ${formatPercents(0.01)} higher.`;\r\n    },\r\n    effect: 1.01\r\n  },\r\n  {\r\n    id: 118,\r\n    name: \"IT'S OVER 9000\",\r\n    get description() { return `Get a total Dimensional Sacrifice multiplier of ${formatPostBreak(DC.E9000)}.`; },\r\n    checkRequirement: () => Sacrifice.totalBoost.exponent >= 9000,\r\n    checkEvent: GAME_EVENT.SACRIFICE_RESET_AFTER,\r\n    reward: `Dimensional Sacrifice doesn't reset your Antimatter Dimensions\r\n      and the Autobuyer activates every tick if turned on.`,\r\n  },\r\n  {\r\n    id: 121,\r\n    name: \"Can you get infinite IP?\",\r\n    get description() { return `Reach ${formatPostBreak(\"1e30008\")} Infinity Points.`; },\r\n    checkRequirement: () => Currency.infinityPoints.exponent >= 30008,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 122,\r\n    name: \"You're already dead.\",\r\n    description: \"Eternity without buying Antimatter Dimensions 2-8.\",\r\n    checkRequirement: () => player.requirementChecks.eternity.onlyAD1,\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_BEFORE\r\n  },\r\n  {\r\n    id: 123,\r\n    name: \"5 more eternities until the update\",\r\n    get description() { return `Complete ${formatInt(50)} unique Eternity Challenge tiers.`; },\r\n    checkRequirement: () => EternityChallenges.completions >= 50,\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_AFTER\r\n  },\r\n  {\r\n    id: 124,\r\n    name: \"Long lasting relationship\",\r\n    get description() {\r\n      return `Have your Infinity Power per second exceed your Infinity Power\r\n      for ${formatInt(60)} consecutive seconds during a single Infinity.`;\r\n    },\r\n    checkRequirement: () => AchievementTimers.marathon2\r\n      .check(\r\n        !EternityChallenge(7).isRunning &&\r\n        InfinityDimension(1).productionPerSecond.gt(Currency.infinityPower.value),\r\n        60\r\n      ),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 125,\r\n    name: \"Like feasting on a behind\",\r\n    get description() {\r\n      return `Reach ${format(DC.E90)} Infinity Points without having any Infinities\r\n      or any 1st Antimatter Dimensions in your current Eternity.`;\r\n    },\r\n    checkRequirement: () => Currency.infinityPoints.exponent >= 90 &&\r\n      player.requirementChecks.eternity.noAD1 && Currency.infinities.eq(0),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Infinity Point multiplier based on time spent this Infinity.\",\r\n    effect() {\r\n      const thisInfinity = Time.thisInfinity.totalSeconds * 10 + 1;\r\n      return DC.D2.pow(Math.log(thisInfinity) * Math.min(Math.pow(thisInfinity, 0.11), 500));\r\n    },\r\n    cap: () => Effarig.eternityCap,\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 126,\r\n    name: \"Popular music\",\r\n    get description() { return `Have ${formatInt(180)} times more Replicanti Galaxies than Antimatter Galaxies.`; },\r\n    checkRequirement: () => Replicanti.galaxies.total >= 180 * player.galaxies && player.galaxies > 0,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() {\r\n      return `Replicanti Galaxies divide your Replicanti by ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)}\r\n      instead of resetting them to ${formatInt(1)}.`;\r\n    },\r\n  },\r\n  {\r\n    id: 127,\r\n    name: \"But I wanted another prestige layer...\",\r\n    get description() { return `Reach ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} Eternity Points.`; },\r\n    checkRequirement: () => Currency.eternityPoints.gte(Decimal.NUMBER_MAX_VALUE),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 128,\r\n    name: \"What do I have to do to get rid of you\",\r\n    get description() { return `Reach ${formatPostBreak(\"1e22000\")} Infinity Points without any Time Studies.`; },\r\n    checkRequirement: () => Currency.infinityPoints.exponent >= 22000 && player.timestudy.studies.length === 0,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Time Dimensions are multiplied by the number of Time Studies you have.\",\r\n    effect: () => Math.max(player.timestudy.studies.length, 1),\r\n    formatEffect: value => `${formatX(value)}`\r\n  },\r\n  {\r\n    id: 131,\r\n    name: \"No ethical consumption\",\r\n    get description() { return `Get ${format(DC.D2E9)} Banked Infinities.`; },\r\n    checkRequirement: () => Currency.infinitiesBanked.gt(DC.D2E9),\r\n    checkEvent: [GAME_EVENT.ETERNITY_RESET_AFTER, GAME_EVENT.SAVE_CONVERTED_FROM_PREVIOUS_VERSION],\r\n    get reward() {\r\n      return `You gain ${formatX(2)} times more Infinities and\r\n      after Eternity you permanently keep ${formatPercents(0.05)} of your Infinities as Banked Infinities.`;\r\n    },\r\n    effects: {\r\n      infinitiesGain: 2,\r\n      bankedInfinitiesGain: () => Currency.infinities.value.times(0.05).floor()\r\n    }\r\n\r\n  },\r\n  {\r\n    id: 132,\r\n    name: \"Unique snowflakes\",\r\n    get description() {\r\n      return `Have ${formatInt(569)} Antimatter Galaxies without gaining any\r\n        Replicanti Galaxies in your current Eternity.`;\r\n    },\r\n    checkRequirement: () => player.galaxies >= 569 && player.requirementChecks.eternity.noRG,\r\n    checkEvent: GAME_EVENT.GALAXY_RESET_AFTER,\r\n    reward: \"Gain a multiplier to Tachyon Particle and Dilated Time gain based on Antimatter Galaxies.\",\r\n    effect: () => 1.22 * Math.max(Math.pow(player.galaxies, 0.04), 1),\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 133,\r\n    name: \"I never liked this infinity stuff anyway\",\r\n    get description() {\r\n      return `Reach ${formatPostBreak(DC.E200000)} Infinity Points without\r\n      buying any Infinity Dimensions or the ${formatX(2)} Infinity Point multiplier.`;\r\n    },\r\n    checkRequirement: () =>\r\n      Array.dimensionTiers.map(InfinityDimension).every(dim => dim.baseAmount === 0) &&\r\n      player.IPMultPurchases === 0 &&\r\n      Currency.infinityPoints.exponent >= 200000,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"You start Eternities with all Infinity Challenges unlocked and completed.\"\r\n  },\r\n  {\r\n    id: 134,\r\n    name: \"When will it be enough?\",\r\n    get description() { return `Reach ${formatPostBreak(DC.E18000)} Replicanti.`; },\r\n    checkRequirement: () => Replicanti.amount.exponent >= 18000,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() {\r\n      return `You gain Replicanti ${formatInt(2)} times faster under ${format(replicantiCap(), 1)} Replicanti.`;\r\n    }\r\n  },\r\n  {\r\n    id: 135,\r\n    name: \"Faster than a potato^286078\",\r\n    get description() { return `Get more than ${formatPostBreak(\"1e8296262\")} ticks per second.`; },\r\n    checkRequirement: () => Tickspeed.current.exponent <= -8296262,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 136,\r\n    name: \"I told you already, time is relative\",\r\n    description: \"Dilate time.\",\r\n    checkEvent: GAME_EVENT.ACHIEVEMENT_EVENT_OTHER,\r\n  },\r\n  {\r\n    id: 137,\r\n    name: \"Now you're thinking with dilation!\",\r\n    get description() {\r\n      return `Get ${formatPostBreak(\"1e260000\")} antimatter\r\n      in ${formatInt(1)} minute or less while Dilated.`;\r\n    },\r\n    checkRequirement: () =>\r\n      Currency.antimatter.exponent >= 260000 &&\r\n      Time.thisEternity.totalMinutes / getGlobalSpeedFactor() <= 1 &&\r\n      player.dilation.active,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() { return `Gain ${formatX(2)} Dilated Time and Time Theorems while Dilated.`; },\r\n    effect: () => (player.dilation.active ? 2 : 1),\r\n  },\r\n  {\r\n    id: 138,\r\n    name: \"This is what I have to do to get rid of you.\",\r\n    get description() {\r\n      return `Reach ${formatPostBreak(\"1e26000\")} Infinity Points without any Time Studies while Dilated.`;\r\n    },\r\n    checkRequirement: () =>\r\n      player.timestudy.studies.length === 0 &&\r\n      player.dilation.active &&\r\n      Currency.infinityPoints.exponent >= 26000,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Removes the downsides from Time Study 131 and 133 in the Active and Idle Time Study paths.\"\r\n  },\r\n  {\r\n    id: 141,\r\n    name: \"Snap back to reality\",\r\n    description: \"Make a new Reality.\",\r\n    checkRequirement: () => true,\r\n    checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\r\n    get reward() {\r\n      return `${formatX(4)} Infinity Point gain, and increase the multiplier for buying ${formatInt(10)}\r\n      Antimatter Dimensions by +${format(0.1, 0, 1)}.`;\r\n    },\r\n    effects: {\r\n      ipGain: 4,\r\n      buyTenMult: 0.1\r\n    }\r\n  },\r\n  {\r\n    id: 142,\r\n    name: \"How does this work?\",\r\n    description: \"Unlock the automator.\",\r\n    checkRequirement: () => Player.automatorUnlocked,\r\n    checkEvent: [GAME_EVENT.REALITY_RESET_AFTER, GAME_EVENT.REALITY_UPGRADE_BOUGHT, GAME_EVENT.PERK_BOUGHT,\r\n      GAME_EVENT.BLACK_HOLE_UNLOCKED],\r\n    get reward() { return `Dimension Boosts are ${formatPercents(0.5)} stronger.`; },\r\n    effect: 1.5,\r\n  },\r\n  {\r\n    id: 143,\r\n    name: \"Yo dawg, I heard you liked reskins...\",\r\n    get description() {\r\n      return `Have all your Eternities in your past ${formatInt(10)} Eternities be at least\r\n      ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} times higher Eternity Points than the previous one.`;\r\n    },\r\n    checkRequirement: () => {\r\n      if (player.records.recentEternities.some(i => i[0] === Number.MAX_VALUE)) return false;\r\n      const eternities = player.records.recentEternities.map(run => run[2]);\r\n      for (let i = 0; i < eternities.length - 1; i++) {\r\n        if (eternities[i].lt(eternities[i + 1].times(Decimal.NUMBER_MAX_VALUE))) return false;\r\n      }\r\n      return true;\r\n    },\r\n    checkEvent: GAME_EVENT.ETERNITY_RESET_AFTER,\r\n    reward: \"Galaxies no longer reset Dimension Boosts.\"\r\n  },\r\n  {\r\n    id: 144,\r\n    name: \"Is this an Interstellar reference?\",\r\n    description: \"Unlock the Black Hole.\",\r\n    checkRequirement: () => BlackHole(1).isUnlocked,\r\n    checkEvent: GAME_EVENT.BLACK_HOLE_UNLOCKED,\r\n  },\r\n  {\r\n    id: 145,\r\n    name: \"Are you sure these are the right way around?\",\r\n    description: \"Have either Black Hole interval smaller than its duration.\",\r\n    checkRequirement: () => BlackHoles.list.some(bh => bh.interval < bh.duration),\r\n    checkEvent: GAME_EVENT.BLACK_HOLE_UPGRADE_BOUGHT,\r\n    get reward() { return `Black Hole intervals are ${formatPercents(0.1)} shorter.`; },\r\n    effect: 0.9\r\n  },\r\n  {\r\n    id: 146,\r\n    name: \"Perks of living\",\r\n    description: \"Have all Perks bought.\",\r\n    checkRequirement: () => player.reality.perks.size === Perks.all.length,\r\n    checkEvent: GAME_EVENT.PERK_BOUGHT,\r\n    get reward() { return `+${formatPercents(0.01)} Glyph rarity.`; },\r\n    effect: 1\r\n  },\r\n  {\r\n    id: 147,\r\n    name: \"Master of Reality\",\r\n    description: \"Have all Reality upgrades bought.\",\r\n    checkRequirement: () => RealityUpgrades.allBought,\r\n    checkEvent: GAME_EVENT.REALITY_UPGRADE_BOUGHT,\r\n    reward: \"Unlock Teresa, the Celestial of Reality.\"\r\n  },\r\n  {\r\n    id: 148,\r\n    name: \"Royal flush\",\r\n    description: \"Reality with one of each basic Glyph type.\",\r\n    checkRequirement: () => BASIC_GLYPH_TYPES\r\n      .every(type => Glyphs.activeList.some(g => g.type === type)),\r\n    checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\r\n    reward: \"Gained Glyph level is increased by number of distinct Glyph types equipped.\",\r\n    effect: () => (new Set(Glyphs.activeWithoutCompanion.map(g => g.type))).size,\r\n    formatEffect: value => `+${formatInt(value)}`\r\n  },\r\n  {\r\n    id: 151,\r\n    name: \"You really didn't need it anyway\",\r\n    get description() {\r\n      return `Get ${formatInt(800)} Antimatter Galaxies without\r\n      buying 8th Antimatter Dimensions in your current Infinity.`;\r\n    },\r\n    checkRequirement: () => player.galaxies >= 800 && player.requirementChecks.infinity.noAD8,\r\n    checkEvent: GAME_EVENT.GALAXY_RESET_AFTER,\r\n    reward: \"Unlock V, the Celestial of Achievements.\"\r\n  },\r\n  {\r\n    id: 152,\r\n    name: \"Y'all got any more of them Glyphs?\",\r\n    get description() { return `Have ${formatInt(100)} Glyphs in your inventory.`; },\r\n    checkRequirement: () => Glyphs.inventoryList.length >= 100,\r\n    checkEvent: GAME_EVENT.GLYPHS_CHANGED\r\n  },\r\n  {\r\n    id: 153,\r\n    name: \"More like \\\"reallydoesn'tmatter\\\"\",\r\n    description: \"Reality without producing antimatter.\",\r\n    checkRequirement: () => player.requirementChecks.reality.noAM,\r\n    checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\r\n  },\r\n  {\r\n    id: 154,\r\n    name: \"I am speed\",\r\n    get description() { return `Reality in under ${formatInt(5)} seconds (real game time).`; },\r\n    checkRequirement: () => Time.thisReality.totalSeconds / getGlobalSpeedFactor() <= 5,\r\n    checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\r\n    get reward() { return `${formatPercents(0.1)} chance each Reality of ${formatX(2)} Realities and Perk Points.`; },\r\n    effect: 0.1\r\n  },\r\n  {\r\n    id: 155,\r\n    name: \"Achievement #15983\",\r\n    get description() { return `Play for ${formatFloat(13.7, 1)} billion years (game game time).`; },\r\n    checkRequirement: () => Time.totalTimePlayed.totalYears > 13.7e9,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() { return `Black Hole durations are ${formatPercents(0.1)} longer.`; },\r\n    effect: 1.1\r\n  },\r\n  {\r\n    id: 156,\r\n    name: \"College Dropout\",\r\n    description: \"Reality without buying Time Theorems.\",\r\n    checkRequirement: () => player.requirementChecks.reality.noPurchasedTT,\r\n    checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\r\n    get reward() { return `Gain ${formatX(2.5, 0, 1)} generated Time Theorems, and a free coupon to McDonalds™️.`; },\r\n    effect: 2.5\r\n  },\r\n  {\r\n    id: 157,\r\n    name: \"It's super effective!\",\r\n    get description() { return `Get a Glyph with ${formatInt(4)} effects.`; },\r\n    checkRequirement: () => Glyphs.activeList.concat(Glyphs.inventoryList).map(\r\n      glyph => getGlyphEffectsFromBitmask(glyph.effects, 0, 0)\r\n        .filter(effect => effect.isGenerated).length\r\n    ).max() >= 4,\r\n    checkEvent: GAME_EVENT.GLYPHS_CHANGED\r\n  },\r\n  {\r\n    id: 158,\r\n    name: \"Bruh, are you like, inside the hole?\",\r\n    description: \"Make both Black Holes permanent.\",\r\n    checkRequirement: () => BlackHole(1).isPermanent && BlackHole(2).isPermanent,\r\n    checkEvent: GAME_EVENT.BLACK_HOLE_UPGRADE_BOUGHT,\r\n    get reward() { return `Black Hole power increased by ${formatPercents(0.1)}.`; },\r\n    effect: 1.1\r\n  },\r\n  {\r\n    id: 161,\r\n    name: \"that's where you're wrong kiddo\",\r\n    get description() { return `Get ${formatPostBreak(DC.E1E8)} antimatter while Dilated.`; },\r\n    checkRequirement: () => Currency.antimatter.exponent >= 100000000 && player.dilation.active,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 162,\r\n    name: \"Reinstalled the game and rejoined the server\",\r\n    description: \"Have every Time Study at once.\",\r\n    checkRequirement: () => player.timestudy.studies.length >= 58,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 163,\r\n    name: \"Actually, super easy! Barely an inconvenience!\",\r\n    get description() {\r\n      return `Complete all the Eternity Challenges ${formatInt(5)} times with less than ${formatInt(1)}\r\n      second (real game time) in your current Reality.`;\r\n    },\r\n    checkRequirement: () => EternityChallenges.all.map(ec => ec.completions).min() >= 5 &&\r\n      Time.thisReality.totalSeconds / getGlobalSpeedFactor() <= 1,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 164,\r\n    name: \"Infinity times two\",\r\n    get description() { return `Get ${format(Decimal.NUMBER_MAX_VALUE, 1)} Infinities.`; },\r\n    checkRequirement: () => Currency.infinitiesTotal.gte(Decimal.NUMBER_MAX_VALUE),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() { return `Gain ×${formatInt(1024)} more Infinities.`; },\r\n    effect: 1024\r\n  },\r\n  {\r\n    id: 165,\r\n    name: \"Perfectly balanced\",\r\n    get description() { return `Get a level ${formatInt(5000)} Glyph with all Glyph level factors equally weighted.`; },\r\n    checkRequirement: () => gainedGlyphLevel().actualLevel >= 5000 &&\r\n      [\"repl\", \"dt\", \"eternities\"].every(\r\n        i => player.celestials.effarig.glyphWeights[i] === player.celestials.effarig.glyphWeights.ep),\r\n    checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\r\n    reward: \"Unlock optimal automatic Glyph level factor adjustment.\"\r\n  },\r\n  {\r\n    id: 166,\r\n    name: \"Nicenice.\",\r\n    get description() { return `Get a Glyph with level exactly ${formatInt(6969)}.`; },\r\n    checkRequirement: () => gainedGlyphLevel().actualLevel === 6969,\r\n    checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\r\n    get reward() { return `+${formatInt(69)} to Glyph level.`; },\r\n    effect: 69\r\n  },\r\n  {\r\n    id: 167,\r\n    name: \"Mr. Layer? Sorry, you're not on the list\",\r\n    get description() { return `Reach ${format(Decimal.NUMBER_MAX_VALUE, 1, 0)} Reality Machines.`; },\r\n    checkRequirement: () => Currency.realityMachines.gte(Decimal.NUMBER_MAX_VALUE),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    reward: \"Gain more Reality Machines based on your current Reality Machines.\",\r\n    effect: () => Math.clampMin(1, Currency.realityMachines.value.log2()),\r\n    formatEffect: value => `${formatX(value, 2, 2)}`\r\n  },\r\n  {\r\n    id: 168,\r\n    name: \"Woah, we're halfway there\",\r\n    get description() { return `Get ${formatInt(50)} total Ra Celestial Memory levels.`; },\r\n    checkRequirement: () => Ra.totalPetLevel >= 50,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER,\r\n    get reward() { return `Get ${formatPercents(0.1)} more memories.`; },\r\n    effect: 1.1\r\n  },\r\n  {\r\n    id: 171,\r\n    name: \"The god is delighted\",\r\n    description: \"Sacrifice every sacrificable Glyph type at least once.\",\r\n    checkRequirement: () => Object.values(player.reality.glyphs.sac).every(s => s > 0),\r\n    checkEvent: GAME_EVENT.GLYPHS_CHANGED,\r\n    get reward() { return `Glyph sacrifice is ${formatX(2)} stronger.`; },\r\n    effect: 2,\r\n  },\r\n  {\r\n    id: 172,\r\n    name: \"Hitchhiker's Guide to Reality\",\r\n    get description() {\r\n      return `Reality for ${format(Decimal.NUMBER_MAX_VALUE, 1)} Reality Machines without having\r\n      any Charged Infinity Upgrades, having any equipped Glyphs, or buying any Triad Studies.`;\r\n    },\r\n    checkRequirement: () => MachineHandler.gainedRealityMachines.gte(Decimal.NUMBER_MAX_VALUE) &&\r\n      player.celestials.ra.charged.size === 0 && Glyphs.activeWithoutCompanion.length === 0 &&\r\n      player.requirementChecks.reality.noTriads,\r\n    checkEvent: GAME_EVENT.REALITY_RESET_BEFORE,\r\n  },\r\n  {\r\n    id: 173,\r\n    name: \"Cet accomplissement n'existe pas III\",\r\n    get description() { return `Reach ${formatPostBreak(DC.D9_99999E999, 5, 0)} Reality Machines.`; },\r\n    checkRequirement: () => player.reality.realityMachines.gte(DC.D9_99999E999),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 174,\r\n    name: \"Don't you already have two of these?\",\r\n    description: \"Get a Singularity.\",\r\n    checkRequirement: () => true,\r\n    checkEvent: GAME_EVENT.SINGULARITY_RESET_BEFORE\r\n  },\r\n  {\r\n    id: 175,\r\n    name: \"The First Antihistorian\",\r\n    get description() { return `Get ${formatInt(Ra.alchemyResourceCap)} of all Alchemy Resources.`; },\r\n    checkRequirement: () => AlchemyResources.all.every(x => x.amount >= Ra.alchemyResourceCap),\r\n    checkEvent: GAME_EVENT.REALITY_RESET_AFTER,\r\n    get reward() {\r\n      return `Synergism can go above ${formatPercents(1)} and Momentum increases ${formatX(10)} faster.`;\r\n    },\r\n    effect: 10,\r\n  },\r\n  {\r\n    id: 176,\r\n    name: \"Mom counted to 3\",\r\n    description: \"Annihilate your Dark Matter Dimensions.\",\r\n  },\r\n  {\r\n    id: 177,\r\n    name: \"This mile took a celestial\",\r\n    description: \"Complete all Singularity Milestones at least once.\",\r\n    checkRequirement: () => SingularityMilestones.all.every(x => x.completions > 0),\r\n    checkEvent: GAME_EVENT.SINGULARITY_RESET_AFTER,\r\n  },\r\n  {\r\n    id: 178,\r\n    name: \"Destroyer of Worlds\",\r\n    get description() { return `Get ${formatInt(100000)} Antimatter Galaxies.`; },\r\n    checkRequirement: () => player.galaxies >= 100000,\r\n    checkEvent: GAME_EVENT.GALAXY_RESET_AFTER,\r\n    get reward() { return `All Galaxies are ${formatPercents(0.01)} stronger.`; },\r\n    effect: 1.01\r\n  },\r\n  {\r\n    id: 181,\r\n    displayId: 666,\r\n    name: \"Antimatter Dimensions Eternal\",\r\n    description: \"Doom your Reality.\",\r\n    checkRequirement: () => Pelle.isDoomed,\r\n    checkEvent: GAME_EVENT.REALITY_RESET_AFTER,\r\n  },\r\n  {\r\n    id: 182,\r\n    name: \"One more time\",\r\n    description: \"Permanently gain back all Antimatter Dimension autobuyers.\",\r\n    checkRequirement: () => PelleUpgrade.antimatterDimAutobuyers1.canBeApplied &&\r\n      PelleUpgrade.antimatterDimAutobuyers2.canBeApplied,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 183,\r\n    name: \"Déjà vOoM\",\r\n    description: \"Complete Infinity Challenge 5 while Doomed.\",\r\n    checkRequirement: () => Pelle.isDoomed && InfinityChallenge(5).isCompleted,\r\n    checkEvent: GAME_EVENT.INFINITY_CHALLENGE_COMPLETED,\r\n    // Weirdly specific reward? Yes, its V's ST bonus because we forgot to disable it\r\n    // when balancing Pelle and only realised too late.\r\n    get reward() { return `All Antimatter Dimensions are raised to ${formatPow(1.0812403840463596, 0, 3)}`; },\r\n    effect: 1.0812403840463596\r\n  },\r\n  {\r\n    id: 184,\r\n    name: \"You're out!\",\r\n    description: \"Encounter the third Pelle Strike.\",\r\n    checkRequirement: () => PelleStrikes.eternity.hasStrike,\r\n    checkEvent: GAME_EVENT.PELLE_STRIKE_UNLOCKED\r\n  },\r\n  {\r\n    id: 185,\r\n    name: \"Four score and seven years ago\",\r\n    description: \"Encounter the fourth Pelle Strike.\",\r\n    checkRequirement: () => PelleStrikes.ECs.hasStrike,\r\n    checkEvent: GAME_EVENT.PELLE_STRIKE_UNLOCKED\r\n  },\r\n  {\r\n    id: 186,\r\n    displayId: 181,\r\n    name: \"An unhealthy obsession\",\r\n    description: `Purchase Time Study 181 while Doomed.`,\r\n  },\r\n  {\r\n    id: 187,\r\n    name: \"The One with Dilated Time\",\r\n    description: \"Unlock Dilation while Doomed.\",\r\n    checkRequirement: () => PelleStrikes.dilation.hasStrike,\r\n    checkEvent: GAME_EVENT.PELLE_STRIKE_UNLOCKED,\r\n    // We forgot to disable a singularity milestone while balancing Pelle; now it's disabled\r\n    // and this upgrade has the same effect as it used to.\r\n    get reward() {\r\n      return `Increase the multiplier per repeatable Dilated Time\r\n      multiplier upgrade by ${formatX(1.35, 0, 2)}.`;\r\n    },\r\n    effect: 1.35\r\n  },\r\n  {\r\n    id: 188,\r\n    name: \"The End\",\r\n    description: \"Beat the game.\",\r\n    checkRequirement: () => GameEnd.endState > END_STATE_MARKERS.GAME_END && !GameEnd.removeAdditionalEnd,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}