{"ast":null,"code":"export default {\n  name: \"ArmageddonButton\",\n  props: {\n    isHeader: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      remnantsGain: 0,\n      realityShardGain: new Decimal(0),\n      nextRealityShardGain: new Decimal(0),\n      canArmageddon: false\n    };\n  },\n\n  computed: {\n    remnants() {\n      return format(this.remnantsGain, 2, this.remnantsGain > 1 ? 0 : 2);\n    },\n\n    buttonClassObject() {\n      return {\n        \"c-armageddon-button\": true,\n        \"l-armageddon-button\": !this.isHeader,\n        \"l-reality-button\": this.isHeader,\n        \"l-armageddon-button--header\": this.isHeader,\n        \"c-armageddon-button--unavailable\": !this.canArmageddon\n      };\n    }\n\n  },\n  methods: {\n    update() {\n      this.remnantsGain = Pelle.remnantsGain;\n      this.realityShardGain.copyFrom(Pelle.realityShardGainPerSecond);\n      this.nextRealityShardGain.copyFrom(Pelle.nextRealityShardGain);\n      this.canArmageddon = Pelle.canArmageddon;\n    },\n\n    manualArmageddon() {\n      if (!this.canArmageddon) return;\n      if (player.options.confirmations.armageddon) Modal.armageddon.show();else Pelle.armageddon(true);\n    }\n\n  }\n};","map":{"version":3,"sources":["ArmageddonButton.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AADA,GAFA;;AASA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,CADA;AAEA,MAAA,gBAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CAFA;AAGA,MAAA,oBAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CAHA;AAIA,MAAA,aAAA,EAAA;AAJA,KAAA;AAMA,GAhBA;;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,GAAA;AACA,aAAA,MAAA,CAAA,KAAA,YAAA,EAAA,CAAA,EAAA,KAAA,YAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA;AACA,KAHA;;AAIA,IAAA,iBAAA,GAAA;AACA,aAAA;AACA,+BAAA,IADA;AAEA,+BAAA,CAAA,KAAA,QAFA;AAGA,4BAAA,KAAA,QAHA;AAIA,uCAAA,KAAA,QAJA;AAKA,4CAAA,CAAA,KAAA;AALA,OAAA;AAOA;;AAZA,GAjBA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,YAAA,GAAA,KAAA,CAAA,YAAA;AACA,WAAA,gBAAA,CAAA,QAAA,CAAA,KAAA,CAAA,yBAAA;AACA,WAAA,oBAAA,CAAA,QAAA,CAAA,KAAA,CAAA,oBAAA;AACA,WAAA,aAAA,GAAA,KAAA,CAAA,aAAA;AACA,KANA;;AAOA,IAAA,gBAAA,GAAA;AACA,UAAA,CAAA,KAAA,aAAA,EAAA;AAEA,UAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,UAAA,EAAA,KAAA,CAAA,UAAA,CAAA,IAAA,GAAA,KACA,KAAA,CAAA,UAAA,CAAA,IAAA;AACA;;AAZA;AA/BA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"ArmageddonButton\",\r\n  props: {\r\n    isHeader: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      remnantsGain: 0,\r\n      realityShardGain: new Decimal(0),\r\n      nextRealityShardGain: new Decimal(0),\r\n      canArmageddon: false,\r\n    };\r\n  },\r\n  computed: {\r\n    remnants() {\r\n      return format(this.remnantsGain, 2, this.remnantsGain > 1 ? 0 : 2);\r\n    },\r\n    buttonClassObject() {\r\n      return {\r\n        \"c-armageddon-button\": true,\r\n        \"l-armageddon-button\": !this.isHeader,\r\n        \"l-reality-button\": this.isHeader,\r\n        \"l-armageddon-button--header\": this.isHeader,\r\n        \"c-armageddon-button--unavailable\": !this.canArmageddon\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.remnantsGain = Pelle.remnantsGain;\r\n      this.realityShardGain.copyFrom(Pelle.realityShardGainPerSecond);\r\n      this.nextRealityShardGain.copyFrom(Pelle.nextRealityShardGain);\r\n      this.canArmageddon = Pelle.canArmageddon;\r\n    },\r\n    manualArmageddon() {\r\n      if (!this.canArmageddon) return;\r\n\r\n      if (player.options.confirmations.armageddon) Modal.armageddon.show();\r\n      else Pelle.armageddon(true);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <button\r\n    :class=\"buttonClassObject\"\r\n    @click=\"manualArmageddon\"\r\n  >\r\n    <span v-if=\"isHeader\">You cannot escape a Doomed Reality!<br></span>\r\n    <span class=\"c-remnant-gain-display\">\r\n      Armageddon for\r\n      <span class=\"c-remnant-gain\">{{ remnants }}</span>\r\n      Remnants\r\n    </span>\r\n    <br>\r\n    Reality Shards\r\n    <span class=\"c-reality-shard-gain\">{{ format(realityShardGain, 2, 2) }}</span>/s âžœ\r\n    <span class=\"c-reality-shard-gain\">{{ format(nextRealityShardGain, 2, 2) }}</span>/s\r\n  </button>\r\n</template>\r\n\r\n<style scoped>\r\n.c-armageddon-button {\r\n  display: block;\r\n  font-family: Typewriter;\r\n  color: var(--color-text);\r\n  background: var(--color-text-inverted);\r\n  border: 0.1rem solid var(--color-pelle--base);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n}\r\n\r\n.s-base--metro .c-armageddon-button {\r\n  box-shadow: 0.1rem 0.1rem 0.1rem 0 #9e9e9e;\r\n}\r\n\r\n.l-armageddon-button {\r\n  width: 100%;\r\n  padding: 1.5rem;\r\n}\r\n\r\n.l-armageddon-button--header {\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0rem;\r\n}\r\n\r\n.c-armageddon-button:hover {\r\n  box-shadow: 0.1rem 0.1rem 0.5rem var(--color-pelle--base);\r\n  transition-duration: 0.12s;\r\n  cursor: pointer;\r\n}\r\n\r\n.c-armageddon-button--unavailable {\r\n  opacity: 0.5;\r\n  cursor: default !important;\r\n}\r\n\r\n.c-remnant-gain {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: var(--color-pelle--base);\r\n}\r\n\r\n.c-remnant-gain-display {\r\n  vertical-align: middle;\r\n}\r\n\r\n.c-reality-shard-gain {\r\n  font-weight: bold;\r\n  color: var(--color-pelle--base);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/celestial-pelle"},"metadata":{},"sourceType":"module"}