{"ast":null,"code":"import { DC } from \"@/core/constants\";\nimport CelestialQuoteHistory from \"@/components/CelestialQuoteHistory\";\nimport CustomizeableTooltip from \"@/components/CustomizeableTooltip\";\nimport GlyphSetPreview from \"@/components/GlyphSetPreview\";\nimport PerkShopUpgradeButton from \"./PerkShopUpgradeButton\";\nexport default {\n  name: \"TeresaTab\",\n  components: {\n    GlyphSetPreview,\n    PerkShopUpgradeButton,\n    CelestialQuoteHistory,\n    CustomizeableTooltip\n  },\n\n  data() {\n    return {\n      pour: false,\n      time: new Date().getTime(),\n      pouredAmount: 0,\n      isPouredAmountCapped: false,\n      rm: new Decimal(0),\n      percentage: \"\",\n      possibleFillPercentage: \"\",\n      rmMult: 0,\n      bestAM: new Decimal(0),\n      bestAMSet: [],\n      lastMachines: new Decimal(0),\n      runReward: 0,\n      perkPoints: 0,\n      hasReality: false,\n      hasEPGen: false,\n      hasPerkShop: false,\n      raisedPerkShop: false,\n      isRunning: false,\n      canUnlockNextPour: false\n    };\n  },\n\n  computed: {\n    unlockInfos: () => TeresaUnlocks.all,\n    pouredAmountCap: () => Teresa.pouredAmountCap,\n\n    showRunReward() {\n      return this.bestAM.gt(1);\n    },\n\n    upgrades() {\n      const upgrades = [PerkShopUpgrade.glyphLevel, PerkShopUpgrade.rmMult, PerkShopUpgrade.bulkDilation, PerkShopUpgrade.autoSpeed, PerkShopUpgrade.musicGlyph];\n      if (this.raisedPerkShop) upgrades.push(PerkShopUpgrade.fillMusicGlyph);\n      return upgrades;\n    },\n\n    runButtonClassObject() {\n      return {\n        \"c-teresa-run-button__icon\": true,\n        \"c-teresa-run-button__icon--running\": this.isRunning,\n        \"c-celestial-run-button--clickable\": !this.isDoomed,\n        \"o-pelle-disabled-pointer\": this.isDoomed\n      };\n    },\n\n    pourButtonClassObject() {\n      return {\n        \"o-teresa-shop-button\": true,\n        \"c-teresa-pour\": true,\n        \"o-teresa-shop-button--available\": !this.isPouredAmountCapped,\n        \"o-teresa-shop-button--capped\": this.isPouredAmountCapped,\n        \"c-teresa-pour--unlock-available\": this.canUnlockNextPour,\n        \"c-disabled-pour\": this.isPouredAmountCapped\n      };\n    },\n\n    pourText() {\n      return this.isPouredAmountCapped ? \"Filled\" : \"Pour RM\";\n    },\n\n    runDescription() {\n      return GameDatabase.celestials.descriptions[0].effects();\n    },\n\n    lastMachinesString() {\n      return this.lastMachines.lt(DC.E10000) ? `${quantify(\"Reality Machine\", this.lastMachines, 2)}` : `${quantify(\"Imaginary Machine\", this.lastMachines.dividedBy(DC.E10000), 2)}`;\n    },\n\n    unlockInfoTooltipArrowStyle() {\n      return {\n        borderRight: \"0.5rem solid var(--color-teresa--base)\"\n      };\n    },\n\n    isDoomed: () => Pelle.isDoomed\n  },\n  methods: {\n    update() {\n      const now = new Date().getTime();\n\n      if (this.pour) {\n        const diff = (now - this.time) / 1000;\n        Teresa.pourRM(diff);\n      } else {\n        Teresa.timePoured = 0;\n      }\n\n      this.time = now;\n      this.pouredAmount = player.celestials.teresa.pouredAmount;\n      this.isPouredAmountCapped = this.pouredAmount === this.pouredAmountCap;\n      this.percentage = `${(Teresa.fill * 100).toFixed(2)}%`;\n      this.possibleFillPercentage = `${(Teresa.possibleFill * 100).toFixed(2)}%`;\n      this.rmMult = Teresa.rmMultiplier;\n      this.hasReality = TeresaUnlocks.run.isUnlocked;\n      this.hasEPGen = TeresaUnlocks.epGen.isUnlocked;\n      this.hasPerkShop = TeresaUnlocks.shop.isUnlocked;\n      this.raisedPerkShop = Ra.unlocks.perkShopIncrease.canBeApplied;\n      this.bestAM.copyFrom(player.celestials.teresa.bestRunAM);\n      this.bestAMSet = Glyphs.copyForRecords(player.celestials.teresa.bestAMSet);\n      this.lastMachines.copyFrom(player.celestials.teresa.lastRepeatedMachines);\n      this.runReward = Teresa.runRewardMultiplier;\n      this.perkPoints = Currency.perkPoints.value;\n      this.rm.copyFrom(Currency.realityMachines);\n      this.isRunning = Teresa.isRunning;\n      this.canUnlockNextPour = TeresaUnlocks.all.filter(unlock => this.rm.plus(this.pouredAmount).gte(unlock.price) && !unlock.isUnlocked).length > 0;\n    },\n\n    startRun() {\n      if (this.isDoomed) return;\n      Modal.celestials.show({\n        name: \"Teresa's\",\n        number: 0\n      });\n    },\n\n    unlockDescriptionHeight(unlockInfo) {\n      const maxPrice = TeresaUnlocks[Teresa.lastUnlock].price;\n      const pos = Math.log1p(unlockInfo.price) / Math.log1p(maxPrice);\n      return `calc(${(100 * pos).toFixed(2)}% - 0.1rem)`;\n    },\n\n    hasUnlock(unlockInfo) {\n      return unlockInfo.isUnlocked;\n    },\n\n    unlockInfoTooltipClass(unlockInfo) {\n      return {\n        \"c-teresa-unlock-description\": true,\n        \"c-teresa-unlock-description--unlocked\": this.hasUnlock(unlockInfo)\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["TeresaTab.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport { DC } from \"@/core/constants\";\r\n\r\nimport CelestialQuoteHistory from \"@/components/CelestialQuoteHistory\";\r\nimport CustomizeableTooltip from \"@/components/CustomizeableTooltip\";\r\nimport GlyphSetPreview from \"@/components/GlyphSetPreview\";\r\nimport PerkShopUpgradeButton from \"./PerkShopUpgradeButton\";\r\n\r\nexport default {\r\n  name: \"TeresaTab\",\r\n  components: {\r\n    GlyphSetPreview,\r\n    PerkShopUpgradeButton,\r\n    CelestialQuoteHistory,\r\n    CustomizeableTooltip\r\n  },\r\n  data() {\r\n    return {\r\n      pour: false,\r\n      time: new Date().getTime(),\r\n      pouredAmount: 0,\r\n      isPouredAmountCapped: false,\r\n      rm: new Decimal(0),\r\n      percentage: \"\",\r\n      possibleFillPercentage: \"\",\r\n      rmMult: 0,\r\n      bestAM: new Decimal(0),\r\n      bestAMSet: [],\r\n      lastMachines: new Decimal(0),\r\n      runReward: 0,\r\n      perkPoints: 0,\r\n      hasReality: false,\r\n      hasEPGen: false,\r\n      hasPerkShop: false,\r\n      raisedPerkShop: false,\r\n      isRunning: false,\r\n      canUnlockNextPour: false,\r\n    };\r\n  },\r\n  computed: {\r\n    unlockInfos: () => TeresaUnlocks.all,\r\n    pouredAmountCap: () => Teresa.pouredAmountCap,\r\n    showRunReward() {\r\n      return this.bestAM.gt(1);\r\n    },\r\n    upgrades() {\r\n      const upgrades = [\r\n        PerkShopUpgrade.glyphLevel,\r\n        PerkShopUpgrade.rmMult,\r\n        PerkShopUpgrade.bulkDilation,\r\n        PerkShopUpgrade.autoSpeed,\r\n        PerkShopUpgrade.musicGlyph,\r\n      ];\r\n      if (this.raisedPerkShop) upgrades.push(PerkShopUpgrade.fillMusicGlyph);\r\n      return upgrades;\r\n    },\r\n    runButtonClassObject() {\r\n      return {\r\n        \"c-teresa-run-button__icon\": true,\r\n        \"c-teresa-run-button__icon--running\": this.isRunning,\r\n        \"c-celestial-run-button--clickable\": !this.isDoomed,\r\n        \"o-pelle-disabled-pointer\": this.isDoomed\r\n      };\r\n    },\r\n    pourButtonClassObject() {\r\n      return {\r\n        \"o-teresa-shop-button\": true,\r\n        \"c-teresa-pour\": true,\r\n        \"o-teresa-shop-button--available\": !this.isPouredAmountCapped,\r\n        \"o-teresa-shop-button--capped\": this.isPouredAmountCapped,\r\n        \"c-teresa-pour--unlock-available\": this.canUnlockNextPour,\r\n        \"c-disabled-pour\": this.isPouredAmountCapped\r\n      };\r\n    },\r\n    pourText() {\r\n      return this.isPouredAmountCapped ? \"Filled\" : \"Pour RM\";\r\n    },\r\n    runDescription() {\r\n      return GameDatabase.celestials.descriptions[0].effects();\r\n    },\r\n    lastMachinesString() {\r\n      return this.lastMachines.lt(DC.E10000)\r\n        ? `${quantify(\"Reality Machine\", this.lastMachines, 2)}`\r\n        : `${quantify(\"Imaginary Machine\", this.lastMachines.dividedBy(DC.E10000), 2)}`;\r\n    },\r\n    unlockInfoTooltipArrowStyle() {\r\n      return {\r\n        borderRight: \"0.5rem solid var(--color-teresa--base)\"\r\n      };\r\n    },\r\n    isDoomed: () => Pelle.isDoomed,\r\n  },\r\n  methods: {\r\n    update() {\r\n      const now = new Date().getTime();\r\n      if (this.pour) {\r\n        const diff = (now - this.time) / 1000;\r\n        Teresa.pourRM(diff);\r\n      } else {\r\n        Teresa.timePoured = 0;\r\n      }\r\n      this.time = now;\r\n      this.pouredAmount = player.celestials.teresa.pouredAmount;\r\n      this.isPouredAmountCapped = this.pouredAmount === this.pouredAmountCap;\r\n      this.percentage = `${(Teresa.fill * 100).toFixed(2)}%`;\r\n      this.possibleFillPercentage = `${(Teresa.possibleFill * 100).toFixed(2)}%`;\r\n      this.rmMult = Teresa.rmMultiplier;\r\n      this.hasReality = TeresaUnlocks.run.isUnlocked;\r\n      this.hasEPGen = TeresaUnlocks.epGen.isUnlocked;\r\n      this.hasPerkShop = TeresaUnlocks.shop.isUnlocked;\r\n      this.raisedPerkShop = Ra.unlocks.perkShopIncrease.canBeApplied;\r\n      this.bestAM.copyFrom(player.celestials.teresa.bestRunAM);\r\n      this.bestAMSet = Glyphs.copyForRecords(player.celestials.teresa.bestAMSet);\r\n      this.lastMachines.copyFrom(player.celestials.teresa.lastRepeatedMachines);\r\n      this.runReward = Teresa.runRewardMultiplier;\r\n      this.perkPoints = Currency.perkPoints.value;\r\n      this.rm.copyFrom(Currency.realityMachines);\r\n      this.isRunning = Teresa.isRunning;\r\n      this.canUnlockNextPour = TeresaUnlocks.all\r\n        .filter(unlock => this.rm.plus(this.pouredAmount).gte(unlock.price) && !unlock.isUnlocked).length > 0;\r\n    },\r\n    startRun() {\r\n      if (this.isDoomed) return;\r\n      Modal.celestials.show({ name: \"Teresa's\", number: 0 });\r\n    },\r\n    unlockDescriptionHeight(unlockInfo) {\r\n      const maxPrice = TeresaUnlocks[Teresa.lastUnlock].price;\r\n      const pos = Math.log1p(unlockInfo.price) / Math.log1p(maxPrice);\r\n      return `calc(${(100 * pos).toFixed(2)}% - 0.1rem)`;\r\n    },\r\n    hasUnlock(unlockInfo) {\r\n      return unlockInfo.isUnlocked;\r\n    },\r\n    unlockInfoTooltipClass(unlockInfo) {\r\n      return {\r\n        \"c-teresa-unlock-description\": true,\r\n        \"c-teresa-unlock-description--unlocked\": this.hasUnlock(unlockInfo)\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-teresa-celestial-tab\">\r\n    <CelestialQuoteHistory celestial=\"teresa\" />\r\n    <div>\r\n      You have {{ quantify(\"Reality Machine\", rm, 2, 2) }}.\r\n    </div>\r\n    <div class=\"l-mechanics-container\">\r\n      <div\r\n        v-if=\"hasReality\"\r\n        class=\"l-teresa-mechanic-container\"\r\n      >\r\n        <div class=\"c-teresa-unlock c-teresa-run-button\">\r\n          <span :class=\"{ 'o-pelle-disabled': isDoomed }\">\r\n            Start Teresa's Reality.\r\n          </span>\r\n          <div\r\n            :class=\"runButtonClassObject\"\r\n            @click=\"startRun()\"\r\n          >\r\n            Ϟ\r\n          </div>\r\n          {{ runDescription }}\r\n          <br><br>\r\n          <div>\r\n            This Reality can be repeated for a stronger reward based on the antimatter gained within it.\r\n            <br><br>\r\n            <span v-if=\"showRunReward\">\r\n              Your record antimatter in Teresa's Reality is {{ format(bestAM, 2) }},\r\n              achieved with {{ lastMachinesString }}.\r\n              <br><br>\r\n              Glyph Set used:\r\n              <GlyphSetPreview\r\n                text=\"Teresa's Best Glyph Set\"\r\n                :text-hidden=\"true\"\r\n                :force-name-color=\"false\"\r\n                :glyphs=\"bestAMSet\"\r\n              />\r\n            </span>\r\n            <span v-else>\r\n              You have not completed Teresa's Reality yet.\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div\r\n          v-if=\"showRunReward\"\r\n          class=\"c-teresa-unlock\"\r\n        >\r\n          Teresa Reality reward: Glyph Sacrifice power {{ formatX(runReward, 2, 2) }}\r\n        </div>\r\n        <div\r\n          v-if=\"hasEPGen\"\r\n          class=\"c-teresa-unlock\"\r\n        >\r\n          <span :class=\"{ 'o-pelle-disabled': isDoomed }\">\r\n            Every second, you gain {{ formatPercents(0.01) }} of your peaked Eternity Points per minute this Reality.\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"l-rm-container l-teresa-mechanic-container\">\r\n        <button\r\n          :class=\"pourButtonClassObject\"\r\n          @mousedown=\"pour = true\"\r\n          @touchstart=\"pour = true\"\r\n          @mouseup=\"pour = false\"\r\n          @touchend=\"pour = false\"\r\n          @mouseleave=\"pour = false\"\r\n        >\r\n          {{ pourText }}\r\n        </button>\r\n        <div class=\"c-rm-store\">\r\n          <div\r\n            class=\"c-rm-store-inner c-rm-store-inner--light\"\r\n            :style=\"{ height: possibleFillPercentage}\"\r\n          />\r\n          <div\r\n            class=\"c-rm-store-inner\"\r\n            :style=\"{ height: percentage}\"\r\n          >\r\n            <div class=\"c-rm-store-label\">\r\n              {{ formatX(rmMult, 2, 2) }} RM gain\r\n              <br>\r\n              {{ format(pouredAmount, 2, 2) }}/{{ format(pouredAmountCap, 2, 2) }}\r\n            </div>\r\n          </div>\r\n          <CustomizeableTooltip\r\n            v-for=\"unlockInfo in unlockInfos\"\r\n            :key=\"unlockInfo.id\"\r\n            content-class=\"c-teresa-unlock-description--hover-area\"\r\n            :bottom=\"unlockDescriptionHeight(unlockInfo)\"\r\n            right=\"0\"\r\n            mode=\"right\"\r\n            :show=\"true\"\r\n            :tooltip-arrow-style=\"unlockInfoTooltipArrowStyle\"\r\n            :tooltip-class=\"unlockInfoTooltipClass(unlockInfo)\"\r\n          >\r\n            <template #mainContent>\r\n              <div\r\n                class=\"c-teresa-milestone-line\"\r\n                :class=\"{ 'c-teresa-milestone-line--unlocked': hasUnlock(unlockInfo) }\"\r\n              />\r\n            </template>\r\n            <template #tooltipContent>\r\n              <b :class=\"{ 'o-pelle-disabled': unlockInfo.pelleDisabled }\">\r\n                {{ format(unlockInfo.price, 2, 2) }}: {{ unlockInfo.description }}\r\n              </b>\r\n            </template>\r\n          </CustomizeableTooltip>\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"hasPerkShop\"\r\n        class=\"c-teresa-shop\"\r\n      >\r\n        <span class=\"o-teresa-pp\">\r\n          You have {{ quantify(\"Perk Point\", perkPoints, 2, 0) }}.\r\n        </span>\r\n        <PerkShopUpgradeButton\r\n          v-for=\"upgrade in upgrades\"\r\n          :key=\"upgrade.id\"\r\n          :upgrade=\"upgrade\"\r\n        />\r\n        You can now modify the appearance of your Glyphs to look like Music Glyphs.\r\n      </div>\r\n      <div\r\n        v-else\r\n        class=\"l-rm-container-labels l-teresa-mechanic-container\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-disabled-pour {\r\n  opacity: 0.8;\r\n  pointer-events: none;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/celestial-teresa"},"metadata":{},"sourceType":"module"}