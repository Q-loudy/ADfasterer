{"ast":null,"code":"export default {\n  name: \"SpeedrunMilestoneCompare\",\n  props: {\n    milestone: {\n      type: Object,\n      required: true\n    },\n    currTime: {\n      type: Number,\n      required: false,\n      default: 0\n    },\n    refTime: {\n      type: Number,\n      required: false,\n      default: 0\n    },\n    bestTime: {\n      type: Number,\n      required: true\n    },\n    runIndices: {\n      type: Array,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      realTime: 0\n    };\n  },\n\n  computed: {\n    classObject() {\n      const hasTime = this.currTime > 0 && this.refTime > 0;\n      return {\n        \"l-speedrun-milestone-entry\": true,\n        \"l-milestone-slow\": hasTime && this.currTime > this.refTime,\n        \"l-milestone-fast\": hasTime && this.currTime < this.refTime,\n        \"l-milestone-fastest\": hasTime && this.currTime < this.bestTime\n      };\n    }\n\n  },\n  methods: {\n    update() {\n      this.realTime = player.records.realTimePlayed;\n    },\n\n    timeString(ms, showGap) {\n      const timeStr = TimeSpan.fromMilliseconds(ms).toStringShort(true, true);\n      const diff = this.currTime > 0 ? this.currTime - ms : this.realTime - ms;\n      let gapStr = TimeSpan.fromMilliseconds(Math.abs(diff)).toStringShort(true, true);\n      gapStr = `${this.currTime > ms ? \"-\" : \"+\"}${gapStr}`;\n      return ms > 0 ? `${timeStr}${showGap ? ` (${gapStr})` : \"\"}` : \"Not reached yet\";\n    },\n\n    timeStyle(time) {\n      const isFastest = time === [this.currTime, this.refTime, this.bestTime].filter(t => t !== 0).min();\n      return {\n        color: \"var(--color-text)\",\n        opacity: isFastest ? 1 : 0.85,\n        \"font-weight\": isFastest ? \"bold\" : null\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["SpeedrunMilestoneCompare.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,0BADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KALA;AAUA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAVA;AAeA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAfA;AAmBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA;AAnBA,GAFA;;AA0BA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GA9BA;;AA+BA,EAAA,QAAA,EAAA;AACA,IAAA,WAAA,GAAA;AACA,YAAA,OAAA,GAAA,KAAA,QAAA,GAAA,CAAA,IAAA,KAAA,OAAA,GAAA,CAAA;AACA,aAAA;AACA,sCAAA,IADA;AAEA,4BAAA,OAAA,IAAA,KAAA,QAAA,GAAA,KAAA,OAFA;AAGA,4BAAA,OAAA,IAAA,KAAA,QAAA,GAAA,KAAA,OAHA;AAIA,+BAAA,OAAA,IAAA,KAAA,QAAA,GAAA,KAAA;AAJA,OAAA;AAMA;;AATA,GA/BA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,QAAA,GAAA,MAAA,CAAA,OAAA,CAAA,cAAA;AACA,KAHA;;AAIA,IAAA,UAAA,CAAA,EAAA,EAAA,OAAA,EAAA;AACA,YAAA,OAAA,GAAA,QAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,aAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AACA,YAAA,IAAA,GAAA,KAAA,QAAA,GAAA,CAAA,GAAA,KAAA,QAAA,GAAA,EAAA,GAAA,KAAA,QAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,QAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA,aAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AACA,MAAA,MAAA,GAAA,GAAA,KAAA,QAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,MAAA,EAAA;AACA,aAAA,EAAA,GAAA,CAAA,GACA,GAAA,OAAA,GAAA,OAAA,GAAA,KAAA,MAAA,GAAA,GAAA,EAAA,EADA,GAEA,iBAFA;AAGA,KAZA;;AAaA,IAAA,SAAA,CAAA,IAAA,EAAA;AACA,YAAA,SAAA,GAAA,IAAA,KAAA,CAAA,KAAA,QAAA,EAAA,KAAA,OAAA,EAAA,KAAA,QAAA,EAAA,MAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA,GAAA,EAAA;AACA,aAAA;AACA,QAAA,KAAA,EAAA,mBADA;AAEA,QAAA,OAAA,EAAA,SAAA,GAAA,CAAA,GAAA,IAFA;AAGA,uBAAA,SAAA,GAAA,MAAA,GAAA;AAHA,OAAA;AAKA;;AApBA;AA1CA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"SpeedrunMilestoneCompare\",\r\n  props: {\r\n    milestone: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    currTime: {\r\n      type: Number,\r\n      required: false,\r\n      default: 0,\r\n    },\r\n    refTime: {\r\n      type: Number,\r\n      required: false,\r\n      default: 0,\r\n    },\r\n    bestTime: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    runIndices: {\r\n      type: Array,\r\n      required: true,\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      realTime: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    classObject() {\r\n      const hasTime = this.currTime > 0 && this.refTime > 0;\r\n      return {\r\n        \"l-speedrun-milestone-entry\": true,\r\n        \"l-milestone-slow\": hasTime && this.currTime > this.refTime,\r\n        \"l-milestone-fast\": hasTime && this.currTime < this.refTime,\r\n        \"l-milestone-fastest\": hasTime && this.currTime < this.bestTime,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.realTime = player.records.realTimePlayed;\r\n    },\r\n    timeString(ms, showGap) {\r\n      const timeStr = TimeSpan.fromMilliseconds(ms).toStringShort(true, true);\r\n      const diff = this.currTime > 0 ? this.currTime - ms : this.realTime - ms;\r\n      let gapStr = TimeSpan.fromMilliseconds(Math.abs(diff)).toStringShort(true, true);\r\n      gapStr = `${this.currTime > ms ? \"-\" : \"+\"}${gapStr}`;\r\n      return ms > 0\r\n        ? `${timeStr}${showGap ? ` (${gapStr})` : \"\"}`\r\n        : \"Not reached yet\";\r\n    },\r\n    timeStyle(time) {\r\n      const isFastest = time === [this.currTime, this.refTime, this.bestTime].filter(t => t !== 0).min();\r\n      return {\r\n        color: \"var(--color-text)\",\r\n        opacity: isFastest ? 1 : 0.85,\r\n        \"font-weight\": isFastest ? \"bold\" : null,\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div :class=\"classObject\">\r\n    <span class=\"l-milestone-title\">{{ milestone.name }}</span>\r\n    <span :style=\"timeStyle(currTime)\">Current run: {{ timeString(currTime) }}</span>\r\n    <span\r\n      v-if=\"refTime\"\r\n      :style=\"timeStyle(refTime)\"\r\n    >\r\n      Run {{ runIndices[0] }}: {{ timeString(refTime, true) }}\r\n    </span>\r\n    <span :style=\"timeStyle(bestTime)\">Best ({{ runIndices[1] }}): {{ timeString(bestTime, true) }}</span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-milestone-title {\r\n  font-size: 1.3rem;\r\n  text-decoration: underline;\r\n}\r\n\r\n.l-milestone-slow {\r\n  background-color: var(--color-bad);\r\n}\r\n\r\n.l-milestone-fast {\r\n  background-color: var(--color-good);\r\n}\r\n\r\n.l-milestone-fastest {\r\n  background-color: var(--color-celestials);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/speedrun-milestones"},"metadata":{},"sourceType":"module"}