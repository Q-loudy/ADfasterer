{"ast":null,"code":"require(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nArray.prototype.distinct = function () {\n  return this.filter(function (value, index, self) {\n    return self.indexOf(value) === index;\n  });\n};\n\nMath.wrap = function (number, min, max) {\n  const range = max - min + 1;\n  const offset = (number - min) % range;\n  return offset < 0 ? max + 1 + offset : min + offset;\n};\n\nMath.clamp = function (value, min, max) {\n  return Math.clampMax(Math.clampMin(value, min), max);\n};\n\nMath.clampMin = function (value, min) {\n  return Math.max(value, min);\n};\n\nMath.clampMax = function (value, max) {\n  return Math.min(value, max);\n};\n\nArray.prototype.nextSiblingIndex = function (current) {\n  const currentIndex = this.indexOf(current);\n  if (currentIndex === -1) throw \"Current item is not in array\";\n  return currentIndex === this.length - 1 ? 0 : currentIndex + 1;\n};\n\nArray.prototype.nextSibling = function (current) {\n  return this[this.nextSiblingIndex(current)];\n};\n\nArray.prototype.previousSiblingIndex = function (current) {\n  const currentIndex = this.indexOf(current);\n  if (currentIndex === -1) throw \"Current item is not in array\";\n  return currentIndex === 0 ? this.length - 1 : currentIndex - 1;\n};\n\nArray.prototype.previousSibling = function (current) {\n  return this[this.previousSiblingIndex(current)];\n};\n\nDecimal.sumReducer = function (accumulator, previous) {\n  return Decimal.add(accumulator, previous);\n};\n\nDecimal.prodReducer = function (accumulator, previous) {\n  return Decimal.mul(accumulator, previous);\n};\n\nNumber.sumReducer = function (accumulator, previous) {\n  return accumulator + previous;\n};\n\nNumber.prodReducer = function (accumulator, previous) {\n  return accumulator * previous;\n};\n\nDecimal.maxReducer = function (a, b) {\n  return Decimal.max(a, b);\n};\n\nDecimal.prototype.copyFrom = function (decimal) {\n  if (!(decimal instanceof Decimal) && !(decimal instanceof DecimalCurrency)) {\n    throw \"Copy value is not Decimal or DecimalCurrency\";\n  }\n\n  this.mantissa = decimal.mantissa;\n  this.exponent = decimal.exponent;\n};\n\nwindow.copyToClipboard = function () {\n  let el = document.createElement('textarea');\n  document.body.appendChild(el);\n  el.style.position = \"absolute\";\n  el.style.left = '-9999999px';\n  el.setAttribute('readonly', '');\n  return function (str) {\n    try {\n      el.value = str;\n      el.select();\n      return document.execCommand('copy');\n    } catch (ex) {\n      console.log(ex);\n      return false;\n    }\n  };\n}();\n\nwindow.safeCall = function safeCall(fn) {\n  if (fn) fn();\n};\n\nString.prototype.capitalize = function () {\n  return this.toLowerCase().replace(/^[0-9A-Z_a-z]/, c => c.toUpperCase());\n};\n\nString.prototype.splice = function (start, delCount, newSubStr) {\n  return this.slice(0, start) + newSubStr + this.slice(start + Math.abs(delCount));\n};\n/**\r\n * @param {number} start\r\n * @param {number} count\r\n * @returns {number[]}\r\n */\n\n\nArray.range = function (start, count) {\n  return [...Array(count).keys()].map(i => i + start);\n};\n/**\r\n * @param {number} value\r\n * @param {number} count\r\n * @returns {number[]}\r\n */\n\n\nArray.repeat = function (value, count) {\n  return Array(count).fill(value);\n};\n/**\r\n * @param {function} predicate\r\n */\n\n\nArray.prototype.first = function (predicate) {\n  if (predicate === undefined) {\n    return this.length > 0 ? this[0] : undefined;\n  }\n\n  if (typeof predicate !== \"function\") throw \"Predicate must be a function\";\n\n  for (let i = 0; i < this.length; i++) {\n    if (predicate(this[i]) === true) return this[i];\n  }\n\n  throw \"Array doesn't contain a matching item\";\n};\n/**\r\n * @param {function?} predicate\r\n */\n\n\nArray.prototype.last = function (predicate) {\n  if (predicate === undefined) {\n    return this.length > 0 ? this[this.length - 1] : undefined;\n  }\n\n  if (typeof predicate !== \"function\") throw \"Predicate must be a function\";\n\n  for (let i = this.length - 1; i >= 0; i--) {\n    if (predicate(this[i]) === true) return this[i];\n  }\n\n  throw \"Array doesn't contain a matching item\";\n};\n/**\r\n * @param {function?} keyFun\r\n * @param {function?} valueFun\r\n * @returns {object}\r\n */\n\n\nArray.prototype.mapToObject = function (keyFun, valueFun) {\n  if (typeof keyFun !== \"function\" || typeof valueFun !== \"function\") throw \"keyFun and valueFun must be functions\";\n  let out = {};\n\n  for (let idx = 0; idx < this.length; ++idx) {\n    out[keyFun(this[idx], idx)] = valueFun(this[idx], idx);\n  }\n\n  return out;\n};\n/**\r\n * @type {number[]}\r\n */\n\n\nArray.dimensionTiers = Array.range(1, 8);\n/**\r\n * @returns {number}\r\n */\n\nArray.prototype.sum = function () {\n  if (this.length === 0) return 0;\n  return this.reduce(Number.sumReducer);\n};\n/**\r\n * @returns {number}\r\n */\n\n\nArray.prototype.max = function () {\n  if (this.length === 0) return 0;\n  return this.reduce((a, b) => Math.max(a, b));\n};\n/**\r\n * @returns {number}\r\n */\n\n\nArray.prototype.min = function () {\n  if (this.length === 0) return 0;\n  return this.reduce((a, b) => Math.min(a, b));\n};\n/**\r\n * @param {function} predicate\r\n * @returns {number}\r\n */\n\n\nArray.prototype.countWhere = function (predicate) {\n  let count = 0;\n\n  for (const item of this) {\n    if (predicate(item)) ++count;\n  }\n\n  return count;\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.clampMaxExponent = function (maxExp) {\n  return this.exponent >= maxExp ? Decimal.fromMantissaExponent_noNormalize(1, maxExp) : this;\n};\n/**\r\n * @return {Decimal}\r\n */\n\n\nNumber.prototype.toDecimal = function () {\n  return new Decimal(this.valueOf());\n};\n\nMath.log4 = Math.log(4);\n\nArray.prototype.randomElement = function () {\n  return this[Math.floor(Math.random() * this.length)];\n};\n\nDecimal.prototype.valueOf = () => {\n  throw new Error(\"Implicit conversion from Decimal to number\");\n};\n\nSet.prototype.countWhere = function (predicate) {\n  let count = 0;\n\n  for (const item of this) {\n    if (predicate(item)) ++count;\n  }\n\n  return count;\n};\n\nSet.prototype.find = function (predicate) {\n  for (const item of this) {\n    if (predicate(item)) return item;\n  }\n\n  return undefined;\n};\n\nSet.prototype.some = function (predicate) {\n  for (const item of this) {\n    if (predicate(item)) return true;\n  }\n\n  return false;\n};\n\nSet.prototype.every = function (predicate) {\n  for (const item of this) {\n    if (!predicate(item)) return false;\n  }\n\n  return true;\n};\n\nArray.prototype.compact = function () {\n  return this.filter(x => x !== undefined && x !== null);\n};\n\nArray.prototype.toBitmask = function () {\n  return this.reduce((prev, val) => prev | 1 << val, 0);\n};\n\nSet.prototype.toBitmask = function () {\n  let mask = 0;\n\n  for (const id of this) mask |= 1 << id;\n\n  return mask;\n};\n\nArray.fromBitmask = function (mask) {\n  const bitIndices = [];\n  let currentIndex = 0;\n\n  while (mask !== 0) {\n    if (mask & 1) bitIndices.push(currentIndex); // eslint-disable-next-line no-param-reassign\n\n    mask >>= 1;\n    ++currentIndex;\n  }\n\n  return bitIndices;\n};\n\nString.isWhiteSpace = function (value) {\n  return value && !value.trim();\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/extensions.js"],"names":["Array","prototype","distinct","filter","value","index","self","indexOf","Math","wrap","number","min","max","range","offset","clamp","clampMax","clampMin","nextSiblingIndex","current","currentIndex","length","nextSibling","previousSiblingIndex","previousSibling","Decimal","sumReducer","accumulator","previous","add","prodReducer","mul","Number","maxReducer","a","b","copyFrom","decimal","DecimalCurrency","mantissa","exponent","window","copyToClipboard","el","document","createElement","body","appendChild","style","position","left","setAttribute","str","select","execCommand","ex","console","log","safeCall","fn","String","capitalize","toLowerCase","replace","c","toUpperCase","splice","start","delCount","newSubStr","slice","abs","count","keys","map","i","repeat","fill","first","predicate","undefined","last","mapToObject","keyFun","valueFun","out","idx","dimensionTiers","sum","reduce","countWhere","item","clampMaxExponent","maxExp","fromMantissaExponent_noNormalize","toDecimal","valueOf","log4","randomElement","floor","random","Error","Set","find","some","every","compact","x","toBitmask","prev","val","mask","id","fromBitmask","bitIndices","push","isWhiteSpace","trim"],"mappings":"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","sourcesContent":["Array.prototype.distinct = function() {\r\n    return this.filter(function (value, index, self) {\r\n        return self.indexOf(value) === index;\r\n    });\r\n};\r\n\r\nMath.wrap = function(number, min, max) {\r\n  const range = max - min + 1;\r\n  const offset = ((number - min) % range);\r\n  return offset < 0 ? max + 1 + offset : min + offset;\r\n};\r\n\r\nMath.clamp = function(value, min, max) {\r\n  return Math.clampMax(Math.clampMin(value, min), max);\r\n};\r\n\r\nMath.clampMin = function(value, min) {\r\n  return Math.max(value, min);\r\n};\r\n\r\nMath.clampMax = function(value, max) {\r\n  return Math.min(value, max);\r\n};\r\n\r\nArray.prototype.nextSiblingIndex = function(current) {\r\n  const currentIndex = this.indexOf(current);\r\n  if (currentIndex === -1)\r\n    throw \"Current item is not in array\";\r\n  return currentIndex === this.length - 1 ? 0 : currentIndex + 1;\r\n};\r\n\r\nArray.prototype.nextSibling = function(current) {\r\n  return this[this.nextSiblingIndex(current)];\r\n};\r\n\r\nArray.prototype.previousSiblingIndex = function(current) {\r\n  const currentIndex = this.indexOf(current);\r\n  if (currentIndex === -1)\r\n    throw \"Current item is not in array\";\r\n  return currentIndex === 0 ? this.length - 1 : currentIndex - 1;\r\n};\r\n\r\nArray.prototype.previousSibling = function(current) {\r\n  return this[this.previousSiblingIndex(current)];\r\n};\r\n\r\nDecimal.sumReducer = function(accumulator, previous) {\r\n  return Decimal.add(accumulator, previous);\r\n};\r\n\r\nDecimal.prodReducer = function(accumulator, previous) {\r\n  return Decimal.mul(accumulator, previous);\r\n};\r\n\r\nNumber.sumReducer = function(accumulator, previous) {\r\n  return accumulator + previous;\r\n};\r\n\r\nNumber.prodReducer = function(accumulator, previous) {\r\n  return accumulator * previous;\r\n};\r\n\r\nDecimal.maxReducer = function(a, b) {\r\n  return Decimal.max(a, b);\r\n};\r\n\r\nDecimal.prototype.copyFrom = function(decimal) {\r\n  if (!(decimal instanceof Decimal) && !(decimal instanceof DecimalCurrency)) {\r\n    throw \"Copy value is not Decimal or DecimalCurrency\";\r\n  }\r\n  this.mantissa = decimal.mantissa;\r\n  this.exponent = decimal.exponent;\r\n};\r\n\r\nwindow.copyToClipboard = (function() {\r\n  let el = document.createElement('textarea');\r\n  document.body.appendChild(el);\r\n  el.style.position = \"absolute\";\r\n  el.style.left = '-9999999px';\r\n  el.setAttribute('readonly', '');\r\n  return function(str) {\r\n    try {\r\n      el.value = str;\r\n      el.select();\r\n      return document.execCommand('copy');\r\n    } catch(ex) {\r\n      console.log(ex);\r\n      return false;\r\n    }\r\n  };\r\n}());\r\n\r\nwindow.safeCall = function safeCall(fn) {\r\n    if (fn) fn();\r\n}\r\n\r\nString.prototype.capitalize = function() {\r\n  return this.toLowerCase().replace(/^\\w/u, c => c.toUpperCase());\r\n};\r\n\r\nString.prototype.splice = function(start, delCount, newSubStr) {\r\n  return this.slice(0, start) + newSubStr + this.slice(start + Math.abs(delCount));\r\n};\r\n\r\n/**\r\n * @param {number} start\r\n * @param {number} count\r\n * @returns {number[]}\r\n */\r\nArray.range = function(start, count) {\r\n  return [...Array(count).keys()].map(i => i + start);\r\n};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {number} count\r\n * @returns {number[]}\r\n */\r\nArray.repeat = function(value, count) {\r\n  return Array(count).fill(value);\r\n};\r\n\r\n/**\r\n * @param {function} predicate\r\n */\r\nArray.prototype.first = function(predicate) {\r\n  if (predicate === undefined) {\r\n    return this.length > 0 ? this[0] : undefined;\r\n  }\r\n  if (typeof predicate !== \"function\")\r\n    throw \"Predicate must be a function\";\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (predicate(this[i]) === true) return this[i];\r\n  }\r\n  throw \"Array doesn't contain a matching item\";\r\n};\r\n\r\n/**\r\n * @param {function?} predicate\r\n */\r\nArray.prototype.last = function(predicate) {\r\n  if (predicate === undefined) {\r\n    return this.length > 0 ? this[this.length - 1] : undefined;\r\n  }\r\n  if (typeof predicate !== \"function\")\r\n    throw \"Predicate must be a function\";\r\n  for (let i = this.length - 1; i >= 0; i--) {\r\n    if (predicate(this[i]) === true) return this[i];\r\n  }\r\n  throw \"Array doesn't contain a matching item\";\r\n};\r\n\r\n/**\r\n * @param {function?} keyFun\r\n * @param {function?} valueFun\r\n * @returns {object}\r\n */\r\nArray.prototype.mapToObject = function(keyFun, valueFun) {\r\n  if (typeof keyFun !== \"function\" || typeof valueFun !== \"function\")\r\n    throw \"keyFun and valueFun must be functions\";\r\n  let out = {}\r\n  for (let idx = 0; idx < this.length; ++idx) {\r\n    out[keyFun(this[idx], idx)] = valueFun(this[idx], idx);\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * @type {number[]}\r\n */\r\nArray.dimensionTiers = Array.range(1, 8);\r\n\r\n/**\r\n * @returns {number}\r\n */\r\nArray.prototype.sum = function() {\r\n  if (this.length === 0) return 0;\r\n  return this.reduce(Number.sumReducer);\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\nArray.prototype.max = function() {\r\n  if (this.length === 0) return 0;\r\n  return this.reduce((a, b) => Math.max(a, b));\r\n};\r\n\r\n/**\r\n * @returns {number}\r\n */\r\nArray.prototype.min = function() {\r\n  if (this.length === 0) return 0;\r\n  return this.reduce((a, b) => Math.min(a, b));\r\n};\r\n\r\n/**\r\n * @param {function} predicate\r\n * @returns {number}\r\n */\r\nArray.prototype.countWhere = function(predicate) {\r\n  let count = 0;\r\n  for (const item of this) {\r\n    if (predicate(item))++count;\r\n  }\r\n  return count;\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.clampMaxExponent = function(maxExp) {\r\n  return this.exponent >= maxExp\r\n    ? Decimal.fromMantissaExponent_noNormalize(1, maxExp) : this;\r\n};\r\n\r\n/**\r\n * @return {Decimal}\r\n */\r\nNumber.prototype.toDecimal = function() {\r\n  return new Decimal(this.valueOf());\r\n};\r\n\r\nMath.log4 = Math.log(4);\r\n\r\nArray.prototype.randomElement = function() {\r\n  return this[Math.floor(Math.random() * this.length)];\r\n};\r\n\r\nDecimal.prototype.valueOf = () => {\r\n  throw new Error(\"Implicit conversion from Decimal to number\");\r\n};\r\n\r\nSet.prototype.countWhere = function(predicate) {\r\n  let count = 0;\r\n  for (const item of this) {\r\n    if (predicate(item))++count;\r\n  }\r\n  return count;\r\n};\r\n\r\nSet.prototype.find = function(predicate) {\r\n  for (const item of this) {\r\n    if (predicate(item)) return item;\r\n  }\r\n  return undefined;\r\n};\r\n\r\nSet.prototype.some = function(predicate) {\r\n  for (const item of this) {\r\n    if (predicate(item)) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nSet.prototype.every = function(predicate) {\r\n  for (const item of this) {\r\n    if (!predicate(item)) return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nArray.prototype.compact = function() {\r\n  return this.filter(x => x !== undefined && x !== null);\r\n};\r\n\r\nArray.prototype.toBitmask = function() {\r\n  return this.reduce((prev, val) => prev | (1 << val), 0);\r\n};\r\n\r\nSet.prototype.toBitmask = function() {\r\n  let mask = 0;\r\n  for (const id of this) mask |= (1 << id);\r\n  return mask;\r\n};\r\n\r\nArray.fromBitmask = function(mask) {\r\n  const bitIndices = [];\r\n  let currentIndex = 0;\r\n  while (mask !== 0) {\r\n    if (mask & 1) bitIndices.push(currentIndex);\r\n    // eslint-disable-next-line no-param-reassign\r\n    mask >>= 1;\r\n    ++currentIndex;\r\n  }\r\n  return bitIndices;\r\n};\r\n\r\nString.isWhiteSpace = function(value) {\r\n  return value && !value.trim();\r\n};\r\n"]},"metadata":{},"sourceType":"script"}