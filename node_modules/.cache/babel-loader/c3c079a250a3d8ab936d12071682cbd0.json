{"ast":null,"code":"import \"core-js/modules/es.symbol.description.js\";\nimport { DC } from \"../../constants\";\n\nfunction rebuyableCost(initialCost, increment, id) {\n  return Decimal.multiply(initialCost, Decimal.pow(increment, player.dilation.rebuyables[id]));\n}\n\nfunction rebuyable(config) {\n  return {\n    id: config.id,\n    cost: () => rebuyableCost(config.initialCost, config.increment, config.id),\n    initialCost: config.initialCost,\n    increment: config.increment,\n    description: config.description,\n    effect: () => config.effect(player.dilation.rebuyables[config.id]),\n    formatEffect: config.formatEffect,\n    formatCost: config.formatCost,\n    purchaseCap: config.purchaseCap,\n    reachedCap: () => player.dilation.rebuyables[config.id] >= config.purchaseCap,\n    pelleOnly: Boolean(config.pelleOnly),\n    rebuyable: true\n  };\n}\n\nexport const dilationUpgrades = {\n  dtGain: rebuyable({\n    id: 1,\n    initialCost: 1e4,\n    increment: 10,\n    description: () => SingularityMilestone.dilatedTimeFromSingularities.canBeApplied || Achievement(187).canBeApplied ? `${formatX(2 * Effects.product(SingularityMilestone.dilatedTimeFromSingularities, Achievement(187)), 2, 2)} Dilated Time gain` : \"Double Dilated Time gain\",\n    effect: bought => {\n      const base = 2 * Effects.product(SingularityMilestone.dilatedTimeFromSingularities, Achievement(187));\n      return Decimal.pow(base, bought);\n    },\n    formatEffect: value => {\n      const nonInteger = SingularityMilestone.dilatedTimeFromSingularities.canBeApplied || Achievement(187).canBeApplied;\n      return formatX(value, 2, nonInteger ? 2 : 0);\n    },\n    formatCost: value => format(value, 2),\n    purchaseCap: Number.MAX_VALUE\n  }),\n  galaxyThreshold: rebuyable({\n    id: 2,\n    initialCost: 1e6,\n    increment: 100,\n    description: () => Perk.bypassTGReset.isBought && !Pelle.isDoomed ? \"Reset Tachyon Galaxies, but lower their threshold\" : \"Reset Dilated Time and Tachyon Galaxies, but lower their threshold\",\n    // The 38th purchase is at 1e80, and is the last purchase.\n    effect: bought => bought < 38 ? Math.pow(0.8, bought) : 0,\n    formatEffect: effect => {\n      if (effect === 0) return `${formatX(getTachyonGalaxyMult(effect), 4, 4)}`;\n      const nextEffect = effect === Math.pow(0.8, 37) ? 0 : 0.8 * effect;\n      return `${formatX(getTachyonGalaxyMult(effect), 4, 4)} ➜\n        Next: ${formatX(getTachyonGalaxyMult(nextEffect), 4, 4)}`;\n    },\n    formatCost: value => format(value, 2),\n    purchaseCap: 38\n  }),\n  tachyonGain: rebuyable({\n    id: 3,\n    initialCost: 1e7,\n    increment: 20,\n    description: () => {\n      if (Pelle.isDoomed) return `Multiply the amount of Tachyon Particles gained by ${formatInt(1)}`;\n      if (Enslaved.isRunning) return `Multiply the amount of Tachyon Particles gained\n      by ${Math.pow(3, Enslaved.tachyonNerf).toFixed(2)}`;\n      return \"Triple the amount of Tachyon Particles gained\";\n    },\n    effect: bought => {\n      if (Pelle.isDoomed) return DC.D1.pow(bought);\n      return DC.D3.pow(bought);\n    },\n    formatEffect: value => formatX(value, 2),\n    formatCost: value => format(value, 2),\n    purchaseCap: Number.MAX_VALUE\n  }),\n  doubleGalaxies: {\n    id: 4,\n    cost: 5e6,\n    description: () => `Gain twice as many Tachyon Galaxies, up to ${formatInt(500)} base Galaxies`,\n    effect: 2\n  },\n  tdMultReplicanti: {\n    id: 5,\n    cost: 1e9,\n    description: () => {\n      const rep10 = replicantiMult().pLog10();\n      let multiplier = \"0.1\";\n\n      if (rep10 > 9000) {\n        const ratio = DilationUpgrade.tdMultReplicanti.effectValue.pLog10() / rep10;\n\n        if (ratio < 0.095) {\n          multiplier = ratio.toFixed(2);\n        }\n      }\n\n      return `Time Dimensions are affected by Replicanti multiplier ${formatPow(multiplier, 1, 3)}, reduced\n        effect above ${formatX(DC.E9000)}`;\n    },\n    effect: () => {\n      let rep10 = replicantiMult().pLog10() * 0.1;\n      rep10 = rep10 > 9000 ? 9000 + 0.5 * (rep10 - 9000) : rep10;\n      return Decimal.pow10(rep10);\n    },\n    formatEffect: value => formatX(value, 2, 1)\n  },\n  ndMultDT: {\n    id: 6,\n    cost: 5e7,\n    description: \"Antimatter Dimension multiplier based on Dilated Time, unaffected by Time Dilation\",\n    effect: () => Currency.dilatedTime.value.pow(308).clampMin(1),\n    formatEffect: value => formatX(value, 2, 1)\n  },\n  ipMultDT: {\n    id: 7,\n    cost: 2e12,\n    description: \"Gain a multiplier to Infinity Points based on Dilated Time\",\n    effect: () => Currency.dilatedTime.value.pow(1000).clampMin(1),\n    formatEffect: value => formatX(value, 2, 1),\n    cap: () => Effarig.eternityCap\n  },\n  timeStudySplit: {\n    id: 8,\n    cost: 1e10,\n    description: \"You can buy all three Time Study paths from the Dimension Split\"\n  },\n  dilationPenalty: {\n    id: 9,\n    cost: 1e11,\n    description: () => `Reduce the Dilation penalty (${formatPow(1.05, 2, 2)} after reduction)`,\n    effect: 1.05\n  },\n  ttGenerator: {\n    id: 10,\n    cost: 1e15,\n    description: \"Generate Time Theorems based on Tachyon Particles\",\n    effect: () => Currency.tachyonParticles.value.div(20000),\n    formatEffect: value => `${format(value, 2, 1)}/sec`\n  },\n  dtGainPelle: rebuyable({\n    id: 11,\n    initialCost: 1e14,\n    increment: 100,\n    pelleOnly: true,\n    description: () => `${formatX(5)} Dilated Time gain`,\n    effect: bought => Decimal.pow(5, bought),\n    formatEffect: value => formatX(value, 2),\n    formatCost: value => format(value, 2),\n    purchaseCap: Number.MAX_VALUE\n  }),\n  galaxyMultiplier: rebuyable({\n    id: 12,\n    initialCost: 1e15,\n    increment: 1000,\n    pelleOnly: true,\n    description: \"Multiply Tachyon Galaxies gained, applies after TG doubling upgrade\",\n    effect: bought => bought + 1,\n    formatEffect: value => `${formatX(value, 2)} ➜ ${formatX(value + 1, 2)}`,\n    formatCost: value => format(value, 2),\n    purchaseCap: Number.MAX_VALUE\n  }),\n  tickspeedPower: rebuyable({\n    id: 13,\n    initialCost: 1e16,\n    increment: 1e4,\n    pelleOnly: true,\n    description: \"Gain a power to Tickspeed\",\n    effect: bought => 1 + bought * 0.03,\n    formatEffect: value => `${formatPow(value, 2, 2)} ➜ ${formatPow(value + 0.03, 2, 2)}`,\n    formatCost: value => format(value, 2),\n    purchaseCap: Number.MAX_VALUE\n  }),\n  galaxyThresholdPelle: {\n    id: 14,\n    cost: 1e45,\n    pelleOnly: true,\n    description: \"Apply a cube root to the Tachyon Galaxy threshold\",\n    effect: 1 / 3\n  },\n  flatDilationMult: {\n    id: 15,\n    cost: 1e55,\n    pelleOnly: true,\n    description: () => `Gain more Dilated Time based on current EP`,\n    effect: () => 1e9 ** Math.min((Math.max(player.eternityPoints.log10() - 1500, 0) / 2500) ** 1.2, 1),\n    formatEffect: value => formatX(value, 2, 2)\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/eternity/dilation-upgrades.js"],"names":["DC","rebuyableCost","initialCost","increment","id","Decimal","multiply","pow","player","dilation","rebuyables","rebuyable","config","cost","description","effect","formatEffect","formatCost","purchaseCap","reachedCap","pelleOnly","Boolean","dilationUpgrades","dtGain","SingularityMilestone","dilatedTimeFromSingularities","canBeApplied","Achievement","formatX","Effects","product","bought","base","value","nonInteger","format","Number","MAX_VALUE","galaxyThreshold","Perk","bypassTGReset","isBought","Pelle","isDoomed","Math","getTachyonGalaxyMult","nextEffect","tachyonGain","formatInt","Enslaved","isRunning","tachyonNerf","toFixed","D1","D3","doubleGalaxies","tdMultReplicanti","rep10","replicantiMult","pLog10","multiplier","ratio","DilationUpgrade","effectValue","formatPow","E9000","pow10","ndMultDT","Currency","dilatedTime","clampMin","ipMultDT","cap","Effarig","eternityCap","timeStudySplit","dilationPenalty","ttGenerator","tachyonParticles","div","dtGainPelle","galaxyMultiplier","tickspeedPower","galaxyThresholdPelle","flatDilationMult","min","max","eternityPoints","log10"],"mappings":"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","sourcesContent":["import { DC } from \"../../constants\";\r\n\r\nfunction rebuyableCost(initialCost, increment, id) {\r\n  return Decimal.multiply(initialCost, Decimal.pow(increment, player.dilation.rebuyables[id]));\r\n}\r\nfunction rebuyable(config) {\r\n  return {\r\n    id: config.id,\r\n    cost: () => rebuyableCost(config.initialCost, config.increment, config.id),\r\n    initialCost: config.initialCost,\r\n    increment: config.increment,\r\n    description: config.description,\r\n    effect: () => config.effect(player.dilation.rebuyables[config.id]),\r\n    formatEffect: config.formatEffect,\r\n    formatCost: config.formatCost,\r\n    purchaseCap: config.purchaseCap,\r\n    reachedCap: () => player.dilation.rebuyables[config.id] >= config.purchaseCap,\r\n    pelleOnly: Boolean(config.pelleOnly),\r\n    rebuyable: true\r\n  };\r\n}\r\n\r\nexport const dilationUpgrades = {\r\n  dtGain: rebuyable({\r\n    id: 1,\r\n    initialCost: 1e4,\r\n    increment: 10,\r\n    description: () =>\r\n      ((SingularityMilestone.dilatedTimeFromSingularities.canBeApplied || Achievement(187).canBeApplied)\r\n        ? `${formatX(2 * Effects.product(\r\n          SingularityMilestone.dilatedTimeFromSingularities,\r\n          Achievement(187)\r\n        ), 2, 2)} Dilated Time gain`\r\n        : \"Double Dilated Time gain\"),\r\n    effect: bought => {\r\n      const base = 2 * Effects.product(\r\n        SingularityMilestone.dilatedTimeFromSingularities,\r\n        Achievement(187)\r\n      );\r\n      return Decimal.pow(base, bought);\r\n    },\r\n    formatEffect: value => {\r\n      const nonInteger = SingularityMilestone.dilatedTimeFromSingularities.canBeApplied ||\r\n        Achievement(187).canBeApplied;\r\n      return formatX(value, 2, nonInteger ? 2 : 0);\r\n    },\r\n    formatCost: value => format(value, 2),\r\n    purchaseCap: Number.MAX_VALUE\r\n  }),\r\n  galaxyThreshold: rebuyable({\r\n    id: 2,\r\n    initialCost: 1e6,\r\n    increment: 100,\r\n    description: () =>\r\n      (Perk.bypassTGReset.isBought && !Pelle.isDoomed\r\n        ? \"Reset Tachyon Galaxies, but lower their threshold\"\r\n        : \"Reset Dilated Time and Tachyon Galaxies, but lower their threshold\"),\r\n    // The 38th purchase is at 1e80, and is the last purchase.\r\n    effect: bought => (bought < 38 ? Math.pow(0.8, bought) : 0),\r\n    formatEffect: effect => {\r\n      if (effect === 0) return `${formatX(getTachyonGalaxyMult(effect), 4, 4)}`;\r\n      const nextEffect = effect === Math.pow(0.8, 37) ? 0 : 0.8 * effect;\r\n      return `${formatX(getTachyonGalaxyMult(effect), 4, 4)} ➜\r\n        Next: ${formatX(getTachyonGalaxyMult(nextEffect), 4, 4)}`;\r\n    },\r\n    formatCost: value => format(value, 2),\r\n    purchaseCap: 38\r\n  }),\r\n  tachyonGain: rebuyable({\r\n    id: 3,\r\n    initialCost: 1e7,\r\n    increment: 20,\r\n    description: () => {\r\n      if (Pelle.isDoomed) return `Multiply the amount of Tachyon Particles gained by ${formatInt(1)}`;\r\n      if (Enslaved.isRunning) return `Multiply the amount of Tachyon Particles gained\r\n      by ${Math.pow(3, Enslaved.tachyonNerf).toFixed(2)}`;\r\n      return \"Triple the amount of Tachyon Particles gained\";\r\n    },\r\n    effect: bought => {\r\n      if (Pelle.isDoomed) return DC.D1.pow(bought);\r\n      return DC.D3.pow(bought);\r\n    },\r\n    formatEffect: value => formatX(value, 2),\r\n    formatCost: value => format(value, 2),\r\n    purchaseCap: Number.MAX_VALUE\r\n  }),\r\n  doubleGalaxies: {\r\n    id: 4,\r\n    cost: 5e6,\r\n    description: () => `Gain twice as many Tachyon Galaxies, up to ${formatInt(500)} base Galaxies`,\r\n    effect: 2\r\n  },\r\n  tdMultReplicanti: {\r\n    id: 5,\r\n    cost: 1e9,\r\n    description: () => {\r\n      const rep10 = replicantiMult().pLog10();\r\n      let multiplier = \"0.1\";\r\n      if (rep10 > 9000) {\r\n        const ratio = DilationUpgrade.tdMultReplicanti.effectValue.pLog10() / rep10;\r\n        if (ratio < 0.095) {\r\n          multiplier = ratio.toFixed(2);\r\n        }\r\n      }\r\n      return `Time Dimensions are affected by Replicanti multiplier ${formatPow(multiplier, 1, 3)}, reduced\r\n        effect above ${formatX(DC.E9000)}`;\r\n    },\r\n    effect: () => {\r\n      let rep10 = replicantiMult().pLog10() * 0.1;\r\n      rep10 = rep10 > 9000 ? 9000 + 0.5 * (rep10 - 9000) : rep10;\r\n      return Decimal.pow10(rep10);\r\n    },\r\n    formatEffect: value => formatX(value, 2, 1)\r\n  },\r\n  ndMultDT: {\r\n    id: 6,\r\n    cost: 5e7,\r\n    description: \"Antimatter Dimension multiplier based on Dilated Time, unaffected by Time Dilation\",\r\n    effect: () => Currency.dilatedTime.value.pow(308).clampMin(1),\r\n    formatEffect: value => formatX(value, 2, 1)\r\n  },\r\n  ipMultDT: {\r\n    id: 7,\r\n    cost: 2e12,\r\n    description: \"Gain a multiplier to Infinity Points based on Dilated Time\",\r\n    effect: () => Currency.dilatedTime.value.pow(1000).clampMin(1),\r\n    formatEffect: value => formatX(value, 2, 1),\r\n    cap: () => Effarig.eternityCap\r\n  },\r\n  timeStudySplit: {\r\n    id: 8,\r\n    cost: 1e10,\r\n    description: \"You can buy all three Time Study paths from the Dimension Split\"\r\n  },\r\n  dilationPenalty: {\r\n    id: 9,\r\n    cost: 1e11,\r\n    description: () => `Reduce the Dilation penalty (${formatPow(1.05, 2, 2)} after reduction)`,\r\n    effect: 1.05,\r\n  },\r\n  ttGenerator: {\r\n    id: 10,\r\n    cost: 1e15,\r\n    description: \"Generate Time Theorems based on Tachyon Particles\",\r\n    effect: () => Currency.tachyonParticles.value.div(20000),\r\n    formatEffect: value => `${format(value, 2, 1)}/sec`\r\n  },\r\n  dtGainPelle: rebuyable({\r\n    id: 11,\r\n    initialCost: 1e14,\r\n    increment: 100,\r\n    pelleOnly: true,\r\n    description: () => `${formatX(5)} Dilated Time gain`,\r\n    effect: bought => Decimal.pow(5, bought),\r\n    formatEffect: value => formatX(value, 2),\r\n    formatCost: value => format(value, 2),\r\n    purchaseCap: Number.MAX_VALUE\r\n  }),\r\n  galaxyMultiplier: rebuyable({\r\n    id: 12,\r\n    initialCost: 1e15,\r\n    increment: 1000,\r\n    pelleOnly: true,\r\n    description: \"Multiply Tachyon Galaxies gained, applies after TG doubling upgrade\",\r\n    effect: bought => bought + 1,\r\n    formatEffect: value => `${formatX(value, 2)} ➜ ${formatX(value + 1, 2)}`,\r\n    formatCost: value => format(value, 2),\r\n    purchaseCap: Number.MAX_VALUE\r\n  }),\r\n  tickspeedPower: rebuyable({\r\n    id: 13,\r\n    initialCost: 1e16,\r\n    increment: 1e4,\r\n    pelleOnly: true,\r\n    description: \"Gain a power to Tickspeed\",\r\n    effect: bought => 1 + bought * 0.03,\r\n    formatEffect: value => `${formatPow(value, 2, 2)} ➜ ${formatPow(value + 0.03, 2, 2)}`,\r\n    formatCost: value => format(value, 2),\r\n    purchaseCap: Number.MAX_VALUE\r\n  }),\r\n  galaxyThresholdPelle: {\r\n    id: 14,\r\n    cost: 1e45,\r\n    pelleOnly: true,\r\n    description: \"Apply a cube root to the Tachyon Galaxy threshold\",\r\n    effect: 1 / 3\r\n  },\r\n  flatDilationMult: {\r\n    id: 15,\r\n    cost: 1e55,\r\n    pelleOnly: true,\r\n    description: () => `Gain more Dilated Time based on current EP`,\r\n    effect: () => 1e9 ** Math.min((Math.max(player.eternityPoints.log10() - 1500, 0) / 2500) ** 1.2, 1),\r\n    formatEffect: value => formatX(value, 2, 2)\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}