{"ast":null,"code":"import { PurchasableMechanicState } from \"./puchasable\";\n/**\r\n * @abstract\r\n */\n\nexport class BitPurchasableMechanicState extends PurchasableMechanicState {\n  /**\r\n   * @abstract\r\n   */\n  get bits() {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n\n\n  set bits(value) {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n\n\n  get bitIndex() {\n    throw new NotImplementedError();\n  }\n\n  get isBought() {\n    return (this.bits & 1 << this.bitIndex) !== 0;\n  }\n\n  set isBought(value) {\n    if (value) {\n      this.bits |= 1 << this.bitIndex;\n    } else {\n      this.bits &= ~(1 << this.bitIndex);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/game-mechanics/bit-purchasable.js"],"names":["PurchasableMechanicState","BitPurchasableMechanicState","bits","NotImplementedError","value","bitIndex","isBought"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,cAAzC;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,2BAAN,SAA0CD,wBAA1C,CAAmE;AACxE;AACF;AACA;AACU,MAAJE,IAAI,GAAG;AAAE,UAAM,IAAIC,mBAAJ,EAAN;AAAkC;AAE/C;AACF;AACA;;;AACU,MAAJD,IAAI,CAACE,KAAD,EAAQ;AAAE,UAAM,IAAID,mBAAJ,EAAN;AAAkC;AAEpD;AACF;AACA;;;AACc,MAARE,QAAQ,GAAG;AAAE,UAAM,IAAIF,mBAAJ,EAAN;AAAkC;;AAEvC,MAARG,QAAQ,GAAG;AACb,WAAO,CAAC,KAAKJ,IAAL,GAAa,KAAK,KAAKG,QAAxB,MAAuC,CAA9C;AACD;;AAEW,MAARC,QAAQ,CAACF,KAAD,EAAQ;AAClB,QAAIA,KAAJ,EAAW;AACT,WAAKF,IAAL,IAAc,KAAK,KAAKG,QAAxB;AACD,KAFD,MAEO;AACL,WAAKH,IAAL,IAAa,EAAE,KAAK,KAAKG,QAAZ,CAAb;AACD;AACF;;AA1BuE","sourcesContent":["import { PurchasableMechanicState } from \"./puchasable\";\r\n\r\n/**\r\n * @abstract\r\n */\r\nexport class BitPurchasableMechanicState extends PurchasableMechanicState {\r\n  /**\r\n   * @abstract\r\n   */\r\n  get bits() { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  set bits(value) { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  get bitIndex() { throw new NotImplementedError(); }\r\n\r\n  get isBought() {\r\n    return (this.bits & (1 << this.bitIndex)) !== 0;\r\n  }\r\n\r\n  set isBought(value) {\r\n    if (value) {\r\n      this.bits |= (1 << this.bitIndex);\r\n    } else {\r\n      this.bits &= ~(1 << this.bitIndex);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}