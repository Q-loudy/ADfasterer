{"ast":null,"code":"import ChallengeBox from \"@/components/ChallengeBox\";\nimport DescriptionDisplay from \"@/components/DescriptionDisplay\";\nimport EffectDisplay from \"@/components/EffectDisplay\";\nexport default {\n  name: \"InfinityChallengeBox\",\n  components: {\n    ChallengeBox,\n    DescriptionDisplay,\n    EffectDisplay\n  },\n  props: {\n    challenge: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      isUnlocked: false,\n      isRunning: false,\n      isCompleted: false\n    };\n  },\n\n  computed: {\n    config() {\n      return this.challenge.config;\n    },\n\n    name() {\n      return `IC${this.challenge.id}`;\n    }\n\n  },\n  methods: {\n    update() {\n      const challenge = this.challenge;\n      this.isUnlocked = challenge.isUnlocked;\n      this.isRunning = challenge.isRunning;\n      this.isCompleted = challenge.isCompleted;\n    }\n\n  }\n};","map":{"version":3,"sources":["InfinityChallengeBox.vue"],"names":[],"mappings":"AACA,OAAA,YAAA,MAAA,2BAAA;AACA,OAAA,kBAAA,MAAA,iCAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,sBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YADA;AAEA,IAAA,kBAFA;AAGA,IAAA;AAHA,GAFA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAPA;;AAaA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA;AAHA,KAAA;AAKA,GAnBA;;AAoBA,EAAA,QAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA;AACA,KAHA;;AAIA,IAAA,IAAA,GAAA;AACA,aAAA,KAAA,KAAA,SAAA,CAAA,EAAA,EAAA;AACA;;AANA,GApBA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,YAAA,SAAA,GAAA,KAAA,SAAA;AACA,WAAA,UAAA,GAAA,SAAA,CAAA,UAAA;AACA,WAAA,SAAA,GAAA,SAAA,CAAA,SAAA;AACA,WAAA,WAAA,GAAA,SAAA,CAAA,WAAA;AACA;;AANA;AA5BA,CAAA","sourcesContent":["<script>\r\nimport ChallengeBox from \"@/components/ChallengeBox\";\r\nimport DescriptionDisplay from \"@/components/DescriptionDisplay\";\r\nimport EffectDisplay from \"@/components/EffectDisplay\";\r\n\r\nexport default {\r\n  name: \"InfinityChallengeBox\",\r\n  components: {\r\n    ChallengeBox,\r\n    DescriptionDisplay,\r\n    EffectDisplay\r\n  },\r\n  props: {\r\n    challenge: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isUnlocked: false,\r\n      isRunning: false,\r\n      isCompleted: false\r\n    };\r\n  },\r\n  computed: {\r\n    config() {\r\n      return this.challenge.config;\r\n    },\r\n    name() {\r\n      return `IC${this.challenge.id}`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const challenge = this.challenge;\r\n      this.isUnlocked = challenge.isUnlocked;\r\n      this.isRunning = challenge.isRunning;\r\n      this.isCompleted = challenge.isCompleted;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ChallengeBox\r\n    :name=\"name\"\r\n    :is-unlocked=\"isUnlocked\"\r\n    :is-running=\"isRunning\"\r\n    :is-completed=\"isCompleted\"\r\n    class=\"c-challenge-box--infinity\"\r\n    @start=\"challenge.requestStart()\"\r\n  >\r\n    <template #top>\r\n      <DescriptionDisplay :config=\"config\" />\r\n      <EffectDisplay\r\n        v-if=\"isRunning\"\r\n        :config=\"config\"\r\n      />\r\n    </template>\r\n    <template #bottom>\r\n      <div class=\"l-challenge-box__bottom--infinity\">\r\n        <span>Goal: {{ format(config.goal) }} antimatter</span>\r\n        <DescriptionDisplay\r\n          :config=\"config.reward\"\r\n          title=\"Reward:\"\r\n        />\r\n        <EffectDisplay\r\n          v-if=\"isCompleted\"\r\n          :config=\"config.reward\"\r\n        />\r\n      </div>\r\n    </template>\r\n  </ChallengeBox>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/infinity-challenges"},"metadata":{},"sourceType":"module"}