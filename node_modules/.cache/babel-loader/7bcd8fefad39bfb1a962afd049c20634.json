{"ast":null,"code":"import ButtonCycle from \"@/components/ButtonCycle\";\nimport ToggleButton from \"@/components/ToggleButton\";\nexport default {\n  name: \"GlyphAutosortButtonGroup\",\n  components: {\n    ToggleButton,\n    ButtonCycle\n  },\n\n  data() {\n    return {\n      autoSort: 0,\n      showScoreFilter: false,\n      autoCollapse: false,\n      showAutoAutoClean: false,\n      autoAutoClean: false,\n      applyFilterToPurge: false\n    };\n  },\n\n  computed: {\n    sortModes() {\n      // These are the keys for AUTO_SORT_MODE, with SCORE only added conditionally if unlocked\n      const availableSortModes = [\"NONE\", \"LEVEL\", \"POWER\", \"EFFECT\"];\n      if (this.showScoreFilter) availableSortModes.push(\"SCORE\");\n      return availableSortModes;\n    },\n\n    questionMarkTooltip() {\n      return `The automatic settings below will apply after every Reality`;\n    },\n\n    keepTooltip() {\n      return \"If set to ON, Glyphs which your filter accepts will never be auto-purged even if they are worse\";\n    }\n\n  },\n  watch: {\n    autoSort(newValue) {\n      player.reality.autoSort = newValue;\n    },\n\n    autoCollapse(newValue) {\n      player.reality.autoCollapse = newValue;\n    },\n\n    autoAutoClean(newValue) {\n      player.reality.autoAutoClean = newValue;\n    },\n\n    applyFilterToPurge(newValue) {\n      player.reality.applyFilterToPurge = newValue;\n    }\n\n  },\n  methods: {\n    update() {\n      this.autoSort = player.reality.autoSort;\n      this.showScoreFilter = EffarigUnlock.glyphFilter.isUnlocked;\n      this.autoCollapse = player.reality.autoCollapse;\n      this.showAutoAutoClean = VUnlocks.autoAutoClean.canBeApplied;\n      this.autoAutoClean = player.reality.autoAutoClean;\n      this.applyFilterToPurge = player.reality.applyFilterToPurge;\n    }\n\n  }\n};","map":{"version":3,"sources":["GlyphAutosortButtonGroup.vue"],"names":[],"mappings":"AACA,OAAA,WAAA,MAAA,0BAAA;AACA,OAAA,YAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,0BADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YADA;AAEA,IAAA;AAFA,GAFA;;AAMA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CADA;AAEA,MAAA,eAAA,EAAA,KAFA;AAGA,MAAA,YAAA,EAAA,KAHA;AAIA,MAAA,iBAAA,EAAA,KAJA;AAKA,MAAA,aAAA,EAAA,KALA;AAMA,MAAA,kBAAA,EAAA;AANA,KAAA;AAQA,GAfA;;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,GAAA;AACA;AACA,YAAA,kBAAA,GAAA,CAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,CAAA;AACA,UAAA,KAAA,eAAA,EAAA,kBAAA,CAAA,IAAA,CAAA,OAAA;AACA,aAAA,kBAAA;AACA,KANA;;AAOA,IAAA,mBAAA,GAAA;AACA,aAAA,6DAAA;AACA,KATA;;AAUA,IAAA,WAAA,GAAA;AACA,aAAA,iGAAA;AACA;;AAZA,GAhBA;AA8BA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,CAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,QAAA,GAAA,QAAA;AACA,KAHA;;AAIA,IAAA,YAAA,CAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,YAAA,GAAA,QAAA;AACA,KANA;;AAOA,IAAA,aAAA,CAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,aAAA,GAAA,QAAA;AACA,KATA;;AAUA,IAAA,kBAAA,CAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,kBAAA,GAAA,QAAA;AACA;;AAZA,GA9BA;AA4CA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,QAAA,GAAA,MAAA,CAAA,OAAA,CAAA,QAAA;AACA,WAAA,eAAA,GAAA,aAAA,CAAA,WAAA,CAAA,UAAA;AACA,WAAA,YAAA,GAAA,MAAA,CAAA,OAAA,CAAA,YAAA;AACA,WAAA,iBAAA,GAAA,QAAA,CAAA,aAAA,CAAA,YAAA;AACA,WAAA,aAAA,GAAA,MAAA,CAAA,OAAA,CAAA,aAAA;AACA,WAAA,kBAAA,GAAA,MAAA,CAAA,OAAA,CAAA,kBAAA;AACA;;AARA;AA5CA,CAAA","sourcesContent":["<script>\r\nimport ButtonCycle from \"@/components/ButtonCycle\";\r\nimport ToggleButton from \"@/components/ToggleButton\";\r\n\r\nexport default {\r\n  name: \"GlyphAutosortButtonGroup\",\r\n  components: {\r\n    ToggleButton,\r\n    ButtonCycle\r\n  },\r\n  data() {\r\n    return {\r\n      autoSort: 0,\r\n      showScoreFilter: false,\r\n      autoCollapse: false,\r\n      showAutoAutoClean: false,\r\n      autoAutoClean: false,\r\n      applyFilterToPurge: false,\r\n    };\r\n  },\r\n  computed: {\r\n    sortModes() {\r\n      // These are the keys for AUTO_SORT_MODE, with SCORE only added conditionally if unlocked\r\n      const availableSortModes = [\"NONE\", \"LEVEL\", \"POWER\", \"EFFECT\"];\r\n      if (this.showScoreFilter) availableSortModes.push(\"SCORE\");\r\n      return availableSortModes;\r\n    },\r\n    questionMarkTooltip() {\r\n      return `The automatic settings below will apply after every Reality`;\r\n    },\r\n    keepTooltip() {\r\n      return \"If set to ON, Glyphs which your filter accepts will never be auto-purged even if they are worse\";\r\n    }\r\n  },\r\n  watch: {\r\n    autoSort(newValue) {\r\n      player.reality.autoSort = newValue;\r\n    },\r\n    autoCollapse(newValue) {\r\n      player.reality.autoCollapse = newValue;\r\n    },\r\n    autoAutoClean(newValue) {\r\n      player.reality.autoAutoClean = newValue;\r\n    },\r\n    applyFilterToPurge(newValue) {\r\n      player.reality.applyFilterToPurge = newValue;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.autoSort = player.reality.autoSort;\r\n      this.showScoreFilter = EffarigUnlock.glyphFilter.isUnlocked;\r\n      this.autoCollapse = player.reality.autoCollapse;\r\n      this.showAutoAutoClean = VUnlocks.autoAutoClean.canBeApplied;\r\n      this.autoAutoClean = player.reality.autoAutoClean;\r\n      this.applyFilterToPurge = player.reality.applyFilterToPurge;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"o-glyph-inventory-management-group\">\r\n    <div class=\"l-glyph-sacrifice-options__header\">\r\n      <div\r\n        v-tooltip=\"questionMarkTooltip\"\r\n        class=\"o-questionmark\"\r\n      >\r\n        ?\r\n      </div>\r\n      Auto Glyph Arrangement:\r\n    </div>\r\n    <ButtonCycle\r\n      v-model=\"autoSort\"\r\n      class=\"c-glyph-inventory-option\"\r\n      text=\"Auto-sort Mode:\"\r\n      :labels=\"sortModes\"\r\n    />\r\n    <ToggleButton\r\n      v-model=\"autoCollapse\"\r\n      class=\"c-glyph-inventory-option\"\r\n      label=\"Auto-collapse space:\"\r\n    />\r\n    <ToggleButton\r\n      v-if=\"showAutoAutoClean\"\r\n      v-model=\"autoAutoClean\"\r\n      class=\"c-glyph-inventory-option\"\r\n      label=\"Auto-purge on Realities:\"\r\n    />\r\n    <ToggleButton\r\n      v-if=\"showAutoAutoClean\"\r\n      v-model=\"applyFilterToPurge\"\r\n      class=\"c-glyph-inventory-option\"\r\n      label=\"Never Auto-purge Glyphs accepted by filter:\"\r\n      tooltip-class=\"c-glyph-inventory-option__tooltip\"\r\n      :tooltip-content=\"keepTooltip\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/glyphs/sidebar"},"metadata":{},"sourceType":"module"}