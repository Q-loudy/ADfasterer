{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { BitUpgradeState, GameMechanicState } from \"../game-mechanics\";\nimport { GameDatabase } from \"../secret-formula/game-database\";\nimport { SpeedrunMilestones } from \"../speedrun\";\nimport { Quotes } from \"./quotes\";\n/**\r\n * Information about how to format runUnlocks:\r\n * id: unique id\r\n * name: the achievement name\r\n * description: Description what you need to do, for values add {value}\r\n * values: different values to display and check against the game\r\n * condition: function that takes the current value as an argument, if true completes an achievement\r\n * format: optional function that formats the value, defaults to format()\r\n */\n\nclass VRunUnlockState extends GameMechanicState {\n  get completions() {\n    const completions = player.celestials.v.runUnlocks[this.id];\n    return completions === undefined ? 0 : completions;\n  }\n\n  get conditionBaseValue() {\n    const value = this.config.values[this.completions];\n    return value === undefined ? this.config.values[this.completions - 1] : value;\n  }\n\n  get canBeReduced() {\n    return this.completions < this.config.values.length && this.completions !== 0 && new Decimal(this.reduction).neq(this.config.maxShardReduction(this.conditionBaseValue));\n  }\n\n  get isReduced() {\n    if (player.celestials.v.goalReductionSteps[this.id] === 0) return false;\n    return VUnlocks.shardReduction.canBeApplied && this.reduction > 0;\n  }\n\n  get reductionCost() {\n    const stepCount = this.config.reductionStepSize ? this.config.reductionStepSize : 1;\n\n    if (this.config.isHard) {\n      // The numbers come from inside of nextHardReductionCost, this is an effective bulk-buy factor\n      const modifiedStepCount = (Math.pow(1.15, stepCount) - 1) / 0.15;\n      return modifiedStepCount * V.nextHardReductionCost(player.celestials.v.goalReductionSteps[this.id]);\n    }\n\n    return stepCount * V.nextNormalReductionCost();\n  }\n\n  get tiersReduced() {\n    return player.celestials.v.goalReductionSteps[this.id] / 100;\n  }\n\n  get reduction() {\n    const value = this.conditionBaseValue;\n    return Math.clamp(this.config.shardReduction(this.tiersReduced), 0, this.config.maxShardReduction(value));\n  }\n\n  get conditionValue() {\n    let value = this.conditionBaseValue;\n    if (!this.isReduced) return value;\n    value -= this.reduction;\n    return value;\n  }\n\n  get formattedDescription() {\n    return this.config.description(this.conditionValue);\n  }\n\n  set completions(value) {\n    player.celestials.v.runUnlocks[this.id] = value;\n  }\n\n  tryComplete() {\n    const playerData = player.celestials.v;\n    const value = this.config.currentValue();\n\n    if (this.config.condition() && Decimal.gte(value, playerData.runRecords[this.id])) {\n      playerData.runRecords[this.id] = value;\n      playerData.runGlyphs[this.id] = Glyphs.copyForRecords(Glyphs.active.filter(g => g !== null));\n    }\n\n    while (this.completions < this.config.values.length && Decimal.gte(playerData.runRecords[this.id], this.conditionValue)) {\n      if (!V.isFlipped && this.config.isHard) continue;\n      this.completions++;\n      GameUI.notify.success(`You have unlocked V-Achievement\n        '${this.config.name}' tier ${formatInt(this.completions)}`);\n      V.updateTotalRunUnlocks();\n\n      for (const quote of V.quotes.all) {\n        // Quotes without requirements will be shown in other ways\n        if (quote.requirement) {\n          quote.show();\n        }\n      }\n    }\n  }\n\n}\n\nclass VUnlockState extends BitUpgradeState {\n  get bits() {\n    return player.celestials.v.unlockBits;\n  }\n\n  set bits(value) {\n    player.celestials.v.unlockBits = value;\n  }\n\n  get pelleDisabled() {\n    return Pelle.isDoomed && this !== VUnlocks.vAchievementUnlock;\n  }\n\n  get isEffectActive() {\n    return this.isUnlocked && !this.pelleDisabled;\n  }\n\n  get description() {\n    return typeof this.config.description === \"function\" ? this.config.description() : this.config.description;\n  }\n\n  get rewardText() {\n    return typeof this.config.reward === \"function\" ? this.config.reward() : this.config.reward;\n  }\n\n  get canBeUnlocked() {\n    return this.config.requirement() && !this.isUnlocked;\n  }\n\n  get formattedEffect() {\n    if (!this.config.effect || !this.config.format) return \"\";\n    return this.config.format(this.effectValue);\n  }\n\n  onUnlock() {\n    GameUI.notify.success(this.description);\n  }\n\n}\n/**\r\n * @param {number} id\r\n * @return {VRunUnlockState}\r\n */\n\n\nexport const VRunUnlock = VRunUnlockState.createAccessor(GameDatabase.celestials.v.runUnlocks);\nexport const VRunUnlocks = {\n  /**\r\n   * @type {VRunUnlockState[]}\r\n   */\n  all: VRunUnlock.index.compact()\n};\nexport const VUnlocks = mapGameDataToObject(GameDatabase.celestials.v.unlocks, config => new VUnlockState(config));\nexport const V = {\n  displayName: \"V\",\n  possessiveName: \"V's\",\n  spaceTheorems: 0,\n\n  checkForUnlocks() {\n    for (const unl of VUnlocks.all) {\n      if (unl === VUnlocks.vAchievementUnlock) continue;\n      unl.unlock();\n    }\n\n    if (this.isRunning) {\n      for (const unlock of VRunUnlocks.all) {\n        unlock.tryComplete();\n      }\n\n      if (this.spaceTheorems >= 36) SpeedrunMilestones(22).tryComplete();\n    }\n\n    if (VUnlocks.raUnlock.canBeApplied && !Ra.unlocks.autoTP.canBeApplied) {\n      Ra.checkForUnlocks();\n    }\n  },\n\n  get canUnlockCelestial() {\n    return VUnlocks.vAchievementUnlock.canBeUnlocked;\n  },\n\n  unlockCelestial() {\n    player.celestials.v.unlockBits |= 1 << VUnlocks.vAchievementUnlock.id;\n    GameUI.notify.success(\"You have unlocked V, The Celestial Of Achievements!\", 10000);\n    V.quotes.unlock.show();\n  },\n\n  initializeRun() {\n    clearCelestialRuns();\n    player.celestials.v.run = true;\n    this.quotes.realityEnter.show();\n  },\n\n  updateTotalRunUnlocks() {\n    let sum = 0;\n\n    for (let i = 0; i < player.celestials.v.runUnlocks.length; i++) {\n      if (i < 6) sum += player.celestials.v.runUnlocks[i];else sum += player.celestials.v.runUnlocks[i] * 2;\n    }\n\n    this.spaceTheorems = sum;\n  },\n\n  reset() {\n    player.celestials.v = {\n      unlockBits: 0,\n      run: false,\n      quotes: [],\n      runUnlocks: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      goalReductionSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      STSpent: 0,\n      runGlyphs: [[], [], [], [], [], [], [], [], []],\n      runRecords: [-10, 0, 0, 0, 0, 0, 0, 0, 0]\n    };\n    this.spaceTheorems = 0;\n  },\n\n  get availableST() {\n    return V.spaceTheorems - player.celestials.v.STSpent;\n  },\n\n  get isRunning() {\n    return player.celestials.v.run;\n  },\n\n  get isFlipped() {\n    return Ra.unlocks.unlockHardV.isUnlocked;\n  },\n\n  get isFullyCompleted() {\n    return this.spaceTheorems >= 66;\n  },\n\n  nextNormalReductionCost() {\n    return 1000;\n  },\n\n  nextHardReductionCost(currReductionSteps) {\n    return 1000 * Math.pow(1.15, currReductionSteps);\n  },\n\n  quotes: Quotes.v,\n  symbol: \"âŒ¬\"\n};\nEventHub.logic.on(GAME_EVENT.TAB_CHANGED, () => {\n  if (Tab.celestials.v.isOpen) V.quotes.initial.show();\n});","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/celestials/V.js"],"names":["BitUpgradeState","GameMechanicState","GameDatabase","SpeedrunMilestones","Quotes","VRunUnlockState","completions","player","celestials","v","runUnlocks","id","undefined","conditionBaseValue","value","config","values","canBeReduced","length","Decimal","reduction","neq","maxShardReduction","isReduced","goalReductionSteps","VUnlocks","shardReduction","canBeApplied","reductionCost","stepCount","reductionStepSize","isHard","modifiedStepCount","Math","pow","V","nextHardReductionCost","nextNormalReductionCost","tiersReduced","clamp","conditionValue","formattedDescription","description","tryComplete","playerData","currentValue","condition","gte","runRecords","runGlyphs","Glyphs","copyForRecords","active","filter","g","isFlipped","GameUI","notify","success","name","formatInt","updateTotalRunUnlocks","quote","quotes","all","requirement","show","VUnlockState","bits","unlockBits","pelleDisabled","Pelle","isDoomed","vAchievementUnlock","isEffectActive","isUnlocked","rewardText","reward","canBeUnlocked","formattedEffect","effect","format","effectValue","onUnlock","VRunUnlock","createAccessor","VRunUnlocks","index","compact","mapGameDataToObject","unlocks","displayName","possessiveName","spaceTheorems","checkForUnlocks","unl","unlock","isRunning","raUnlock","Ra","autoTP","canUnlockCelestial","unlockCelestial","initializeRun","clearCelestialRuns","run","realityEnter","sum","i","reset","STSpent","availableST","unlockHardV","isFullyCompleted","currReductionSteps","symbol","EventHub","logic","on","GAME_EVENT","TAB_CHANGED","Tab","isOpen","initial"],"mappings":"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","sourcesContent":["import { BitUpgradeState, GameMechanicState } from \"../game-mechanics\";\r\nimport { GameDatabase } from \"../secret-formula/game-database\";\r\n\r\nimport { SpeedrunMilestones } from \"../speedrun\";\r\n\r\nimport { Quotes } from \"./quotes\";\r\n\r\n/**\r\n * Information about how to format runUnlocks:\r\n * id: unique id\r\n * name: the achievement name\r\n * description: Description what you need to do, for values add {value}\r\n * values: different values to display and check against the game\r\n * condition: function that takes the current value as an argument, if true completes an achievement\r\n * format: optional function that formats the value, defaults to format()\r\n */\r\n\r\nclass VRunUnlockState extends GameMechanicState {\r\n  get completions() {\r\n    const completions = player.celestials.v.runUnlocks[this.id];\r\n    return completions === undefined ? 0 : completions;\r\n  }\r\n\r\n  get conditionBaseValue() {\r\n    const value = this.config.values[this.completions];\r\n    return value === undefined ? this.config.values[this.completions - 1] : value;\r\n  }\r\n\r\n  get canBeReduced() {\r\n    return this.completions < this.config.values.length && this.completions !== 0 &&\r\n      new Decimal(this.reduction).neq(this.config.maxShardReduction(this.conditionBaseValue));\r\n  }\r\n\r\n  get isReduced() {\r\n    if (player.celestials.v.goalReductionSteps[this.id] === 0) return false;\r\n    return (VUnlocks.shardReduction.canBeApplied && this.reduction > 0);\r\n  }\r\n\r\n  get reductionCost() {\r\n    const stepCount = this.config.reductionStepSize ? this.config.reductionStepSize : 1;\r\n    if (this.config.isHard) {\r\n      // The numbers come from inside of nextHardReductionCost, this is an effective bulk-buy factor\r\n      const modifiedStepCount = (Math.pow(1.15, stepCount) - 1) / 0.15;\r\n      return modifiedStepCount * V.nextHardReductionCost(player.celestials.v.goalReductionSteps[this.id]);\r\n    }\r\n    return stepCount * V.nextNormalReductionCost();\r\n  }\r\n\r\n  get tiersReduced() {\r\n    return player.celestials.v.goalReductionSteps[this.id] / 100;\r\n  }\r\n\r\n  get reduction() {\r\n    const value = this.conditionBaseValue;\r\n    return Math.clamp(this.config.shardReduction(this.tiersReduced), 0, this.config.maxShardReduction(value));\r\n  }\r\n\r\n  get conditionValue() {\r\n    let value = this.conditionBaseValue;\r\n    if (!this.isReduced) return value;\r\n    value -= this.reduction;\r\n    return value;\r\n  }\r\n\r\n  get formattedDescription() {\r\n    return this.config.description(this.conditionValue);\r\n  }\r\n\r\n  set completions(value) {\r\n    player.celestials.v.runUnlocks[this.id] = value;\r\n  }\r\n\r\n  tryComplete() {\r\n    const playerData = player.celestials.v;\r\n    const value = this.config.currentValue();\r\n    if (this.config.condition() && Decimal.gte(value, playerData.runRecords[this.id])) {\r\n      playerData.runRecords[this.id] = value;\r\n      playerData.runGlyphs[this.id] = Glyphs.copyForRecords(Glyphs.active.filter(g => g !== null));\r\n    }\r\n\r\n    while (this.completions < this.config.values.length &&\r\n    Decimal.gte(playerData.runRecords[this.id], this.conditionValue)) {\r\n      if (!V.isFlipped && this.config.isHard) continue;\r\n      this.completions++;\r\n      GameUI.notify.success(`You have unlocked V-Achievement\r\n        '${this.config.name}' tier ${formatInt(this.completions)}`);\r\n\r\n      V.updateTotalRunUnlocks();\r\n\r\n      for (const quote of V.quotes.all) {\r\n        // Quotes without requirements will be shown in other ways\r\n        if (quote.requirement) {\r\n          quote.show();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass VUnlockState extends BitUpgradeState {\r\n  get bits() { return player.celestials.v.unlockBits; }\r\n  set bits(value) { player.celestials.v.unlockBits = value; }\r\n\r\n  get pelleDisabled() {\r\n    return Pelle.isDoomed && this !== VUnlocks.vAchievementUnlock;\r\n  }\r\n\r\n  get isEffectActive() {\r\n    return this.isUnlocked && !this.pelleDisabled;\r\n  }\r\n\r\n  get description() {\r\n    return typeof this.config.description === \"function\" ? this.config.description()\r\n      : this.config.description;\r\n  }\r\n\r\n  get rewardText() {\r\n    return typeof this.config.reward === \"function\" ? this.config.reward()\r\n      : this.config.reward;\r\n  }\r\n\r\n  get canBeUnlocked() {\r\n    return this.config.requirement() && !this.isUnlocked;\r\n  }\r\n\r\n  get formattedEffect() {\r\n    if (!this.config.effect || !this.config.format) return \"\";\r\n\r\n    return this.config.format(this.effectValue);\r\n  }\r\n\r\n  onUnlock() {\r\n    GameUI.notify.success(this.description);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {number} id\r\n * @return {VRunUnlockState}\r\n */\r\nexport const VRunUnlock = VRunUnlockState.createAccessor(GameDatabase.celestials.v.runUnlocks);\r\n\r\nexport const VRunUnlocks = {\r\n  /**\r\n   * @type {VRunUnlockState[]}\r\n   */\r\n  all: VRunUnlock.index.compact(),\r\n};\r\n\r\nexport const VUnlocks = mapGameDataToObject(\r\n  GameDatabase.celestials.v.unlocks,\r\n  config => new VUnlockState(config)\r\n);\r\n\r\nexport const V = {\r\n  displayName: \"V\",\r\n  possessiveName: \"V's\",\r\n  spaceTheorems: 0,\r\n  checkForUnlocks() {\r\n    for (const unl of VUnlocks.all) {\r\n      if (unl === VUnlocks.vAchievementUnlock) continue;\r\n      unl.unlock();\r\n    }\r\n\r\n    if (this.isRunning) {\r\n      for (const unlock of VRunUnlocks.all) {\r\n        unlock.tryComplete();\r\n      }\r\n      if (this.spaceTheorems >= 36) SpeedrunMilestones(22).tryComplete();\r\n    }\r\n\r\n    if (VUnlocks.raUnlock.canBeApplied && !Ra.unlocks.autoTP.canBeApplied) {\r\n      Ra.checkForUnlocks();\r\n    }\r\n  },\r\n  get canUnlockCelestial() {\r\n    return VUnlocks.vAchievementUnlock.canBeUnlocked;\r\n  },\r\n  unlockCelestial() {\r\n    player.celestials.v.unlockBits |= (1 << VUnlocks.vAchievementUnlock.id);\r\n    GameUI.notify.success(\"You have unlocked V, The Celestial Of Achievements!\", 10000);\r\n    V.quotes.unlock.show();\r\n  },\r\n  initializeRun() {\r\n    clearCelestialRuns();\r\n    player.celestials.v.run = true;\r\n    this.quotes.realityEnter.show();\r\n  },\r\n  updateTotalRunUnlocks() {\r\n    let sum = 0;\r\n    for (let i = 0; i < player.celestials.v.runUnlocks.length; i++) {\r\n      if (i < 6) sum += player.celestials.v.runUnlocks[i];\r\n      else sum += player.celestials.v.runUnlocks[i] * 2;\r\n    }\r\n    this.spaceTheorems = sum;\r\n  },\r\n  reset() {\r\n    player.celestials.v = {\r\n      unlockBits: 0,\r\n      run: false,\r\n      quotes: [],\r\n      runUnlocks: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      goalReductionSteps: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      STSpent: 0,\r\n      runGlyphs: [[], [], [], [], [], [], [], [], []],\r\n      runRecords: [-10, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    };\r\n    this.spaceTheorems = 0;\r\n  },\r\n  get availableST() {\r\n    return V.spaceTheorems - player.celestials.v.STSpent;\r\n  },\r\n  get isRunning() {\r\n    return player.celestials.v.run;\r\n  },\r\n  get isFlipped() {\r\n    return Ra.unlocks.unlockHardV.isUnlocked;\r\n  },\r\n  get isFullyCompleted() {\r\n    return this.spaceTheorems >= 66;\r\n  },\r\n  nextNormalReductionCost() {\r\n    return 1000;\r\n  },\r\n  nextHardReductionCost(currReductionSteps) {\r\n    return 1000 * Math.pow(1.15, currReductionSteps);\r\n  },\r\n  quotes: Quotes.v,\r\n  symbol: \"âŒ¬\"\r\n};\r\n\r\nEventHub.logic.on(GAME_EVENT.TAB_CHANGED, () => {\r\n  if (Tab.celestials.v.isOpen) V.quotes.initial.show();\r\n});\r\n"]},"metadata":{},"sourceType":"module"}