{"ast":null,"code":"import HintText from \"@/components/HintText\";\nexport default {\n  name: \"EternityChallengeBoxWrapper\",\n  components: {\n    HintText\n  },\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    isUnlocked: {\n      type: Boolean,\n      required: true\n    },\n    isRunning: {\n      type: Boolean,\n      required: true\n    },\n    isCompleted: {\n      type: Boolean,\n      required: true\n    },\n    canBeUnlocked: {\n      type: Boolean,\n      required: true\n    },\n    completionCount: {\n      type: Number,\n      required: true\n    },\n    overrideLabel: {\n      type: String,\n      required: false,\n      default: \"\"\n    }\n  },\n\n  data() {\n    return {\n      challengeId: Number\n    };\n  },\n\n  computed: {\n    buttonClassObject() {\n      const challengeDone = this.isCompleted && !this.isUnlocked;\n      const challengeRedo = this.isCompleted && this.isUnlocked && !this.isRunning;\n      const challengeUnlock = this.isUnlocked || this.canBeUnlocked;\n      const challengeLocked = !this.isCompleted && !this.isUnlocked && !this.isRunning && !this.canBeUnlocked; // ECs can be not unlocked and also not locked, because they're fully completed,\n      // but in that case you can't enter them and so it's important to give them a property\n      // that disables cursor on hover. The same thing happens if it is running.\n\n      const challengeClickable = !this.isRunning && (!this.isCompleted && this.canBeUnlocked || this.isUnlocked);\n      return {\n        \"o-challenge-btn\": true,\n        \"o-challenge-btn--running\": this.isRunning,\n        \"o-challenge-btn--completed\": challengeDone,\n        \"o-challenge-btn--redo\": challengeRedo,\n        \"o-challenge-btn--unlocked\": !challengeDone && challengeUnlock,\n        \"o-challenge-btn--locked\": challengeLocked,\n        \"o-challenge-btn--unenterable\": !challengeClickable\n      };\n    },\n\n    // Width and height attributes are copied from o-challenge-btn\n    completionOverlay() {\n      return {\n        position: \"absolute\",\n        width: `${15 * Math.clampMax(this.completionCount / 5, 1)}rem`,\n        height: \"3rem\",\n        background: \"var(--color-good)\",\n        opacity: this.completionCount >= 5 ? 0 : 0.3,\n        \"border-top-left-radius\": \"var(--var-border-radius, 1rem)\",\n        \"border-bottom-left-radius\": \"var(--var-border-radius, 1rem)\",\n        \"pointer-events\": \"none\"\n      };\n    },\n\n    buttonText() {\n      if (this.overrideLabel.length) return this.overrideLabel;\n      if (this.isRunning) return \"Running\";\n\n      if (this.isCompleted) {\n        if (this.isUnlocked) return \"Redo\";\n        return \"Completed\";\n      }\n\n      if (this.isUnlocked) return \"Start\";\n      if (this.canBeUnlocked) return \"Unlock\";\n      return \"Locked\";\n    }\n\n  }\n};","map":{"version":3,"sources":["EternityChallengeBoxWrapper.vue"],"names":[],"mappings":"AACA,OAAA,QAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,6BADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KALA;AASA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KATA;AAaA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AAzBA,GALA;;AAoCA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AADA,KAAA;AAGA,GAxCA;;AAyCA,EAAA,QAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACA,YAAA,aAAA,GAAA,KAAA,WAAA,IAAA,CAAA,KAAA,UAAA;AACA,YAAA,aAAA,GAAA,KAAA,WAAA,IAAA,KAAA,UAAA,IAAA,CAAA,KAAA,SAAA;AACA,YAAA,eAAA,GAAA,KAAA,UAAA,IAAA,KAAA,aAAA;AACA,YAAA,eAAA,GAAA,CAAA,KAAA,WAAA,IAAA,CAAA,KAAA,UAAA,IAAA,CAAA,KAAA,SAAA,IAAA,CAAA,KAAA,aAAA,CAJA,CAKA;AACA;AACA;;AACA,YAAA,kBAAA,GAAA,CAAA,KAAA,SAAA,KAAA,CAAA,KAAA,WAAA,IAAA,KAAA,aAAA,IAAA,KAAA,UAAA,CAAA;AACA,aAAA;AACA,2BAAA,IADA;AAEA,oCAAA,KAAA,SAFA;AAGA,sCAAA,aAHA;AAIA,iCAAA,aAJA;AAKA,qCAAA,CAAA,aAAA,IAAA,eALA;AAMA,mCAAA,eANA;AAOA,wCAAA,CAAA;AAPA,OAAA;AASA,KAnBA;;AAoBA;AACA,IAAA,iBAAA,GAAA;AACA,aAAA;AACA,QAAA,QAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA,GAAA,KAAA,IAAA,CAAA,QAAA,CAAA,KAAA,eAAA,GAAA,CAAA,EAAA,CAAA,CAAA,KAFA;AAGA,QAAA,MAAA,EAAA,MAHA;AAIA,QAAA,UAAA,EAAA,mBAJA;AAKA,QAAA,OAAA,EAAA,KAAA,eAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GALA;AAMA,kCAAA,gCANA;AAOA,qCAAA,gCAPA;AAQA,0BAAA;AARA,OAAA;AAUA,KAhCA;;AAiCA,IAAA,UAAA,GAAA;AACA,UAAA,KAAA,aAAA,CAAA,MAAA,EAAA,OAAA,KAAA,aAAA;AACA,UAAA,KAAA,SAAA,EAAA,OAAA,SAAA;;AACA,UAAA,KAAA,WAAA,EAAA;AACA,YAAA,KAAA,UAAA,EAAA,OAAA,MAAA;AACA,eAAA,WAAA;AACA;;AACA,UAAA,KAAA,UAAA,EAAA,OAAA,OAAA;AACA,UAAA,KAAA,aAAA,EAAA,OAAA,QAAA;AACA,aAAA,QAAA;AACA;;AA3CA;AAzCA,CAAA","sourcesContent":["<script>\r\nimport HintText from \"@/components/HintText\";\r\n\r\nexport default {\r\n  name: \"EternityChallengeBoxWrapper\",\r\n  components: {\r\n    HintText\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    isUnlocked: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    isRunning: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    isCompleted: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    canBeUnlocked: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    completionCount: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    overrideLabel: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      challengeId: Number,\r\n    };\r\n  },\r\n  computed: {\r\n    buttonClassObject() {\r\n      const challengeDone = this.isCompleted && !this.isUnlocked;\r\n      const challengeRedo = this.isCompleted && this.isUnlocked && !this.isRunning;\r\n      const challengeUnlock = this.isUnlocked || this.canBeUnlocked;\r\n      const challengeLocked = !this.isCompleted && !this.isUnlocked && !this.isRunning && !this.canBeUnlocked;\r\n      // ECs can be not unlocked and also not locked, because they're fully completed,\r\n      // but in that case you can't enter them and so it's important to give them a property\r\n      // that disables cursor on hover. The same thing happens if it is running.\r\n      const challengeClickable = !this.isRunning && ((!this.isCompleted && this.canBeUnlocked) || this.isUnlocked);\r\n      return {\r\n        \"o-challenge-btn\": true,\r\n        \"o-challenge-btn--running\": this.isRunning,\r\n        \"o-challenge-btn--completed\": challengeDone,\r\n        \"o-challenge-btn--redo\": challengeRedo,\r\n        \"o-challenge-btn--unlocked\": !challengeDone && challengeUnlock,\r\n        \"o-challenge-btn--locked\": challengeLocked,\r\n        \"o-challenge-btn--unenterable\": !challengeClickable,\r\n      };\r\n    },\r\n    // Width and height attributes are copied from o-challenge-btn\r\n    completionOverlay() {\r\n      return {\r\n        position: \"absolute\",\r\n        width: `${15 * Math.clampMax(this.completionCount / 5, 1)}rem`,\r\n        height: \"3rem\",\r\n        background: \"var(--color-good)\",\r\n        opacity: this.completionCount >= 5 ? 0 : 0.3,\r\n        \"border-top-left-radius\": \"var(--var-border-radius, 1rem)\",\r\n        \"border-bottom-left-radius\": \"var(--var-border-radius, 1rem)\",\r\n        \"pointer-events\": \"none\",\r\n      };\r\n    },\r\n    buttonText() {\r\n      if (this.overrideLabel.length) return this.overrideLabel;\r\n      if (this.isRunning) return \"Running\";\r\n      if (this.isCompleted) {\r\n        if (this.isUnlocked) return \"Redo\";\r\n        return \"Completed\";\r\n      }\r\n      if (this.isUnlocked) return \"Start\";\r\n      if (this.canBeUnlocked) return \"Unlock\";\r\n      return \"Locked\";\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"c-challenge-box l-challenge-box c-challenge-box--eternity\">\r\n    <HintText\r\n      type=\"challenges\"\r\n      class=\"l-hint-text--challenge\"\r\n    >\r\n      {{ name }}\r\n    </HintText>\r\n    <slot name=\"top\" />\r\n    <div class=\"l-challenge-box__fill\" />\r\n    <div>\r\n      <div :style=\"completionOverlay\" />\r\n      <button\r\n        :class=\"buttonClassObject\"\r\n        @click=\"$emit('start')\"\r\n      >\r\n        {{ buttonText }}\r\n      </button>\r\n    </div>\r\n    <slot name=\"bottom\" />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/eternity-challenges"},"metadata":{},"sourceType":"module"}