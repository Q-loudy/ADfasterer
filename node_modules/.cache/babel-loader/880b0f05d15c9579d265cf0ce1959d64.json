{"ast":null,"code":"import \"core-js/modules/es.symbol.description.js\";\nexport default {\n  name: \"BlackHoleStateRow\",\n  props: {\n    blackHole: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      isUnlocked: false,\n      isPermanent: false,\n      isActive: false,\n      isCharged: false,\n      nextChange: \"\",\n      state: \"\"\n    };\n  },\n\n  computed: {\n    description() {\n      return this.blackHole.description(true);\n    },\n\n    id() {\n      return this.blackHole.id;\n    }\n\n  },\n  methods: {\n    update() {\n      const {\n        blackHole\n      } = this;\n      this.isUnlocked = blackHole.isUnlocked;\n      if (!this.isUnlocked) return;\n      this.isPermanent = blackHole.isPermanent;\n      this.isActive = blackHole.isActive;\n      this.isCharged = blackHole.isCharged;\n      this.nextChange = TimeSpan.fromSeconds(blackHole.timeWithPreviousActiveToNextStateChange).toStringShort();\n      this.state = blackHole.displayState;\n    }\n\n  }\n};","map":{"version":3,"sources":["BlackHoleStateRow.vue"],"names":[],"mappings":";AACA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;;AAQA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,QAAA,EAAA,KAHA;AAIA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,UAAA,EAAA,EALA;AAMA,MAAA,KAAA,EAAA;AANA,KAAA;AAQA,GAjBA;;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,WAAA,GAAA;AACA,aAAA,KAAA,SAAA,CAAA,WAAA,CAAA,IAAA,CAAA;AACA,KAHA;;AAIA,IAAA,EAAA,GAAA;AACA,aAAA,KAAA,SAAA,CAAA,EAAA;AACA;;AANA,GAlBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,YAAA;AAAA,QAAA;AAAA,UAAA,IAAA;AACA,WAAA,UAAA,GAAA,SAAA,CAAA,UAAA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,WAAA,WAAA,GAAA,SAAA,CAAA,WAAA;AACA,WAAA,QAAA,GAAA,SAAA,CAAA,QAAA;AACA,WAAA,SAAA,GAAA,SAAA,CAAA,SAAA;AACA,WAAA,UAAA,GAAA,QAAA,CAAA,WAAA,CAAA,SAAA,CAAA,uCAAA,EAAA,aAAA,EAAA;AACA,WAAA,KAAA,GAAA,SAAA,CAAA,YAAA;AACA;;AAVA;AA1BA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"BlackHoleStateRow\",\r\n  props: {\r\n    blackHole: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isUnlocked: false,\r\n      isPermanent: false,\r\n      isActive: false,\r\n      isCharged: false,\r\n      nextChange: \"\",\r\n      state: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    description() {\r\n      return this.blackHole.description(true);\r\n    },\r\n    id() {\r\n      return this.blackHole.id;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const { blackHole } = this;\r\n      this.isUnlocked = blackHole.isUnlocked;\r\n      if (!this.isUnlocked) return;\r\n      this.isPermanent = blackHole.isPermanent;\r\n      this.isActive = blackHole.isActive;\r\n      this.isCharged = blackHole.isCharged;\r\n      this.nextChange = TimeSpan.fromSeconds(blackHole.timeWithPreviousActiveToNextStateChange).toStringShort();\r\n      this.state = blackHole.displayState;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <h3 v-if=\"isUnlocked\">\r\n    {{ description }} State:\r\n    <template v-if=\"isPermanent\">\r\n      Permanently Active\r\n    </template>\r\n    <template v-else-if=\"isActive\">\r\n      Active ({{ nextChange }} remaining)\r\n    </template>\r\n    <template v-else-if=\"id === 2 && isCharged\">\r\n      Charged (Activates with Black Hole 1, {{ nextChange }} remaining)\r\n    </template>\r\n    <template v-else>\r\n      Inactive (Activation in {{ nextChange }})\r\n    </template>\r\n  </h3>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/black-hole"},"metadata":{},"sourceType":"module"}