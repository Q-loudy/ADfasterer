{"ast":null,"code":"// This wraps a control box of some sort (like glyph weight adjust) in\n// a dropdown menu like container.\n// You can force it to open programmatically by sending it an openrequest event\nexport default {\n  name: \"ExpandingControlBox\",\n  props: {\n    // Class assigned to visible container; specify border and background here\n    containerClass: {\n      type: String,\n      required: false,\n      default: undefined\n    },\n    label: {\n      type: String,\n      required: false,\n      default: undefined\n    },\n    widthSource: {\n      // Content sizes the width based on what's in the dropdown.\n      // header sizes based on the menu header (container ref)\n      type: String,\n      required: false,\n      default: undefined\n    },\n    buttonClass: {\n      type: String,\n      required: false,\n      default: \"l-expanding-control-box__button\"\n    },\n    autoClose: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      state: null,\n      openRequest: false,\n      closedHeight: \"1em\",\n      openHeight: \"1em\",\n      hasMouse: false,\n      closeTime: 0\n    };\n  },\n\n  computed: {\n    states: () => ({\n      CLOSED: {\n        name: \"CLOSED\",\n        transition: false,\n        visibility: false,\n        height: \"closed\"\n      },\n      OPEN_REQUESTED: {\n        name: \"OPEN_REQUESTED\",\n        transition: true,\n        visibility: true,\n        height: \"closed\"\n      },\n      OPENING: {\n        name: \"OPENING\",\n        transition: true,\n        visibility: true,\n        height: \"open\"\n      },\n      OPEN: {\n        name: \"OPEN\",\n        transition: false,\n        visibility: true,\n        height: null\n      },\n      CLOSE_REQUESTED: {\n        name: \"CLOSE_REQUESTED\",\n        transition: false,\n        visibility: true,\n        height: \"open\"\n      },\n      CLOSING: {\n        name: \"CLOSING\",\n        transition: true,\n        visibility: true,\n        height: \"closed\"\n      }\n    }),\n\n    maxHeight() {\n      if (this.state.height === \"open\") return this.openHeight;\n      return this.state.height === \"closed\" ? this.closedHeight : null;\n    },\n\n    rootClassObject() {\n      return {\n        \"l-expanding-control-box--controls-width\": this.widthSource !== undefined\n      };\n    },\n\n    containerStyle() {\n      return {\n        maxHeight: this.maxHeight,\n        visibility: this.state.visibility\n      };\n    },\n\n    containerClassObject() {\n      var _this$state;\n\n      const classes = {\n        \"l-expanding-control-box__container--transition\": (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.transition\n      };\n      classes[this.containerClass] = true;\n      return classes;\n    },\n\n    indicatorArrowClassObject() {\n      return {\n        \"c-indicator-arrow\": true,\n        \"c-indicator-arrow--flipped\": this.state === this.states.OPENING || this.state === this.states.OPEN\n      };\n    }\n\n  },\n  watch: {\n    state(newState) {\n      this.processRequest(newState, this.openRequest);\n      this.updateHeightInfo();\n\n      switch (this.state) {\n        case this.states.CLOSED:\n          break;\n\n        case this.states.OPEN_REQUESTED:\n          this.$nextTick(() => this.state = this.states.OPENING);\n          break;\n\n        case this.states.OPENING:\n          break;\n\n        case this.states.OPEN:\n          break;\n\n        case this.states.CLOSE_REQUESTED:\n          // Need to have DOM update with CLOSE_REQUESTED state to re-enable transitions\n          this.$nextTick(() => this.state = this.states.CLOSING);\n          break;\n\n        case this.CLOSING:\n          break;\n      }\n    },\n\n    openRequest(newOpen) {\n      this.processRequest(this.state, newOpen);\n    }\n\n  },\n\n  created() {\n    this.state = this.states.CLOSED;\n    this.on$(\"openrequest\", () => this.openRequest = true);\n  },\n\n  mounted() {\n    // Set the root and container elements to match the height of the button\n    this.updateHeightInfo();\n    this.$refs.root.style.height = this.closedHeight;\n    this.updateBaseWidth();\n  },\n\n  methods: {\n    update() {\n      const secSinceMouseOff = this.hasMouse ? 0 : (Date.now() - this.closeTime) / 1000;\n      if (this.autoClose && this.state === this.states.OPEN && secSinceMouseOff > 1) this.openRequest = false;\n    },\n\n    processRequest(state, request) {\n      if (request && (state === this.states.CLOSED || state === this.states.CLOSE_REQUESTED)) {\n        this.state = this.states.OPEN_REQUESTED;\n      }\n\n      if (!request && (state === this.states.OPEN || state === this.states.OPEN_REQUESTED)) {\n        this.state = this.states.CLOSE_REQUESTED;\n      }\n    },\n\n    updateBaseWidth() {\n      if (this.widthSource === \"content\") {\n        this.$refs.container.style.width = `${this.$refs.dropdown.offsetWidth}px`;\n        this.$refs.root.style.width = `${this.$refs.dropdown.offsetWidth}px`;\n      } else if (this.widthSource === \"header\") {\n        this.$refs.root.style.width = `${this.$refs.container.offsetWidth}px`;\n      }\n    },\n\n    updateHeightInfo() {\n      const headerHeight = this.$refs.expandButton.offsetHeight;\n      this.closedHeight = `${headerHeight}px`;\n      this.openHeight = `${headerHeight + this.$refs.dropdown.offsetHeight}px`;\n    },\n\n    transitionEnd(event) {\n      if (event.propertyName !== \"max-height\") return;\n\n      if (this.state === this.states.OPENING) {\n        this.state = this.states.OPEN;\n      } else if (this.state === this.states.CLOSING) {\n        this.state = this.states.CLOSED;\n      }\n    },\n\n    handleClick() {\n      this.openRequest = !this.openRequest;\n      this.hasMouse = this.openRequest;\n    },\n\n    mouseOn() {\n      this.hasMouse = true;\n    },\n\n    mouseOff() {\n      this.hasMouse = false;\n      this.closeTime = Date.now();\n    }\n\n  }\n};","map":{"version":3,"sources":["ExpandingControlBox.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\n// This wraps a control box of some sort (like glyph weight adjust) in\r\n// a dropdown menu like container.\r\n// You can force it to open programmatically by sending it an openrequest event\r\n\r\nexport default {\r\n  name: \"ExpandingControlBox\",\r\n  props: {\r\n    // Class assigned to visible container; specify border and background here\r\n    containerClass: {\r\n      type: String,\r\n      required: false,\r\n      default: undefined\r\n    },\r\n    label: {\r\n      type: String,\r\n      required: false,\r\n      default: undefined\r\n    },\r\n    widthSource: {\r\n      // Content sizes the width based on what's in the dropdown.\r\n      // header sizes based on the menu header (container ref)\r\n      type: String,\r\n      required: false,\r\n      default: undefined,\r\n    },\r\n    buttonClass: {\r\n      type: String,\r\n      required: false,\r\n      default: \"l-expanding-control-box__button\",\r\n    },\r\n    autoClose: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false,\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      state: null,\r\n      openRequest: false,\r\n      closedHeight: \"1em\",\r\n      openHeight: \"1em\",\r\n      hasMouse: false,\r\n      closeTime: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    states: () => ({\r\n      CLOSED: { name: \"CLOSED\", transition: false, visibility: false, height: \"closed\" },\r\n      OPEN_REQUESTED: { name: \"OPEN_REQUESTED\", transition: true, visibility: true, height: \"closed\" },\r\n      OPENING: { name: \"OPENING\", transition: true, visibility: true, height: \"open\" },\r\n      OPEN: { name: \"OPEN\", transition: false, visibility: true, height: null },\r\n      CLOSE_REQUESTED: { name: \"CLOSE_REQUESTED\", transition: false, visibility: true, height: \"open\" },\r\n      CLOSING: { name: \"CLOSING\", transition: true, visibility: true, height: \"closed\" },\r\n    }),\r\n    maxHeight() {\r\n      if (this.state.height === \"open\") return this.openHeight;\r\n      return this.state.height === \"closed\" ? this.closedHeight : null;\r\n    },\r\n    rootClassObject() {\r\n      return {\r\n        \"l-expanding-control-box--controls-width\": this.widthSource !== undefined\r\n      };\r\n    },\r\n    containerStyle() {\r\n      return {\r\n        maxHeight: this.maxHeight,\r\n        visibility: this.state.visibility,\r\n      };\r\n    },\r\n    containerClassObject() {\r\n      const classes = {\r\n        \"l-expanding-control-box__container--transition\": this.state?.transition\r\n      };\r\n      classes[this.containerClass] = true;\r\n      return classes;\r\n    },\r\n    indicatorArrowClassObject() {\r\n      return {\r\n        \"c-indicator-arrow\": true,\r\n        \"c-indicator-arrow--flipped\": this.state === this.states.OPENING || this.state === this.states.OPEN,\r\n      };\r\n    }\r\n  },\r\n  watch: {\r\n    state(newState) {\r\n      this.processRequest(newState, this.openRequest);\r\n      this.updateHeightInfo();\r\n      switch (this.state) {\r\n        case this.states.CLOSED:\r\n          break;\r\n        case this.states.OPEN_REQUESTED:\r\n          this.$nextTick(() => this.state = this.states.OPENING);\r\n          break;\r\n        case this.states.OPENING:\r\n          break;\r\n        case this.states.OPEN:\r\n          break;\r\n        case this.states.CLOSE_REQUESTED:\r\n          // Need to have DOM update with CLOSE_REQUESTED state to re-enable transitions\r\n          this.$nextTick(() => this.state = this.states.CLOSING);\r\n          break;\r\n        case this.CLOSING:\r\n          break;\r\n      }\r\n    },\r\n    openRequest(newOpen) {\r\n      this.processRequest(this.state, newOpen);\r\n    },\r\n  },\r\n  created() {\r\n    this.state = this.states.CLOSED;\r\n    this.on$(\"openrequest\", () => this.openRequest = true);\r\n  },\r\n  mounted() {\r\n    // Set the root and container elements to match the height of the button\r\n    this.updateHeightInfo();\r\n    this.$refs.root.style.height = this.closedHeight;\r\n    this.updateBaseWidth();\r\n  },\r\n  methods: {\r\n    update() {\r\n      const secSinceMouseOff = this.hasMouse ? 0 : (Date.now() - this.closeTime) / 1000;\r\n      if (this.autoClose && this.state === this.states.OPEN && secSinceMouseOff > 1) this.openRequest = false;\r\n    },\r\n    processRequest(state, request) {\r\n      if (request && (state === this.states.CLOSED || state === this.states.CLOSE_REQUESTED)) {\r\n        this.state = this.states.OPEN_REQUESTED;\r\n      }\r\n      if (!request && (state === this.states.OPEN || state === this.states.OPEN_REQUESTED)) {\r\n        this.state = this.states.CLOSE_REQUESTED;\r\n      }\r\n    },\r\n    updateBaseWidth() {\r\n      if (this.widthSource === \"content\") {\r\n        this.$refs.container.style.width = `${this.$refs.dropdown.offsetWidth}px`;\r\n        this.$refs.root.style.width = `${this.$refs.dropdown.offsetWidth}px`;\r\n      } else if (this.widthSource === \"header\") {\r\n        this.$refs.root.style.width = `${this.$refs.container.offsetWidth}px`;\r\n      }\r\n    },\r\n    updateHeightInfo() {\r\n      const headerHeight = this.$refs.expandButton.offsetHeight;\r\n      this.closedHeight = `${headerHeight}px`;\r\n      this.openHeight = `${headerHeight + this.$refs.dropdown.offsetHeight}px`;\r\n    },\r\n    transitionEnd(event) {\r\n      if (event.propertyName !== \"max-height\") return;\r\n      if (this.state === this.states.OPENING) {\r\n        this.state = this.states.OPEN;\r\n      } else if (this.state === this.states.CLOSING) {\r\n        this.state = this.states.CLOSED;\r\n      }\r\n    },\r\n    handleClick() {\r\n      this.openRequest = !this.openRequest;\r\n      this.hasMouse = this.openRequest;\r\n    },\r\n    mouseOn() {\r\n      this.hasMouse = true;\r\n    },\r\n    mouseOff() {\r\n      this.hasMouse = false;\r\n      this.closeTime = Date.now();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <!--\r\n    The root element is an empty box of fixed size with position relative.\r\n    On top of that, we have a container element (which has both the label and the control)\r\n    The container element hides the control via clipping (and visibility). The thing you\r\n    click to show hide is at the top of the container element.\r\n  -->\r\n  <div\r\n    ref=\"root\"\r\n    class=\"l-expanding-control-box\"\r\n    :class=\"rootClassObject\"\r\n  >\r\n    <div\r\n      ref=\"container\"\r\n      class=\"l-expanding-control-box__container\"\r\n      :class=\"containerClassObject\"\r\n      :style=\"containerStyle\"\r\n      @transitionend=\"transitionEnd\"\r\n      @mouseenter=\"mouseOn\"\r\n      @mouseleave=\"mouseOff\"\r\n    >\r\n      <div\r\n        v-if=\"!$slots.header\"\r\n        ref=\"expandButton\"\r\n        :class=\"buttonClass\"\r\n        @click=\"handleClick\"\r\n      >\r\n        {{ label }}\r\n        <span :class=\"indicatorArrowClassObject\">\r\n          ▼\r\n        </span>\r\n      </div>\r\n      <div\r\n        v-else\r\n        ref=\"expandButton\"\r\n        @click=\"handleClick\"\r\n      >\r\n        <slot name=\"header\" />\r\n      </div>\r\n      <div ref=\"dropdown\">\r\n        <slot name=\"dropdown\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-expanding-control-box {\r\n  position: relative;\r\n  z-index: 3;\r\n}\r\n\r\n.l-expanding-control-box--controls-width {\r\n  width: 100%;\r\n}\r\n\r\n.l-expanding-control-box__container {\r\n  display: block;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: auto;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.l-expanding-control-box__container--transition {\r\n  transition: max-height 0.5s;\r\n}\r\n\r\n.l-expanding-control-box__button {\r\n  display: flex;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  height: 2.5rem;\r\n  position: relative;\r\n  top: -0.5rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none !important;\r\n  cursor: pointer;\r\n}\r\n\r\n.c-indicator-arrow--flipped {\r\n  transform: rotate(-180deg);\r\n}\r\n\r\n.c-indicator-arrow {\r\n  margin-left: 0.6rem;\r\n  transition: transform 0.25s ease-out;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"},"metadata":{},"sourceType":"module"}