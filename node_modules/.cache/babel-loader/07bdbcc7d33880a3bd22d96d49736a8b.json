{"ast":null,"code":"import { NodeModule } from \"./node-module\";\n/**\r\n * @type {NodeModule<Greenworks.NodeModule>}\r\n */\n\nconst module = new NodeModule(\"greenworks\");\nexport function isModuleLoaded() {\n  return module.isLoaded;\n}\nexport function initAPI() {\n  return module.safeCall(x => x.initAPI(), false);\n}\nexport function getSteamId() {\n  return module.safeCall(x => x.getSteamId());\n}\n/**\r\n * @returns {Promise<Greenworks.SteamAuthTicket>}\r\n */\n\nexport function getAuthSessionTicket() {\n  return module.makePromise((x, resolve, reject) => x.getAuthSessionTicket(resolve, reject));\n}\n/**\r\n * @returns {Promise<void>}\r\n */\n\nexport function activateAchievement(id) {\n  return module.makePromise((x, resolve, reject) => x.activateAchievement(id, resolve, reject));\n}\nexport function getAchievementNames() {\n  return module.safeCall(x => x.getAchievementNames(), []);\n}\nexport function initDiscordAPI(clientId, steamGameId) {\n  return module.safeCall(x => x.initDiscordAPI(clientId, steamGameId));\n}\nexport function runDiscordCallbacks() {\n  return module.safeCall(x => x.runDiscordCallbacks());\n}\nexport function on(event, callback) {\n  return module.safeCall(x => x.on(event, callback));\n}\nexport function setDiscordActivity(state, details) {\n  return module.safeCall(x => x.setDiscordActivity({\n    smallImage: \"icon\",\n    largeImage: \"icon\",\n    state,\n    details\n  }));\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/steam/bindings/greenworks.js"],"names":["NodeModule","module","isModuleLoaded","isLoaded","initAPI","safeCall","x","getSteamId","getAuthSessionTicket","makePromise","resolve","reject","activateAchievement","id","getAchievementNames","initDiscordAPI","clientId","steamGameId","runDiscordCallbacks","on","event","callback","setDiscordActivity","state","details","smallImage","largeImage"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG,IAAID,UAAJ,CAAe,YAAf,CAAf;AAEA,OAAO,SAASE,cAAT,GAA0B;AAC/B,SAAOD,MAAM,CAACE,QAAd;AACD;AAED,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOH,MAAM,CAACI,QAAP,CACLC,CAAC,IAAIA,CAAC,CAACF,OAAF,EADA,EAEL,KAFK,CAAP;AAID;AAED,OAAO,SAASG,UAAT,GAAsB;AAC3B,SAAON,MAAM,CAACI,QAAP,CACLC,CAAC,IAAIA,CAAC,CAACC,UAAF,EADA,CAAP;AAGD;AAED;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,GAAgC;AACrC,SAAOP,MAAM,CAACQ,WAAP,CACL,CAACH,CAAD,EAAII,OAAJ,EAAaC,MAAb,KAAwBL,CAAC,CAACE,oBAAF,CAAuBE,OAAvB,EAAgCC,MAAhC,CADnB,CAAP;AAGD;AAED;AACA;AACA;;AACA,OAAO,SAASC,mBAAT,CAA6BC,EAA7B,EAAiC;AACtC,SAAOZ,MAAM,CAACQ,WAAP,CACL,CAACH,CAAD,EAAII,OAAJ,EAAaC,MAAb,KAAwBL,CAAC,CAACM,mBAAF,CAAsBC,EAAtB,EAA0BH,OAA1B,EAAmCC,MAAnC,CADnB,CAAP;AAGD;AAED,OAAO,SAASG,mBAAT,GAA+B;AACpC,SAAOb,MAAM,CAACI,QAAP,CACLC,CAAC,IAAIA,CAAC,CAACQ,mBAAF,EADA,EAEL,EAFK,CAAP;AAID;AAED,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,WAAlC,EAA+C;AACpD,SAAOhB,MAAM,CAACI,QAAP,CACLC,CAAC,IAAIA,CAAC,CAACS,cAAF,CAAiBC,QAAjB,EAA2BC,WAA3B,CADA,CAAP;AAGD;AAED,OAAO,SAASC,mBAAT,GAA+B;AACpC,SAAOjB,MAAM,CAACI,QAAP,CACLC,CAAC,IAAIA,CAAC,CAACY,mBAAF,EADA,CAAP;AAGD;AAED,OAAO,SAASC,EAAT,CAAYC,KAAZ,EAAmBC,QAAnB,EAA6B;AAClC,SAAOpB,MAAM,CAACI,QAAP,CACLC,CAAC,IAAIA,CAAC,CAACa,EAAF,CAAKC,KAAL,EAAYC,QAAZ,CADA,CAAP;AAGD;AAED,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,OAAnC,EAA4C;AACjD,SAAOvB,MAAM,CAACI,QAAP,CACLC,CAAC,IAAIA,CAAC,CAACgB,kBAAF,CAAqB;AACxBG,IAAAA,UAAU,EAAE,MADY;AAExBC,IAAAA,UAAU,EAAE,MAFY;AAGxBH,IAAAA,KAHwB;AAIxBC,IAAAA;AAJwB,GAArB,CADA,CAAP;AAQD","sourcesContent":["import { NodeModule } from \"./node-module\";\r\n\r\n/**\r\n * @type {NodeModule<Greenworks.NodeModule>}\r\n */\r\nconst module = new NodeModule(\"greenworks\");\r\n\r\nexport function isModuleLoaded() {\r\n  return module.isLoaded;\r\n}\r\n\r\nexport function initAPI() {\r\n  return module.safeCall(\r\n    x => x.initAPI(),\r\n    false\r\n  );\r\n}\r\n\r\nexport function getSteamId() {\r\n  return module.safeCall(\r\n    x => x.getSteamId()\r\n  );\r\n}\r\n\r\n/**\r\n * @returns {Promise<Greenworks.SteamAuthTicket>}\r\n */\r\nexport function getAuthSessionTicket() {\r\n  return module.makePromise(\r\n    (x, resolve, reject) => x.getAuthSessionTicket(resolve, reject)\r\n  );\r\n}\r\n\r\n/**\r\n * @returns {Promise<void>}\r\n */\r\nexport function activateAchievement(id) {\r\n  return module.makePromise(\r\n    (x, resolve, reject) => x.activateAchievement(id, resolve, reject)\r\n  );\r\n}\r\n\r\nexport function getAchievementNames() {\r\n  return module.safeCall(\r\n    x => x.getAchievementNames(),\r\n    []\r\n  );\r\n}\r\n\r\nexport function initDiscordAPI(clientId, steamGameId) {\r\n  return module.safeCall(\r\n    x => x.initDiscordAPI(clientId, steamGameId)\r\n  );\r\n}\r\n\r\nexport function runDiscordCallbacks() {\r\n  return module.safeCall(\r\n    x => x.runDiscordCallbacks()\r\n  );\r\n}\r\n\r\nexport function on(event, callback) {\r\n  return module.safeCall(\r\n    x => x.on(event, callback)\r\n  );\r\n}\r\n\r\nexport function setDiscordActivity(state, details) {\r\n  return module.safeCall(\r\n    x => x.setDiscordActivity({\r\n      smallImage: \"icon\",\r\n      largeImage: \"icon\",\r\n      state,\r\n      details\r\n    })\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}