{"ast":null,"code":"import BigCrunchButton from \"../BigCrunchButton\";\nimport GameHeader from \"../GameHeader\";\nimport NewsTicker from \"../NewsTicker\";\nimport ClassicSubtabBar from \"./ClassicSubtabBar\";\nimport ClassicTabBar from \"./ClassicTabBar\";\nimport EternityPointsHeader from \"@/components/EternityPointsHeader\";\nimport InfinityPointsHeader from \"@/components/InfinityPointsHeader\";\nexport default {\n  name: \"ClassicUi\",\n  components: {\n    GameHeader,\n    ClassicSubtabBar,\n    ClassicTabBar,\n    NewsTicker,\n    InfinityPointsHeader,\n    EternityPointsHeader,\n    BigCrunchButton\n  },\n\n  data() {\n    return {\n      bigCrunch: false,\n      smallCrunch: false,\n      newGameKey: \"\"\n    };\n  },\n\n  computed: {\n    tab: () => Tabs.current,\n\n    news() {\n      return this.$viewModel.news;\n    }\n\n  },\n  methods: {\n    update() {\n      const crunchButtonVisible = !player.break && Player.canCrunch;\n      this.bigCrunch = crunchButtonVisible && Time.bestInfinityRealTime.totalMinutes > 1; // This only exists to force a key-swap after pressing the button to start a new game; the news ticker can break\n      // if it isn't redrawn\n\n      this.newGameKey = Pelle.isDoomed;\n    }\n\n  }\n};","map":{"version":3,"sources":["ClassicUi.vue"],"names":[],"mappings":"AACA,OAAA,eAAA,MAAA,oBAAA;AACA,OAAA,UAAA,MAAA,eAAA;AACA,OAAA,UAAA,MAAA,eAAA;AAGA,OAAA,gBAAA,MAAA,oBAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AACA,OAAA,oBAAA,MAAA,mCAAA;AACA,OAAA,oBAAA,MAAA,mCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UADA;AAEA,IAAA,gBAFA;AAGA,IAAA,aAHA;AAIA,IAAA,UAJA;AAKA,IAAA,oBALA;AAMA,IAAA,oBANA;AAOA,IAAA;AAPA,GAFA;;AAWA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAKA,GAjBA;;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,GAAA,EAAA,MAAA,IAAA,CAAA,OADA;;AAEA,IAAA,IAAA,GAAA;AACA,aAAA,KAAA,UAAA,CAAA,IAAA;AACA;;AAJA,GAlBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,YAAA,mBAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,MAAA,CAAA,SAAA;AACA,WAAA,SAAA,GAAA,mBAAA,IAAA,IAAA,CAAA,oBAAA,CAAA,YAAA,GAAA,CAAA,CAFA,CAGA;AACA;;AACA,WAAA,UAAA,GAAA,KAAA,CAAA,QAAA;AACA;;AAPA;AAxBA,CAAA","sourcesContent":["<script>\r\nimport BigCrunchButton from \"../BigCrunchButton\";\r\nimport GameHeader from \"../GameHeader\";\r\nimport NewsTicker from \"../NewsTicker\";\r\n\r\n\r\nimport ClassicSubtabBar from \"./ClassicSubtabBar\";\r\nimport ClassicTabBar from \"./ClassicTabBar\";\r\nimport EternityPointsHeader from \"@/components/EternityPointsHeader\";\r\nimport InfinityPointsHeader from \"@/components/InfinityPointsHeader\";\r\n\r\nexport default {\r\n  name: \"ClassicUi\",\r\n  components: {\r\n    GameHeader,\r\n    ClassicSubtabBar,\r\n    ClassicTabBar,\r\n    NewsTicker,\r\n    InfinityPointsHeader,\r\n    EternityPointsHeader,\r\n    BigCrunchButton\r\n  },\r\n  data() {\r\n    return {\r\n      bigCrunch: false,\r\n      smallCrunch: false,\r\n      newGameKey: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    tab: () => Tabs.current,\r\n    news() {\r\n      return this.$viewModel.news;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const crunchButtonVisible = !player.break && Player.canCrunch;\r\n      this.bigCrunch = crunchButtonVisible && Time.bestInfinityRealTime.totalMinutes > 1;\r\n      // This only exists to force a key-swap after pressing the button to start a new game; the news ticker can break\r\n      // if it isn't redrawn\r\n      this.newGameKey = Pelle.isDoomed;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    id=\"container\"\r\n    :key=\"newGameKey\"\r\n    class=\"container c-old-ui l-old-ui\"\r\n  >\r\n    <link\r\n      rel=\"stylesheet\"\r\n      type=\"text/css\"\r\n      href=\"stylesheets/old-ui.css\"\r\n    >\r\n    <BigCrunchButton />\r\n    <template v-if=\"!bigCrunch\">\r\n      <NewsTicker\r\n        v-if=\"news\"\r\n        class=\"l-old-ui__news-bar\"\r\n      />\r\n      <GameHeader class=\"l-old-ui__header\" />\r\n      <ClassicTabBar />\r\n      <component\r\n        :is=\"tab.config.before\"\r\n        v-if=\"tab.config.before\"\r\n      />\r\n      <ClassicSubtabBar />\r\n      <div class=\"l-old-ui__page\">\r\n        <slot />\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/ui-modes/classic"},"metadata":{},"sourceType":"module"}