{"ast":null,"code":"import ChallengeBox from \"@/components/ChallengeBox\";\nimport DescriptionDisplay from \"@/components/DescriptionDisplay\";\nexport default {\n  name: \"NormalChallengeBox\",\n  components: {\n    ChallengeBox,\n    DescriptionDisplay\n  },\n  props: {\n    challenge: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      isDoomed: false,\n      isDisabled: false,\n      isRunning: false,\n      isCompleted: false,\n      isBroken: false,\n      isUnlocked: false,\n      lockedAt: new Decimal()\n    };\n  },\n\n  computed: {\n    descriptionDisplayConfig() {\n      if (this.isUnlocked) {\n        return this.challenge.config;\n      }\n\n      return {\n        description: `Infinity ${formatInt(this.challenge.config.lockedAt)} times to unlock.`\n      };\n    },\n\n    name() {\n      return `C${this.challenge.id}`;\n    },\n\n    overrideLabel() {\n      return this.isBroken ? \"Broken\" : \"\";\n    }\n\n  },\n  methods: {\n    update() {\n      this.isDisabled = this.challenge.isDisabled;\n      this.isUnlocked = this.challenge.isUnlocked; // This stops normal challenges from appearing like they're running during IC1\n\n      this.isRunning = this.challenge.isOnlyActiveChallenge;\n      this.lockedAt = this.challenge.config.lockedAt;\n      this.isBroken = Enslaved.isRunning && Enslaved.BROKEN_CHALLENGES.includes(this.challenge.id);\n      this.isCompleted = this.challenge.isCompleted && !this.isBroken;\n    }\n\n  }\n};","map":{"version":3,"sources":["NormalChallengeBox.vue"],"names":[],"mappings":"AACA,OAAA,YAAA,MAAA,2BAAA;AACA,OAAA,kBAAA,MAAA,iCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YADA;AAEA,IAAA;AAFA,GAFA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GANA;;AAYA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,SAAA,EAAA,KAHA;AAIA,MAAA,WAAA,EAAA,KAJA;AAKA,MAAA,QAAA,EAAA,KALA;AAMA,MAAA,UAAA,EAAA,KANA;AAOA,MAAA,QAAA,EAAA,IAAA,OAAA;AAPA,KAAA;AASA,GAtBA;;AAuBA,EAAA,QAAA,EAAA;AACA,IAAA,wBAAA,GAAA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,eAAA,KAAA,SAAA,CAAA,MAAA;AACA;;AACA,aAAA;AACA,QAAA,WAAA,EAAA,YAAA,SAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AADA,OAAA;AAGA,KARA;;AASA,IAAA,IAAA,GAAA;AACA,aAAA,IAAA,KAAA,SAAA,CAAA,EAAA,EAAA;AACA,KAXA;;AAYA,IAAA,aAAA,GAAA;AACA,aAAA,KAAA,QAAA,GAAA,QAAA,GAAA,EAAA;AACA;;AAdA,GAvBA;AAuCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,UAAA,GAAA,KAAA,SAAA,CAAA,UAAA;AACA,WAAA,UAAA,GAAA,KAAA,SAAA,CAAA,UAAA,CAFA,CAGA;;AACA,WAAA,SAAA,GAAA,KAAA,SAAA,CAAA,qBAAA;AACA,WAAA,QAAA,GAAA,KAAA,SAAA,CAAA,MAAA,CAAA,QAAA;AACA,WAAA,QAAA,GAAA,QAAA,CAAA,SAAA,IAAA,QAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,EAAA,CAAA;AACA,WAAA,WAAA,GAAA,KAAA,SAAA,CAAA,WAAA,IAAA,CAAA,KAAA,QAAA;AACA;;AATA;AAvCA,CAAA","sourcesContent":["<script>\r\nimport ChallengeBox from \"@/components/ChallengeBox\";\r\nimport DescriptionDisplay from \"@/components/DescriptionDisplay\";\r\n\r\nexport default {\r\n  name: \"NormalChallengeBox\",\r\n  components: {\r\n    ChallengeBox,\r\n    DescriptionDisplay\r\n  },\r\n  props: {\r\n    challenge: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isDoomed: false,\r\n      isDisabled: false,\r\n      isRunning: false,\r\n      isCompleted: false,\r\n      isBroken: false,\r\n      isUnlocked: false,\r\n      lockedAt: new Decimal()\r\n    };\r\n  },\r\n  computed: {\r\n    descriptionDisplayConfig() {\r\n      if (this.isUnlocked) {\r\n        return this.challenge.config;\r\n      }\r\n      return {\r\n        description: `Infinity ${formatInt(this.challenge.config.lockedAt)} times to unlock.`\r\n      };\r\n    },\r\n    name() {\r\n      return `C${this.challenge.id}`;\r\n    },\r\n    overrideLabel() {\r\n      return this.isBroken ? \"Broken\" : \"\";\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isDisabled = this.challenge.isDisabled;\r\n      this.isUnlocked = this.challenge.isUnlocked;\r\n      // This stops normal challenges from appearing like they're running during IC1\r\n      this.isRunning = this.challenge.isOnlyActiveChallenge;\r\n      this.lockedAt = this.challenge.config.lockedAt;\r\n      this.isBroken = Enslaved.isRunning && Enslaved.BROKEN_CHALLENGES.includes(this.challenge.id);\r\n      this.isCompleted = this.challenge.isCompleted && !this.isBroken;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ChallengeBox\r\n    :name=\"name\"\r\n    :is-unlocked=\"isUnlocked\"\r\n    :is-running=\"isRunning\"\r\n    :is-completed=\"isCompleted\"\r\n    :override-label=\"overrideLabel\"\r\n    :locked-at=\"lockedAt\"\r\n    class=\"c-challenge-box--normal\"\r\n    @start=\"challenge.requestStart()\"\r\n  >\r\n    <template #top>\r\n      <DescriptionDisplay :config=\"descriptionDisplayConfig\" />\r\n    </template>\r\n    <template #bottom>\r\n      <span :class=\"{ 'o-pelle-disabled': isDisabled }\">Reward: {{ challenge.config.reward }}</span>\r\n    </template>\r\n  </ChallengeBox>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/normal-challenges"},"metadata":{},"sourceType":"module"}