{"ast":null,"code":"import AnnihilationButton from \"./AnnihilationButton\";\nimport CelestialQuoteHistory from \"@/components/CelestialQuoteHistory\";\nimport DarkMatterDimensionGroup from \"./DarkMatterDimensionGroup\";\nimport LaitelaAutobuyerPane from \"./LaitelaAutobuyerPane\";\nimport LaitelaRunButton from \"./LaitelaRunButton\";\nimport PrimaryButton from \"@/components/PrimaryButton\";\nimport SingularityMilestonePane from \"./SingularityMilestonePane\";\nimport SingularityPane from \"./SingularityPane\";\nexport default {\n  name: \"LaitelaTab\",\n  components: {\n    LaitelaRunButton,\n    SingularityPane,\n    SingularityMilestonePane,\n    DarkMatterDimensionGroup,\n    AnnihilationButton,\n    LaitelaAutobuyerPane,\n    CelestialQuoteHistory,\n    PrimaryButton\n  },\n\n  data() {\n    return {\n      isDoomed: false,\n      darkMatter: new Decimal(0),\n      darkMatterGain: new Decimal(0),\n      isDMCapped: false,\n      maxDarkMatter: new Decimal(0),\n      darkEnergy: 0,\n      matterExtraPurchasePercentage: 0,\n      autobuyersUnlocked: false,\n      singularityPanelVisible: false,\n      singularitiesUnlocked: false,\n      singularityCap: 0,\n      singularityWaitTime: 0,\n      showAnnihilation: false\n    };\n  },\n\n  computed: {\n    styleObject() {\n      return {\n        color: this.isDMCapped ? \"var(--color-bad)\" : \"\"\n      };\n    }\n\n  },\n  methods: {\n    update() {\n      this.isDoomed = Pelle.isDoomed;\n      this.darkMatter.copyFrom(Currency.darkMatter);\n      this.isDMCapped = this.darkMatter.eq(Number.MAX_VALUE);\n      this.maxDarkMatter.copyFrom(Currency.darkMatter.max);\n      this.darkEnergy = player.celestials.laitela.darkEnergy;\n      this.matterExtraPurchasePercentage = Laitela.matterExtraPurchaseFactor - 1;\n      this.autobuyersUnlocked = SingularityMilestone.darkDimensionAutobuyers.canBeApplied || SingularityMilestone.darkDimensionAutobuyers.canBeApplied || SingularityMilestone.autoCondense.canBeApplied || Laitela.darkMatterMult > 1;\n      this.singularityPanelVisible = Currency.singularities.gt(0);\n      this.singularitiesUnlocked = Singularity.capIsReached || this.singularityPanelVisible;\n      this.singularityCap = Singularity.cap;\n      this.singularityWaitTime = TimeSpan.fromSeconds((this.singularityCap - this.darkEnergy) / Currency.darkEnergy.productionPerSecond).toStringShort();\n      this.showAnnihilation = Laitela.annihilationUnlocked;\n      const d1 = DarkMatterDimension(1);\n      this.darkMatterGain = d1.amount.times(d1.powerDM).divide(d1.interval).times(1000);\n    },\n\n    maxAll() {\n      Laitela.maxAllDMDimensions(4);\n    },\n\n    showLaitelaHowTo() {\n      ui.view.h2pForcedTab = GameDatabase.h2p.tabs.filter(tab => tab.name === \"Lai'tela\")[0];\n      Modal.h2p.show();\n    }\n\n  }\n};","map":{"version":3,"sources":["LaitelaTab.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport AnnihilationButton from \"./AnnihilationButton\";\r\nimport CelestialQuoteHistory from \"@/components/CelestialQuoteHistory\";\r\nimport DarkMatterDimensionGroup from \"./DarkMatterDimensionGroup\";\r\nimport LaitelaAutobuyerPane from \"./LaitelaAutobuyerPane\";\r\nimport LaitelaRunButton from \"./LaitelaRunButton\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport SingularityMilestonePane from \"./SingularityMilestonePane\";\r\nimport SingularityPane from \"./SingularityPane\";\r\n\r\nexport default {\r\n  name: \"LaitelaTab\",\r\n  components: {\r\n    LaitelaRunButton,\r\n    SingularityPane,\r\n    SingularityMilestonePane,\r\n    DarkMatterDimensionGroup,\r\n    AnnihilationButton,\r\n    LaitelaAutobuyerPane,\r\n    CelestialQuoteHistory,\r\n    PrimaryButton\r\n  },\r\n  data() {\r\n    return {\r\n      isDoomed: false,\r\n      darkMatter: new Decimal(0),\r\n      darkMatterGain: new Decimal(0),\r\n      isDMCapped: false,\r\n      maxDarkMatter: new Decimal(0),\r\n      darkEnergy: 0,\r\n      matterExtraPurchasePercentage: 0,\r\n      autobuyersUnlocked: false,\r\n      singularityPanelVisible: false,\r\n      singularitiesUnlocked: false,\r\n      singularityCap: 0,\r\n      singularityWaitTime: 0,\r\n      showAnnihilation: false\r\n    };\r\n  },\r\n  computed: {\r\n    styleObject() {\r\n      return {\r\n        color: this.isDMCapped ? \"var(--color-bad)\" : \"\",\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isDoomed = Pelle.isDoomed;\r\n      this.darkMatter.copyFrom(Currency.darkMatter);\r\n      this.isDMCapped = this.darkMatter.eq(Number.MAX_VALUE);\r\n      this.maxDarkMatter.copyFrom(Currency.darkMatter.max);\r\n      this.darkEnergy = player.celestials.laitela.darkEnergy;\r\n      this.matterExtraPurchasePercentage = Laitela.matterExtraPurchaseFactor - 1;\r\n      this.autobuyersUnlocked = SingularityMilestone.darkDimensionAutobuyers.canBeApplied ||\r\n        SingularityMilestone.darkDimensionAutobuyers.canBeApplied ||\r\n        SingularityMilestone.autoCondense.canBeApplied ||\r\n        Laitela.darkMatterMult > 1;\r\n      this.singularityPanelVisible = Currency.singularities.gt(0);\r\n      this.singularitiesUnlocked = Singularity.capIsReached || this.singularityPanelVisible;\r\n      this.singularityCap = Singularity.cap;\r\n      this.singularityWaitTime = TimeSpan.fromSeconds((this.singularityCap - this.darkEnergy) /\r\n        Currency.darkEnergy.productionPerSecond).toStringShort();\r\n      this.showAnnihilation = Laitela.annihilationUnlocked;\r\n\r\n      const d1 = DarkMatterDimension(1);\r\n      this.darkMatterGain = d1.amount.times(d1.powerDM).divide(d1.interval).times(1000);\r\n    },\r\n    maxAll() {\r\n      Laitela.maxAllDMDimensions(4);\r\n    },\r\n    showLaitelaHowTo() {\r\n      ui.view.h2pForcedTab = GameDatabase.h2p.tabs.filter(tab => tab.name === \"Lai'tela\")[0];\r\n      Modal.h2p.show();\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-laitela-celestial-tab\">\r\n    <CelestialQuoteHistory celestial=\"laitela\" />\r\n    <div class=\"c-subtab-option-container\">\r\n      <PrimaryButton\r\n        class=\"o-primary-btn--subtab-option\"\r\n        @click=\"showLaitelaHowTo()\"\r\n      >\r\n        Click for Lai'tela info\r\n      </PrimaryButton>\r\n      <PrimaryButton\r\n        class=\"o-primary-btn--subtab-option\"\r\n        @click=\"maxAll\"\r\n      >\r\n        Max all Dark Matter Dimensions\r\n      </PrimaryButton>\r\n    </div>\r\n    <div class=\"o-laitela-matter-amount\">\r\n      You have\r\n      <span :style=\"styleObject\">{{ format(darkMatter, 2) }}</span>\r\n      Dark Matter<span v-if=\"isDMCapped\"> (capped)</span>.\r\n      <span v-if=\"!isDMCapped\">(Average: {{ format(darkMatterGain, 2, 2) }}/s)</span>\r\n    </div>\r\n    <div class=\"o-laitela-matter-amount\">\r\n      Your maximum Dark Matter ever is\r\n      <span :style=\"styleObject\">{{ format(maxDarkMatter, 2) }}</span><span v-if=\"!isDoomed\">,\r\n        giving {{ formatPercents(matterExtraPurchasePercentage, 2) }} more purchases from Continuum</span>.\r\n    </div>\r\n    <div class=\"o-laitela-matter-amount\">\r\n      Dark Matter Dimensions are unaffected by storing real time.\r\n    </div>\r\n    <h2\r\n      v-if=\"!singularitiesUnlocked\"\r\n      class=\"c-laitela-singularity-container\"\r\n    >\r\n      Unlock Singularities in {{ singularityWaitTime }}.\r\n      ({{ format(darkEnergy, 2, 2) }}/{{ format(singularityCap, 2) }} Dark Energy)\r\n    </h2>\r\n    <SingularityPane v-if=\"singularitiesUnlocked\" />\r\n    <LaitelaAutobuyerPane v-if=\"autobuyersUnlocked\" />\r\n    <div class=\"l-laitela-mechanics-container\">\r\n      <LaitelaRunButton />\r\n      <div>\r\n        <DarkMatterDimensionGroup />\r\n        <AnnihilationButton v-if=\"showAnnihilation\" />\r\n      </div>\r\n      <SingularityMilestonePane v-if=\"singularityPanelVisible\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"sourceRoot":"src/components/tabs/celestial-laitela"},"metadata":{},"sourceType":"module"}