{"ast":null,"code":"import GenericDimensionRowText from \"@/components/GenericDimensionRowText\";\nexport default {\n  name: \"ModernAntimatterDimensionRow\",\n  components: {\n    GenericDimensionRowText\n  },\n  props: {\n    tier: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      isUnlocked: false,\n      isCapped: false,\n      multiplier: new Decimal(0),\n      amount: new Decimal(0),\n      bought: 0,\n      boughtBefore10: 0,\n      rateOfChange: new Decimal(0),\n      singleCost: new Decimal(0),\n      until10Cost: new Decimal(0),\n      isAffordable: false,\n      buyUntil10: true,\n      howManyCanBuy: 0,\n      isContinuumActive: false,\n      continuumValue: 0,\n      isShown: false,\n      isCostsAD: false,\n      amountDisplay: \"\",\n      hasTutorial: false\n    };\n  },\n\n  computed: {\n    isDoomed: () => Pelle.isDoomed,\n\n    name() {\n      return `${AntimatterDimension(this.tier).shortDisplayName} Antimatter Dimension`;\n    },\n\n    costDisplay() {\n      return this.buyUntil10 ? format(this.until10Cost) : format(this.singleCost);\n    },\n\n    continuumString() {\n      return formatFloat(this.continuumValue, 2);\n    },\n\n    showRow() {\n      return this.isShown || this.isUnlocked || this.amount.gt(0);\n    },\n\n    boughtTooltip() {\n      if (this.isCapped) return `Nameless prevents the purchase of more than ${format(1)} 8th Antimatter Dimension`;\n      if (this.isContinuumActive) return \"Continuum produces all your Antimatter Dimensions\";\n      return `Purchased ${quantifyInt(\"time\", this.bought)}`;\n    },\n\n    costUnit() {\n      return `${AntimatterDimension(this.tier - 2).shortDisplayName} AD`;\n    },\n\n    buttonPrefix() {\n      if (!this.isUnlocked) return \"Locked\";\n      if (this.isCapped) return \"Shattered by Nameless\";\n      if (this.isContinuumActive) return \"Continuum: \";\n      return `Buy ${formatInt(this.howManyCanBuy)}`;\n    },\n\n    buttonValue() {\n      if (this.isCapped) return \"\";\n      if (this.isContinuumActive) return this.continuumString;\n      const prefix = this.showCostTitle(this.buyUntil10 ? this.until10Cost : this.singleCost) ? \"Cost: \" : \"\";\n      const suffix = this.isCostsAD ? this.costUnit : \"AM\";\n      return `${prefix}${this.costDisplay} ${suffix}`;\n    },\n\n    hasLongText() {\n      return this.buttonValue.length > 20;\n    }\n\n  },\n  methods: {\n    update() {\n      const tier = this.tier;\n      if (tier > DimBoost.maxDimensionsUnlockable && !this.isDoomed) return;\n      const dimension = AntimatterDimension(tier);\n      this.isUnlocked = dimension.isAvailableForPurchase;\n      const buyUntil10 = player.buyUntil10;\n      this.isCapped = tier === 8 && Enslaved.isRunning && dimension.bought >= 1;\n      this.multiplier.copyFrom(AntimatterDimension(tier).multiplier);\n      this.amount.copyFrom(dimension.totalAmount);\n      this.bought = dimension.bought;\n      this.boughtBefore10 = dimension.boughtBefore10;\n      this.howManyCanBuy = buyUntil10 ? dimension.howManyCanBuy : Math.min(dimension.howManyCanBuy, 1);\n      this.singleCost.copyFrom(dimension.cost);\n      this.until10Cost.copyFrom(dimension.cost.times(Math.max(dimension.howManyCanBuy, 1)));\n\n      if (tier < 8) {\n        this.rateOfChange.copyFrom(dimension.rateOfChange);\n      }\n\n      this.isAffordable = dimension.isAffordable;\n      this.buyUntil10 = buyUntil10;\n      this.isContinuumActive = Laitela.continuumActive;\n      if (this.isContinuumActive) this.continuumValue = dimension.continuumValue;\n      this.isShown = DimBoost.totalBoosts > 0 && DimBoost.totalBoosts + 3 >= tier || PlayerProgress.infinityUnlocked();\n      this.isCostsAD = NormalChallenge(6).isRunning && tier > 2 && !this.isContinuumActive;\n      this.amountDisplay = this.tier < 8 ? format(this.amount, 2) : formatInt(this.amount);\n      this.hasTutorial = tier === 1 && Tutorial.isActive(TUTORIAL_STATE.DIM1) || tier === 2 && Tutorial.isActive(TUTORIAL_STATE.DIM2);\n    },\n\n    buy() {\n      if (this.isContinuumActive) return;\n\n      if (this.howManyCanBuy === 1) {\n        buyOneDimension(this.tier);\n      } else {\n        buyAsManyAsYouCanBuy(this.tier);\n      }\n    },\n\n    showCostTitle(value) {\n      return value.exponent < 1000000;\n    },\n\n    buttonClass() {\n      return {\n        \"o-primary-btn o-primary-btn--new\": true,\n        \"o-primary-btn--disabled\": !this.isAffordable && !this.isContinuumActive || !this.isUnlocked || this.isCapped,\n        \"o-non-clickable o-continuum\": this.isContinuumActive\n      };\n    },\n\n    buttonTextClass() {\n      return {\n        \"button-content l-modern-buy-ad-text\": true,\n        \"tutorial--glow\": this.isAffordable && this.hasTutorial\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["ModernAntimatterDimensionRow.vue"],"names":[],"mappings":"AACA,OAAA,uBAAA,MAAA,sCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,8BADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GALA;;AAWA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CAHA;AAIA,MAAA,MAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CAJA;AAKA,MAAA,MAAA,EAAA,CALA;AAMA,MAAA,cAAA,EAAA,CANA;AAOA,MAAA,YAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CAPA;AAQA,MAAA,UAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CARA;AASA,MAAA,WAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CATA;AAUA,MAAA,YAAA,EAAA,KAVA;AAWA,MAAA,UAAA,EAAA,IAXA;AAYA,MAAA,aAAA,EAAA,CAZA;AAaA,MAAA,iBAAA,EAAA,KAbA;AAcA,MAAA,cAAA,EAAA,CAdA;AAeA,MAAA,OAAA,EAAA,KAfA;AAgBA,MAAA,SAAA,EAAA,KAhBA;AAiBA,MAAA,aAAA,EAAA,EAjBA;AAkBA,MAAA,WAAA,EAAA;AAlBA,KAAA;AAoBA,GAhCA;;AAiCA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,EAAA,MAAA,KAAA,CAAA,QADA;;AAEA,IAAA,IAAA,GAAA;AACA,aAAA,GAAA,mBAAA,CAAA,KAAA,IAAA,CAAA,CAAA,gBAAA,uBAAA;AACA,KAJA;;AAKA,IAAA,WAAA,GAAA;AACA,aAAA,KAAA,UAAA,GAAA,MAAA,CAAA,KAAA,WAAA,CAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAAA;AACA,KAPA;;AAQA,IAAA,eAAA,GAAA;AACA,aAAA,WAAA,CAAA,KAAA,cAAA,EAAA,CAAA,CAAA;AACA,KAVA;;AAWA,IAAA,OAAA,GAAA;AACA,aAAA,KAAA,OAAA,IAAA,KAAA,UAAA,IAAA,KAAA,MAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,KAbA;;AAcA,IAAA,aAAA,GAAA;AACA,UAAA,KAAA,QAAA,EAAA,OAAA,+CAAA,MAAA,CAAA,CAAA,CAAA,2BAAA;AACA,UAAA,KAAA,iBAAA,EAAA,OAAA,mDAAA;AACA,aAAA,aAAA,WAAA,CAAA,MAAA,EAAA,KAAA,MAAA,CAAA,EAAA;AACA,KAlBA;;AAmBA,IAAA,QAAA,GAAA;AACA,aAAA,GAAA,mBAAA,CAAA,KAAA,IAAA,GAAA,CAAA,CAAA,CAAA,gBAAA,KAAA;AACA,KArBA;;AAsBA,IAAA,YAAA,GAAA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA,OAAA,QAAA;AACA,UAAA,KAAA,QAAA,EAAA,OAAA,uBAAA;AACA,UAAA,KAAA,iBAAA,EAAA,OAAA,aAAA;AACA,aAAA,OAAA,SAAA,CAAA,KAAA,aAAA,CAAA,EAAA;AACA,KA3BA;;AA4BA,IAAA,WAAA,GAAA;AACA,UAAA,KAAA,QAAA,EAAA,OAAA,EAAA;AACA,UAAA,KAAA,iBAAA,EAAA,OAAA,KAAA,eAAA;AACA,YAAA,MAAA,GAAA,KAAA,aAAA,CAAA,KAAA,UAAA,GAAA,KAAA,WAAA,GAAA,KAAA,UAAA,IAAA,QAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA,KAAA,SAAA,GAAA,KAAA,QAAA,GAAA,IAAA;AACA,aAAA,GAAA,MAAA,GAAA,KAAA,WAAA,IAAA,MAAA,EAAA;AACA,KAlCA;;AAmCA,IAAA,WAAA,GAAA;AACA,aAAA,KAAA,WAAA,CAAA,MAAA,GAAA,EAAA;AACA;;AArCA,GAjCA;AAwEA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,YAAA,IAAA,GAAA,KAAA,IAAA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,uBAAA,IAAA,CAAA,KAAA,QAAA,EAAA;AACA,YAAA,SAAA,GAAA,mBAAA,CAAA,IAAA,CAAA;AACA,WAAA,UAAA,GAAA,SAAA,CAAA,sBAAA;AACA,YAAA,UAAA,GAAA,MAAA,CAAA,UAAA;AACA,WAAA,QAAA,GAAA,IAAA,KAAA,CAAA,IAAA,QAAA,CAAA,SAAA,IAAA,SAAA,CAAA,MAAA,IAAA,CAAA;AACA,WAAA,UAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,CAAA,UAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,SAAA,CAAA,WAAA;AACA,WAAA,MAAA,GAAA,SAAA,CAAA,MAAA;AACA,WAAA,cAAA,GAAA,SAAA,CAAA,cAAA;AACA,WAAA,aAAA,GAAA,UAAA,GAAA,SAAA,CAAA,aAAA,GAAA,IAAA,CAAA,GAAA,CAAA,SAAA,CAAA,aAAA,EAAA,CAAA,CAAA;AACA,WAAA,UAAA,CAAA,QAAA,CAAA,SAAA,CAAA,IAAA;AACA,WAAA,WAAA,CAAA,QAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA,CAAA,aAAA,EAAA,CAAA,CAAA,CAAA;;AACA,UAAA,IAAA,GAAA,CAAA,EAAA;AACA,aAAA,YAAA,CAAA,QAAA,CAAA,SAAA,CAAA,YAAA;AACA;;AACA,WAAA,YAAA,GAAA,SAAA,CAAA,YAAA;AACA,WAAA,UAAA,GAAA,UAAA;AACA,WAAA,iBAAA,GAAA,OAAA,CAAA,eAAA;AACA,UAAA,KAAA,iBAAA,EAAA,KAAA,cAAA,GAAA,SAAA,CAAA,cAAA;AACA,WAAA,OAAA,GACA,QAAA,CAAA,WAAA,GAAA,CAAA,IAAA,QAAA,CAAA,WAAA,GAAA,CAAA,IAAA,IAAA,IAAA,cAAA,CAAA,gBAAA,EADA;AAEA,WAAA,SAAA,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA,SAAA,IAAA,IAAA,GAAA,CAAA,IAAA,CAAA,KAAA,iBAAA;AACA,WAAA,aAAA,GAAA,KAAA,IAAA,GAAA,CAAA,GAAA,MAAA,CAAA,KAAA,MAAA,EAAA,CAAA,CAAA,GAAA,SAAA,CAAA,KAAA,MAAA,CAAA;AACA,WAAA,WAAA,GAAA,IAAA,KAAA,CAAA,IAAA,QAAA,CAAA,QAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IACA,IAAA,KAAA,CAAA,IAAA,QAAA,CAAA,QAAA,CAAA,cAAA,CAAA,IAAA,CADA;AAEA,KA5BA;;AA6BA,IAAA,GAAA,GAAA;AACA,UAAA,KAAA,iBAAA,EAAA;;AACA,UAAA,KAAA,aAAA,KAAA,CAAA,EAAA;AACA,QAAA,eAAA,CAAA,KAAA,IAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,oBAAA,CAAA,KAAA,IAAA,CAAA;AACA;AACA,KApCA;;AAqCA,IAAA,aAAA,CAAA,KAAA,EAAA;AACA,aAAA,KAAA,CAAA,QAAA,GAAA,OAAA;AACA,KAvCA;;AAwCA,IAAA,WAAA,GAAA;AACA,aAAA;AACA,4CAAA,IADA;AAEA,mCAAA,CAAA,KAAA,YAAA,IAAA,CAAA,KAAA,iBAAA,IAAA,CAAA,KAAA,UAAA,IAAA,KAAA,QAFA;AAGA,uCAAA,KAAA;AAHA,OAAA;AAKA,KA9CA;;AA+CA,IAAA,eAAA,GAAA;AACA,aAAA;AACA,+CAAA,IADA;AAEA,0BAAA,KAAA,YAAA,IAAA,KAAA;AAFA,OAAA;AAIA;;AApDA;AAxEA,CAAA","sourcesContent":["<script>\r\nimport GenericDimensionRowText from \"@/components/GenericDimensionRowText\";\r\n\r\nexport default {\r\n  name: \"ModernAntimatterDimensionRow\",\r\n  components: {\r\n    GenericDimensionRowText\r\n  },\r\n  props: {\r\n    tier: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isUnlocked: false,\r\n      isCapped: false,\r\n      multiplier: new Decimal(0),\r\n      amount: new Decimal(0),\r\n      bought: 0,\r\n      boughtBefore10: 0,\r\n      rateOfChange: new Decimal(0),\r\n      singleCost: new Decimal(0),\r\n      until10Cost: new Decimal(0),\r\n      isAffordable: false,\r\n      buyUntil10: true,\r\n      howManyCanBuy: 0,\r\n      isContinuumActive: false,\r\n      continuumValue: 0,\r\n      isShown: false,\r\n      isCostsAD: false,\r\n      amountDisplay: \"\",\r\n      hasTutorial: false,\r\n    };\r\n  },\r\n  computed: {\r\n    isDoomed: () => Pelle.isDoomed,\r\n    name() {\r\n      return `${AntimatterDimension(this.tier).shortDisplayName} Antimatter Dimension`;\r\n    },\r\n    costDisplay() {\r\n      return this.buyUntil10 ? format(this.until10Cost) : format(this.singleCost);\r\n    },\r\n    continuumString() {\r\n      return formatFloat(this.continuumValue, 2);\r\n    },\r\n    showRow() {\r\n      return this.isShown || this.isUnlocked || this.amount.gt(0);\r\n    },\r\n    boughtTooltip() {\r\n      if (this.isCapped) return `Nameless prevents the purchase of more than ${format(1)} 8th Antimatter Dimension`;\r\n      if (this.isContinuumActive) return \"Continuum produces all your Antimatter Dimensions\";\r\n      return `Purchased ${quantifyInt(\"time\", this.bought)}`;\r\n    },\r\n    costUnit() {\r\n      return `${AntimatterDimension(this.tier - 2).shortDisplayName} AD`;\r\n    },\r\n    buttonPrefix() {\r\n      if (!this.isUnlocked) return \"Locked\";\r\n      if (this.isCapped) return \"Shattered by Nameless\";\r\n      if (this.isContinuumActive) return \"Continuum: \";\r\n      return `Buy ${formatInt(this.howManyCanBuy)}`;\r\n    },\r\n    buttonValue() {\r\n      if (this.isCapped) return \"\";\r\n      if (this.isContinuumActive) return this.continuumString;\r\n      const prefix = this.showCostTitle(this.buyUntil10 ? this.until10Cost : this.singleCost) ? \"Cost: \" : \"\";\r\n      const suffix = this.isCostsAD ? this.costUnit : \"AM\";\r\n      return `${prefix}${this.costDisplay} ${suffix}`;\r\n    },\r\n    hasLongText() {\r\n      return this.buttonValue.length > 20;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      const tier = this.tier;\r\n      if (tier > DimBoost.maxDimensionsUnlockable && !this.isDoomed) return;\r\n      const dimension = AntimatterDimension(tier);\r\n      this.isUnlocked = dimension.isAvailableForPurchase;\r\n      const buyUntil10 = player.buyUntil10;\r\n      this.isCapped = tier === 8 && Enslaved.isRunning && dimension.bought >= 1;\r\n      this.multiplier.copyFrom(AntimatterDimension(tier).multiplier);\r\n      this.amount.copyFrom(dimension.totalAmount);\r\n      this.bought = dimension.bought;\r\n      this.boughtBefore10 = dimension.boughtBefore10;\r\n      this.howManyCanBuy = buyUntil10 ? dimension.howManyCanBuy : Math.min(dimension.howManyCanBuy, 1);\r\n      this.singleCost.copyFrom(dimension.cost);\r\n      this.until10Cost.copyFrom(dimension.cost.times(Math.max(dimension.howManyCanBuy, 1)));\r\n      if (tier < 8) {\r\n        this.rateOfChange.copyFrom(dimension.rateOfChange);\r\n      }\r\n      this.isAffordable = dimension.isAffordable;\r\n      this.buyUntil10 = buyUntil10;\r\n      this.isContinuumActive = Laitela.continuumActive;\r\n      if (this.isContinuumActive) this.continuumValue = dimension.continuumValue;\r\n      this.isShown =\r\n        (DimBoost.totalBoosts > 0 && DimBoost.totalBoosts + 3 >= tier) || PlayerProgress.infinityUnlocked();\r\n      this.isCostsAD = NormalChallenge(6).isRunning && tier > 2 && !this.isContinuumActive;\r\n      this.amountDisplay = this.tier < 8 ? format(this.amount, 2) : formatInt(this.amount);\r\n      this.hasTutorial = (tier === 1 && Tutorial.isActive(TUTORIAL_STATE.DIM1)) ||\r\n        (tier === 2 && Tutorial.isActive(TUTORIAL_STATE.DIM2));\r\n    },\r\n    buy() {\r\n      if (this.isContinuumActive) return;\r\n      if (this.howManyCanBuy === 1) {\r\n        buyOneDimension(this.tier);\r\n      } else {\r\n        buyAsManyAsYouCanBuy(this.tier);\r\n      }\r\n    },\r\n    showCostTitle(value) {\r\n      return value.exponent < 1000000;\r\n    },\r\n    buttonClass() {\r\n      return {\r\n        \"o-primary-btn o-primary-btn--new\": true,\r\n        \"o-primary-btn--disabled\": (!this.isAffordable && !this.isContinuumActive) || !this.isUnlocked || this.isCapped,\r\n        \"o-non-clickable o-continuum\": this.isContinuumActive\r\n      };\r\n    },\r\n    buttonTextClass() {\r\n      return {\r\n        \"button-content l-modern-buy-ad-text\": true,\r\n        \"tutorial--glow\": this.isAffordable && this.hasTutorial\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-show=\"showRow\"\r\n    class=\"c-dimension-row l-dimension-row-antimatter-dim c-antimatter-dim-row l-dimension-single-row\"\r\n    :class=\"{ 'c-dim-row--not-reached': !isUnlocked }\"\r\n  >\r\n    <GenericDimensionRowText\r\n      :tier=\"tier\"\r\n      :name=\"name\"\r\n      :multiplier-text=\"formatX(multiplier, 2, 2)\"\r\n      :amount-text=\"amountDisplay\"\r\n      :rate=\"rateOfChange\"\r\n    />\r\n    <div class=\"l-dim-row-multi-button-container c-modern-dim-tooltip-container\">\r\n      <div class=\"c-modern-dim-purchase-count-tooltip\">\r\n        {{ boughtTooltip }}\r\n      </div>\r\n      <button\r\n        :class=\"buttonClass()\"\r\n        @click=\"buy\"\r\n      >\r\n        <div :class=\"buttonTextClass()\">\r\n          <div>\r\n            {{ buttonPrefix }}\r\n          </div>\r\n          <div :class=\"{ 'l-dim-row-small-text': hasLongText }\">\r\n            {{ buttonValue }}\r\n          </div>\r\n          <div\r\n            v-if=\"hasTutorial\"\r\n            class=\"fas fa-circle-exclamation l-notification-icon\"\r\n          />\r\n        </div>\r\n        <div\r\n          v-if=\"!isContinuumActive && isUnlocked && !isCapped\"\r\n          class=\"fill\"\r\n        >\r\n          <div\r\n            class=\"fill-purchased\"\r\n            :style=\"{ 'width': boughtBefore10*10 + '%' }\"\r\n          />\r\n          <div\r\n            class=\"fill-possible\"\r\n            :style=\"{ 'width': howManyCanBuy*10 + '%' }\"\r\n          />\r\n        </div>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-modern-buy-ad-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.o-non-clickable {\r\n  cursor: auto;\r\n}\r\n\r\n.o-continuum {\r\n  border-color: var(--color-laitela--accent);\r\n  color: var(--color-laitela--accent);\r\n  background: var(--color-laitela--base);\r\n}\r\n\r\n.o-continuum:hover {\r\n  border-color: var(--color-laitela--accent);\r\n  color: var(--color-laitela--base);\r\n  background: var(--color-laitela--accent);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/antimatter-dimensions"},"metadata":{},"sourceType":"module"}