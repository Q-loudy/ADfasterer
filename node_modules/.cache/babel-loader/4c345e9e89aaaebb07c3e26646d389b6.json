{"ast":null,"code":"export default {\n  name: \"UnlockInfinityDimButton\",\n\n  data() {\n    return {\n      isVisible: false,\n      canUnlock: false,\n      hasIPUnlock: true,\n      amRequirement: new Decimal(0),\n      ipRequirement: 0\n    };\n  },\n\n  computed: {\n    text() {\n      const dimensionText = `a new ${this.hasIPUnlock ? \"type of Dimension\" : \"Infinity Dimension\"}.`;\n\n      if (this.canUnlock) {\n        return `Unlock ${dimensionText}`;\n      }\n\n      const amDisplay = format(this.amRequirement);\n      const ipDisplay = format(this.ipRequirement);\n\n      if (this.hasIPUnlock) {\n        return `Reach ${ipDisplay} Infinity Points and ${amDisplay} antimatter to unlock ${dimensionText}`;\n      }\n\n      return `Reach ${amDisplay} antimatter to unlock ${dimensionText}`;\n    },\n\n    buttonClassObject() {\n      return {\n        \"o-prestige-button\": true,\n        \"o-infinity-button\": true,\n        \"o-infinity-button--unavailable\": !this.canUnlock\n      };\n    }\n\n  },\n  methods: {\n    update() {\n      this.isVisible = player.break && !InfinityDimension(8).isUnlocked && !Player.canEternity && !EternityMilestone.autoUnlockID.isReached;\n      if (!this.isVisible) return;\n      const nextDimension = InfinityDimensions.next();\n      this.canUnlock = nextDimension.canUnlock;\n      this.hasIPUnlock = nextDimension.hasIPUnlock;\n      this.amRequirement = nextDimension.amRequirement;\n      this.ipRequirement = nextDimension.ipRequirement;\n    },\n\n    tryUnlockNextInfinityDimension() {\n      InfinityDimensions.unlockNext();\n    }\n\n  }\n};","map":{"version":3,"sources":["UnlockInfinityDimButton.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,yBADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA,IAHA;AAIA,MAAA,aAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CAJA;AAKA,MAAA,aAAA,EAAA;AALA,KAAA;AAOA,GAVA;;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,IAAA,GAAA;AACA,YAAA,aAAA,GAAA,SAAA,KAAA,WAAA,GAAA,mBAAA,GAAA,oBAAA,GAAA;;AACA,UAAA,KAAA,SAAA,EAAA;AACA,eAAA,UAAA,aAAA,EAAA;AACA;;AACA,YAAA,SAAA,GAAA,MAAA,CAAA,KAAA,aAAA,CAAA;AACA,YAAA,SAAA,GAAA,MAAA,CAAA,KAAA,aAAA,CAAA;;AACA,UAAA,KAAA,WAAA,EAAA;AACA,eAAA,SAAA,SAAA,wBAAA,SAAA,yBAAA,aAAA,EAAA;AACA;;AACA,aAAA,SAAA,SAAA,yBAAA,aAAA,EAAA;AACA,KAZA;;AAaA,IAAA,iBAAA,GAAA;AACA,aAAA;AACA,6BAAA,IADA;AAEA,6BAAA,IAFA;AAGA,0CAAA,CAAA,KAAA;AAHA,OAAA;AAKA;;AAnBA,GAXA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,SAAA,GAAA,MAAA,CAAA,KAAA,IAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,UAAA,IAAA,CAAA,MAAA,CAAA,WAAA,IACA,CAAA,iBAAA,CAAA,YAAA,CAAA,SADA;AAEA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA,YAAA,aAAA,GAAA,kBAAA,CAAA,IAAA,EAAA;AACA,WAAA,SAAA,GAAA,aAAA,CAAA,SAAA;AACA,WAAA,WAAA,GAAA,aAAA,CAAA,WAAA;AACA,WAAA,aAAA,GAAA,aAAA,CAAA,aAAA;AACA,WAAA,aAAA,GAAA,aAAA,CAAA,aAAA;AACA,KAVA;;AAWA,IAAA,8BAAA,GAAA;AACA,MAAA,kBAAA,CAAA,UAAA;AACA;;AAbA;AAhCA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"UnlockInfinityDimButton\",\r\n  data() {\r\n    return {\r\n      isVisible: false,\r\n      canUnlock: false,\r\n      hasIPUnlock: true,\r\n      amRequirement: new Decimal(0),\r\n      ipRequirement: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    text() {\r\n      const dimensionText = `a new ${this.hasIPUnlock ? \"type of Dimension\" : \"Infinity Dimension\"}.`;\r\n      if (this.canUnlock) {\r\n        return `Unlock ${dimensionText}`;\r\n      }\r\n      const amDisplay = format(this.amRequirement);\r\n      const ipDisplay = format(this.ipRequirement);\r\n      if (this.hasIPUnlock) {\r\n        return `Reach ${ipDisplay} Infinity Points and ${amDisplay} antimatter to unlock ${dimensionText}`;\r\n      }\r\n      return `Reach ${amDisplay} antimatter to unlock ${dimensionText}`;\r\n    },\r\n    buttonClassObject() {\r\n      return {\r\n        \"o-prestige-button\": true,\r\n        \"o-infinity-button\": true,\r\n        \"o-infinity-button--unavailable\": !this.canUnlock\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isVisible = player.break && !InfinityDimension(8).isUnlocked && !Player.canEternity &&\r\n        !EternityMilestone.autoUnlockID.isReached;\r\n      if (!this.isVisible) return;\r\n      const nextDimension = InfinityDimensions.next();\r\n      this.canUnlock = nextDimension.canUnlock;\r\n      this.hasIPUnlock = nextDimension.hasIPUnlock;\r\n      this.amRequirement = nextDimension.amRequirement;\r\n      this.ipRequirement = nextDimension.ipRequirement;\r\n    },\r\n    tryUnlockNextInfinityDimension() {\r\n      InfinityDimensions.unlockNext();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <button\r\n    v-if=\"isVisible\"\r\n    :class=\"buttonClassObject\"\r\n    @click=\"tryUnlockNextInfinityDimension\"\r\n  >\r\n    {{ text }}\r\n  </button>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/ui-modes/prestige-header"},"metadata":{},"sourceType":"module"}