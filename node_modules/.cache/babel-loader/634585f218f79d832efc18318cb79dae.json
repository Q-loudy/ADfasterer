{"ast":null,"code":"export const eternityMilestones = {\n  autobuyerIPMult: {\n    eternities: 1,\n    reward: \"Unlock the Infinity Point multiplier autobuyer\",\n    pelleUseless: true\n  },\n  keepAutobuyers: {\n    eternities: 2,\n    reward: \"You start Eternity with all Normal Challenges complete, all normal autobuyers, and infinity broken\"\n  },\n  autobuyerReplicantiGalaxy: {\n    eternities: 3,\n    reward: \"Unlock the Replicanti Galaxy Autobuyer\"\n  },\n  keepInfinityUpgrades: {\n    eternities: 4,\n    reward: \"You start Eternity with all Infinity Upgrades\",\n    givenByPelle: () => PelleUpgrade.keepInfinityUpgrades.isBought,\n    pelleUseless: true\n  },\n  bigCrunchModes: {\n    eternities: 5,\n    reward: \"Unlock more Big Crunch Autobuyer options\"\n  },\n  autoEP: {\n    eternities: 6,\n    reward: () => {\n      const EPmin = getOfflineEPGain(TimeSpan.fromMinutes(1).totalMilliseconds);\n      const em200 = getEternitiedMilestoneReward(TimeSpan.fromHours(1).totalMilliseconds, EternityMilestone.autoEternities.isReached).gt(0);\n      const em1000 = getInfinitiedMilestoneReward(TimeSpan.fromHours(1).totalMilliseconds, EternityMilestone.autoInfinities.isReached).gt(0);\n      if (!player.options.offlineProgress) return `This milestone would give offline EP generation, but offline progress\n        is currently disabled`;\n      const effectText = em200 || em1000 ? \"Inactive\" : `Currently ${format(EPmin, 2, 2)} EP/min`;\n      return `While offline, gain ${formatPercents(0.25)} of your best Eternity Points per minute from previous\n        Eternities (${effectText})`;\n    },\n    activeCondition: () => player.options.offlineProgress ? `Active as long as neither of the other offline milestones\n        (${formatInt(200)} or ${formatInt(1000)}) are also active` : \"\"\n  },\n  autoIC: {\n    eternities: 7,\n    reward: `You complete Infinity Challenges as soon as you unlock them,\n      and keep the Dimensional Sacrifice Autobuyer`,\n    pelleUseless: true\n  },\n  keepBreakUpgrades: {\n    eternities: 8,\n    reward: \"You start Eternity with all Break Infinity Upgrades\",\n    givenByPelle: () => PelleUpgrade.keepBreakInfinityUpgrades.isBought,\n    pelleUseless: true\n  },\n  autobuyMaxGalaxies: {\n    eternities: 9,\n    reward: \"Unlock the buy max Antimatter Galaxies Autobuyer mode\"\n  },\n  unlockReplicanti: {\n    eternities: 10,\n    reward: \"You start with Replicanti unlocked\",\n    givenByPelle: () => PelleUpgrade.replicantiStayUnlocked.isBought,\n    pelleUseless: true\n  },\n  autobuyerID1: {\n    eternities: 11,\n    reward: \"Unlock the 1st Infinity Dimension Autobuyer\",\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerID2: {\n    eternities: 12,\n    reward: \"Unlock the 2nd Infinity Dimension Autobuyer\",\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerID3: {\n    eternities: 13,\n    reward: \"Unlock the 3rd Infinity Dimension Autobuyer\",\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerID4: {\n    eternities: 14,\n    reward: \"Unlock the 4th Infinity Dimension Autobuyer\",\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerID5: {\n    eternities: 15,\n    reward: \"Unlock the 5th Infinity Dimension Autobuyer\",\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerID6: {\n    eternities: 16,\n    reward: \"Unlock the 6th Infinity Dimension Autobuyer\",\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerID7: {\n    eternities: 17,\n    reward: \"Unlock the 7th Infinity Dimension Autobuyer\",\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerID8: {\n    eternities: 18,\n    reward: \"Unlock the 8th Infinity Dimension Autobuyer\",\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autoUnlockID: {\n    eternities: 25,\n    reward: \"You automatically unlock Infinity Dimensions upon reaching them\"\n  },\n  unlockAllND: {\n    eternities: 30,\n    reward: \"Start with all Antimatter Dimensions available for purchase\"\n  },\n  replicantiNoReset: {\n    eternities: 40,\n    reward: `Replicanti Galaxies no longer reset Antimatter, Antimatter Dimensions,\n      Tickspeed, Dimensional Sacrifice, or Dimension Boosts`,\n    pelleUseless: true\n  },\n  autobuyerReplicantiChance: {\n    eternities: 50,\n    reward: \"Unlock the Replicanti Chance Upgrade Autobuyer\",\n    givenByPelle: () => PelleUpgrade.replicantiAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerReplicantiInterval: {\n    eternities: 60,\n    reward: \"Unlock the Replicanti Interval Upgrade Autobuyer\",\n    givenByPelle: () => PelleUpgrade.replicantiAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerReplicantiMaxGalaxies: {\n    eternities: 80,\n    reward: \"Unlock the Max Replicanti Galaxy Upgrade Autobuyer\",\n    givenByPelle: () => PelleUpgrade.replicantiAutobuyers.isBought,\n    pelleUseless: true\n  },\n  autobuyerEternity: {\n    eternities: 100,\n    reward: \"Unlock autobuyer for Eternities\"\n  },\n  autoEternities: {\n    eternities: 200,\n    reward: () => {\n      if (!player.options.offlineProgress) return `This milestone would generate eternities offline, but offline\n        progress is currently disabled`;\n      const eternities = getEternitiedMilestoneReward(TimeSpan.fromHours(1).totalMilliseconds, player.eternities.gte(200)); // As far as I can tell, using templates here as Codefactor wants would lead to nested templates,\n      // which seems messy to say the least.\n\n      const realTime = PlayerProgress.seenAlteredSpeed() ? \" real-time\" : \"\"; // eslint-disable-next-line prefer-template\n\n      return `While offline, gain Eternities at ${formatPercents(0.5)} the rate of your fastest${realTime} Eternity ` + (eternities.gt(0) ? `(Currently ${format(eternities, 2, 2)}/hour)` : \"(Inactive)\");\n    },\n    activeCondition: () => player.options.offlineProgress ? `Must be outside of all Challenges and Dilation, and the Eternity Autobuyer must be set to Eternity at zero EP.\n        This milestone's effect is capped at ${formatInt(33)}ms.` : \"\",\n    pelleUseless: true\n  },\n  autoInfinities: {\n    eternities: 1000,\n    reward: () => {\n      if (!player.options.offlineProgress) return `This milestone would generate infinities offline, but offline\n        progress is currently disabled`;\n      const infinities = getInfinitiedMilestoneReward(TimeSpan.fromHours(1).totalMilliseconds, player.eternities.gte(1000)); // eslint-disable-next-line prefer-template\n\n      return `While offline, gain Infinities equal to ${formatPercents(0.5)}\n        your best Infinities/hour this Eternity ` + (infinities.gt(0) ? `(Currently ${format(infinities, 2, 2)}/hour)` : \"(Inactive)\");\n    },\n    activeCondition: () => player.options.offlineProgress ? `Must be outside of Normal/Infinity Challenges and outside of EC4 and EC12,\n        the Big Crunch Autobuyer must be turned on and set to time mode with ${formatInt(5)} seconds or less,\n        and the Eternity Autobuyer must be turned off.` : \"\",\n    pelleUseless: true\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/eternity/eternity-milestones.js"],"names":["eternityMilestones","autobuyerIPMult","eternities","reward","pelleUseless","keepAutobuyers","autobuyerReplicantiGalaxy","keepInfinityUpgrades","givenByPelle","PelleUpgrade","isBought","bigCrunchModes","autoEP","EPmin","getOfflineEPGain","TimeSpan","fromMinutes","totalMilliseconds","em200","getEternitiedMilestoneReward","fromHours","EternityMilestone","autoEternities","isReached","gt","em1000","getInfinitiedMilestoneReward","autoInfinities","player","options","offlineProgress","effectText","format","formatPercents","activeCondition","formatInt","autoIC","keepBreakUpgrades","keepBreakInfinityUpgrades","autobuyMaxGalaxies","unlockReplicanti","replicantiStayUnlocked","autobuyerID1","IDAutobuyers","autobuyerID2","autobuyerID3","autobuyerID4","autobuyerID5","autobuyerID6","autobuyerID7","autobuyerID8","autoUnlockID","unlockAllND","replicantiNoReset","autobuyerReplicantiChance","replicantiAutobuyers","autobuyerReplicantiInterval","autobuyerReplicantiMaxGalaxies","autobuyerEternity","gte","realTime","PlayerProgress","seenAlteredSpeed","infinities"],"mappings":"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","sourcesContent":["export const eternityMilestones = {\r\n  autobuyerIPMult: {\r\n    eternities: 1,\r\n    reward: \"Unlock the Infinity Point multiplier autobuyer\",\r\n    pelleUseless: true\r\n  },\r\n  keepAutobuyers: {\r\n    eternities: 2,\r\n    reward: \"You start Eternity with all Normal Challenges complete, all normal autobuyers, and infinity broken\"\r\n  },\r\n  autobuyerReplicantiGalaxy: {\r\n    eternities: 3,\r\n    reward: \"Unlock the Replicanti Galaxy Autobuyer\"\r\n  },\r\n  keepInfinityUpgrades: {\r\n    eternities: 4,\r\n    reward: \"You start Eternity with all Infinity Upgrades\",\r\n    givenByPelle: () => PelleUpgrade.keepInfinityUpgrades.isBought,\r\n    pelleUseless: true\r\n  },\r\n  bigCrunchModes: {\r\n    eternities: 5,\r\n    reward: \"Unlock more Big Crunch Autobuyer options\"\r\n  },\r\n  autoEP: {\r\n    eternities: 6,\r\n    reward: () => {\r\n      const EPmin = getOfflineEPGain(TimeSpan.fromMinutes(1).totalMilliseconds);\r\n      const em200 = getEternitiedMilestoneReward(TimeSpan.fromHours(1).totalMilliseconds,\r\n        EternityMilestone.autoEternities.isReached).gt(0);\r\n      const em1000 = getInfinitiedMilestoneReward(TimeSpan.fromHours(1).totalMilliseconds,\r\n        EternityMilestone.autoInfinities.isReached).gt(0);\r\n      if (!player.options.offlineProgress) return `This milestone would give offline EP generation, but offline progress\r\n        is currently disabled`;\r\n      const effectText = (em200 || em1000) ? \"Inactive\" : `Currently ${format(EPmin, 2, 2)} EP/min`;\r\n      return `While offline, gain ${formatPercents(0.25)} of your best Eternity Points per minute from previous\r\n        Eternities (${effectText})`;\r\n    },\r\n    activeCondition: () => (player.options.offlineProgress\r\n      ? `Active as long as neither of the other offline milestones\r\n        (${formatInt(200)} or ${formatInt(1000)}) are also active`\r\n      : \"\"),\r\n  },\r\n  autoIC: {\r\n    eternities: 7,\r\n    reward: `You complete Infinity Challenges as soon as you unlock them,\r\n      and keep the Dimensional Sacrifice Autobuyer`,\r\n    pelleUseless: true\r\n  },\r\n  keepBreakUpgrades: {\r\n    eternities: 8,\r\n    reward: \"You start Eternity with all Break Infinity Upgrades\",\r\n    givenByPelle: () => PelleUpgrade.keepBreakInfinityUpgrades.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyMaxGalaxies: {\r\n    eternities: 9,\r\n    reward: \"Unlock the buy max Antimatter Galaxies Autobuyer mode\"\r\n  },\r\n  unlockReplicanti: {\r\n    eternities: 10,\r\n    reward: \"You start with Replicanti unlocked\",\r\n    givenByPelle: () => PelleUpgrade.replicantiStayUnlocked.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerID1: {\r\n    eternities: 11,\r\n    reward: \"Unlock the 1st Infinity Dimension Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerID2: {\r\n    eternities: 12,\r\n    reward: \"Unlock the 2nd Infinity Dimension Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerID3: {\r\n    eternities: 13,\r\n    reward: \"Unlock the 3rd Infinity Dimension Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerID4: {\r\n    eternities: 14,\r\n    reward: \"Unlock the 4th Infinity Dimension Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerID5: {\r\n    eternities: 15,\r\n    reward: \"Unlock the 5th Infinity Dimension Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerID6: {\r\n    eternities: 16,\r\n    reward: \"Unlock the 6th Infinity Dimension Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerID7: {\r\n    eternities: 17,\r\n    reward: \"Unlock the 7th Infinity Dimension Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerID8: {\r\n    eternities: 18,\r\n    reward: \"Unlock the 8th Infinity Dimension Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.IDAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autoUnlockID: {\r\n    eternities: 25,\r\n    reward: \"You automatically unlock Infinity Dimensions upon reaching them\"\r\n  },\r\n  unlockAllND: {\r\n    eternities: 30,\r\n    reward: \"Start with all Antimatter Dimensions available for purchase\"\r\n  },\r\n  replicantiNoReset: {\r\n    eternities: 40,\r\n    reward: `Replicanti Galaxies no longer reset Antimatter, Antimatter Dimensions,\r\n      Tickspeed, Dimensional Sacrifice, or Dimension Boosts`,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerReplicantiChance: {\r\n    eternities: 50,\r\n    reward: \"Unlock the Replicanti Chance Upgrade Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.replicantiAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerReplicantiInterval: {\r\n    eternities: 60,\r\n    reward: \"Unlock the Replicanti Interval Upgrade Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.replicantiAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerReplicantiMaxGalaxies: {\r\n    eternities: 80,\r\n    reward: \"Unlock the Max Replicanti Galaxy Upgrade Autobuyer\",\r\n    givenByPelle: () => PelleUpgrade.replicantiAutobuyers.isBought,\r\n    pelleUseless: true\r\n  },\r\n  autobuyerEternity: {\r\n    eternities: 100,\r\n    reward: \"Unlock autobuyer for Eternities\"\r\n  },\r\n  autoEternities: {\r\n    eternities: 200,\r\n    reward: () => {\r\n      if (!player.options.offlineProgress) return `This milestone would generate eternities offline, but offline\r\n        progress is currently disabled`;\r\n      const eternities = getEternitiedMilestoneReward(TimeSpan.fromHours(1).totalMilliseconds,\r\n        player.eternities.gte(200));\r\n      // As far as I can tell, using templates here as Codefactor wants would lead to nested templates,\r\n      // which seems messy to say the least.\r\n      const realTime = PlayerProgress.seenAlteredSpeed() ? \" real-time\" : \"\";\r\n      // eslint-disable-next-line prefer-template\r\n      return `While offline, gain Eternities at ${formatPercents(0.5)} the rate of your fastest${realTime} Eternity ` +\r\n        (eternities.gt(0) ? `(Currently ${format(eternities, 2, 2)}/hour)` : \"(Inactive)\");\r\n    },\r\n    activeCondition: () => (player.options.offlineProgress\r\n      ? `Must be outside of all Challenges and Dilation, and the Eternity Autobuyer must be set to Eternity at zero EP.\r\n        This milestone's effect is capped at ${formatInt(33)}ms.`\r\n      : \"\"),\r\n      pelleUseless: true\r\n  },\r\n  autoInfinities: {\r\n    eternities: 1000,\r\n    reward: () => {\r\n      if (!player.options.offlineProgress) return `This milestone would generate infinities offline, but offline\r\n        progress is currently disabled`;\r\n      const infinities = getInfinitiedMilestoneReward(TimeSpan.fromHours(1).totalMilliseconds,\r\n        player.eternities.gte(1000));\r\n      // eslint-disable-next-line prefer-template\r\n      return `While offline, gain Infinities equal to ${formatPercents(0.5)}\r\n        your best Infinities/hour this Eternity ` +\r\n        (infinities.gt(0) ? `(Currently ${format(infinities, 2, 2)}/hour)` : \"(Inactive)\");\r\n    },\r\n    activeCondition: () => (player.options.offlineProgress\r\n      ? `Must be outside of Normal/Infinity Challenges and outside of EC4 and EC12,\r\n        the Big Crunch Autobuyer must be turned on and set to time mode with ${formatInt(5)} seconds or less,\r\n        and the Eternity Autobuyer must be turned off.`\r\n      : \"\"),\r\n      pelleUseless: true\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}