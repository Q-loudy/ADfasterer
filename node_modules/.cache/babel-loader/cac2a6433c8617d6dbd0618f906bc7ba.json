{"ast":null,"code":"/* eslint-disable no-console */\nimport { STEAM } from \"@/env\";\n/**\r\n * @template TModule\r\n */\n\nexport class NodeModule {\n  /**\r\n   * @param {string} name\r\n   */\n  constructor(name) {\n    this.name = name;\n    /**\r\n     * @type {TModule}\r\n     * @private\r\n     */\n\n    this.__module__ = STEAM && window.require !== undefined ? window.require(name) : undefined;\n  }\n\n  get isLoaded() {\n    return this.__module__ !== undefined;\n  }\n  /**\r\n   * @template TResult\r\n   * @param {(module: TModule, resolve: (value?: TResult) => void, reject: (reason?: any) => void) => void} executor\r\n   * @returns {Promise<TResult>}\r\n   */\n\n\n  makePromise(executor) {\n    if (!this.isLoaded) {\n      throw Error(`Node module \"${this.name}\" is not loaded.`);\n    }\n\n    return new Promise((resolve, reject) => {\n      executor(this.__module__, resolve, reject);\n    });\n  }\n  /**\r\n   * @template TResult\r\n   * @param {(module: TModule) => TResult} call\r\n   * @param {TResult} [defaultValue]\r\n   * @returns {TResult}\r\n   */\n\n\n  safeCall(call, defaultValue) {\n    if (!this.isLoaded) {\n      throw Error(`Node module \"${this.name}\" is not loaded.`);\n    }\n\n    try {\n      return call(this.__module__);\n    } catch (e) {\n      console.error(`Failed to make a call to node module \"${this.name}\".`);\n      console.error(e);\n      return defaultValue;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/steam/bindings/node-module.js"],"names":["STEAM","NodeModule","constructor","name","__module__","window","require","undefined","isLoaded","makePromise","executor","Error","Promise","resolve","reject","safeCall","call","defaultValue","e","console","error"],"mappings":"AAAA;AAEA,SAASA,KAAT,QAAsB,OAAtB;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,UAAN,CAAiB;AAEtB;AACF;AACA;AACEC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACA;AACJ;AACA;AACA;;AACI,SAAKC,UAAL,GAAkBJ,KAAK,IAAIK,MAAM,CAACC,OAAP,KAAmBC,SAA5B,GAAwCF,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAxC,GAA+DI,SAAjF;AACD;;AAEW,MAARC,QAAQ,GAAG;AACb,WAAO,KAAKJ,UAAL,KAAoBG,SAA3B;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEE,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB,QAAI,CAAC,KAAKF,QAAV,EAAoB;AAClB,YAAMG,KAAK,CAAE,gBAAe,KAAKR,IAAK,kBAA3B,CAAX;AACD;;AAED,WAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCJ,MAAAA,QAAQ,CAAC,KAAKN,UAAN,EAAkBS,OAAlB,EAA2BC,MAA3B,CAAR;AACD,KAFM,CAAP;AAGD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,QAAQ,CAACC,IAAD,EAAOC,YAAP,EAAqB;AAC3B,QAAI,CAAC,KAAKT,QAAV,EAAoB;AAClB,YAAMG,KAAK,CAAE,gBAAe,KAAKR,IAAK,kBAA3B,CAAX;AACD;;AAED,QAAI;AACF,aAAOa,IAAI,CAAC,KAAKZ,UAAN,CAAX;AACD,KAFD,CAEE,OAAOc,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAe,yCAAwC,KAAKjB,IAAK,IAAjE;AACAgB,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,aAAOD,YAAP;AACD;AACF;;AAnDqB","sourcesContent":["/* eslint-disable no-console */\r\n\r\nimport { STEAM } from \"@/env\";\r\n\r\n/**\r\n * @template TModule\r\n */\r\nexport class NodeModule {\r\n\r\n  /**\r\n   * @param {string} name\r\n   */\r\n  constructor(name) {\r\n    this.name = name;\r\n    /**\r\n     * @type {TModule}\r\n     * @private\r\n     */\r\n    this.__module__ = STEAM && window.require !== undefined ? window.require(name) : undefined;\r\n  }\r\n\r\n  get isLoaded() {\r\n    return this.__module__ !== undefined;\r\n  }\r\n\r\n  /**\r\n   * @template TResult\r\n   * @param {(module: TModule, resolve: (value?: TResult) => void, reject: (reason?: any) => void) => void} executor\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  makePromise(executor) {\r\n    if (!this.isLoaded) {\r\n      throw Error(`Node module \"${this.name}\" is not loaded.`);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      executor(this.__module__, resolve, reject);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @template TResult\r\n   * @param {(module: TModule) => TResult} call\r\n   * @param {TResult} [defaultValue]\r\n   * @returns {TResult}\r\n   */\r\n  safeCall(call, defaultValue) {\r\n    if (!this.isLoaded) {\r\n      throw Error(`Node module \"${this.name}\" is not loaded.`);\r\n    }\r\n\r\n    try {\r\n      return call(this.__module__);\r\n    } catch (e) {\r\n      console.error(`Failed to make a call to node module \"${this.name}\".`);\r\n      console.error(e);\r\n      return defaultValue;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}