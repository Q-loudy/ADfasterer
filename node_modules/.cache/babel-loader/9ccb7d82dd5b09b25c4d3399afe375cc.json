{"ast":null,"code":"import GenericDimensionRowText from \"@/components/GenericDimensionRowText\";\nimport PrimaryButton from \"@/components/PrimaryButton\";\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\nexport default {\n  name: \"ModernInfinityDimensionRow\",\n  components: {\n    GenericDimensionRowText,\n    PrimaryButton,\n    PrimaryToggleButton\n  },\n  props: {\n    tier: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      hasPrevTier: false,\n      isUnlocked: false,\n      canUnlock: false,\n      multiplier: new Decimal(0),\n      baseAmount: 0,\n      amount: new Decimal(0),\n      purchases: 0,\n      rateOfChange: new Decimal(0),\n      isAutobuyerUnlocked: false,\n      cost: new Decimal(0),\n      isAvailableForPurchase: false,\n      isCapped: false,\n      capIP: new Decimal(0),\n      isAutobuyerOn: false,\n      isEC8Running: false,\n      hardcap: InfinityDimensions.HARDCAP_PURCHASES,\n      eternityReached: false,\n      enslavedRunning: false\n    };\n  },\n\n  computed: {\n    shiftDown() {\n      return ui.view.shiftDown;\n    },\n\n    name() {\n      return `${InfinityDimension(this.tier).shortDisplayName} Infinity Dimension`;\n    },\n\n    costDisplay() {\n      if (this.isUnlocked || this.shiftDown) {\n        if (this.isCapped) return \"Capped\";\n        return this.showCostTitle ? `Cost: ${format(this.cost)} IP` : `${format(this.cost)} IP`;\n      }\n\n      if (this.canUnlock) {\n        return \"Unlock\";\n      }\n\n      return `Reach ${formatPostBreak(InfinityDimension(this.tier).amRequirement)} AM`;\n    },\n\n    hasLongText() {\n      return this.costDisplay.length > 15;\n    },\n\n    capTooltip() {\n      if (this.enslavedRunning) return `Nameless prevents the purchase of more than ${format(10)} Infinity Dimensions`;\n      if (this.isCapped) return `Cap reached at ${format(this.capIP)} IP`;\n      return `Purchased ${quantifyInt(\"time\", this.purchases)}`;\n    },\n\n    showRow() {\n      return this.eternityReached || this.isUnlocked || this.canUnlock || this.amount.gt(0) || this.hasPrevTier;\n    },\n\n    showCostTitle() {\n      return this.cost.exponent < 1e6;\n    }\n\n  },\n  watch: {\n    isAutobuyerOn(newValue) {\n      Autobuyer.infinityDimension(this.tier).isActive = newValue;\n    }\n\n  },\n  methods: {\n    update() {\n      const tier = this.tier;\n      const dimension = InfinityDimension(tier);\n      this.hasPrevTier = tier === 1 || InfinityDimension(tier - 1).isUnlocked;\n      this.isUnlocked = dimension.isUnlocked;\n      this.canUnlock = dimension.canUnlock;\n      this.multiplier.copyFrom(dimension.multiplier);\n      this.baseAmount = dimension.baseAmount;\n      this.purchases = dimension.purchases;\n      this.amount.copyFrom(dimension.amount);\n      this.rateOfChange.copyFrom(dimension.rateOfChange);\n      this.isAutobuyerUnlocked = Autobuyer.infinityDimension(tier).isUnlocked;\n      this.cost.copyFrom(dimension.cost);\n      this.isAvailableForPurchase = dimension.isAvailableForPurchase;\n      this.isCapped = dimension.isCapped;\n\n      if (this.isCapped) {\n        this.capIP.copyFrom(dimension.hardcapIPAmount);\n        this.hardcap = dimension.purchaseCap;\n      }\n\n      this.isEC8Running = EternityChallenge(8).isRunning;\n      this.isAutobuyerOn = Autobuyer.infinityDimension(tier).isActive;\n      this.eternityReached = PlayerProgress.eternityUnlocked();\n      this.enslavedRunning = Enslaved.isRunning;\n    },\n\n    buySingleInfinityDimension() {\n      InfinityDimension(this.tier).buySingle();\n    },\n\n    buyMaxInfinityDimension() {\n      InfinityDimension(this.tier).buyMax(false);\n    }\n\n  }\n};","map":{"version":3,"sources":["ModernInfinityDimensionRow.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport GenericDimensionRowText from \"@/components/GenericDimensionRowText\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\n\r\nexport default {\r\n  name: \"ModernInfinityDimensionRow\",\r\n  components: {\r\n    GenericDimensionRowText,\r\n    PrimaryButton,\r\n    PrimaryToggleButton\r\n  },\r\n  props: {\r\n    tier: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      hasPrevTier: false,\r\n      isUnlocked: false,\r\n      canUnlock: false,\r\n      multiplier: new Decimal(0),\r\n      baseAmount: 0,\r\n      amount: new Decimal(0),\r\n      purchases: 0,\r\n      rateOfChange: new Decimal(0),\r\n      isAutobuyerUnlocked: false,\r\n      cost: new Decimal(0),\r\n      isAvailableForPurchase: false,\r\n      isCapped: false,\r\n      capIP: new Decimal(0),\r\n      isAutobuyerOn: false,\r\n      isEC8Running: false,\r\n      hardcap: InfinityDimensions.HARDCAP_PURCHASES,\r\n      eternityReached: false,\r\n      enslavedRunning: false,\r\n    };\r\n  },\r\n  computed: {\r\n    shiftDown() {\r\n      return ui.view.shiftDown;\r\n    },\r\n    name() {\r\n      return `${InfinityDimension(this.tier).shortDisplayName} Infinity Dimension`;\r\n    },\r\n    costDisplay() {\r\n      if (this.isUnlocked || this.shiftDown) {\r\n        if (this.isCapped) return \"Capped\";\r\n        return this.showCostTitle ? `Cost: ${format(this.cost)} IP` : `${format(this.cost)} IP`;\r\n      }\r\n\r\n      if (this.canUnlock) {\r\n        return \"Unlock\";\r\n      }\r\n\r\n      return `Reach ${formatPostBreak(InfinityDimension(this.tier).amRequirement)} AM`;\r\n    },\r\n    hasLongText() {\r\n      return this.costDisplay.length > 15;\r\n    },\r\n    capTooltip() {\r\n      if (this.enslavedRunning) return `Nameless prevents the purchase of more than ${format(10)} Infinity Dimensions`;\r\n      if (this.isCapped) return `Cap reached at ${format(this.capIP)} IP`;\r\n      return `Purchased ${quantifyInt(\"time\", this.purchases)}`;\r\n    },\r\n    showRow() {\r\n      return this.eternityReached || this.isUnlocked || this.canUnlock || this.amount.gt(0) ||\r\n        this.hasPrevTier;\r\n    },\r\n    showCostTitle() {\r\n      return this.cost.exponent < 1e6;\r\n    }\r\n  },\r\n  watch: {\r\n    isAutobuyerOn(newValue) {\r\n      Autobuyer.infinityDimension(this.tier).isActive = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const tier = this.tier;\r\n      const dimension = InfinityDimension(tier);\r\n      this.hasPrevTier = tier === 1 || InfinityDimension(tier - 1).isUnlocked;\r\n      this.isUnlocked = dimension.isUnlocked;\r\n      this.canUnlock = dimension.canUnlock;\r\n      this.multiplier.copyFrom(dimension.multiplier);\r\n      this.baseAmount = dimension.baseAmount;\r\n      this.purchases = dimension.purchases;\r\n      this.amount.copyFrom(dimension.amount);\r\n      this.rateOfChange.copyFrom(dimension.rateOfChange);\r\n      this.isAutobuyerUnlocked = Autobuyer.infinityDimension(tier).isUnlocked;\r\n      this.cost.copyFrom(dimension.cost);\r\n      this.isAvailableForPurchase = dimension.isAvailableForPurchase;\r\n      this.isCapped = dimension.isCapped;\r\n      if (this.isCapped) {\r\n        this.capIP.copyFrom(dimension.hardcapIPAmount);\r\n        this.hardcap = dimension.purchaseCap;\r\n      }\r\n      this.isEC8Running = EternityChallenge(8).isRunning;\r\n      this.isAutobuyerOn = Autobuyer.infinityDimension(tier).isActive;\r\n      this.eternityReached = PlayerProgress.eternityUnlocked();\r\n      this.enslavedRunning = Enslaved.isRunning;\r\n    },\r\n    buySingleInfinityDimension() {\r\n      InfinityDimension(this.tier).buySingle();\r\n    },\r\n    buyMaxInfinityDimension() {\r\n      InfinityDimension(this.tier).buyMax(false);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-show=\"showRow\"\r\n    class=\"c-dimension-row l-dimension-row-infinity-dim l-dimension-single-row\"\r\n    :class=\"{ 'c-dim-row--not-reached': !isUnlocked && !canUnlock }\"\r\n  >\r\n    <GenericDimensionRowText\r\n      :tier=\"tier\"\r\n      :name=\"name\"\r\n      :multiplier-text=\"formatX(multiplier, 2, 1)\"\r\n      :amount-text=\"format(amount, 2)\"\r\n      :rate=\"rateOfChange\"\r\n    />\r\n    <div class=\"l-dim-row-multi-button-container c-modern-dim-tooltip-container\">\r\n      <div class=\"c-modern-dim-purchase-count-tooltip\">\r\n        {{ capTooltip }}\r\n      </div>\r\n      <PrimaryButton\r\n        :enabled=\"isAvailableForPurchase || (!isUnlocked && canUnlock)\"\r\n        class=\"o-primary-btn--buy-id o-primary-btn o-primary-btn--new o-primary-btn--buy-dim\"\r\n        :class=\"{ 'l-dim-row-small-text': hasLongText }\"\r\n        @click=\"buySingleInfinityDimension\"\r\n      >\r\n        {{ costDisplay }}\r\n      </PrimaryButton>\r\n      <PrimaryToggleButton\r\n        v-if=\"isAutobuyerUnlocked && !isEC8Running\"\r\n        v-model=\"isAutobuyerOn\"\r\n        class=\"o-primary-btn--id-auto\"\r\n        label=\"Auto:\"\r\n      />\r\n      <PrimaryButton\r\n        v-else\r\n        :enabled=\"isAvailableForPurchase\"\r\n        class=\"o-primary-btn--id-auto\"\r\n        @click=\"buyMaxInfinityDimension\"\r\n      >\r\n        Buy Max\r\n      </PrimaryButton>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-modern-dim-tooltip-container .c-modern-dim-purchase-count-tooltip {\r\n  position: absolute;\r\n  width: 20rem;\r\n  top: 50%;\r\n  font-size: 1.3rem;\r\n  line-height: 1.6rem;\r\n  color: white;\r\n  background: black;\r\n  border: 0.1rem solid var(--color-text);\r\n  border-radius: var(--var-border-width, 0.5rem);\r\n  /* Buttons are 40rem wide, tooltip is 20rem */\r\n  transform: translate(calc(-175% - 1rem), -50%);\r\n  padding: 0.5rem;\r\n  visibility: hidden;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/infinity-dimensions"},"metadata":{},"sourceType":"module"}