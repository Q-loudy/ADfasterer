{"ast":null,"code":"import AntimatterDimensionProgressBar from \"./AntimatterDimensionProgressBar\";\nimport AntimatterDimensionRow from \"@/components/tabs/antimatter-dimensions/ModernAntimatterDimensionRow\";\nimport AntimatterGalaxyRow from \"@/components/tabs/antimatter-dimensions/ModernAntimatterGalaxyRow\";\nimport DimensionBoostRow from \"@/components/tabs/antimatter-dimensions/ModernDimensionBoostRow\";\nimport PrimaryButton from \"@/components/PrimaryButton\";\nimport TickspeedRow from \"@/components/tabs/antimatter-dimensions/TickspeedRow\";\nexport default {\n  name: \"ModernAntimatterDimensionsTab\",\n  components: {\n    PrimaryButton,\n    AntimatterDimensionProgressBar,\n    AntimatterDimensionRow,\n    AntimatterGalaxyRow,\n    DimensionBoostRow,\n    TickspeedRow\n  },\n\n  data() {\n    return {\n      hasDimensionBoosts: false,\n      buyUntil10: true,\n      isSacrificeUnlocked: false,\n      isSacrificeAffordable: false,\n      buy10Mult: new Decimal(0),\n      currentSacrifice: new Decimal(0),\n      sacrificeBoost: new Decimal(0),\n      disabledCondition: \"\",\n      isQuickResetAvailable: false,\n      hasContinuum: false,\n      isContinuumActive: false,\n      multiplierText: \"\"\n    };\n  },\n\n  computed: {\n    sacrificeTooltip() {\n      return `Boosts 8th Antimatter Dimension by ${formatX(this.sacrificeBoost, 2, 2)}`;\n    }\n\n  },\n  methods: {\n    maxAll() {\n      maxAll();\n    },\n\n    sacrifice() {\n      sacrificeBtnClick();\n    },\n\n    // Toggle single/10 without Continuum, otherwise cycle through all 3 if it's unlocked\n    changeBuyMode() {\n      if (!this.hasContinuum) {\n        player.buyUntil10 = !player.buyUntil10;\n        return;\n      } // \"Continuum\" => \"Until 10\" => \"Buy 1\" => \"Continuum\"\n\n\n      if (this.isContinuumActive) {\n        Laitela.setContinuum(false);\n        player.buyUntil10 = true;\n      } else if (player.buyUntil10) {\n        player.buyUntil10 = false;\n      } else {\n        if (ImaginaryUpgrade(21).isLockingMechanics && player.auto.disableContinuum) {\n          ImaginaryUpgrade(21).tryShowWarningModal();\n          return;\n        }\n\n        Laitela.setContinuum(true);\n      }\n    },\n\n    getUntil10Display() {\n      if (this.isContinuumActive) return \"Continuum\";\n      return this.buyUntil10 ? \"Until 10\" : \"Buy 1\";\n    },\n\n    update() {\n      this.hasDimensionBoosts = player.dimensionBoosts > 0;\n      this.buyUntil10 = player.buyUntil10;\n      this.hasContinuum = Laitela.continuumUnlocked;\n      this.isContinuumActive = Laitela.continuumActive;\n      this.isQuickResetAvailable = Player.isInAntimatterChallenge && Player.antimatterChallenge.isQuickResettable;\n      const isSacrificeUnlocked = Sacrifice.isVisible;\n      this.isSacrificeUnlocked = isSacrificeUnlocked;\n      this.buy10Mult.copyFrom(AntimatterDimensions.buyTenMultiplier);\n      this.multiplierText = `Buy 10 Dimension purchase multiplier: ${formatX(this.buy10Mult, 2, 2)}`;\n      if (!isSacrificeUnlocked) return;\n      this.isSacrificeAffordable = Sacrifice.canSacrifice;\n      this.currentSacrifice.copyFrom(Sacrifice.totalBoost);\n      this.sacrificeBoost.copyFrom(Sacrifice.nextBoost);\n      this.disabledCondition = Sacrifice.disabledCondition;\n      const sacText = this.isSacrificeUnlocked ? ` | Dimensional Sacrifice multiplier: ${formatX(this.currentSacrifice, 2, 2)}` : \"\";\n      this.multiplierText += sacText;\n    }\n\n  }\n};","map":{"version":3,"sources":["ModernAntimatterDimensionsTab.vue"],"names":[],"mappings":"AACA,OAAA,8BAAA,MAAA,kCAAA;AACA,OAAA,sBAAA,MAAA,sEAAA;AACA,OAAA,mBAAA,MAAA,mEAAA;AACA,OAAA,iBAAA,MAAA,iEAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AACA,OAAA,YAAA,MAAA,sDAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,+BADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aADA;AAEA,IAAA,8BAFA;AAGA,IAAA,sBAHA;AAIA,IAAA,mBAJA;AAKA,IAAA,iBALA;AAMA,IAAA;AANA,GAFA;;AAUA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,IAFA;AAGA,MAAA,mBAAA,EAAA,KAHA;AAIA,MAAA,qBAAA,EAAA,KAJA;AAKA,MAAA,SAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CALA;AAMA,MAAA,gBAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CANA;AAOA,MAAA,cAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CAPA;AAQA,MAAA,iBAAA,EAAA,EARA;AASA,MAAA,qBAAA,EAAA,KATA;AAUA,MAAA,YAAA,EAAA,KAVA;AAWA,MAAA,iBAAA,EAAA,KAXA;AAYA,MAAA,cAAA,EAAA;AAZA,KAAA;AAcA,GAzBA;;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,gBAAA,GAAA;AACA,aAAA,sCAAA,OAAA,CAAA,KAAA,cAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA;;AAHA,GA1BA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,MAAA,MAAA;AACA,KAHA;;AAIA,IAAA,SAAA,GAAA;AACA,MAAA,iBAAA;AACA,KANA;;AAOA;AACA,IAAA,aAAA,GAAA;AACA,UAAA,CAAA,KAAA,YAAA,EAAA;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,CAAA,MAAA,CAAA,UAAA;AACA;AACA,OAJA,CAKA;;;AACA,UAAA,KAAA,iBAAA,EAAA;AACA,QAAA,OAAA,CAAA,YAAA,CAAA,KAAA;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,IAAA;AACA,OAHA,MAGA,IAAA,MAAA,CAAA,UAAA,EAAA;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,KAAA;AACA,OAFA,MAEA;AACA,YAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,kBAAA,IAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AACA,UAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,mBAAA;AACA;AACA;;AACA,QAAA,OAAA,CAAA,YAAA,CAAA,IAAA;AACA;AACA,KA1BA;;AA2BA,IAAA,iBAAA,GAAA;AACA,UAAA,KAAA,iBAAA,EAAA,OAAA,WAAA;AACA,aAAA,KAAA,UAAA,GAAA,UAAA,GAAA,OAAA;AACA,KA9BA;;AA+BA,IAAA,MAAA,GAAA;AACA,WAAA,kBAAA,GAAA,MAAA,CAAA,eAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,MAAA,CAAA,UAAA;AACA,WAAA,YAAA,GAAA,OAAA,CAAA,iBAAA;AACA,WAAA,iBAAA,GAAA,OAAA,CAAA,eAAA;AACA,WAAA,qBAAA,GAAA,MAAA,CAAA,uBAAA,IAAA,MAAA,CAAA,mBAAA,CAAA,iBAAA;AAEA,YAAA,mBAAA,GAAA,SAAA,CAAA,SAAA;AACA,WAAA,mBAAA,GAAA,mBAAA;AAEA,WAAA,SAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,gBAAA;AAEA,WAAA,cAAA,GAAA,yCAAA,OAAA,CAAA,KAAA,SAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AACA,UAAA,CAAA,mBAAA,EAAA;AACA,WAAA,qBAAA,GAAA,SAAA,CAAA,YAAA;AACA,WAAA,gBAAA,CAAA,QAAA,CAAA,SAAA,CAAA,UAAA;AACA,WAAA,cAAA,CAAA,QAAA,CAAA,SAAA,CAAA,SAAA;AACA,WAAA,iBAAA,GAAA,SAAA,CAAA,iBAAA;AACA,YAAA,OAAA,GAAA,KAAA,mBAAA,GACA,wCAAA,OAAA,CAAA,KAAA,gBAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EADA,GAEA,EAFA;AAGA,WAAA,cAAA,IAAA,OAAA;AACA;;AArDA;AA/BA,CAAA","sourcesContent":["<script>\r\nimport AntimatterDimensionProgressBar from \"./AntimatterDimensionProgressBar\";\r\nimport AntimatterDimensionRow from \"@/components/tabs/antimatter-dimensions/ModernAntimatterDimensionRow\";\r\nimport AntimatterGalaxyRow from \"@/components/tabs/antimatter-dimensions/ModernAntimatterGalaxyRow\";\r\nimport DimensionBoostRow from \"@/components/tabs/antimatter-dimensions/ModernDimensionBoostRow\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport TickspeedRow from \"@/components/tabs/antimatter-dimensions/TickspeedRow\";\r\n\r\nexport default {\r\n  name: \"ModernAntimatterDimensionsTab\",\r\n  components: {\r\n    PrimaryButton,\r\n    AntimatterDimensionProgressBar,\r\n    AntimatterDimensionRow,\r\n    AntimatterGalaxyRow,\r\n    DimensionBoostRow,\r\n    TickspeedRow\r\n  },\r\n  data() {\r\n    return {\r\n      hasDimensionBoosts: false,\r\n      buyUntil10: true,\r\n      isSacrificeUnlocked: false,\r\n      isSacrificeAffordable: false,\r\n      buy10Mult: new Decimal(0),\r\n      currentSacrifice: new Decimal(0),\r\n      sacrificeBoost: new Decimal(0),\r\n      disabledCondition: \"\",\r\n      isQuickResetAvailable: false,\r\n      hasContinuum: false,\r\n      isContinuumActive: false,\r\n      multiplierText: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    sacrificeTooltip() {\r\n      return `Boosts 8th Antimatter Dimension by ${formatX(this.sacrificeBoost, 2, 2)}`;\r\n    },\r\n  },\r\n  methods: {\r\n    maxAll() {\r\n      maxAll();\r\n    },\r\n    sacrifice() {\r\n      sacrificeBtnClick();\r\n    },\r\n    // Toggle single/10 without Continuum, otherwise cycle through all 3 if it's unlocked\r\n    changeBuyMode() {\r\n      if (!this.hasContinuum) {\r\n        player.buyUntil10 = !player.buyUntil10;\r\n        return;\r\n      }\r\n      // \"Continuum\" => \"Until 10\" => \"Buy 1\" => \"Continuum\"\r\n      if (this.isContinuumActive) {\r\n        Laitela.setContinuum(false);\r\n        player.buyUntil10 = true;\r\n      } else if (player.buyUntil10) {\r\n        player.buyUntil10 = false;\r\n      } else {\r\n        if (ImaginaryUpgrade(21).isLockingMechanics && player.auto.disableContinuum) {\r\n          ImaginaryUpgrade(21).tryShowWarningModal();\r\n          return;\r\n        }\r\n        Laitela.setContinuum(true);\r\n      }\r\n    },\r\n    getUntil10Display() {\r\n      if (this.isContinuumActive) return \"Continuum\";\r\n      return this.buyUntil10 ? \"Until 10\" : \"Buy 1\";\r\n    },\r\n    update() {\r\n      this.hasDimensionBoosts = player.dimensionBoosts > 0;\r\n      this.buyUntil10 = player.buyUntil10;\r\n      this.hasContinuum = Laitela.continuumUnlocked;\r\n      this.isContinuumActive = Laitela.continuumActive;\r\n      this.isQuickResetAvailable = Player.isInAntimatterChallenge && Player.antimatterChallenge.isQuickResettable;\r\n\r\n      const isSacrificeUnlocked = Sacrifice.isVisible;\r\n      this.isSacrificeUnlocked = isSacrificeUnlocked;\r\n\r\n      this.buy10Mult.copyFrom(AntimatterDimensions.buyTenMultiplier);\r\n\r\n      this.multiplierText = `Buy 10 Dimension purchase multiplier: ${formatX(this.buy10Mult, 2, 2)}`;\r\n      if (!isSacrificeUnlocked) return;\r\n      this.isSacrificeAffordable = Sacrifice.canSacrifice;\r\n      this.currentSacrifice.copyFrom(Sacrifice.totalBoost);\r\n      this.sacrificeBoost.copyFrom(Sacrifice.nextBoost);\r\n      this.disabledCondition = Sacrifice.disabledCondition;\r\n      const sacText = this.isSacrificeUnlocked\r\n        ? ` | Dimensional Sacrifice multiplier: ${formatX(this.currentSacrifice, 2, 2)}`\r\n        : \"\";\r\n      this.multiplierText += sacText;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-antimatter-dim-tab\">\r\n    <div class=\"modes-container\">\r\n      <button\r\n        class=\"o-primary-btn l-button-container\"\r\n        @click=\"changeBuyMode\"\r\n      >\r\n        {{ getUntil10Display() }}\r\n      </button>\r\n      <PrimaryButton\r\n        v-show=\"isSacrificeUnlocked\"\r\n        v-tooltip=\"sacrificeTooltip\"\r\n        :enabled=\"isSacrificeAffordable\"\r\n        class=\"o-primary-btn--sacrifice\"\r\n        @click=\"sacrifice\"\r\n      >\r\n        <span v-if=\"isSacrificeAffordable\">Dimensional Sacrifice ({{ formatX(sacrificeBoost, 2, 2) }})</span>\r\n        <span v-else>Dimensional Sacrifice Disabled ({{ disabledCondition }})</span>\r\n      </PrimaryButton>\r\n      <button\r\n        class=\"o-primary-btn l-button-container\"\r\n        @click=\"maxAll\"\r\n      >\r\n        Max All (M)\r\n      </button>\r\n    </div>\r\n    <span>{{ multiplierText }}</span>\r\n    <TickspeedRow />\r\n    <div class=\"l-dimensions-container\">\r\n      <AntimatterDimensionRow\r\n        v-for=\"tier in 8\"\r\n        :key=\"tier\"\r\n        :tier=\"tier\"\r\n      />\r\n    </div>\r\n    <div class=\"resets-container\">\r\n      <DimensionBoostRow />\r\n      <PrimaryButton\r\n        v-if=\"isQuickResetAvailable\"\r\n        class=\"o-primary-btn--quick-reset\"\r\n        onclick=\"softReset(-1, true, true)\"\r\n      >\r\n        Perform a Dimension Boost reset\r\n        <span v-if=\"hasDimensionBoosts\"> but lose a Dimension Boost</span>\r\n        <span v-else> for no gain</span>\r\n      </PrimaryButton>\r\n      <AntimatterGalaxyRow />\r\n    </div>\r\n    <AntimatterDimensionProgressBar />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-button-container {\r\n  width: 100px;\r\n  height: 30px;\r\n  padding: 0;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/antimatter-dimensions"},"metadata":{},"sourceType":"module"}