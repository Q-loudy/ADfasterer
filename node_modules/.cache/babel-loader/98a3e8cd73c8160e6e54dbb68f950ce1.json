{"ast":null,"code":"import ExpandingControlBox from \"@/components/ExpandingControlBox\";\nimport OpenModalHotkeysButton from \"@/components/OpenModalHotkeysButton\";\nimport OptionsButton from \"@/components/OptionsButton\";\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\nimport SelectNotationDropdown from \"@/components/tabs/options-visual/SelectNotationDropdown\";\nimport SelectThemeDropdown from \"@/components/tabs/options-visual/SelectThemeDropdown\";\nimport SelectSidebarDropdown from \"@/components/tabs/options-visual/SelectSidebarDropdown\";\nimport UpdateRateSlider from \"./UpdateRateSlider\";\nexport default {\n  name: \"OptionsVisualTab\",\n  components: {\n    UpdateRateSlider,\n    PrimaryToggleButton,\n    ExpandingControlBox,\n    OptionsButton,\n    OpenModalHotkeysButton,\n    SelectThemeDropdown,\n    SelectNotationDropdown,\n    SelectSidebarDropdown\n  },\n\n  data() {\n    return {\n      theme: \"\",\n      notation: \"\",\n      sidebarResource: \"\",\n      headerTextColored: true\n    };\n  },\n\n  computed: {\n    sidebarDB: () => GameDatabase.sidebarResources,\n\n    themeLabel() {\n      return `Theme: ${Themes.find(this.theme).displayName()}`;\n    },\n\n    notationLabel() {\n      return `Notation: ${this.notation}`;\n    },\n\n    sidebarLabel() {\n      return `Sidebar (Modern UI): ${this.sidebarResource}`;\n    },\n\n    UILabel() {\n      return `UI: ${this.$viewModel.newUI ? \"Modern\" : \"Classic\"}`;\n    }\n\n  },\n  watch: {\n    headerTextColored(newValue) {\n      player.options.headerTextColored = newValue;\n    }\n\n  },\n  methods: {\n    update() {\n      const options = player.options;\n      this.theme = Theme.currentName();\n      this.notation = options.notation;\n      this.sidebarResource = player.options.sidebarResourceID === 0 ? \"Latest Resource\" : this.sidebarDB.find(e => e.id === player.options.sidebarResourceID).optionName;\n      this.headerTextColored = options.headerTextColored;\n    }\n\n  }\n};","map":{"version":3,"sources":["OptionsVisualTab.vue"],"names":[],"mappings":"AACA,OAAA,mBAAA,MAAA,kCAAA;AACA,OAAA,sBAAA,MAAA,qCAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AACA,OAAA,mBAAA,MAAA,kCAAA;AACA,OAAA,sBAAA,MAAA,yDAAA;AACA,OAAA,mBAAA,MAAA,sDAAA;AACA,OAAA,qBAAA,MAAA,wDAAA;AACA,OAAA,gBAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,gBADA;AAEA,IAAA,mBAFA;AAGA,IAAA,mBAHA;AAIA,IAAA,aAJA;AAKA,IAAA,sBALA;AAMA,IAAA,mBANA;AAOA,IAAA,sBAPA;AAQA,IAAA;AARA,GAFA;;AAYA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,eAAA,EAAA,EAHA;AAIA,MAAA,iBAAA,EAAA;AAJA,KAAA;AAMA,GAnBA;;AAoBA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA,MAAA,YAAA,CAAA,gBADA;;AAEA,IAAA,UAAA,GAAA;AACA,aAAA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,KAAA,EAAA,WAAA,EAAA,EAAA;AACA,KAJA;;AAKA,IAAA,aAAA,GAAA;AACA,aAAA,aAAA,KAAA,QAAA,EAAA;AACA,KAPA;;AAQA,IAAA,YAAA,GAAA;AACA,aAAA,wBAAA,KAAA,eAAA,EAAA;AACA,KAVA;;AAWA,IAAA,OAAA,GAAA;AACA,aAAA,OAAA,KAAA,UAAA,CAAA,KAAA,GAAA,QAAA,GAAA,SAAA,EAAA;AACA;;AAbA,GApBA;AAmCA,EAAA,KAAA,EAAA;AACA,IAAA,iBAAA,CAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,iBAAA,GAAA,QAAA;AACA;;AAHA,GAnCA;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,YAAA,OAAA,GAAA,MAAA,CAAA,OAAA;AACA,WAAA,KAAA,GAAA,KAAA,CAAA,WAAA,EAAA;AACA,WAAA,QAAA,GAAA,OAAA,CAAA,QAAA;AACA,WAAA,eAAA,GAAA,MAAA,CAAA,OAAA,CAAA,iBAAA,KAAA,CAAA,GACA,iBADA,GAEA,KAAA,SAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,iBAAA,EAAA,UAFA;AAGA,WAAA,iBAAA,GAAA,OAAA,CAAA,iBAAA;AACA;;AATA;AAxCA,CAAA","sourcesContent":["<script>\r\nimport ExpandingControlBox from \"@/components/ExpandingControlBox\";\r\nimport OpenModalHotkeysButton from \"@/components/OpenModalHotkeysButton\";\r\nimport OptionsButton from \"@/components/OptionsButton\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\nimport SelectNotationDropdown from \"@/components/tabs/options-visual/SelectNotationDropdown\";\r\nimport SelectThemeDropdown from \"@/components/tabs/options-visual/SelectThemeDropdown\";\r\nimport SelectSidebarDropdown from \"@/components/tabs/options-visual/SelectSidebarDropdown\";\r\nimport UpdateRateSlider from \"./UpdateRateSlider\";\r\n\r\nexport default {\r\n  name: \"OptionsVisualTab\",\r\n  components: {\r\n    UpdateRateSlider,\r\n    PrimaryToggleButton,\r\n    ExpandingControlBox,\r\n    OptionsButton,\r\n    OpenModalHotkeysButton,\r\n    SelectThemeDropdown,\r\n    SelectNotationDropdown,\r\n    SelectSidebarDropdown\r\n  },\r\n  data() {\r\n    return {\r\n      theme: \"\",\r\n      notation: \"\",\r\n      sidebarResource: \"\",\r\n      headerTextColored: true,\r\n    };\r\n  },\r\n  computed: {\r\n    sidebarDB: () => GameDatabase.sidebarResources,\r\n    themeLabel() {\r\n      return `Theme: ${Themes.find(this.theme).displayName()}`;\r\n    },\r\n    notationLabel() {\r\n      return `Notation: ${this.notation}`;\r\n    },\r\n    sidebarLabel() {\r\n      return `Sidebar (Modern UI): ${this.sidebarResource}`;\r\n    },\r\n    UILabel() {\r\n      return `UI: ${this.$viewModel.newUI ? \"Modern\" : \"Classic\"}`;\r\n    }\r\n  },\r\n  watch: {\r\n    headerTextColored(newValue) {\r\n      player.options.headerTextColored = newValue;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      const options = player.options;\r\n      this.theme = Theme.currentName();\r\n      this.notation = options.notation;\r\n      this.sidebarResource = player.options.sidebarResourceID === 0\r\n        ? \"Latest Resource\"\r\n        : this.sidebarDB.find(e => e.id === player.options.sidebarResourceID).optionName;\r\n      this.headerTextColored = options.headerTextColored;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-options-tab\">\r\n    <div class=\"l-options-grid\">\r\n      <div class=\"l-options-grid__row\">\r\n        <OptionsButton\r\n          class=\"o-primary-btn--option_font-large\"\r\n          onclick=\"GameOptions.toggleUI()\"\r\n        >\r\n          {{ UILabel }}\r\n        </OptionsButton>\r\n        <UpdateRateSlider />\r\n        <OptionsButton\r\n          class=\"o-primary-btn--option\"\r\n          onclick=\"Modal.newsOptions.show();\"\r\n        >\r\n          Open News Options\r\n        </OptionsButton>\r\n      </div>\r\n      <div class=\"l-options-grid__row\">\r\n        <ExpandingControlBox\r\n          class=\"l-options-grid__button c-options-grid__notations\"\r\n          button-class=\"o-primary-btn o-primary-btn--option l-options-grid__notations-header\"\r\n          :label=\"themeLabel\"\r\n        >\r\n          <template #dropdown>\r\n            <SelectThemeDropdown />\r\n          </template>\r\n        </ExpandingControlBox>\r\n        <ExpandingControlBox\r\n          class=\"l-options-grid__button c-options-grid__notations\"\r\n          button-class=\"o-primary-btn o-primary-btn--option l-options-grid__notations-header\"\r\n          :label=\"notationLabel\"\r\n        >\r\n          <template #dropdown>\r\n            <SelectNotationDropdown />\r\n          </template>\r\n        </ExpandingControlBox>\r\n        <OptionsButton\r\n          class=\"o-primary-btn--option\"\r\n          onclick=\"Modal.notation.show();\"\r\n        >\r\n          Open Exponent Notation Options\r\n        </OptionsButton>\r\n      </div>\r\n      <div class=\"l-options-grid__row\">\r\n        <OptionsButton\r\n          class=\"o-primary-btn--option\"\r\n          onclick=\"Modal.animationOptions.show();\"\r\n        >\r\n          Open Animation Options\r\n        </OptionsButton>\r\n        <OptionsButton\r\n          class=\"o-primary-btn--option\"\r\n          onclick=\"Modal.infoDisplayOptions.show()\"\r\n        >\r\n          Open Info Display Options\r\n        </OptionsButton>\r\n        <OptionsButton\r\n          class=\"o-primary-btn--option\"\r\n          onclick=\"Modal.awayProgressOptions.show()\"\r\n        >\r\n          Open Away Progress Options\r\n        </OptionsButton>\r\n      </div>\r\n      <div class=\"l-options-grid__row\">\r\n        <OptionsButton\r\n          class=\"o-primary-btn--option\"\r\n          onclick=\"Modal.hiddenTabs.show()\"\r\n        >\r\n          Modify Visible Tabs\r\n        </OptionsButton>\r\n        <PrimaryToggleButton\r\n          v-model=\"headerTextColored\"\r\n          class=\"o-primary-btn--option l-options-grid__button\"\r\n          label=\"Relative prestige gain text coloring:\"\r\n        />\r\n        <ExpandingControlBox\r\n          v-if=\"$viewModel.newUI\"\r\n          class=\"l-options-grid__button c-options-grid__notations\"\r\n          button-class=\"o-primary-btn o-primary-btn--option l-options-grid__notations-header\"\r\n          :label=\"sidebarLabel\"\r\n        >\r\n          <template #dropdown>\r\n            <SelectSidebarDropdown />\r\n          </template>\r\n        </ExpandingControlBox>\r\n      </div>\r\n      <OpenModalHotkeysButton />\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"sourceRoot":"src/components/tabs/options-visual"},"metadata":{},"sourceType":"module"}