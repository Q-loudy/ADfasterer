{"ast":null,"code":"export const GlyphInfo = {\n  types: {\n    NONE: 0,\n    LEVEL: 1,\n    RARITY: 2,\n    SAC_VALUE: 3,\n    FILTER_SCORE: 4,\n    CURRENT_REFINE: 5,\n    MAX_REFINE: 6\n  },\n  labels: [\"None\", \"Level\", \"Rarity\", \"Sacrifice Value\", \"Glyph Filter Score\", \"Current Refinement Value\", \"Maximum Refinement Value\"]\n};\nexport default {\n  name: \"SelectGlyphInfoDropdown\",\n  computed: {\n    availableTypes() {\n      const typeEnum = GlyphInfo.types;\n      const options = [typeEnum.NONE, typeEnum.LEVEL, typeEnum.RARITY];\n      if (GlyphSacrificeHandler.canSacrifice) options.push(typeEnum.SAC_VALUE);\n      if (EffarigUnlock.glyphFilter.isUnlocked) options.push(typeEnum.FILTER_SCORE);\n\n      if (Ra.unlocks.unlockGlyphAlchemy.canBeApplied) {\n        options.push(typeEnum.CURRENT_REFINE);\n        options.push(typeEnum.MAX_REFINE);\n      }\n\n      return options;\n    }\n\n  },\n  methods: {\n    setType(type) {\n      player.options.showHintText.glyphInfoType = type;\n      EventHub.dispatch(GAME_EVENT.GLYPH_VISUAL_CHANGE);\n    },\n\n    getType(type) {\n      return GlyphInfo.labels[type];\n    }\n\n  }\n};","map":{"version":3,"sources":["SelectGlyphInfoDropdown.vue"],"names":[],"mappings":"AACA,OAAA,MAAA,SAAA,GAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,CADA;AAEA,IAAA,KAAA,EAAA,CAFA;AAGA,IAAA,MAAA,EAAA,CAHA;AAIA,IAAA,SAAA,EAAA,CAJA;AAKA,IAAA,YAAA,EAAA,CALA;AAMA,IAAA,cAAA,EAAA,CANA;AAOA,IAAA,UAAA,EAAA;AAPA,GADA;AAUA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,oBAAA,EACA,0BADA,EACA,0BADA;AAVA,CAAA;AAeA,eAAA;AACA,EAAA,IAAA,EAAA,yBADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,cAAA,GAAA;AACA,YAAA,QAAA,GAAA,SAAA,CAAA,KAAA;AACA,YAAA,OAAA,GAAA,CAAA,QAAA,CAAA,IAAA,EAAA,QAAA,CAAA,KAAA,EAAA,QAAA,CAAA,MAAA,CAAA;AACA,UAAA,qBAAA,CAAA,YAAA,EAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,SAAA;AACA,UAAA,aAAA,CAAA,WAAA,CAAA,UAAA,EAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,YAAA;;AACA,UAAA,EAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,YAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,UAAA;AACA;;AACA,aAAA,OAAA;AACA;;AAXA,GAFA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,OAAA,CAAA,IAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,aAAA,GAAA,IAAA;AACA,MAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,mBAAA;AACA,KAJA;;AAKA,IAAA,OAAA,CAAA,IAAA,EAAA;AACA,aAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA;;AAPA;AAfA,CAAA","sourcesContent":["<script>\r\nexport const GlyphInfo = {\r\n  types: {\r\n    NONE: 0,\r\n    LEVEL: 1,\r\n    RARITY: 2,\r\n    SAC_VALUE: 3,\r\n    FILTER_SCORE: 4,\r\n    CURRENT_REFINE: 5,\r\n    MAX_REFINE: 6,\r\n  },\r\n  labels: [\"None\", \"Level\", \"Rarity\", \"Sacrifice Value\", \"Glyph Filter Score\",\r\n    \"Current Refinement Value\", \"Maximum Refinement Value\"]\r\n};\r\n\r\n\r\nexport default {\r\n  name: \"SelectGlyphInfoDropdown\",\r\n  computed: {\r\n    availableTypes() {\r\n      const typeEnum = GlyphInfo.types;\r\n      const options = [typeEnum.NONE, typeEnum.LEVEL, typeEnum.RARITY];\r\n      if (GlyphSacrificeHandler.canSacrifice) options.push(typeEnum.SAC_VALUE);\r\n      if (EffarigUnlock.glyphFilter.isUnlocked) options.push(typeEnum.FILTER_SCORE);\r\n      if (Ra.unlocks.unlockGlyphAlchemy.canBeApplied) {\r\n        options.push(typeEnum.CURRENT_REFINE);\r\n        options.push(typeEnum.MAX_REFINE);\r\n      }\r\n      return options;\r\n    }\r\n  },\r\n  methods: {\r\n    setType(type) {\r\n      player.options.showHintText.glyphInfoType = type;\r\n      EventHub.dispatch(GAME_EVENT.GLYPH_VISUAL_CHANGE);\r\n    },\r\n    getType(type) {\r\n      return GlyphInfo.labels[type];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-select-theme\">\r\n    <div class=\"l-select-theme__inner\">\r\n      <div\r\n        v-for=\"type in availableTypes\"\r\n        :key=\"type\"\r\n        class=\"o-primary-btn l-select-theme__item c-select-theme__item\"\r\n        @click=\"setType(type)\"\r\n      >\r\n        {{ getType(type) }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"sourceRoot":"src/components/modals/options"},"metadata":{},"sourceType":"module"}