{"ast":null,"code":"import BigCrunchButton from \"../BigCrunchButton\";\nimport HeaderBlackHole from \"../HeaderBlackHole\";\nimport HeaderChallengeDisplay from \"../HeaderChallengeDisplay\";\nimport HeaderChallengeEffects from \"../HeaderChallengeEffects\";\nimport HeaderPrestigeGroup from \"../HeaderPrestigeGroup\";\nimport NewsTicker from \"../NewsTicker\";\nimport BackgroundAnimations from \"@/components/BackgroundAnimations\";\nimport GameUiComponentFixed from \"@/components/GameUiComponentFixed\";\nimport GameSpeedDisplay from \"@/components/GameSpeedDisplay\";\nimport { S12Windows } from \"./windows\";\nexport default {\n  name: \"S12Ui\",\n  components: {\n    BigCrunchButton,\n    HeaderChallengeDisplay,\n    HeaderChallengeEffects,\n    NewsTicker,\n    HeaderBlackHole,\n    HeaderPrestigeGroup,\n    GameSpeedDisplay,\n    GameUiComponentFixed,\n    BackgroundAnimations\n  },\n\n  data() {\n    return {\n      bigCrunch: false,\n      hasReality: false,\n      newGameKey: \"\",\n      tabName: \"\",\n      S12Windows\n    };\n  },\n\n  computed: {\n    news() {\n      return this.$viewModel.news;\n    },\n\n    topPadding() {\n      return this.$viewModel.news ? \"\" : \"padding-top: 3.9rem\";\n    },\n\n    isOldUi() {\n      return !this.$viewModel.newUI;\n    }\n\n  },\n  methods: {\n    update() {\n      const crunchButtonVisible = !player.break && Player.canCrunch;\n      this.bigCrunch = crunchButtonVisible && Time.bestInfinityRealTime.totalMinutes > 1;\n      this.hasReality = PlayerProgress.realityUnlocked(); // This only exists to force a key-swap after pressing the button to start a new game; the news ticker can break\n      // if it isn't redrawn\n\n      this.newGameKey = Pelle.isDoomed;\n      this.tabName = Tabs.current[this.$viewModel.subtab].name;\n    }\n\n  }\n};","map":{"version":3,"sources":["S12Ui.vue"],"names":[],"mappings":"AACA,OAAA,eAAA,MAAA,oBAAA;AACA,OAAA,eAAA,MAAA,oBAAA;AACA,OAAA,sBAAA,MAAA,2BAAA;AACA,OAAA,sBAAA,MAAA,2BAAA;AACA,OAAA,mBAAA,MAAA,wBAAA;AACA,OAAA,UAAA,MAAA,eAAA;AAEA,OAAA,oBAAA,MAAA,mCAAA;AACA,OAAA,oBAAA,MAAA,mCAAA;AAEA,OAAA,gBAAA,MAAA,+BAAA;AAEA,SAAA,UAAA,QAAA,WAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,eADA;AAEA,IAAA,sBAFA;AAGA,IAAA,sBAHA;AAIA,IAAA,UAJA;AAKA,IAAA,eALA;AAMA,IAAA,mBANA;AAOA,IAAA,gBAPA;AASA,IAAA,oBATA;AAUA,IAAA;AAVA,GAFA;;AAcA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA,EAJA;AAKA,MAAA;AALA,KAAA;AAOA,GAtBA;;AAuBA,EAAA,QAAA,EAAA;AACA,IAAA,IAAA,GAAA;AACA,aAAA,KAAA,UAAA,CAAA,IAAA;AACA,KAHA;;AAIA,IAAA,UAAA,GAAA;AACA,aAAA,KAAA,UAAA,CAAA,IAAA,GAAA,EAAA,GAAA,qBAAA;AACA,KANA;;AAOA,IAAA,OAAA,GAAA;AACA,aAAA,CAAA,KAAA,UAAA,CAAA,KAAA;AACA;;AATA,GAvBA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,YAAA,mBAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,MAAA,CAAA,SAAA;AACA,WAAA,SAAA,GAAA,mBAAA,IAAA,IAAA,CAAA,oBAAA,CAAA,YAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAHA,CAIA;AACA;;AACA,WAAA,UAAA,GAAA,KAAA,CAAA,QAAA;AACA,WAAA,OAAA,GAAA,IAAA,CAAA,OAAA,CAAA,KAAA,UAAA,CAAA,MAAA,EAAA,IAAA;AACA;;AATA;AAlCA,CAAA","sourcesContent":["<script>\r\nimport BigCrunchButton from \"../BigCrunchButton\";\r\nimport HeaderBlackHole from \"../HeaderBlackHole\";\r\nimport HeaderChallengeDisplay from \"../HeaderChallengeDisplay\";\r\nimport HeaderChallengeEffects from \"../HeaderChallengeEffects\";\r\nimport HeaderPrestigeGroup from \"../HeaderPrestigeGroup\";\r\nimport NewsTicker from \"../NewsTicker\";\r\n\r\nimport BackgroundAnimations from \"@/components/BackgroundAnimations\";\r\nimport GameUiComponentFixed from \"@/components/GameUiComponentFixed\";\r\n\r\nimport GameSpeedDisplay from \"@/components/GameSpeedDisplay\";\r\n\r\nimport { S12Windows } from \"./windows\";\r\n\r\n\r\nexport default {\r\n  name: \"S12Ui\",\r\n  components: {\r\n    BigCrunchButton,\r\n    HeaderChallengeDisplay,\r\n    HeaderChallengeEffects,\r\n    NewsTicker,\r\n    HeaderBlackHole,\r\n    HeaderPrestigeGroup,\r\n    GameSpeedDisplay,\r\n\r\n    GameUiComponentFixed,\r\n    BackgroundAnimations,\r\n  },\r\n  data() {\r\n    return {\r\n      bigCrunch: false,\r\n      hasReality: false,\r\n      newGameKey: \"\",\r\n      tabName: \"\",\r\n      S12Windows,\r\n    };\r\n  },\r\n  computed: {\r\n    news() {\r\n      return this.$viewModel.news;\r\n    },\r\n    topPadding() {\r\n      return this.$viewModel.news ? \"\" : \"padding-top: 3.9rem\";\r\n    },\r\n    isOldUi() {\r\n      return !this.$viewModel.newUI;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      const crunchButtonVisible = !player.break && Player.canCrunch;\r\n      this.bigCrunch = crunchButtonVisible && Time.bestInfinityRealTime.totalMinutes > 1;\r\n      this.hasReality = PlayerProgress.realityUnlocked();\r\n      // This only exists to force a key-swap after pressing the button to start a new game; the news ticker can break\r\n      // if it isn't redrawn\r\n      this.newGameKey = Pelle.isDoomed;\r\n      this.tabName = Tabs.current[this.$viewModel.subtab].name;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    id=\"page\"\r\n    class=\"c-s12-window__outer\"\r\n    :class=\"S12Windows.isMinimised ? 'c-s12-window__outer--minimised' : ''\"\r\n  >\r\n    <link\r\n      rel=\"stylesheet\"\r\n      type=\"text/css\"\r\n      :href=\"isOldUi ? 'stylesheets/old-ui.css' : 'stylesheets/new-ui-styles.css'\"\r\n    >\r\n    <span\r\n      class=\"c-s12-close-button\"\r\n      @click=\"S12Windows.isMinimised = true\"\r\n    />\r\n    <span class=\"c-modal__title\">\r\n      {{ tabName }}\r\n    </span>\r\n    <div\r\n      :key=\"newGameKey\"\r\n      class=\"game-container c-s12-window__inner\"\r\n      :class=\"isOldUi ? 'c-old-ui l-old-ui' : ''\"\r\n      :style=\"topPadding\"\r\n    >\r\n      <GameUiComponentFixed />\r\n      <BackgroundAnimations />\r\n      <div class=\"c-s12-window__content-container\">\r\n        <NewsTicker\r\n          v-if=\"news\"\r\n        />\r\n        <BigCrunchButton />\r\n        <div\r\n          v-if=\"!bigCrunch\"\r\n          class=\"tab-container\"\r\n        >\r\n          <HeaderPrestigeGroup />\r\n          <div class=\"information-header\">\r\n            <HeaderChallengeDisplay />\r\n            <HeaderChallengeEffects />\r\n            <GameSpeedDisplay v-if=\"hasReality\" />\r\n            <br v-if=\"hasReality\">\r\n            <HeaderBlackHole />\r\n          </div>\r\n          <slot />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n#page {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  z-index: 1;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  background-image: var(--s12-background-gradient);\r\n  margin-top: 0;\r\n  padding: 2.4rem 1rem 1rem;\r\n\r\n  -webkit-backdrop-filter: blur(1rem);\r\n\r\n  backdrop-filter: blur(1rem);\r\n}\r\n\r\n.c-s12-window__outer {\r\n  transition: opacity 0.3s, transform 0.4s, visibility 0.3s;\r\n\r\n  transform-style: preserve-3d;\r\n}\r\n\r\n.c-s12-window__outer--minimised {\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  /* stylelint-disable-next-line unit-allowed-list */\r\n  transform: rotateX(90deg) scale(0.7);\r\n  pointer-events: none;\r\n}\r\n\r\n.c-s12-window__inner {\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 0;\r\n  background-color: #111014;\r\n  border: 0.15rem solid var(--s12-border-color);\r\n  border-radius: 0.15rem;\r\n  box-shadow: 0 0 0.4rem 0.2rem rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.c-old-ui.c-s12-window__inner {\r\n  background-color: white;\r\n}\r\n\r\n.c-s12-window__content-container {\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  scrollbar-gutter: stable both-edges;\r\n}\r\n\r\n.c-modal__title {\r\n  font-family: \"Segoe UI\", Typewriter;\r\n  color: black;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/ui-modes/s12"},"metadata":{},"sourceType":"module"}