{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport BlackHoleChargingSliders from \"@/components/tabs/black-hole/BlackHoleChargingSliders\";\nimport CelestialQuoteHistory from \"@/components/CelestialQuoteHistory\";\nimport PrimaryButton from \"@/components/PrimaryButton\";\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\nexport default {\n  name: \"EnslavedTab\",\n  components: {\n    CelestialQuoteHistory,\n    PrimaryButton,\n    PrimaryToggleButton,\n    BlackHoleChargingSliders\n  },\n  data: () => ({\n    isStoringBlackHole: false,\n    isStoringReal: false,\n    autoStoreReal: false,\n    offlineEnabled: false,\n    hasAutoRelease: false,\n    isRunning: false,\n    completed: false,\n    storedBlackHole: 0,\n    storedReal: 0,\n    storedRealEffiency: 0,\n    storedRealCap: 0,\n    autoRelease: false,\n    autoReleaseSpeed: 0,\n    unlocks: [],\n    buyableUnlocks: [],\n    quote: \"\",\n    currentSpeedUp: 0,\n    hintsUnlocked: false,\n    canModifyGameTimeStorage: false,\n    canChangeStoreTime: false,\n    canChangeStoreRealTime: false,\n    canDischarge: false,\n    canAutoRelease: false,\n    hasNoCharge: true,\n    hasReachedCurrentCap: false\n  }),\n  computed: {\n    storedRealEfficiencyDesc() {\n      return formatPercents(this.storedRealEffiency);\n    },\n\n    storedRealCapDesc() {\n      return timeDisplayShort(this.storedRealCap);\n    },\n\n    unlocksInfo() {\n      return ENSLAVED_UNLOCKS;\n    },\n\n    nerfedBlackHoleTime() {\n      return Enslaved.storedTimeInsideEnslaved(this.storedBlackHole);\n    },\n\n    realityTitle() {\n      if (this.isRunning) return \"You are inside The Nameless Ones' Reality\";\n      return \"Start The Nameless Ones' Reality\";\n    },\n\n    runButtonClassObject() {\n      return {\n        \"c-enslaved-run-button__icon\": true,\n        \"c-enslaved-run-button__icon--running\": this.isRunning,\n        \"c-celestial-run-button--clickable\": !this.isDoomed,\n        \"o-pelle-disabled-pointer\": this.isDoomed\n      };\n    },\n\n    runDescription() {\n      return GameDatabase.celestials.descriptions[2].effects().split(\"\\n\");\n    },\n\n    realTimeButtonText() {\n      if (!this.offlineEnabled) return \"Offline Progress is disabled\";\n      if (this.autoStoreReal) return \"Offline time stored\";\n      return \"Offline time used for production\";\n    },\n\n    // Use this here since Nameless has a fairly non-standard character, and SFCs don't support using \\uf0c1\n    enslavedSymbol: () => Enslaved.symbol,\n    isDoomed: () => Pelle.isDoomed,\n\n    storeGameTimeClass() {\n      return {\n        \"o-enslaved-mechanic-button\": true,\n        \"o-enslaved-mechanic-button--clickable\": this.canModifyGameTimeStorage,\n        \"o-enslaved-mechanic-button--storing-time\": this.isStoringBlackHole,\n        \"l-fixed-setting\": !this.canModifyGameTimeStorage,\n        \"o-pelle-disabled\": this.isDoomed\n      };\n    },\n\n    storeRealTimeClass() {\n      return {\n        \"o-enslaved-mechanic-button\": true,\n        \"o-enslaved-mechanic-button--clickable\": !this.isDoomed,\n        \"o-enslaved-mechanic-button--storing-time\": this.isStoringReal,\n        \"l-fixed-setting\": !this.canChangeStoreRealTime,\n        \"o-pelle-disabled\": this.isDoomed\n      };\n    },\n\n    dischargeClass() {\n      return {\n        \"o-enslaved-mechanic-button\": true,\n        \"o-enslaved-mechanic-button--clickable\": !this.isDoomed,\n        \"l-fixed-setting\": !this.canDischarge || this.hasNoCharge,\n        \"o-pelle-disabled\": this.isDoomed\n      };\n    },\n\n    doomedDisabledClass() {\n      return {\n        \"o-pelle-disabled\": this.isDoomed\n      };\n    },\n\n    mechanicButtonClass() {\n      return {\n        \"o-enslaved-mechanic-button\": true,\n        \"o-enslaved-mechanic-button--clickable\": !this.isDoomed\n      };\n    }\n\n  },\n  watch: {\n    autoRelease(newValue) {\n      player.celestials.enslaved.isAutoReleasing = newValue;\n    }\n\n  },\n  methods: {\n    update() {\n      this.isStoringBlackHole = Enslaved.isStoringGameTime;\n      this.storedBlackHole = player.celestials.enslaved.stored;\n      this.isStoringReal = Enslaved.isStoringRealTime;\n      this.autoStoreReal = player.celestials.enslaved.autoStoreReal;\n      this.offlineEnabled = player.options.offlineProgress;\n      this.hasAutoRelease = Ra.unlocks.autoPulseTime.canBeApplied;\n      this.isRunning = Enslaved.isRunning;\n      this.completed = Enslaved.isCompleted && !this.isDoomed;\n      this.storedReal = player.celestials.enslaved.storedReal;\n      this.storedRealEffiency = Enslaved.storedRealTimeEfficiency;\n      this.storedRealCap = Enslaved.storedRealTimeCap;\n      this.unlocks = Array.from(player.celestials.enslaved.unlocks);\n      this.buyableUnlocks = Object.values(ENSLAVED_UNLOCKS).map(x => Enslaved.canBuy(x));\n      this.quote = Enslaved.quote;\n      this.autoRelease = player.celestials.enslaved.isAutoReleasing;\n      this.autoReleaseSpeed = Enslaved.isAutoReleasing ? Enslaved.autoReleaseSpeed : 0;\n      this.currentSpeedUp = Enslaved.currentBlackHoleStoreAmountPerMs;\n      this.hintsUnlocked = EnslavedProgress.hintsUnlocked.hasProgress;\n      this.canModifyGameTimeStorage = Enslaved.canModifyGameTimeStorage;\n      this.canChangeStoreTime = Enslaved.canModifyGameTimeStorage;\n      this.canChangeStoreRealTime = Enslaved.canModifyRealTimeStorage;\n      this.canDischarge = Enslaved.canRelease(false);\n      this.canAutoRelease = Enslaved.canRelease(true);\n      this.hasNoCharge = player.celestials.enslaved.stored === 0;\n      this.hasReachedCurrentCap = this.storedReal === this.storedRealCap;\n    },\n\n    toggleStoreBlackHole() {\n      Enslaved.toggleStoreBlackHole();\n    },\n\n    toggleStoreReal() {\n      Enslaved.toggleStoreReal();\n    },\n\n    toggleAutoStoreReal() {\n      if (!this.offlineEnabled) return;\n      Enslaved.toggleAutoStoreReal();\n    },\n\n    useStored() {\n      Enslaved.useStoredTime(false);\n    },\n\n    timeDisplayShort(ms) {\n      return timeDisplayShort(ms);\n    },\n\n    timeUntilBuy(price) {\n      return Math.max((price - this.storedBlackHole) / this.currentSpeedUp, 0);\n    },\n\n    buyUnlock(info) {\n      Enslaved.buyUnlock(info);\n    },\n\n    startRun() {\n      if (this.isDoomed) return;\n      Modal.celestials.show({\n        name: \"The Nameless Ones'\",\n        number: 2\n      });\n    },\n\n    hasUnlock(info) {\n      return Enslaved.has(info);\n    },\n\n    canBuyUnlock(info) {\n      // This (rather than just using Enslaved.canBuy(info) and removing this.buyableUnlocks)\n      // is needed for proper reactivity of button styles (e.g., if you get a level 5000 glyph\n      // while on the Nameless tab).\n      return this.buyableUnlocks[info.id];\n    },\n\n    unlockClassObject(info) {\n      return {\n        \"o-enslaved-shop-button--bought\": this.hasUnlock(info),\n        \"o-enslaved-shop-button--available\": this.canBuyUnlock(info)\n      };\n    },\n\n    glitchStyle(x) {\n      const xScale = 15 / 27;\n      const yScale = 5;\n      const dx = (x - 13) * xScale + (Math.random() * 2 - 1) * 0.85;\n      const dy = (Math.random() * 2 - 1) * yScale;\n      const height = (Math.pow(Math.random(), 1.5) + 0.25) * 3 * yScale;\n      return {\n        transform: `translate(${dx}rem, ${dy}rem)`,\n        height: `${height}rem`\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["EnslavedTab.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport BlackHoleChargingSliders from \"@/components/tabs/black-hole/BlackHoleChargingSliders\";\r\nimport CelestialQuoteHistory from \"@/components/CelestialQuoteHistory\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\n\r\nexport default {\r\n  name: \"EnslavedTab\",\r\n  components: {\r\n    CelestialQuoteHistory,\r\n    PrimaryButton,\r\n    PrimaryToggleButton,\r\n    BlackHoleChargingSliders\r\n  },\r\n  data: () => ({\r\n    isStoringBlackHole: false,\r\n    isStoringReal: false,\r\n    autoStoreReal: false,\r\n    offlineEnabled: false,\r\n    hasAutoRelease: false,\r\n    isRunning: false,\r\n    completed: false,\r\n    storedBlackHole: 0,\r\n    storedReal: 0,\r\n    storedRealEffiency: 0,\r\n    storedRealCap: 0,\r\n    autoRelease: false,\r\n    autoReleaseSpeed: 0,\r\n    unlocks: [],\r\n    buyableUnlocks: [],\r\n    quote: \"\",\r\n    currentSpeedUp: 0,\r\n    hintsUnlocked: false,\r\n    canModifyGameTimeStorage: false,\r\n    canChangeStoreTime: false,\r\n    canChangeStoreRealTime: false,\r\n    canDischarge: false,\r\n    canAutoRelease: false,\r\n    hasNoCharge: true,\r\n    hasReachedCurrentCap: false,\r\n  }),\r\n  computed: {\r\n    storedRealEfficiencyDesc() {\r\n      return formatPercents(this.storedRealEffiency);\r\n    },\r\n    storedRealCapDesc() {\r\n      return timeDisplayShort(this.storedRealCap);\r\n    },\r\n    unlocksInfo() {\r\n      return ENSLAVED_UNLOCKS;\r\n    },\r\n    nerfedBlackHoleTime() {\r\n      return Enslaved.storedTimeInsideEnslaved(this.storedBlackHole);\r\n    },\r\n    realityTitle() {\r\n      if (this.isRunning) return \"You are inside The Nameless Ones' Reality\";\r\n      return \"Start The Nameless Ones' Reality\";\r\n    },\r\n    runButtonClassObject() {\r\n      return {\r\n        \"c-enslaved-run-button__icon\": true,\r\n        \"c-enslaved-run-button__icon--running\": this.isRunning,\r\n        \"c-celestial-run-button--clickable\": !this.isDoomed,\r\n        \"o-pelle-disabled-pointer\": this.isDoomed\r\n      };\r\n    },\r\n    runDescription() {\r\n      return GameDatabase.celestials.descriptions[2].effects().split(\"\\n\");\r\n    },\r\n    realTimeButtonText() {\r\n      if (!this.offlineEnabled) return \"Offline Progress is disabled\";\r\n      if (this.autoStoreReal) return \"Offline time stored\";\r\n      return \"Offline time used for production\";\r\n    },\r\n    // Use this here since Nameless has a fairly non-standard character, and SFCs don't support using \\uf0c1\r\n    enslavedSymbol: () => Enslaved.symbol,\r\n    isDoomed: () => Pelle.isDoomed,\r\n    storeGameTimeClass() {\r\n      return {\r\n        \"o-enslaved-mechanic-button\": true,\r\n        \"o-enslaved-mechanic-button--clickable\": this.canModifyGameTimeStorage,\r\n        \"o-enslaved-mechanic-button--storing-time\": this.isStoringBlackHole,\r\n        \"l-fixed-setting\": !this.canModifyGameTimeStorage,\r\n        \"o-pelle-disabled\": this.isDoomed\r\n      };\r\n    },\r\n    storeRealTimeClass() {\r\n      return {\r\n        \"o-enslaved-mechanic-button\": true,\r\n        \"o-enslaved-mechanic-button--clickable\": !this.isDoomed,\r\n        \"o-enslaved-mechanic-button--storing-time\": this.isStoringReal,\r\n        \"l-fixed-setting\": !this.canChangeStoreRealTime,\r\n        \"o-pelle-disabled\": this.isDoomed\r\n      };\r\n    },\r\n    dischargeClass() {\r\n      return {\r\n        \"o-enslaved-mechanic-button\": true,\r\n        \"o-enslaved-mechanic-button--clickable\": !this.isDoomed,\r\n        \"l-fixed-setting\": !this.canDischarge || this.hasNoCharge,\r\n        \"o-pelle-disabled\": this.isDoomed\r\n      };\r\n    },\r\n    doomedDisabledClass() {\r\n      return { \"o-pelle-disabled\": this.isDoomed };\r\n    },\r\n    mechanicButtonClass() {\r\n      return {\r\n        \"o-enslaved-mechanic-button\": true,\r\n        \"o-enslaved-mechanic-button--clickable\": !this.isDoomed\r\n      };\r\n    }\r\n  },\r\n  watch: {\r\n    autoRelease(newValue) {\r\n      player.celestials.enslaved.isAutoReleasing = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isStoringBlackHole = Enslaved.isStoringGameTime;\r\n      this.storedBlackHole = player.celestials.enslaved.stored;\r\n      this.isStoringReal = Enslaved.isStoringRealTime;\r\n      this.autoStoreReal = player.celestials.enslaved.autoStoreReal;\r\n      this.offlineEnabled = player.options.offlineProgress;\r\n      this.hasAutoRelease = Ra.unlocks.autoPulseTime.canBeApplied;\r\n      this.isRunning = Enslaved.isRunning;\r\n      this.completed = Enslaved.isCompleted && !this.isDoomed;\r\n      this.storedReal = player.celestials.enslaved.storedReal;\r\n      this.storedRealEffiency = Enslaved.storedRealTimeEfficiency;\r\n      this.storedRealCap = Enslaved.storedRealTimeCap;\r\n      this.unlocks = Array.from(player.celestials.enslaved.unlocks);\r\n      this.buyableUnlocks = Object.values(ENSLAVED_UNLOCKS).map(x => Enslaved.canBuy(x));\r\n      this.quote = Enslaved.quote;\r\n      this.autoRelease = player.celestials.enslaved.isAutoReleasing;\r\n      this.autoReleaseSpeed = Enslaved.isAutoReleasing ? Enslaved.autoReleaseSpeed : 0;\r\n      this.currentSpeedUp = Enslaved.currentBlackHoleStoreAmountPerMs;\r\n      this.hintsUnlocked = EnslavedProgress.hintsUnlocked.hasProgress;\r\n      this.canModifyGameTimeStorage = Enslaved.canModifyGameTimeStorage;\r\n      this.canChangeStoreTime = Enslaved.canModifyGameTimeStorage;\r\n      this.canChangeStoreRealTime = Enslaved.canModifyRealTimeStorage;\r\n      this.canDischarge = Enslaved.canRelease(false);\r\n      this.canAutoRelease = Enslaved.canRelease(true);\r\n      this.hasNoCharge = player.celestials.enslaved.stored === 0;\r\n      this.hasReachedCurrentCap = this.storedReal === this.storedRealCap;\r\n    },\r\n    toggleStoreBlackHole() {\r\n      Enslaved.toggleStoreBlackHole();\r\n    },\r\n    toggleStoreReal() {\r\n      Enslaved.toggleStoreReal();\r\n    },\r\n    toggleAutoStoreReal() {\r\n      if (!this.offlineEnabled) return;\r\n      Enslaved.toggleAutoStoreReal();\r\n    },\r\n    useStored() {\r\n      Enslaved.useStoredTime(false);\r\n    },\r\n    timeDisplayShort(ms) {\r\n      return timeDisplayShort(ms);\r\n    },\r\n    timeUntilBuy(price) {\r\n      return Math.max((price - this.storedBlackHole) / this.currentSpeedUp, 0);\r\n    },\r\n    buyUnlock(info) {\r\n      Enslaved.buyUnlock(info);\r\n    },\r\n    startRun() {\r\n      if (this.isDoomed) return;\r\n      Modal.celestials.show({ name: \"The Nameless Ones'\", number: 2 });\r\n    },\r\n    hasUnlock(info) {\r\n      return Enslaved.has(info);\r\n    },\r\n    canBuyUnlock(info) {\r\n      // This (rather than just using Enslaved.canBuy(info) and removing this.buyableUnlocks)\r\n      // is needed for proper reactivity of button styles (e.g., if you get a level 5000 glyph\r\n      // while on the Nameless tab).\r\n      return this.buyableUnlocks[info.id];\r\n    },\r\n    unlockClassObject(info) {\r\n      return {\r\n        \"o-enslaved-shop-button--bought\": this.hasUnlock(info),\r\n        \"o-enslaved-shop-button--available\": this.canBuyUnlock(info)\r\n      };\r\n    },\r\n    glitchStyle(x) {\r\n      const xScale = 15 / 27;\r\n      const yScale = 5;\r\n      const dx = (x - 13) * xScale + (Math.random() * 2 - 1) * 0.85;\r\n      const dy = (Math.random() * 2 - 1) * yScale;\r\n      const height = (Math.pow(Math.random(), 1.5) + 0.25) * 3 * yScale;\r\n      return {\r\n        transform: `translate(${dx}rem, ${dy}rem)`,\r\n        height: `${height}rem`,\r\n      };\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-enslaved-celestial-tab\">\r\n    <CelestialQuoteHistory celestial=\"enslaved\" />\r\n    <div\r\n      v-if=\"hasAutoRelease && canAutoRelease\"\r\n      class=\"c-subtab-option-container\"\r\n    >\r\n      <PrimaryToggleButton\r\n        v-model=\"autoRelease\"\r\n        class=\"o-primary-btn--subtab-option\"\r\n        label=\"Pulse Black Hole:\"\r\n      />\r\n    </div>\r\n    <div class=\"l-enslaved-celestial-tab--inner\">\r\n      <div class=\"l-enslaved-run-container\">\r\n        <div v-if=\"hasUnlock(unlocksInfo.RUN)\">\r\n          <div class=\"c-enslaved-run-button\">\r\n            <div\r\n              class=\"c-enslaved-run-button__title\"\r\n              :class=\"doomedDisabledClass\"\r\n            >\r\n              {{ realityTitle }}\r\n            </div>\r\n            <div v-if=\"completed\">\r\n              <b>(Completed)</b>\r\n            </div>\r\n            <div\r\n              :class=\"runButtonClassObject\"\r\n              @click=\"startRun\"\r\n            >\r\n              <div class=\"c-enslaved-run-button__icon__sigil\">\r\n                {{ enslavedSymbol }}\r\n              </div>\r\n              <div\r\n                v-for=\"x in (isRunning ? 25 : 0)\"\r\n                :key=\"x\"\r\n                class=\"c-enslaved-run-button__icon__glitch\"\r\n                :style=\"glitchStyle(x)\"\r\n              />\r\n            </div>\r\n            <div\r\n              v-for=\"line in runDescription\"\r\n              :key=\"line\"\r\n              class=\"c-enslaved-run-description-line\"\r\n            >\r\n              {{ line }}\r\n            </div>\r\n            <b>Reward: Unlock Tesseracts, which let you increase Infinity Dimension caps\r\n              (see Infinity Dimension tab)</b>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"l-enslaved-upgrades-column\">\r\n        <PrimaryButton\r\n          v-if=\"hintsUnlocked\"\r\n          class=\"o-primary-btn\"\r\n          onclick=\"Modal.enslavedHints.show()\"\r\n        >\r\n          Examine the Reality more closely...\r\n        </PrimaryButton>\r\n        <div class=\"l-enslaved-top-container\">\r\n          <div class=\"l-enslaved-top-container__half\">\r\n            While charging, game speed multipliers are {{ hasAutoRelease ? \"decreased\" : \"disabled\" }},\r\n            and the lost speed is converted into stored game time. Discharging the Black Hole allows you to skip\r\n            forward in time. Stored game time is also used to unlock certain upgrades.\r\n            <button\r\n              :class=\"storeGameTimeClass\"\r\n              @click=\"toggleStoreBlackHole\"\r\n            >\r\n              <div\r\n                class=\"o-enslaved-stored-time\"\r\n                :class=\"doomedDisabledClass\"\r\n              >\r\n                {{ timeDisplayShort(storedBlackHole) }}\r\n              </div>\r\n              <div>\r\n                {{ isStoringBlackHole ? \"Charging Black Hole\": \"Charge Black Hole\" }}\r\n              </div>\r\n            </button>\r\n            <button\r\n              :class=\"dischargeClass\"\r\n              @click=\"useStored\"\r\n            >\r\n              <span>Discharge Black Hole</span>\r\n              <p v-if=\"isRunning\">\r\n                {{ timeDisplayShort(nerfedBlackHoleTime) }} in this Reality\r\n              </p>\r\n            </button>\r\n          </div>\r\n          <div class=\"l-enslaved-top-container__half\">\r\n            Storing real time completely halts all production, setting game speed to {{ formatInt(0) }}.\r\n            You can use stored real time to \"amplify\" a Reality, simulating repeated runs of it.\r\n            Amplified Realities give all the rewards that normal Realities do.\r\n            <button\r\n              :class=\"[storeRealTimeClass,\r\n                       {'l-fixed-setting': hasReachedCurrentCap}]\"\r\n              @click=\"toggleStoreReal\"\r\n            >\r\n              <div class=\"o-enslaved-stored-time\">\r\n                {{ timeDisplayShort(storedReal) }}\r\n              </div>\r\n              <div>\r\n                {{ isStoringReal ? \"Storing real time\": \"Store real time\" }}\r\n              </div>\r\n            </button>\r\n            <button\r\n              :class=\"[mechanicButtonClass,\r\n                       {'o-enslaved-mechanic-button--storing-time': autoStoreReal && offlineEnabled,\r\n                        'l-fixed-setting': !canChangeStoreRealTime || !offlineEnabled},\r\n                       doomedDisabledClass]\"\r\n              @click=\"toggleAutoStoreReal\"\r\n            >\r\n              {{ realTimeButtonText }}\r\n            </button>\r\n            <div>\r\n              Efficiency: {{ storedRealEfficiencyDesc }}\r\n            </div>\r\n            <div>\r\n              Maximum stored real time: {{ storedRealCapDesc }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <BlackHoleChargingSliders />\r\n        <br>\r\n        <div class=\"l-enslaved-shop-container\">\r\n          <button\r\n            v-for=\"unlock in unlocksInfo\"\r\n            :key=\"unlock.id\"\r\n            class=\"o-enslaved-shop-button\"\r\n            :class=\"unlockClassObject(unlock)\"\r\n            @click=\"buyUnlock(unlock)\"\r\n          >\r\n            {{ unlock.description() }}\r\n            <div v-if=\"!hasUnlock(unlock)\">\r\n              Costs: {{ timeDisplayShort(unlock.price) }}\r\n            </div>\r\n            <span v-if=\"isStoringBlackHole && !hasUnlock(unlock) && timeUntilBuy(unlock.price) > 0\">\r\n              Time to obtain: {{ timeDisplayShort(timeUntilBuy(unlock.price)) }}\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-enslaved-run-description-line {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.l-fixed-setting {\r\n  cursor: pointer;\r\n  pointer-events: none;\r\n  filter: brightness(70%);\r\n}\r\n</style>"],"sourceRoot":"src/components/tabs/celestial-enslaved"},"metadata":{},"sourceType":"module"}