{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.replace-all.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport { DC } from \"../constants\";\nimport { credits } from \"@/core/secret-formula/credits\";\nexport const h2p = {\n  /**\r\n   * @template\r\n   * {\r\n   *  @property {String} name   Internal name for the tab entry\r\n   *  @property {String} alias  Display name for the tab; if not present, will use the internal name\r\n   *  @property {Number} id     Unique ID for each entry (generated in-game, not explicitly stated)\r\n   *  @property {function: @return String} info         Text body of information for the entry\r\n   *  @property {function: @return Boolean} isUnlocked  Condition for when the entry is visible and searchable\r\n   *  @property {Array: String} tags  List of keywords which are linked to this tab in the search function\r\n   *  @property {String} tab    Key of a tab+subtab combination which will default the h2p to this entry if opened\r\n   * }\r\n   */\n  tabs: [{\n    name: \"This Modal\",\n    info: () => `\nWelcome to the How to Play!\n<br>\n<br>\n<b>See the next How To Play entry to view the changes in this mod.</b>\n<br>\n<br>\nThis modal (pop-up window) contains in-depth explanations and additional details for everything you will encounter\nas you progress through the game. As you unlock new features and mechanics, you will also gain access to additional\npages here. If you ever feel lost or confused about how something in the game works, you may find a helpful\nexplanation within the related entry in here. \n<br>\n<br>\nFor now, opening the How to Play will always start you on this page. After you get your first Dimension Boost,\nopening this modal will instead place you on the How to Play entry most relevant to the game content on your currently\nvisible tab and subtab, if such an entry exists.\n`,\n    isUnlocked: () => true,\n    tags: [\"h2p\", \"how\", \"to\", \"play\", \"modal\"],\n    tab: \"\"\n  }, {\n    name: \"What has changed\",\n    info: () => `\nAs the mod name, almost all mechanics are speeded up by ${formatX(globalSpeedFactor)}. This is called the global speed factor.<br>\n<br>\nTo be separated from the in-game speed change mechanic, 'real/game real/game time' means\nthis timer doesn't/does count speed up from this mod and doesn't/does count in-game speed change.<br>\n<br>\nTo make the game run normally and still balanced in some way, some mechanics are not speeded up\n${player.blackHole[0].unlocked || player.records.fullGameCompletions > 0 ? \"or speeded up by a lower factor\" : \"\"}:<br>\n${player.speedrun.isUnlocked ? `\n- Speedrun timer is not speeded up.<br>\n` : \"\"}\n- News scrolling is not speeded up.<br>\n- Playtime tracking (real time) is not speeded up.<br>\n- Autobuyers are not speeded up.<br>\n- The timers of requirements of achievements are not speeded up unless specified.<br>\n- The timers of achievement rewards that drops over time are not speeded up.<br>\n${PlayerProgress.infinityUnlocked() ? `\n- The timers that record the fastest completion of challenges or prestiges are not speeded up.<br>\n- The normal matter appears in some challenges is not speeded up.<br>\n` : \"\"}\n${Autobuyer.bigCrunch.hasMaxedInterval || PlayerProgress.eternityUnlocked() || player.records.fullGameCompletions > 0 ? `\n- The production drop in Infinity Challenge 8 is not speeded up.<br>\n` : \"\"}\n${PlayerProgress.eternityUnlocked() || player.records.fullGameCompletions > 0 ? `\n- Time Study 141's multiplier's drop is not speeded up.<br>\n` : \"\"}\n${player.blackHole[0].unlocked || player.records.fullGameCompletions > 0 ? `\n- Black Hole ticking is still speeded up, but only square-rooted as ${formatX(Math.pow(globalSpeedFactor, 1 / 2))}. Notice that both inactive time and duration are speeded up.<br>\n` : \"\"}\n${Player.automatorUnlocked || player.records.fullGameCompletions > 0 ? `\n- Automator running is not speeded up.<br>\n` : \"\"}\n${EffarigUnlock.eternity.isUnlocked || player.records.fullGameCompletions > 0 ? `\n- Charging real time doesn't charge ${formatX(globalSpeedFactor)} time.<br>\n` : \"\"}\n${VUnlocks.raUnlock.isUnlocked || player.records.fullGameCompletions > 0 ? `\n- Memory Chunk and Memory production are still speeded up, but only square-rooted as ${formatX(Math.pow(globalSpeedFactor, 1 / 2))}.<br>\n` : \"\"}\n${Laitela.isUnlocked || player.records.fullGameCompletions > 0 ? `\n- In Lai'tela's Reality, entropy production and game speed recovery are not speeded up.<br>\n- Dark Matter Dimensions are still speeded up, but only square-rooted as ${formatX(Math.pow(globalSpeedFactor, 1 / 2))}.<br>\n` : \"\"}\n${Pelle.isDoomed || player.records.fullGameCompletions > 0 ? `\n- In Doomed Reality, the global speed factor is square-rooted as ${formatX(Math.pow(globalSpeedFactor, 1 / 2))}.<br>\n` : \"\"}\n${Achievement(188).isUnlocked || player.records.fullGameCompletions > 0 ? `\n- The ending animation is not speeded up.<br>\n` : \"\"}\n${Achievement(188).isUnlocked || player.records.fullGameCompletions > 0 ? \"\" : `More mechanics will show here as you reach them.<br>`}\n<br>\nAlso, there are some extra buffs to the game.<br>\n${Autobuyer.bigCrunch.hasMaxedInterval || PlayerProgress.eternityUnlocked() ? `\n- The infinity generating break infinity upgrade counts the boost from achievement 87 and time study 32.<br>\n${PlayerProgress.eternityUnlocked() || player.records.fullGameCompletions > 0 ? `\n- You gain a multiplier to eternities gained on eternity based on your current eternities, to a minimal of ${formatX(5)} and a maximal of ${formatX(1000)}.<br>\n` : \"\"}\n${PlayerProgress.realityUnlocked() || player.records.fullGameCompletions > 0 ? `\n- Realities are always simuated +${format(4)}× (additive with other amplify mutipliers).<br>\n- You gain a multiplier to perk points gained on reality based on your current realities, to a maximal of ${formatX(20)}.<br>\n` : \"\"}\n${PlayerProgress.realityUnlocked() || player.records.fullGameCompletions > 0 ? \"\" : `More buffs will show here as you reach them.<br>`}\n` : \"These buffs will show here as you reach them.<br>\"}\n<br>\nVisit here often to be clear about what has changed, especially when unlocking a new mechanic.\n`,\n    isUnlocked: () => true,\n    tags: [\"mod\", \"speed\", \"change\"],\n    tab: \"\"\n  }, {\n    name: \"Your savefile\",\n    info: () => `\nYour game's save data is stored on your computer's browser data if you are playing on a web browser, or in your Steam\ninstallation folder if you are playing on Steam. This means that clearing your browser's cache or cookies, or fully\nuninstalling the game from Steam will also delete your save file.\nSimilarly, if you are playing in a private or incognito window, your save\nwill not be there the next time you open up your browser. The saves are browser-specific as well, so for example\nif you play the game on Chrome, you will not find your save on Firefox. Lastly, any saves you have on the web version\nand the Steam version will also be completely independent from each other.\n<br>\n<br>\nYou can transfer your save between places by using the export function, which will copy a <i>very</i> long string of\nrandom-looking characters into your clipboard. That text contains your save data, which you can load back into the\ngame by pasting it into the text box on the import prompt. You need the entirety of the save text for importing to\nwork properly, or else the game might not recognize the text as a valid save. Certain messaging applications may\ncut off part of the text if you are using one to transfer the save between devices.\n<br>\n<br>\nA properly-formatted save string from the Reality update will start with\n<b>${GameSaveSerializer.startingString.savefile}</b> and end with <b>${GameSaveSerializer.endingString.savefile}</b>.\nIf you are importing from a version of the game from before Reality was released, it will instead start with <b>eyJ</b>\nand end with <b>In19</b>, <b>fX0=</b>, or <b>fQ==</b>. If neither of these are the case, then part of your save is\nmissing and it will fail to import. In addition to importing and exporting to your clipboard, you can also import\nand export from text files as well.\n<br>\nYou can use the \"Choose save\" button to pick between three separate saves on your browser. These saves are, for most\nintents and purposes, completely separate from each other. Importing and exporting will only affect the current save\nslot. <b>The only exception is clearing your browser or Steam data, in which case all three saves will be reset.</b>\n<br>\n<br>\nThe game automatically saves periodically, by default once every ${formatInt(30)} seconds.\nKeep this in mind if you need to close the game - anything you\ndo right before closing it might not be saved unless you wait for the autosave interval or manually save again. The\nlength of the autosave interval is adjustable, and its timer can be seen in the bottom-left of the screen.\n<br>\n<br>\nBackups of your savefile are also saved after certain amounts of time online or offline, which you can examine and\nreload at any point by clicking the \"Open Automatic Save Backup Menu\" button. These backups may be useful if you wish\nto revert your save to what it looked like some time in the past, such as a few minutes ago or when you were last\noffline for a while.\n<br>\n<br>\nYou can also connect a Google Account to the game, allowing you to save your progress online. This allows you to play\nwith the same save on any device which is also logged into the same account. Cloud saving is only compatible with other\nsaves on the web or Steam versions of the game; saves from the Android app of the game will not be automatically linked\nvia Cloud saving. Saving and loading from the Cloud will\nautomatically overwrite the other save unless the other save is either older or has noticeably more progression, in\nwhich case a modal will appear which asks you which save you want to keep.\n<br>\n<br>\nYou can completely reset your save at any point if desired by clicking the button, which brings up a prompt you need\nto fill out in order to make sure you intentionally wanted to reset. Going through with this reset will only clear\nyour current save; the other save slots will be unaffected. <b>Resetting your game in this way is completely\nirreversible and gives you no permanent benefits, secret or otherwise.</b>\n`,\n    isUnlocked: () => true,\n    tags: [\"choose\", \"cloud\", \"google\", \"save\", \"import\", \"export\", \"reset\"],\n    tab: \"options/saving\"\n  }, {\n    name: \"Customization\",\n    info: () => `\nThe game has two different UI layouts - the Classic UI maintains the style of Antimatter Dimensions from before the\nReality update, while the Modern UI is a redesign based on more modern dark theme styles. Additionally, there are\nvarious themes which can be applied to modify the appearance of everything in the game. There are a few secret themes\nwhich can be unlocked through importing certain phrases. Both UI layouts support all the different possible themes.\n<br>\n<br>\nThe notation used to display numbers in the game defaults to Mixed Scientific, but can be changed to one of numerous\noptions in the drop-down menu. Many of these notations are intended as jokes and in some cases will format numbers\nin a way that causes text to spill over into other parts of the screen - this is not a bug. You can additionally\nconfigure what numbers look like when they are extremely large using the \"Exponent Notation Options\" menu,\nalthough this may result in some odd text appearances in some places.\n<br>\n<br>\nMany events in the game trigger full-screen animations or pop-up modals which require you to confirm that you want to\ncontinue. Most of these animations and confirmations can be disabled on an individual basis through the options,\nalthough the ability to disable any given animation or confirmation will only appear after they have already shown up\nat least once.\n`,\n    isUnlocked: () => true,\n    tags: [\"UI\", \"update\", \"news\", \"theme\", \"notation\", \"comma\", \"exponent\", \"animation\", \"retry\", \"confirmation\", \"offline\", \"hotkey\", \"classic\", \"modern\"],\n    tab: \"options/visual\"\n  }, {\n    name: \"Offline Progress\",\n    info: () => `\nAntimatter Dimensions has a catch-up mechanic which attempts to simulate the game's behavior if the game is closed for\nan extended period of time. The simulation behavior is only somewhat accurate, as the game is too mathematically\ncomplicated to be run at full accuracy in a reasonable amount of time. At the end of the simulation, the game will\nsummarize how various relevant resources have changed while you were gone.\n<br>\n<br>\nIf the game is left open and becomes unfocused or otherwise suspended for an extended period of time, it will attempt\nto apply the missed time as offline progress when you return. This can be potentially unreliable, as different devices\nhandle these situations differently. If this results in undesirable behavior, there is a toggle to turn this off in the\noptions - in that case the game will try to apply all the missed time in a single tick.\n<br>\n<br>\nThe game runs on a system where everything is updated once per tick - all Dimensions and resources do one unit of\nproduction, all autobuyers trigger once, all multipliers and values are changed accordingly, and all the displayed\nnumbers are updated. By default there are ${formatInt(20)} ticks per second when the game is running, although this can\nbe modified by changing the \"Update rate\" within the game Options.\nYour current settings will run the game at ${format(1000 / player.options.updateRate, 2, 1)} ticks per second on\naverage, although lag and internal javascript behavior may cause individual ticks to vary by a few percent.\n<br>\n<br>\nWhen offline simulation is active, these ticks have an adjusted length in order to fill the amount of time you were\naway - for example having a setting for ${formatInt(1000)} offline ticks and closing the game for an hour will result in\nticks which are ${format(3.6, 1, 1)} seconds long each. For most things in the game, this is not an issue because this\nwill still result in approximately the same amount of resources after the simulation completes. A notable exception is\nautobuyers - in this situation autobuyers will effectively only trigger once every ${format(3.6, 1, 1)} seconds, which\nmay have a strong impact depending on the part of the game.\n<br>\n<br>\n${player.blackHole[0].unlocked ? `<b>Offline Black Hole behavior:</b> Once the Black Hole has been unlocked, the offline progress simulation will\n      attempt to run the game in a way where each tick contains roughly the same amount of <i>game</i> time. This may\n      give the appearance of the Black Hole(s) being active for a much larger fraction of time than normal while\n      simulating, when in fact the game is running active periods more slowly and \"skipping past\" the inactive periods\n      because they contribute much less production per real time. This results in behavior which is generally in your\n      favor when compared to ticks with constant real time.\n      <br>\n      <br>` : \"\"}\nOffline tick count can be adjusted between ${formatInt(500)} and ${formatInt(DC.E6)} ticks. Smaller counts will result\nin faster but less accurate simulations, while larger counts will result in more accurate simulations which take longer\nto complete. There is a limit of one day of time per game tick, meaning there are some rare situations (such as not\nplaying the game for more than a year) where you may not get all of the time you were away.\n<br>\n<br>\nOffline progress can be disabled entirely if desired, for example for diagnostic or timing purposes, or in order\nto do an \"online only\" playthrough of the game. Otherwise, offline progress is on by default from the very beginning\nof the game. Note that if offline progress is disabled, the statistic for total time played will also be paused while\nthe game closed.\n`,\n    isUnlocked: () => true,\n    tags: [\"offline\", \"away\", \"progress\"],\n    tab: \"options/gameplay\"\n  }, {\n    name: \"Effect Stacking\",\n    info: () => `\nMost of the effects and upgrades in Antimatter Dimensions largely fall into three categories:\n<br>\n- <b>Additive:</b> These effects are typically denoted with a + (or the word \"increase\") followed by a number,\nand add their value to some\nbase amount. Multiple additive effects are summed up. These can also sometimes show up as subtractive effects which\nreduce resource costs.\n<br>\n- <b>Multiplicative:</b> These effects are shown either by a × (or the word \"multiply\") followed by a number or,\nmore rarely, as two numbers\nseparated by a ➜. Different multiplicative sources always combine by multiplying, never by adding. In some situations,\nthere may be negative effects or cost reductions that apply in this category as division.\n<br>\n- <b>Power</b>: These effects are much rarer and appear as ^ followed by a number. Multiple power effects apply\nsequentially, or equivalently by multiplying the values of the power effects together and applying the final value\nas a single power. In rare situations, negative effects may apply here in this category as powers which are less\nthan ${formatInt(1)}.\n<br>\n<br>\nUnless otherwise noted when an upgrade or reward <i>replaces</i> an older value, all of these effects stack\nwith each other. In the case of an upgrade replacing an older value with a newer value, the replacement occurs before\nany of the above effects are applied. To determine the final value of a set of effects, the effects from each category\nare individually combined, and then applied in the order of additive, multiplicative, then power effects.\n<br>\n<br>\n${PlayerProgress.realityUnlocked() || PlayerProgress.dilationUnlocked() ? \"Dilation and any Dilation-like effects apply <i>after</i> all of these other effects are stacked together.\" : \"\"}\n<br>\n<br>\n${PlayerProgress.realityUnlocked() ? `Glyph Effects effectively have two stacking attributes; their internal way of stacking together and the way\n      they stack with all other game effects. These may not necessarily be the same - for example, the \"Antimatter\n      Dimension Power\" effect will stack <i>additively with itself</i>, but then the total effect will be added to\n      a base value of ${formatInt(1)} and then applied as a <i>power effect</i> to Antimatter Dimensions.` : \"\"}\n`,\n    isUnlocked: () => true,\n    tags: [\"effect\", \"stack\", \"combine\", \"add\", \"reduce\", \"multiply\", \"divide\", \"power\", \"dilation\", \"glyph\"],\n    tab: \"options/gameplay\"\n  }, {\n    name: \"Common Abbreviations\",\n    info: () => `\nMany resources within the game may appear in an abbreviated format as text in order to save space. This How to\nPlay entry will update itself with additional entries for new resources as you encounter them for the first time.\n<br>\n- <b>AM</b>: Antimatter<br>\n- <b>AD</b>: Antimatter Dimension<br>\n- <b>AG</b>: Antimatter Galaxy<br>\n${PlayerProgress.infinityUnlocked() ? \"- <b>IP</b>: Infinity Point<br>\" : \"\"}\n${PlayerProgress.infinityUnlocked() ? \"- <b>NC</b>: Normal Challenge<br>\" : \"\"}\n${PlayerProgress.infinityUnlocked() ? \"- <b>IC</b>: Infinity Challenge<br>\" : \"\"}\n${InfinityDimension(1).isUnlocked || PlayerProgress.eternityUnlocked() ? \"- <b>ID</b>: Infinity Dimension<br>\" : \"\"}\n${PlayerProgress.replicantiUnlocked() ? \"- <b>RG</b>: Replicanti Galaxy<br>\" : \"\"}\n${PlayerProgress.eternityUnlocked() ? \"- <b>EP</b>: Eternity Point<br>\" : \"\"}\n${PlayerProgress.eternityUnlocked() ? \"- <b>TT</b>: Time Theorem<br>\" : \"\"}\n${PlayerProgress.eternityUnlocked() ? \"- <b>TD</b>: Time Dimension<br>\" : \"\"}\n${PlayerProgress.eternityUnlocked() ? \"- <b>EC</b>: Eternity Challenge<br>\" : \"\"}\n${PlayerProgress.dilationUnlocked() ? \"- <b>TP</b>: Tachyon Particle<br>\" : \"\"}\n${PlayerProgress.dilationUnlocked() ? \"- <b>DT</b>: Dilated Time<br>\" : \"\"}\n${PlayerProgress.dilationUnlocked() ? \"- <b>TG</b>: Tachyon Galaxy<br>\" : \"\"}\n${PlayerProgress.realityUnlocked() ? \"- <b>RM</b>: Reality Machine<br>\" : \"\"}\n${PlayerProgress.realityUnlocked() ? \"- <b>AP</b>: Automator Point<br>\" : \"\"}\n${PlayerProgress.realityUnlocked() ? \"- <b>BH</b>: Black Hole<br>\" : \"\"}\n${MachineHandler.isIMUnlocked ? \"- <b>iM</b>: Imaginary Machine<br>\" : \"\"}\n${Laitela.isUnlocked ? \"- <b>DM</b>: Dark Matter<br>\" : \"\"}\n${Laitela.isUnlocked ? \"- <b>DE</b>: Dark Energy<br>\" : \"\"}\n`,\n    isUnlocked: () => true,\n    tags: [\"abbreviation\", \"shorten\", \"am\", \"ad\", \"ag\", \"ip\", \"nc\", \"ic\", \"id\", \"rg\", \"ep\", \"tt\", \"td\", \"ec\", \"tp\", \"dt\", \"tg\", \"rm\", \"ap\", \"bh\", \"im\", \"dm\", \"de\"],\n    tab: \"\"\n  }, {\n    name: \"Antimatter Dimensions\",\n    info: () => `\nAntimatter is a resource that is used throughout the entire game for purchasing various things as you progress. You\nstart with ${formatInt(10)} antimatter when you first open the game, and you can\nspend it to buy the 1st Antimatter Dimension to start the game.\n<br>\n<br>\nAntimatter Dimensions are your production units in game. The 1st Antimatter Dimension produces your antimatter.\nEach consecutive Antimatter Dimension produces the previous one, allowing you to have steady growth.\nThere are eight Antimatter Dimensions total.\n<br>\n<br>\n<b>Dimension Multiplier:</b> Beside the Dimension there is a multiplier (example: 1st Dimension ${formatX(1, 1, 1)}).\nThe base production of each Dimension is multiplied by this number.\nThis multiplier increases by ${formatX(2)} for every ${formatInt(10)} of that Dimension purchased.\nEach time this occurs, the price of the dimension will increase.\n<br>\n<br>\n<b>Accumulated Dimension Quantity:</b> The next column is your current amount of that Dimension you own.\nThis is a combination of how many you have purchased with antimatter,\nas well as produced from the higher Dimension.\n<br>\n<br>\n<b>Purchased Dimensions Quantity:</b> Next to each accumulated quantity of owned Dimensions,\nthe amount of that Dimension purchased toward the next multiplier upgrade is displayed in brackets.\nFor example if you have (${formatInt(4)}) next to your accumulated dimension quantity,\nyou will need ${formatInt(6)} more of that dimension for the next multiplier increase.\n<br>\n<br>\n<b>Dimension Growth Percent:</b> This number represents the amount of growth that each\nDimension experiences per second. ${formatPercents(1)} means the dimension is doubling each second.\nThis allows you to judge overall growth.\n<br>\n<br>\n<b>Cost &amp; until ${formatInt(10)}:</b>\nYou can buy a single quantity of each Dimension with antimatter when the cost button is highlighted.\nAlternatively, if the Until ${formatInt(10)} button is highlighted,\nyou can buy whatever quantity gets you to that Dimension's next Dimension multiplier.\n<br>\n<br>\n<b>Max all:</b> Max all will buy until ${formatInt(10)} of the 1st Antimatter Dimension until it cannot anymore,\nthen second, and so on until the 8th Antimatter Dimension, and then buy max Tickspeed Upgrades.\n<br>\n<br>\n<b>Dimension base prices:</b> ${Array.range(1, 8).map(tier => format(AntimatterDimension(tier)._baseCost, 2, 2)).join(\", \")}\n<br>\n<b>Base per ${formatInt(10)} bought dimension price increases:</b> ${Array.range(1, 8).map(tier => format(AntimatterDimension(tier)._baseCostMultiplier, 2, 2)).join(\", \")}\n<br>\n<br>\n<b>Hotkeys: 1, 2, 3, 4, 5, 6, 7, 8</b> for buy until ${formatInt(10)} Xth Dimension\n(you can also hold down Shift while buying Dimensions, which will only buy\n${formatInt(1)} instead of ${formatInt(10)}), <b>M</b> for Max all\n`,\n    isUnlocked: () => true,\n    tags: [\"dims\", \"normal\", \"antimatter\", \"ad\"],\n    tab: \"dimensions/antimatter\"\n  }, {\n    name: \"Tickspeed\",\n    info: () => `\nProduction in the game happens on each \"tick\", which initially occurs once per second. By buying Tickspeed Upgrades,\nyou can make your Antimatter Dimensions produce faster, as if multiple ticks occur in each second.\n<br>\n<br>\n<b>Tickspeed:</b> This states how many game ticks are occurring every second. Fractional ticks are accounted for,\nboosting production as if part of a game tick has passed. Note that the actual tickspeed time is simulated and the\ngame always runs calculations at the update rate you've chosen in the Options tab.\n<br>\n<br>\n<b>Cost:</b> The cost of antimatter for multiplying ticks/sec by the displayed multiplier.\n(without any Galaxies, this is ${formatX(1.1245, 0, 3)} per purchase)\n<br>\n<br>\n<b>Buy Max:</b> This will buy the maximum amount of Tickspeed Upgrades available\nwith your current amount of antimatter.\n<br>\n<br>\n<b>Hotkeys: T</b> will purchase as many Tickspeed Upgrades as possible, or <b>Shift+T</b> to buy a single upgrade.\n<b>M</b> for Max all.\n`,\n    isUnlocked: () => Tickspeed.isUnlocked,\n    tags: [\"dimension\", \"earlygame\", \"time\"],\n    tab: \"dimensions/antimatter\"\n  }, {\n    name: \"Dimension Boosts\",\n    info: () => `\n<b>Dimension Boost:</b> This resets your antimatter and all of your Antimatter Dimensions, but unlocks another\nAntimatter Dimension for you to purchase and boosts your Dimension multipliers.\nThe 1st Dimension Boost requires ${formatInt(20)} 4th Dimensions, the 2nd requires ${formatInt(20)} 5th Dimensions, etc.\nAfter unlocking all ${formatInt(8)} Dimensions,\nevery additional boost will cost ${formatInt(15)} more 8th Dimensions than the previous Boost and will no longer\nunlock a Dimension, but will continue to increase your Dimension multipliers.\n<br>\n<br>\nYou gain a ${formatX(2)} multiplier to the 1st Dimension for every Dimension Boost you have. Each higher\nDimension will have the multiplier applied one less time as the previous, down to a minimum of ${formatInt(0)}.\nFor example, with ${formatInt(3)} Boosts, the 1st Dimension will gain ${formatX(8)}, the 2nd Dimension ${formatX(4)},\nthe 3rd Dimension ${formatX(2)}, and all other Dimensions are unaffected.\n<br>\n<br>\n<b>Hotkey: D</b> will try to purchase a Dimension Boost.\n`,\n    isUnlocked: () => true,\n    tags: [\"dimboost\", \"reset\", \"earlygame\"],\n    tab: \"dimensions/antimatter\"\n  }, {\n    name: \"Antimatter Galaxies\",\n    info: () => `\nPurchasing an Antimatter Galaxy will reset your game back to the point where only ${formatInt(4)} Dimensions are\navailable, but will increase the effect of your Tickspeed Upgrades by +${format(0.02, 0, 2)} for your first two\nGalaxies. As you get more Galaxies, the multiplier will continue becoming stronger and stronger.\n<br>\n<br>\nThough it will have very little impact for the first few Tickspeed purchases,\nthe increase is multiplicative and will not take long to be visible.\n<br>\n<br>\nYour first Antimatter Galaxy requires ${formatInt(80)} Eighth Dimensions, and each additional Galaxy will cost\nanother ${formatInt(60)} more.\n<br>\n<b>Distant Galaxy scaling:</b> Above ${formatInt(100)} Antimatter Galaxies the cost increase between Galaxies will\nincrease by ${formatInt(2)} per Galaxy, making the next Galaxy cost ${formatInt(62)} more, then ${formatInt(64)} more,\netc.\n<br>\n<b>Remote Galaxy scaling:</b> Above ${formatInt(Galaxy.remoteStart)} Antimatter Galaxies, the <i>total</i> cost\nincreases by another ${formatPercents(0.002, 1)} per Galaxy, on top of Distant scaling.\n<br>\n<br>\n<b>Hotkey: G</b> will try to purchase an Antimatter Galaxy.\n`,\n    isUnlocked: () => true,\n    tags: [\"8th\", \"reset\", \"galaxy\", \"earlygame\"],\n    tab: \"dimensions/antimatter\"\n  }, {\n    name: \"Dimensional Sacrifice\",\n    info: () => `\n<b>You unlock Dimensional Sacrifice after your fifth Dimension Boost.</b>\n<br>\n<br>\nSacrificing will immediately reset the owned quantity of all non-Eighth Dimensions to zero, without reducing the\nmultiplier or the current cost. In return, it will multiply the Eighth Dimension Multiplier by the shown value.\nIt will take time to get back to the production you previously had, but you will end up with a net increase.\n<br>\n<br>\nThe Dimensional Sacrifice multiplier scales with the number of 1st Dimensions you had at the time of sacrifice,\nand the scaling can be improved by completing certain Achievements and challenges. The multiplier is kept between\nsacrifices, meaning that sacrificing once at ${formatX(10)} and then once at ${formatX(4)} will be the same as\n${formatX(8)} then ${formatX(5)}; in both cases you will end up with a total sacrifice multiplier of ${formatX(40)}.\n<br>\n<br>\n<b>Hotkey: S</b> will try to sacrifice.\n`,\n    isUnlocked: () => Sacrifice.isVisible,\n    tags: [\"8th\", \"reset\", \"earlygame\", \"gods\", \"earlygame\"],\n    tab: \"dimensions/antimatter\"\n  }, {\n    name: \"Achievements\",\n    info: () => `\nEach Achievement has requirements to unlock. Once unlocked, some Achievements give a reward.\nRequirements and rewards vary in difficulty and benefit significantly.\n<br>\n<br>\nIn addition to any specific rewards for individual Achievements, you will receive a ${formatX(1.03, 2, 2)} multiplier\nto all Antimatter Dimensions. Each fully completed row also gives another ${formatX(1.25, 2, 2)}. The total multiplier\neffect from all Achievements together is shown above all the Achievement images.\n<br>\n<br>\nSecret Achievements offer no gameplay benefits or advantages and are simply there for fun. Hovering over a Secret\nAchievement will give a hint on how to attain them.\n`,\n    isUnlocked: () => true,\n    tags: [\"earlygame\", \"awards\", \"earlygame\"],\n    tab: \"achievements\"\n  }, {\n    name: \"Infinity\",\n    info: () => `\nOnce you have too much antimatter for the world to handle (${formatInt(2)}<sup>${formatInt(1024)}</sup>\nor about ${formatPostBreak(Number.MAX_VALUE, 6)},\nsometimes called \"Infinity\"), you will be forced to do a “Big Crunch”. This will reset your antimatter, Antimatter\nDimensions, Dimension Boosts, and your Antimatter Galaxies. Doing a Big Crunch is also sometimes referred to as\n\"Infinitying\".\n<br>\n<br>\nYou will eventually be able to pass ${formatPostBreak(Number.MAX_VALUE, 6)}, but until then any larger numbers will\ndisplay as ${format(Infinity)}.\n<br>\n<br>\nEach Infinity completed will give an Infinity Point, which can be spent on upgrades in the new Infinity tab.\nYou must purchase these upgrades from top to bottom. You will also gain one \"Infinity\", which is effectively\nthe number of times you have crunched.\n<br>\n<br>\nThe \"Multiply Infinity Points from all sources by ${formatInt(2)}\" upgrade can be bought multiple times,\nbut each purchase requires ${formatInt(10)} times as much IP.\nYou must complete the Achievement \"No DLC required\" to start purchasing this particular upgrade.\n<br>\n<br>\n<b>Hotkey: C</b> will try to perform a Big Crunch.\n`,\n    isUnlocked: () => PlayerProgress.infinityUnlocked(),\n    tags: [\"crunch\", \"big\", \"upgrades\", \"ip\", \"reset\", \"prestige\", \"earlygame\"],\n    tab: \"infinity/upgrades\"\n  }, {\n    name: \"Normal Challenges\",\n    info: () => `\nNormal Challenges are unlocked after your first Infinity; they change in-game mechanics in different ways to create more\ndifficult Infinity circumstances. To complete a challenge, you must reach ${formatPostBreak(Number.MAX_VALUE, 2)}\nantimatter again.\n<br>\n<br>\nEach completed Normal Challenge will award an autobuyer or the ability to upgrade an existing autobuyer.\nYou can run them multiple times (though only the first time grants a reward),\nand they can be exited at any time via the “Exit Challenge” button.\n<br>\n<br>\nYour first Infinity is considered to be the first Normal Challenge, and is thus already completed when\nyou unlock challenges.\n<br>\n<br>\nThe rightmost column of Infinity Upgrades does not work in challenges.\n`,\n    isUnlocked: () => PlayerProgress.infinityUnlocked(),\n    tags: [\"infinity\", \"autobuyer\", \"earlygame\"],\n    tab: \"challenges/normal\"\n  }, {\n    name: \"Autobuyers\",\n    info: () => `\nAutobuyers allow you to automatically purchase dimensions, upgrades, or prestiges. All autobuyer\ncontrols are located under the \"Autobuyers\" subtab of the \"Automation\" tab, including any additional autobuyers\nunlocked later in the game.\n<br>\n<br>\nAntimatter Dimension Autobuyers and the Tickspeed Upgrade Autobuyer can be unlocked based on your total antimatter,\nbut most other autobuyers require upgrades to be purchased or challenges to be beaten.\n<br>\n<br>\nMost Autobuyers have similar attributes:\n<br>\n<br>\n<b>Autobuyer Interval:</b> The cooldown period before the autobuyer attempts to make another purchase.\nAntimatter Dimension Autobuyers and the Tickspeed Upgrade Autobuyer require their respective challenges to be beaten\nbefore their interval can be upgraded.\n<br>\n<br>\n<b>Antimatter Dimension Autobuyer Bulk Buy:</b> Once the interval of an autobuyer reaches its minimum\n(at ${formatInt(100)} ms), all future upgrades will double the maximum amount the autobuyer can purchase per tick.\nThis can be disabled.\n<br>\n<br>\n<b>Antimatter Dimension Autobuyer Buy Quantity:</b> Autobuyers for Dimensions can be set to buy a single Dimension,\nor until ${formatInt(10)}. Bulk buy is disabled when the autobuyer is set to singles.\n<br>\n<br>\n<b>Tickspeed Autobuyer Buy Quantity:</b> The tickspeed autobuyer can be set to buy a single upgrade per activation\nor to buy the max possible once the Tickspeed Challenge (C9) has been beaten.\n<br>\n<br>\n<b>Automatic Dimension Boost Customization:</b> With the Dimension Boost autobuyer you can set the max number of\nBoosts it will attempt to buy, a minimum number of Antimatter Galaxies before Dimension Boosts are\nalways auto-purchased, and (when unlocked) the ability to buy an exact number of Dimension Boosts in bulk.\nIf you reach your specified Galaxy threshold, the autobuyer will ignore your max Boost limit.\n<br>\n<br>\n<b>Max Galaxies:</b> The highest amount of Galaxies the Galaxies autobuyer will buy.\n<br>\n<br>\n<b>IP on crunch:</b> Once you Break Infinity, you can set how many IP you would like to wait for before crunching.\n<br>\n<br>\n<b>Sacrifice Autobuyer:</b> This autobuyer starts with a maxed interval, potentially triggering every tick.\n<br>\n<br>\n<b>Dynamic Amount:</b> Upgraded prestige autobuyers have a mode that triggers a prestige when a specified threshold\nis passed. Turning on \"Dynamic Amount\" will allow this threshold value to be automatically increased when unlocking\ncertain upgrades or achievements which apply a multiplier to this value.\n<br>\n<br>\n<b>Pause/Resume Autobuyers:</b> This button will pause or resume autobuyers which are turned on.\nIt does not change individual autobuyer settings. Think of it like a master switch.\n<br>\n<br>\n<b>Enable/Disable All Autobuyers:</b> This button will turn all of your autobuyers on or off individually.\n<br>\n<br>\n<b>Hotkey: A</b> (for pausing/resuming autobuyers).\nAdditionally, holding <b>Alt</b> when pressing a hotkey associated with an upgrade, dimension, or prestige will\ntoggle the associated autobuyer.\n`,\n    isUnlocked: () => true,\n    tags: [\"infinity\", \"automation\", \"challenges\", \"rewards\", \"interval\", \"earlygame\"],\n    tab: \"automation/autobuyers\"\n  }, {\n    name: \"Break Infinity\",\n    info: () => `\nOnce you Break Infinity, you are no longer limited to ${formatPostBreak(Number.MAX_VALUE, 2)} antimatter and can start\ngaining more than ${formatInt(1)} IP per crunch depending on how much more antimatter you have when you crunch.\n<br>\n<br>\nYou now gain ~${format(1.78, 2, 2)} IP for crunching at ${formatPostBreak(Number.MAX_VALUE, 2)} antimatter. The IP you\ngain for crunching is multiplied by ${formatInt(10)} for every additional factor of\n${formatPostBreak(Number.MAX_VALUE, 2)} antimatter you gain (in a continuous manner). This is rounded down to the\nnearest integer <i>after</i> all multipliers are applied.\n<br>\n<br>\nThe antimatter costs of all Dimensions begin to increase faster after they pass\n${formatPostBreak(Number.MAX_VALUE, 2)}. The cost <i>between</i> upgrades will increase by ${formatX(10)}\n<i>per upgrade</i> above ${formatPostBreak(Number.MAX_VALUE, 2)}, and a similar scaling happens to\nTickspeed Upgrade costs as well.\n`,\n    isUnlocked: () => Autobuyer.bigCrunch.hasMaxedInterval || PlayerProgress.eternityUnlocked(),\n    tags: [\"limit\", \"crunch\", \"upgrades\", \"midgame\"],\n    tab: \"infinity/break\"\n  }, {\n    name: \"Infinity Dimensions\",\n    info: () => `\n<b>Unlocking Infinity Dimensions:</b> Infinity Dimensions are unlocked by reaching a certain amount of antimatter.\n<br>\n<br>\n<b>Infinity Dimension Purchasing:</b> Infinity Dimensions are only purchasable in sets of ${formatInt(10)}, and cost\nInfinity Points. They give a permanent multiplier per purchase, similar to the other dimensions. The actual multiplier\napplied depends on which Infinity Dimension you purchase. <!-- Sorry Garnet :/ -->\n<br>\n<br>\n<b>Infinity Dimension Production:</b> Just like Antimatter Dimensions, each Infinity Dimension produces the\nnext highest Infinity Dimension.\n<br>\n<br>\nEvery crunch, your produced Infinity Dimensions are reset to the amount you purchased. While the production\nof Infinity Dimensions does not carry between crunches, all the multipliers you got from purchasing them do.\n<br>\n<br>\n<b>Infinity Dimension unlock thresholds (antimatter):</b> ${Array.range(1, 8).map(tier => formatPostBreak(InfinityDimension(tier)._unlockRequirement)).join(\", \")}\n<br>\n<b>Infinity Dimension purchase multipliers:</b> ${Array.range(1, 8).map(tier => format(InfinityDimension(tier)._powerMultiplier)).join(\", \")}\n<br>\n<b>Infinity Dimension base prices (IP):</b> ${Array.range(1, 8).map(tier => format(InfinityDimension(tier)._baseCost)).join(\", \")}\n<br>\n<b>Infinity Dimension price increases:</b> ${Array.range(1, 8).map(tier => format(InfinityDimension(tier)._costMultiplier)).join(\", \")}\n<br>\n<br>\nInstead of antimatter, the 1st Infinity Dimension produces Infinity Power, which gives a multiplier applied\nto all Antimatter Dimensions equal to (power<sup>${formatInt(7)}</sup>). Infinity Dimensions are not\naffected by Tickspeed Upgrades.\n`,\n    isUnlocked: () => Autobuyer.bigCrunch.hasMaxedInterval || PlayerProgress.eternityUnlocked(),\n    tags: [\"id\", \"power\", \"new\", \"dims\", \"unlock\", \"break\", \"midgame\"],\n    tab: \"dimensions/infinity\"\n  }, {\n    name: \"Infinity Challenges\",\n    // This one could use some work!\n    info: () => `\nInfinity Challenges are like Normal Challenges, but they have higher end goals and are generally harder. Instead of\nonly unlocking autobuyers, they give you boosts to your various forms of production in more unique ways. Similarly to\nNormal Challenges, the rightmost column of Infinity Upgrades are disabled within Infinity Challenges.\n<br>\n<br>\nUnlike the Normal Challenges, which are all unlocked at once, Infinity Challenges require you to reach a certain\namount of antimatter before you can attempt them.\n<br>\n<br>\n<b>Infinity Challenge unlock thresholds:</b> ${GameDatabase.challenges.infinity.map(ic => formatPostBreak(ic.unlockAM)).join(\", \")}\n`,\n    isUnlocked: () => Autobuyer.bigCrunch.hasMaxedInterval || PlayerProgress.eternityUnlocked(),\n    tags: [\"rewards\", \"break\", \"ic\", \"midgame\"],\n    tab: \"challenges/infinity\"\n  }, {\n    name: \"Replicanti\",\n    info: () => `\nReplicanti are another resource you unlock at ${format(DC.E140)} IP. Rather\nthan producing something else, Replicanti actually produces <i>itself</i> up to a maximum of\n${formatPostBreak(Number.MAX_VALUE, 2)}. Replicanti are produced at their own pace, unaffected by Tickspeed Upgrades.\nEach individual Replicanti has a certain chance (initially ${formatPercents(0.01)}) of producing another Replicanti\nevery Replicanti tick (initially every second), and both of these can be upgraded by spending IP.\n<br>\n<br>\nIf you have purchased a Replicanti Galaxy upgrade, then you can get a \"free\" Replicanti Galaxy in exchange for\nresetting your Replicanti count back to ${formatInt(1)}. This Galaxy is free in that it will act as if it was an\nAntimatter Galaxy, but it will not make your next Antimatter Galaxy more expensive. However, it will still reset the\nsame things as an Antimatter Galaxy does.\n<br>\n<br>\n<b>Hotkey: R</b> will try to purchase a Replicanti Galaxy.\n<br>\nReplicanti give a multiplier to all Infinity Dimensions, which will reach a maximum of\n${formatX(Math.pow(2, 20), 2, 2)} at ${formatPostBreak(Number.MAX_VALUE, 2)} Replicanti.\n<br>\n<br>\n<b>Chance upgrade cost:</b> Base ${format(DC.E150)} IP, cost increment ${formatX(DC.E15)} IP\n<br>\n<b>Interval upgrade cost:</b> Base ${format(DC.E140)} IP, cost increment ${formatX(DC.E10)} IP\n<br>\n<b>Galaxy upgrade cost:</b> Base ${format(DC.E170)} IP, cost increment ${formatX(DC.E25)} IP and an additional\n${formatX(1e5)} IP per upgrade, scaling similarly to distant Antimatter Galaxies. Above ${formatInt(100)} Replicanti\nGalaxies, this ${formatX(1e5)} per upgrade changes to ${formatX(DC.E55)}. Above ${formatInt(1000)}, the scaling switches\nfrom quadratic to cubic, with the ${formatX(DC.E55)} multiplier itself increasing by ${formatX(DC.E5)} per upgrade.\n`,\n    isUnlocked: () => Replicanti.areUnlocked || PlayerProgress.eternityUnlocked(),\n    tags: [\"interval\", \"chance\", \"infinity\", \"galaxy\", \"galaxies\", \"midgame\"],\n    tab: \"infinity/replicanti\"\n  }, {\n    name: \"Eternity\",\n    info: () => `\nUpon reaching ${formatPostBreak(Number.MAX_VALUE, 2)} IP, you can Eternity. Eternities will reset everything before this\npoint except challenge times, Achievements, and anything under the General section of the Statistics tab. You will be\nable to access more content after your first Eternity.\n<br>\n<br>\nYou can pass ${formatPostBreak(Number.MAX_VALUE, 2)} IP without anything being forced upon you, unlike the first time\nyou reached ${formatPostBreak(Number.MAX_VALUE, 2)} antimatter. You will receive more Eternity Points the more\nInfinity Points you had before going Eternal. You will also gain one \"Eternity\" for completing an Eternity.\n<br>\n<br>\nEternity Point gain scales similarly to Infinity Point gain, but scaling off of Infinity Points instead of antimatter.\nThe base amount of EP gained at ${formatPostBreak(Number.MAX_VALUE, 2)} IP is ~${format(1.62, 2, 2)} EP, multiplied by\n${formatInt(5)} for every factor of ${formatPostBreak(Number.MAX_VALUE, 2)} more IP you have. This is always rounded\ndown, which means that you will get ${formatInt(1)} EP at ${formatPostBreak(Number.MAX_VALUE, 2)} IP but will not reach\n${formatInt(2)} EP until ${formatPostBreak(DC.E349)}.\n<br>\n<br>\n<b>Hotkey: E</b> will try to perform an Eternity reset.\n`,\n    isUnlocked: () => PlayerProgress.eternityUnlocked(),\n    tags: [\"eternal\", \"ep\", \"reset\", \"prestige\", \"midgame\"],\n    tab: \"eternity/upgrades\"\n  }, {\n    name: \"Eternity Milestones\",\n    info: () => `\nTo make Eternities faster and more convenient, you will unlock various buffs as you get more \"Eternity\". These\nbuffs will generally let you start with certain upgrades you would otherwise lose after Eternity, give you new\nautobuyers for better automation, or give you a way to passively gain resources offline at a reduced rate.\n<br>\n<br>\nMilestones which give you upgrades will automatically purchase and upgrade them to their maximum when first starting\nthe Eternity, effectively letting you have them permanently.\n<br>\n<br>\nAll of the new autobuyers will have toggles next to their respective manual buttons (for example, Infinity Dimension\nautobuyers can be found on the Infinity Dimension tab) in addition to their entries on the autobuyers tab.\nThe improvements to the Dimension Boost, Antimatter Galaxy, and Big Crunch autobuyers update their\nalready existing entries on the autobuyer tab.\n<br>\n<br>\nThe passive generation milestones only work offline by design and may need certain autobuyer settings to work\nproperly, as noted on the milestone page itself.\n`,\n    isUnlocked: () => PlayerProgress.eternityUnlocked(),\n    tags: [\"eternities\", \"rewards\", \"automation\", \"midgame\"],\n    tab: \"eternity/milestones\"\n  }, {\n    name: \"Time Dimensions\",\n    info: () => `\nAfter your first Eternity, you unlock Time Dimensions. You buy them with Eternity Points and they produce Time Shards,\nwhich provide Tickspeed Upgrades. These Tickspeed Upgrades function like normal Tickspeed Upgrades but do not increase\ntheir cost. Time Dimensions, Time Shards, and the Tickspeed Upgrades they provide are kept on Infinity,\nbut reset every Eternity.\n<br>\n<br>\nSimilarly to the other dimensions, Second Time Dimensions produce 1st Time Dimensions and so on. Similarly to Infinity\nDimensions, your production will be reset to the amount you purchased after every Eternity, but you will keep any\nupgrades to your multipliers you purchased.\n<br>\n<br>\nEach purchase increases the multiplier of that specific Time Dimension by ${formatX(4)}. The cost multiplier between\nupgrades has a base value, but is increased by ${formatX(1.5, 1, 1)} at\n${format(TimeDimension(1)._costIncreaseThresholds[0], 2)} EP and ${formatX(2.2, 1, 1)} (of the base value) at\n${format(TimeDimension(1)._costIncreaseThresholds[1])} EP. These increases apply retroactively, causing the cost to\njump when they reach those thresholds, and only apply to the first four dimensions. Beyond\n${format(TimeDimension(1)._costIncreaseThresholds[2])} EP each dimension purchase counts as four purchases for the\npurpose of cost increases, causing the price to rise much more steeply.\n<br>\n<b>Time Dimension base prices (EP):</b> ${Array.range(1, 8).map(tier => format(TimeDimension(tier)._baseCost)).join(\", \")}\n<br>\n<b>Time Dimension base price increases:</b> ${Array.range(1, 8).map(tier => format(TimeDimension(tier)._costMultiplier)).join(\", \")}\n<br>\n<br>\nEach threshold to gain another Tickspeed Upgrade is ${formatPercents(0.33)} more Time Shards than the previous,\nor ${formatPercents(0.25)} with the relevant Time Study. After ${formatInt(FreeTickspeed.softcap)} upgrades, the\nmultiplier between each successive free Tickspeed Upgrade will gradually increase at a rate of ~${formatX(1.35, 0, 2)}\nper ${formatInt(50000)} upgrades (${formatX(1.000006, 0, 6)} per upgrade).\n`,\n    isUnlocked: () => PlayerProgress.eternityUnlocked(),\n    tags: [\"dims\", \"td\", \"shards\", \"eternity\", \"midgame\"],\n    tab: \"dimensions/time\"\n  }, {\n    name: \"Time Studies\",\n    info: () => `\nA Time Study is a powerful post-Eternity upgrade, which costs a new resource called Time Theorems. Time Studies can\nboost the production of anything you have seen so far in the game, or even change the way some formulas work.\n<br>\n<br>\nTime Theorems are a limited resource which costs more for each one you buy. They can be bought with antimatter,\nInfinity Points, or Eternity Points. Their cost increases by a set factor per purchase. Time Theorems do not\nreset on Eternity.\n<br>\n<br>\nStudies are laid out in a tree-like fashion, where you must buy prerequisites before continuing. The only study you\ncan buy at first is the very top one, and then from there you can purchase any study directly below it which you can\nafford. However, there are three exceptions:\n<br>\nWhere the lines between studies have a color, you can only choose one of the three paths at a time.\n<br>\nWhen a study for an Eternity Challenge is in the way, you need to complete all challenges connected to it at least\nonce in order to access the study. You do not need to have the challenge study purchased in order to access it.\n<br>\nNear the bottom, where all the edges join together again, you can only pick one study out of each pair.\n<br>\n<br>\nYou are able to hold down shift and then click on a Time Study to buy all studies until that point. This might not buy\nthe studies you want if you shift-click a study in a position where you would have to choose between two or more\ndifferent options which you cannot get together (see above), or you cannot afford all the studies needed to reach that\npoint. Shift-click will buy studies greedily, getting as many as possible per row before moving farther downward.\n<br>\n<br>\n<b>Presets:</b> The buttons initially labeled 1 through 6 allow you to save your current set of studies into the slot,\nletting you quickly buy that particular set of studies again with a single click. You can hover over the button and\nuse the tooltip to load/save a slot, or click to load and shift-click to save. These presets can be renamed, but you\nare not allowed to give multiple presets the same name.\n<br>\n<br>\n<b>Import Tree/Edit Preset:</b> When editing a preset or importing a Time Study Tree, the modal will display what\nTime Studies will be bought when it is loaded, along with any errors.\nFor the split paths, you can use the name as a shorthand for the collection of studies.\nFor instance, you can replace \"71, 81, 91, 101\" to represent fully purchasing the antimatter split with\njust \"antimatter\". Additionally, if a Time Study string has a valid Eternity Challenge, adding a \"!\" to the end of\nthe string will make the game to try to immediately unlock and enter the Eternity Challenge when used.\n<br>\n<br>\n<b>Preferences:</b> Clicking the gear icon will open up a dialog which lets you select \"default\" paths to pick in the\nthree-way branches. Choosing a default will change the shift-click behavior mentioned above so that it will attempt\nto buy your preferred path and continue on instead of stopping completely at the tree splits. You can choose two paths\nfor the Dimension split in this dialog if you have purchased the relevant Time Study.\n<br>\n<br>\n<b>Respecs:</b> A respec allows you to reset the upgrades you have in the tree to retrieve all of the Time Theorems\nspent on them. It can be done for free, but only triggers on finishing an Eternity; you cannot respec Time Studies in\nthe middle of an Eternity.\n<br>\n<br>\n<b>Costs for Time Theorems:</b>\n<br>\n<b>Antimatter:</b> Initially ${format(DC.E20000)}, ${formatX(DC.E20000)} per Theorem\n<br>\n<b>Infinity Points:</b> Initially ${formatInt(1)}, ${formatX(DC.E100)} per Theorem\n<br>\n<b>Eternity Points:</b> Initially ${formatInt(1)}, ${formatX(2)} per Theorem\n`,\n    isUnlocked: () => PlayerProgress.eternityUnlocked(),\n    tags: [\"eternity\", \"ts\", \"theorems\", \"tree\", \"study\", \"midgame\"],\n    tab: \"eternity/studies\"\n  }, {\n    name: \"Eternity Challenges\",\n    info: () => `\nEternity Challenges are another set of challenges which are unlocked by the Time Study Tree. They require a certain\namount of Time Theorems and a secondary requirement which you must meet when you unlock the challenge.\n<br>\n<br>\nWhen you enter an Eternity Challenge, your goal becomes reaching a certain target IP. After completing the challenge,\nyou do not need to have the Eternity Challenge's study unlocked for the reward to take effect. The rewards for these\nchallenges are similar to Time Studies, but often even stronger and permanent since they do not require you to spend\nTime Theorems to have their effects.\n<br>\n<br>\nYou can only have one Eternity Challenge unlocked at a time.\n<br>\n<br>\nYou can complete each Eternity Challenge up to five times. After each completion, the rewards grow stronger but the\ngoal to the next completion also increases. Additionally, the secondary requirement to unlock the challenge again will\nalso increase. The Time Theorem cost does not increase.\n<br>\n<br>\nCompleting an Eternity Challenge's secondary requirements will remove them from the study requirement until you complete\nthat particular Eternity Challenge, meaning you only need to complete the secondary requirement <i>once</i>.\nAs a result, you can unlock an Eternity Challenge with one set of studies, and then respec into a different set of\nstudies to beat the challenge. EC11 and EC12 are exceptions to this rule - the Dimension path restrictions remain even\nif you respec your time studies.\n`,\n    isUnlocked: () => PlayerProgress.eternityUnlocked(),\n    tags: [\"ec\", \"study\", \"time\", \"rewards\", \"completions\", \"midgame\"],\n    tab: \"challenges/eternity\"\n  }, {\n    name: \"Time Dilation\",\n    info: () => `\nTime Dilation is unlocked when you purchase the Time Study to unlock it below the EC11 and EC12 studies.\nIn order to purchase this Time Study, you need ${formatInt(5000)} unspent TT with a tree that can reach\nthe study, a <i>total</i> of ${formatInt(TimeStudy.dilation.totalTimeTheoremRequirement)} TT, and must have\ncompleted both EC11 and EC12 five times each.\n<br>\n<br>\nDilating time will start a modified Eternity, called Time Dilation, in which all of your Antimatter/Infinity/Time\nDimension multipliers’ <i>exponents</i> and the tickspeed multipliers’ <i>exponent</i> will be raised to\n${formatPow(0.75, 2, 2)}, significantly reducing them. If you can reach ${formatPostBreak(Number.MAX_VALUE, 2)} IP\nto complete this Dilated Eternity, you will be rewarded with a new resource called Tachyon Particles.\n<br>\n<br>\nYou can Dilate as many times as you want, but Tachyon Particles cannot be \"farmed\" like other resources. Tachyon\nParticles are never reduced, only increased, and they are increased up to a cap based on your TP multipliers and\nantimatter earned in the current Dilation. As a result, you generally cannot increase your TP unless\nyou have gained a TP multiplier or are able to significantly increase your antimatter in Dilation.\n<br>\n<br>\nTachyon Particles generate another currency called Dilated Time. Dilated Time is translated into Tachyon Galaxies by\nreaching thresholds similarly to the Tickspeed Upgrades gained from Time Dimensions. These Tachyon Galaxies are like\nReplicanti Galaxies in that they affect tickspeed as if they were Antimatter Galaxies but they do not increase the cost\nof your next Antimatter Galaxy.\n<br>\n<br>\nUnlocking Time Dilation also unlocks upgrades you can purchase using Dilated Time. The first and third upgrades in the\nfirst row of Dilation Upgrades can be repeatedly purchased as many times as you can afford them. The second upgrade can\nalso be repeatedly bought, but eventually reaches a cap.\n`,\n    isUnlocked: () => DilationTimeStudyState.studies[1].isBought || PlayerProgress.realityUnlocked(),\n    tags: [\"dial\", \"dt\", \"dilated\", \"tachyon\", \"particle\", \"study\", \"free\", \"galaxy\", \"galaxies\", \"midgame\"],\n    tab: \"eternity/dilation\"\n  }, {\n    name: \"Reality\",\n    info: () => `\nWhen you reach ${formatPostBreak(DC.E4000)} EP and have completed the first\n${formatInt(13)} rows of Achievements, you will be able to purchase the Time Study that unlocks Reality.\nUnlocking it opens a new tab, where you can find the button to make a new Reality. Starting a new Reality\nwill reset almost the entire game up to this point, but in exchange gives\nyou a new currency known as Reality Machines, a Glyph, and a Perk Point.\n<br>\n<br>\nUnlike the other resets so far, you also lose the first ${formatInt(13)} rows of Achievements - that is, all of the\npre-Reality Achievements and all of their associated rewards. However, you will still keep all values under the General\nheader in the Statistics tab and all of your best Challenge times.\n<br>\n<br>\nAfter completing your first Reality, the Glyphs tab contain a button which lets you restart your current Reality again,\nwithout changing what your upcoming Glyph choices are. <b>Note that this will not give you any rewards, even if you\nwould otherwise be able to complete the Reality normally.</b>\n<br>\n<br>\nYou need to redo the requirements for each Achievement in order to get their rewards again, but you will also passively\nunlock the next incomplete Achievement every ${timeDisplayNoDecimals(30 * 60000)} without any effort even if you\notherwise do not have the requirements to do so. This automatic completion can be disabled, in which case the timer will\ncount down to zero and pause, immediately completing another Achievement when unpaused. The timer still progresses\nat the same rate while offline.\n<br>\n<br>\nReality Machines can be spent on different upgrades throughout the Reality tab and are your primary currency from this\npoint onwards. Glyphs are equippable objects which you must equip in order to use their boosts. Perk Points are another\ncurrency that can be spent in the Perks subtab on different Perks.\n<br>\n<br>\nReality Machines scale purely off of EP, and the Reality button will tell you how much EP you need in order to gain\nthe next one. The first ${formatInt(10)} RM scale linearly in the exponent between\n${formatPostBreak(DC.E4000)} EP and ${formatPostBreak(DC.C10P16000D3)} EP, and then past that\nRM = ${formatInt(1000)}<sup>log<sub>${formatInt(10)}</sub>(EP)/${formatInt(4000)}-${formatInt(1)}</sup>. This formula\nis higher RM gain than linear above ${formatPostBreak(DC.C10P16000D3)} EP.\n<br>\n<br>\nGlyph level scales off of a combination of Eternity Points, Replicanti, and Dilated Time, with a minimum level of\n${formatInt(1)}. The type, effects, and rarity of Glyphs are randomized.\n<br>\n<br>\nYou get exactly ${formatInt(1)} Perk Point per Reality.\n<br>\n<br>\n<b>Hotkey: Y</b> will try to perform a Reality reset.\n`,\n    isUnlocked: () => PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought,\n    tags: [\"rm\", \"machines\", \"glyph\", \"perk\", \"reset\", \"prestige\", \"endgame\", \"lategame\"],\n    tab: \"reality/upgrades\"\n  }, {\n    name: \"Glyphs\",\n    info: () => `\nA Glyph is an equippable object that has four attributes:\n<br>\n<b>Type</b> - This is a name given to the Glyph based on what part of the game it will tend to boost\n(eg. \"Glyph of X\"). This determines the possible effects it may have.\n<br>\n<b>Level</b> - This contributes to how strong your Glyph is, and it scales based how much of various\nresources you obtained in the Reality you gained it from.\n<br>\n<b>Rarity</b> - This is a percentage, between ${formatPercents(0)} and ${formatPercents(1)}, which also\naffects the strength of your Glyph. This is random, but can be influenced by various upgrades.\nThe percentage is effectively a quality\nrating, higher values are better. Specific ranges of rarities are given names, such as Common or Uncommon.\n<br>\n<b>Effects</b> - These are the boosts that equipping the Glyph will give you, and can contain up to four effects.\nGlyphs with higher level or rarity will generally have more effects than weaker Glyphs.\n<br>\n<b>Note: Your first Glyph will have a fixed effect and rarity, but its level will scale based on your progress before\nany Reality content. Once you receive a Glyph, its attributes cannot be changed.</b>\n<br>\n<br>\nTo equip a Glyph, double-click or drag the icon from your inventory into one of the active circles in the middle\nof the screen. When equipped, Glyph icons become circular and add their effects to the list on the right.\n<br>\n<br>\nEquipping multiple Glyphs with the same effect will combine their effects; effects with \"+\" will generally add\ntheir values together and effects with \"×\" will generally multiply their values together.\n<br>\n<br>\nYou can equip Glyphs into <i>empty</i> active slots at any time during a Reality, which will immediately apply the\neffects of the new Glyph. You can also drag Glyphs into already-occupied slots to switch which ones you have equipped,\nbut this will restart your current Reality.\n<br>\n<br>\nThe slots in the first rows of your inventory are \"protected\" slots. New Glyphs will never be placed into them (even if\nthere is no more room in your inventory), and they are unaffected by the Sort and Auto clean buttons. If you run out of\nspace for new Glyphs in your inventory, any Glyphs you would receive will be automatically deleted (or sacrificed\nif unlocked).\n<br>\n<br>\nYou can delete Glyphs from your inventory by shift-clicking them, which will prompt you with a confirmation dialog\nasking if you are sure you want to delete the Glyph. Holding shift and ctrl together while clicking will bypass this\ndialog. <b>However, deleting Glyphs will give you no benefit beyond clearing up inventory space if you do so before\nunlocking Glyph Sacrifice from a Reality Upgrade!</b>\n<br>\n<br>\nOnce you unlock Glyph Sacrifice, you will be able to disable the Glyph Selection modal from appearing. If desired, you\ncan force the modal to appear again for this Reality (ignoring this setting) by shift-clicking the Reality button.\nCompleting a Reality with the selection modal disabled will choose a random Glyph from your options.\n<br>\n<br>\nClicking a group of circular Glyphs outside of a modal window will open up a modal which displays a detailed summary\nof all those Glyphs and their various attributes. The summary will show the information for all Glyphs at once with\nslightly shorter descriptions, making it more suitable for sharing with others. This can be done for Glyph records\nin the Statistics page, your equipped Glyphs, and the Upcoming Glyph Selection this Reality.\n`,\n    isUnlocked: () => PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought,\n    tags: [\"reality\", \"sacrifice\", \"level\", \"endgame\", \"lategame\"],\n    tab: \"reality/glyphs\"\n  }, {\n    name: \"Perks\",\n    info: () => `\nPerks are a type of upgrade unlocked upon Reality. Each Perk effect varies, but most are QoL (quality of life)\nimprovements which you can choose your own path through. All Perks only require ${formatInt(1)} Perk Point to buy.\n<br>\n<br>\nEach Reality you gain ${formatInt(1)} Perk Point which can be spent on an upgrade on the tree, starting with\n\"You can now choose from ${formatInt(Perk.firstPerk.config.effect)} Glyphs on Reality\". You can only unlock Perks\nwhich are directly adjacent\nto Perks you already have, although there are loops in the tree which you can go through in either direction.\n<br>\n<br>\nThe Perk nodes can have two different shapes - circular or diamond. The only difference between the two is that\ndiamond-shaped Perks give Automator Points in addition to their normal effect. Different nodes also have\ndifferent colors, roughly indicating which part of the game they affect the most.\n`,\n    isUnlocked: () => PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought,\n    tags: [\"pp\", \"reality\", \"tree\", \"endgame\", \"lategame\"],\n    tab: \"reality/perks\"\n  }, {\n    name: \"Automator Overview\",\n    info: () => `\nThe Automator is unlocked upon reaching a total of ${formatInt(AutomatorPoints.pointsForAutomator)} Automator Points.\nAutomator Points are given when unlocking various Perks or Reality Upgrades, by unlocking the Black Hole, or by\nsimply completing more Realities.\n<br>\n<br>\nThe Automator uses a scripting language that allows you to automate nearly the entire game.\nThe interface has two panes, a script pane on the left where you enter the commands to automate the game and a pane\non the right which has multiple panels which do many different things as explained on the Automator Introduction page.\n<br>\n<br>\nIf you want a larger workspace, you can press the button in the top right corner of the documentation pane of the\nAutomator to expand it to fullscreen. You can also drag the boundary between the panes horizontally to resize the\npanes if you want more room to write your script or read documentation.\n<br>\n<br>\nBy pressing the top-right button on the script pane, you can switch between the Automator's block and text editor\nmodes; the block mode may be more approachable if you are unfamiliar with programming. To enter commands in block mode,\nselect the command block pane on the right and drag the box for the relevant command into the script pane and drop it\nwhere you want the command to go. Commands can be freely rearranged by dragging the blocks around if needed. Switching\nbetween block and text mode will attempt to automatically translate your script as well, although you may lose part of\nyour converted script if it contains errors.\n<br>\n<br>\nJust like your entire savefile, individual Automator scripts can be imported and exported from the game.\nProperly-formatted script strings will begin with <b>${GameSaveSerializer.startingString[\"automator script\"]}</b> and\nend with <b>${GameSaveSerializer.endingString[\"automator script\"]}</b>. If this is not the case then part of your script\nwas lost in the process of copy-pasting. The import function will load the script into a new slot; your current script\nwill not be lost or overwritten.\n<br>\n<br>\n<b>Hotkey: U</b> will pause/unpause the Automator.\n`,\n    isUnlocked: () => Player.automatorUnlocked,\n    tags: [\"automation\", \"reality\", \"code\", \"script\", \"endgame\", \"lategame\"],\n    tab: \"automation/automator\"\n  }, {\n    name: \"Automator Technical Details\",\n    info: () => `\n<b>Technical Limits</b>\n<br>\n<br>\nThere are a few limitations to scripts in order to reduce lag and prevent save file size from getting too large.\nThese limits are as follows:\n<br>\n- Individual scripts are limited to a maximum of ${formatInt(AutomatorData.MAX_ALLOWED_SCRIPT_CHARACTERS)}\ncharacters each and all scripts combined together cannot exceed ${formatInt(AutomatorData.MAX_ALLOWED_TOTAL_CHARACTERS)}\ncharacters total.\n<br>\n- Script names cannot exceed ${formatInt(AutomatorData.MAX_ALLOWED_SCRIPT_NAME_LENGTH)} characters.\n<br>\n- Defined constants cannot have names longer than ${formatInt(AutomatorData.MAX_ALLOWED_CONSTANT_NAME_LENGTH)}\ncharacters, or values longer than ${formatInt(AutomatorData.MAX_ALLOWED_CONSTANT_VALUE_LENGTH)} characters.\n<br>\n- You cannot have more than a total of ${formatInt(AutomatorData.MAX_ALLOWED_SCRIPT_COUNT)} scripts or\n${formatInt(AutomatorData.MAX_ALLOWED_CONSTANT_COUNT)} defined constants.\n<br>\n<br>\n<b>Script Saving</b>\n<br>\n<br>\nScripts are automatically saved as you edit them, but are not saved to your game save until the global autosave timer\n(ie. \"Time since last save\") triggers a full game save. If you make changes to scripts right before closing the game,\nyou should wait until the game saves afterwards in order to not lose your changes. Any edits made to your scripts\nwhile above the length limits will not be saved until you shorten your scripts to be below them again.\n<br>\n<br>\n<b>Automator Ticks</b>\n<br>\n<br>\nThe Automator's \"execution timer\" is based on real time, and is therefore unaffected by things such as the Black Hole,\nTime Glyph effects, and EC12's negative effect. However this execution timer runs entirely independently from the main\ngame's production loop, meaning that at faster speeds the Automator can run multiple commands per production tick.\n<br>\n<br>\nSome commands are more intensive on the game's internal code and may take longer than a single Automator tick in order\nto process on slower computers. In that case, the Automator will execute those commands and then attempt to \"catch up\"\nby executing the following commands as quickly as possible until it has run as many commands as it should have at a\nconstant execution speed.\n<br>\n<br>\n<b>Interactions with Offline Progress</b>\n<br>\n<br>\nLonger production ticks during Offline Progress simulation means that all of your resources are effectively given\nin large chunks instead of more continuously. This may have potentially adverse effects on your script's\nbehavior while offline, depending on how exactly your script depends on the game state to work properly.\nAdditionally, the PAUSE command may behave oddly due to it also being based on real time.\n`,\n    isUnlocked: () => Player.automatorUnlocked,\n    tags: [\"automation\", \"reality\", \"code\", \"script\", \"endgame\", \"lategame\"],\n    tab: \"automation/automator\"\n  }, {\n    name: \"Black Hole\",\n    info: () => `\nThe Black Hole is a feature which speeds up how fast the game runs, on a periodic cycle.\nThe game will run at normal speed for some amount of time, then have a burst of running extremely fast for a short\nperiod of time before going back to normal speed and repeating the cycle.\n<br>\n<br>\nIncreased game speed from Black Holes is much stronger than tickspeed because unlike tickspeed, it affects\n<i>everything equally</i>, including things which are only partially affected by tickspeed\n(eg. Infinity/Time Dimensions), things which are normally completely unaffected (eg. DT/TT generation),\nand effects which are boosted purely on time spent (eg. idle path IP/EP multipliers).\n<br>\n<br>\nWhile most features in the game are boosted by this increased game speed, there are some which remain unaffected.\nIn these cases, it will be specifically mentioned that a given time is stated as <i>real time</i> as opposed to\n<i>game time</i>. One such example is the set of Perks which automatically completes Eternity Challenges over time.\nOtherwise, it should be assumed from this point onward that all references to time are for <i>game time</i>.\nNote that this also includes situations where you may want to have a <i>lower</i> amount of time spent, like\nthe Reality Upgrade \"Replicative Rapidity\" for example.<br>\n<b>See 'What has changed' to know about how this works with this mod's speedup.</b>\n<br>\n<br>\nYou can buy upgrades for the Black Hole by using Reality Machines. There are three upgrades for the Black Hole:\n<br>\n<b>Interval</b> - How long the Black Hole is inactive between bursts,\nreduced by ${formatPercents(0.2)} per upgrade.\n<br>\n<b>Power</b> - How much faster the game runs during the temporary speed bursts,\nincreased by ${formatPercents(0.35)} per upgrade.\n<br>\n<b>Duration</b> - How long each speed burst lasts before going back to normal speed,\nincreased by ${formatPercents(0.3)} per upgrade.\n<br>\n<br>\n${formatInt(100)} days of <i>game time</i> after unlocking the Black Hole, you unlock the ability to purchase\na Reality Upgrade that allows you to have a second Black Hole.\nThe timer on the second Black Hole only advances when the first Black Hole is active. So, for example, if the first\nBlack Hole has a duration of ${formatInt(4)} minutes and the second has an interval of ${formatInt(8)} minutes, the\nsecond Black Hole will only activate once every two cycles of the first Black Hole regardless of how short the\nfirst Black Hole's interval is. Note that the timer shown in the in-game header takes account of this and shows\nthe actual time until the second Black Hole activates; in the Black Hole tab, you can see the amount of time with\nthe first Black Hole active needed for the second Black Hole to activate.\n<br>\n<br>\nWhen a Black Hole is active at least ${formatPercents(0.9999, 2)} of the time, it becomes permanently active.\nThis is tracked separately for the two Black Holes.\n<br>\n<br>\nWhile offline, Black Hole cycles will still advance normally and their active speed boosts will apply fully as if the\ngame were still open. Offline time simulates segments of inactive and active Black Holes with different tick lengths\nin order to reduce the negative effects of small tick count during active periods; the entry for \"Offline Progress\"\nhas been updated with more technical details.\n<br>\n<br>\nThe Black Holes can be paused, completely halting their interval/duration cycle. However, when unpausing them, it will\ntake ${BlackHoles.ACCELERATION_TIME} real-time seconds for them to go from inactive to their maximum boosted speed.\nThis acceleration time will still advance the cycle as if it were running at full speed; so\nwhile pausing gives some more control, it also ultimately results in some boosted time being lost.\n<br>\n<br>\nPausing and unpausing affects both Black Holes; they cannot be paused or unpaused independently. They can be paused\nautomatically ${BlackHoles.ACCELERATION_TIME} real-time seconds before activation by toggling the relevant setting on\nthe Black Hole tab.\n<br>\n<br>\n<b>Upgrade Cost Information:</b>\n<br>\n<b>Interval</b> - Base cost of ${formatInt(15)} RM and increase of ${formatX(3.5, 0, 1)} per upgrade.\n<br>\n<b>Power</b> - Base cost of ${formatInt(20)} RM and increase of ${formatX(2)} per upgrade.\n<br>\n<b>Duration</b> - Base cost of ${formatInt(10)} RM and increase of ${formatX(4)} per upgrade.\n<br>\n<b>Increased cost scaling:</b> Above ${format(1e30)} RM, the cost multiplier between purchases increases by an additive\n+${format(0.2, 0, 1)} per upgrade. Above ${format(Number.MAX_VALUE, 1)} RM, a new scaling occurs which ignores all the\nprevious behavior. From this point, all upgrades instead behave as if they had an initial cost of ${format(DC.E310)}\nand further upgrade costs increase by ${format(1e6)}, ${format(1e7)}, and so on (${formatX(10)} between upgrades).\n<br>\n<b>Black Hole 2:</b> All upgrades have an initial cost ${formatX(1000)} higher than the first Black Hole,\nbut the same cost multipliers.\n<br>\n<br>\n<b>Hotkey: B</b> will pause/unpause the Black Holes.\n`,\n    isUnlocked: () => player.blackHole[0].unlocked,\n    tags: [\"reality\", \"time\", \"speed\", \"duration\", \"interval\", \"rm\", \"endgame\", \"lategame\"],\n    tab: \"reality/hole\"\n  }, {\n    name: \"Celestials\",\n    info: () => `\nOnce you get all of the Reality Upgrades, the first Celestial is unlocked. This opens up a new tab for Celestials, next\nto the Reality tab. The first subtab under the Celestials tab shows a map called \"Celestial Navigation\" which updates as\nyou progress through the game. Only part of the map will be visible when first unlocked, but new content will gradually\nbe revealed as you approach it, generally with a visual indication of your progress towards the next step.\n<br>\n<br>\nEach Celestial has unique mechanics and upgrades, and you need to defeat all seven to beat the game.\nUnlocking or defeating a Celestial has different conditions depending on the Celestial's mechanics.\n<br>\n<br>\nAll Celestials have their own Celestial Reality, but how the Reality is relevant to each Celestial and the rest of\nthe game will depend on the Celestial.\n<br>\n<br>\nCelestials are timeless entities. Unless otherwise stated, any new mechanics introduced by Celestials are not affected\nby game speed multipliers and instead refer specifically to real time instead of game time.\n`,\n    isUnlocked: () => Teresa.isUnlocked,\n    tags: [\"reality\", \"challenges\", \"endgame\", \"lategame\"],\n    tab: \"celestials/celestial-navigation\"\n  }, {\n    name: \"Teresa, Celestial of Reality\",\n    alias: \"Teresa\",\n    info: () => `\nTeresa is the first Celestial. They are unlocked by Achievement 147, which requires obtaining all Reality Upgrades.\n<br>\n<br>\nOn the main screen, there is a bar with a button above it that says \"Pour RM\". This allows you to put your RM into the\ncontainer for a Reality Machine multiplier. RM which has been poured into the container cannot be retrieved.\nWhen you reach ${format(TeresaUnlocks.run.price)} RM inside of the container, you unlock Teresa's Reality.\n<br>\n<br>\nWhen you complete Teresa's Reality,\n${Teresa.runCompleted ? \"your Glyph Sacrifice is multiplied based on the amount of antimatter gained during the run\" : \"<div style='color: var(--color-bad);'>(complete Teresa's Reality to see the reward)</div>\"}.\nCompleting Teresa's Reality is only part of the story; you need to keep pouring RM in order to progress. Once\nyou are at ${format(TeresaUnlocks.effarig.price)} RM in the container, you will unlock the next Celestial.\n<br>\n<br>\n${Teresa.runCompleted ? \"Teresa's Reality can be entered again after completing it, and its reward will become stronger if you \" + \"reach a higher amount of antimatter on this repeat run.\" : \"(More information available - complete Teresa's Reality)\"}\n`,\n    isUnlocked: () => Teresa.isUnlocked,\n    tags: [\"rm\", \"endgame\", \"lategame\", \"perks\", \"sacrifice\", \"boo\", \"ghost\", \"celestial\"],\n    tab: \"celestials/teresa\"\n  }, {\n    name: \"Effarig, Celestial of Ancient Relics\",\n    alias: \"Effarig\",\n    info: () => `\nEffarig is the second Celestial you encounter.\nThey are unlocked by pouring at least ${format(TeresaUnlocks.effarig.price)} RM into Teresa's container.\n<br>\n<br>\nEffarig introduces a currency called Relic Shards, which are obtained by using different kinds of Glyph effects during\na Reality. The number of distinct effects active during the Reality very strongly affects Relic Shard gain, and EP\naffects it to a much lesser degree. Relic Shards are the currency for Effarig unlocks, and will be gained from every\nReality from now on.\n<br>\n<br>\nUsing Relic Shards, you can purchase multiple upgrades (see \"Advanced Glyph Mechanics\") which improve your Glyphs and\nallow you to filter them based on their effects and rarity when you are doing fully automated Realities.\n<br>\n<br>\nEffarig's final unlock is their own Reality at ${format(GameDatabase.celestials.effarig.unlocks.run.cost)} Relic\nShards.\n${EffarigUnlock.run.isUnlocked ? \"Their Reality is divided into three layers: Infinity, Eternity, and Reality. You must complete each layer \" + \"before getting access to the next one. Completing Effarig's Eternity unlocks the next Celestial.\" : \"<div style='color: var(--color-effarig--base);'>(unlock Effarig's Reality to see details about it)</div>\"}\n<br>\n<br>\nCompleting Effarig's Reality unlocks\n${EffarigUnlock.reality.isUnlocked ? `a new Glyph type, <span style='color: var(--color-effarig--base);'>Effarig</span> Glyphs. Effarig Glyphs have\n      ${formatInt(7)} different possible effects, which you can view in the Glyph filter settings. You can only\n      have one Effarig Glyph equipped at a time.\n${Ra.unlocks.glyphEffectCount.canBeApplied ? `Due to having Effarig at level 10 within Ra, there are no longer any restrictions on effects that appear on\n      Effarig Glyphs. Any given Effarig Glyph can now have up to all ${formatInt(7)} effects at the same time.` : `Effarig Glyphs can only have at most ${formatInt(4)} effects, and the RM multiplier and Glyph instability\n      effects cannot appear together on the same Glyph.`}` : \"<span style='color: var(--color-effarig--base);'>(complete Effarig's Reality to see reward details)</span>\"}\n<br>\n<br>\n`,\n    isUnlocked: () => TeresaUnlocks.effarig.canBeApplied,\n    tags: [\"glyph\", \"sacrifice\", \"shards\", \"reality\", \"spectralflame\", \"lategame\", \"endgame\", \"celestial\"],\n    tab: \"celestials/effarig\"\n  }, {\n    name: \"Advanced Glyph Mechanics\",\n    info: () => `\nGlyph level Adjustment is purchasable for ${format(GameDatabase.celestials.effarig.unlocks.adjuster.cost)} Relic\nShards. This allows you to set weights for each resource (EP, DT, Replicanti, Eternities), in how much they affect the\nlevel of Glyphs gained on Reality.\n<br>\n<br>\nAutomatic Glyph Filtering is purchasable for ${format(GameDatabase.celestials.effarig.unlocks.glyphFilter.cost)}\nRelic Shards. This system uses one of many methods to assign a score to your Glyph choices, and then picks the choice\nwith the highest score. After picking this Glyph, it checks the score against a threshold and either keeps it if the\nscore is above the threshold, or sacrifices it instead. There are three basic modes:\n<br>\n<b>Lowest total sacrifice:</b> Glyphs are given a score based on how much sacrifice value you have of that\nparticular Glyph's type. Glyphs of the type you have the least sacrifice value in will have the highest score.\nThis mode does not have a threshold and always sacrifices your Glyphs.\n<br>\n<b>Number of effects:</b> Glyphs are given a score equal to the number of effects they have, and when multiple\nGlyphs have the same effect count, Glyphs with higher rarity will be picked. The threshold they are\ncompared to is specified by your input in the text box.\n<br>\n<b>Rarity Threshold Mode:</b> Glyphs are given a score equal to their rarity percent. The comparison threshold\ncan be set individually per Glyph type.\n<br>\n<br>\nAdditionally, there are two more advanced modes with some additional flexibility. You may not need these initially, but\nthey can come in handy later on:\n<br>\n<b>Specified Effect Mode:</b> Glyphs are given a score equal to their rarity and checked against the rarity threshold\nyou specify, but this score is modified based on your inputs for effects. The Glyph will be checked for having a minimum\nnumber of effects and having all of the effects you choose, and its score is lowered by ${formatInt(200)} for every\nmissing effect. This guarantees that any Glyph that does not have the effects you want will be below the threshold. You\ncan forbid specific Glyph <i>types</i> by setting impossible conditions (eg. at least ${formatInt(6)} effects on a Power\nGlyph will prevent Power Glyphs from being selected).\n<br>\n<b>Effect Score Mode:</b> The score of a Glyph is calculated from its rarity plus the score of each effect it has,\nand you can set the threshold and values of each effect individually. Some possible ways this could be used:\n<br>\n- Giving a weaker effect a value of ${formatInt(5)} allows you to keep Glyphs without that effect as long as they are\nrarer to compensate for being weaker\n<br>\n- Assigning a large negative score to a certain effect you do <i>not</i> want will forbid Glyphs with that effect from\nbeing selected; this can be useful for effect testing and other more limited situations\n<br>\n- Setting an impossible condition (eg. a threshold score of ${formatInt(999)} and all effects worth ${formatInt(0)})\nwill let you forbid entire types like Specified Effect Mode as well\n<br>\n<br>\nThe Glyph Filter mode is a global setting which applies to all Glyph types at once; for example, you cannot filter\npower Glyphs with \"Rarity Threshold\" and time Glyphs with \"Specified Effect\". Selecting one mode will require\nyou to configure every Glyph type within its settings for proper filtering. Each filter mode has its own settings\nwhich will be kept if you switch to another mode.\n<br>\n<br>\nUnlocking the Glyph Filter also lets you use the highest Glyph score amongst your upcoming choices as a comparable\nCurrency in the Automator. Additionally, you can make your Filter force an immediate Reality (once available) if\nnone of the upcoming choices will be kept by the filter, as long as the Reality autobuyer is on.\n<br>\n<br>\nGlyph Presets are purchasable for ${format(GameDatabase.celestials.effarig.unlocks.setSaves.cost)} Relic\nShards. This unlocks ${formatInt(7)} slots that allow you to save your currently equipped Glyphs into sets.\nYou cannot overwrite a set, you must delete it first. When you load a set, each Glyph in it is found and equipped.\nIf any are not found, it will display a warning, but equip all the rest regardless.\nWhen loading a set, you can be Level and/or Rarity sensitive. The best Glyph from the possible Glyphs\nwill always be the one equipped. Just like other groups of circular Glyphs, you can click any of them\nin order to bring up a modal summarizing the whole set of Glyphs.\n`,\n    isUnlocked: () => EffarigUnlock.adjuster.isUnlocked,\n    tags: [\"glyph\", \"weight\", \"adjustment\", \"sacrifice\", \"filter\", \"threshold\", \"set\", \"save\", \"reality\", \"lategame\", \"endgame\"],\n    tab: \"celestials/glyphfilter\"\n  }, {\n    name: \"The Nameless Ones, Celestial of Time\",\n    alias: \"Nameless Ones\",\n    info: () => `\nThe Nameless Ones are the third Celestial, unlocked by completing Effarig's Eternity.\n<br>\n<br>\nWhen unlocking The Nameless Ones, you immediately gain access to two new mechanics related to time. You can store\n\"game time\" by charging your Black Hole, and you can store \"real time\" by intentionally halting your production.\nStored game time is also used as a currency for purchasing unlocks from The Nameless Ones.\n<br>\n<br>\nCharging your Black Hole gives you stored game time, which it does at the expense of setting your game speed to\n${formatInt(1)}. The game is in effect using your increased game speed in order to store game time itself. Its\nmain use is to discharge the Black Hole, which takes uses your stored game time to skip forward in time by a duration\nequal to the game time stored. This is different than regular game speed multipliers in that discharging is not subject\nto any modifiers to game speed when it is used, only when it is stored.\n<br>\n<br>\nStoring real time completely stops all production, effectively pausing your game. For every real-time second that\npasses, you gain stored real time (modified by some efficiency factor). You can use stored real time in order to\namplify a Reality in the Glyphs tab. When you complete the Reality, this uses all of your stored real time at once\nin order to attempt to repeat that\nexact Reality over and over, giving you all the rewards you would normally get from the repetitions. For example, if\nyou have ${formatInt(50)} minutes stored and amplify a Reality which has lasted ${formatInt(10)} minutes and would\ngive ${format(DC.E30)} RM and ${format(DC.E12)} Relic Shards, the amplified Reality will give you ${format(5e30)} RM,\n${format(5e12)} Relic Shards, ${formatInt(5)} Glyphs (subject to your filtering settings),\nand ${formatInt(5)} Perk Points.\n<br>\n<br>\nHowever, if your Reality has lasted for less than ${formatInt(1)} second, the amplification factor is capped by the\namount of seconds stored. For example, if you have ${formatInt(1000)} seconds stored and amplify a Reality which has\nlasted ${format(0.2, 2, 2)} seconds, you will use ${formatInt(200)} seconds to simulate ${formatInt(1000)} Realities.\n<br>\n<br>\nYou can toggle a setting to automatically store offline time as stored real time.\n<br>\n<br>\nTheir first unlock costs ${format(TimeSpan.fromMilliseconds(ENSLAVED_UNLOCKS.FREE_TICKSPEED_SOFTCAP.price).totalYears)}\nyears of stored game time. It increases the softcap to Tickspeed Upgrades gained from Time Dimensions\n(the point at which their cost starts increasing faster)\nby ${format(1e5)} Tickspeed Upgrades.\n<br>\n<br>\nAt ${format(TimeSpan.fromMilliseconds(ENSLAVED_UNLOCKS.RUN.price).totalYears)} years of stored game time, you are able\nto finally unlock their Reality. The reward for completing The Nameless Ones' Reality is\n${Enslaved.isCompleted ? \"unlocking Tesseracts, which have their own How To Play entry.\" : \"<span style='color: var(--color-bad);'>(complete The Nameless Ones' Reality to see reward details)</span>\"}\n<br>\n<br>\nThe Nameless Ones will not directly unlock the next Celestial.\n`,\n    isUnlocked: () => EffarigUnlock.eternity.isUnlocked,\n    tags: [\"reality\", \"time\", \"blackhole\", \"lategame\", \"endgame\", \"testers\", \"celestial\", ...credits.people.map(p => p.name)],\n    tab: \"celestials/enslaved\"\n  }, {\n    name: \"Tesseracts\",\n    info: () => `\nTesseracts are a new resource you unlock for completing The Nameless Ones' Reality.\n<br>\n<br>\nInfinity Dimensions are normally capped at ${format(InfinityDimensions.HARDCAP_PURCHASES)} total purchases,\nwhich limits how large their multipliers can grow since eventually you cannot upgrade them any more.\nTesseracts allow you to raise this cap by spending Infinity Points.\n<br>\n<br>\nThe cost of Tesseracts increases super-exponentially, but each successive Tesseract is significantly stronger than\nthe last in order to make up for that. Tesseract count is never reset, meaning that once purchased, you do not need\nto reach the IP cost again in order to take advantage of the raised cap in later Realities.\n<br>\n<br>\nYou can see additional information about your current Tesseract count and the cost of the next one in the Infinity\nDimensions tab. Additionally, your current Infinity Points will now also show a percentage towards the next Tesseract.\nIf affordable, the Infinity button itself will visually change and bring you to the Infinity Dimension tab when clicked.\n`,\n    isUnlocked: () => Enslaved.isCompleted,\n    tags: [\"reality\", \"lategame\", \"endgame\", \"tesseract\", \"id\", \"celestial\"],\n    tab: \"celestials/tesseract\"\n  }, {\n    name: \"V, Celestial of Achievements\",\n    alias: \"V\",\n    info: () => `\nV is a special Celestial in the sense that they are not unlocked by another Celestial,\nbut is instead unlocked by completing Achievement ID 151 (row ${formatInt(15)}, column ${formatInt(1)},\n\"You really didn't need it anyway\"), which requires you to get ${formatInt(800)} Antimatter Galaxies\nwithout buying 8th Antimatter Dimensions in your current Infinity.\n<br>\n<br>\nAfter the subtab is unlocked from the Achievement, you are met with another set of requirements to fully unlock V.\nYou must have completed ${formatInt(GameDatabase.celestials.v.mainUnlock.realities.requirement)} Realities and have\n${format(GameDatabase.celestials.v.mainUnlock.realityMachines.requirement)} unspent RM.\nAdditionally you need to reach ${format(GameDatabase.celestials.v.mainUnlock.eternities.requirement)} Eternities,\n${format(GameDatabase.celestials.v.mainUnlock.infinities.requirement)} Infinities,\n${format(GameDatabase.celestials.v.mainUnlock.dilatedTime.requirement)} Dilated Time, and\n${format(GameDatabase.celestials.v.mainUnlock.replicanti.requirement)} Replicanti, all in the same Reality.\n<br>\n<br>\nWhen you meet all of those requirements, you will be able to access V's Reality.\n${VUnlocks.vAchievementUnlock.isUnlocked ? `However, completing the Reality itself is only the beginning. V has six different requirements, each of which\n      require you to make a certain amount of progress within V's Reality. Completing a requirement rewards you with a\n      V-Achievement.\n      V-Achievements are permanent and persist after exiting V's Reality, and do not all need to be done simultaneously.\n      <br>\n      <br>\n      After completing the requirement, the V-Achievement threshold then increases and can be completed again\n      if you can reach the new goal.  You can complete each category of V-Achievement up to six times.\n      Completed V-Achievements do two things:\n      <br>\n      - Upon reaching certain totals of V-Achievements, you automatically unlock upgrades on the V tab without needing\n      to spend any resources.\n      <br>\n      - Each V-Achievement also gives you one Space Theorem.\n      <br>\n      <br>\n      The goal reduction unlocked by having ${formatInt(2)} V-Achievements allows you to make some V-Achievement\n      requirements easier to complete by spending Perk Points, down to a limit of whatever the easiest tier requires.\n      The cost of reducing a goal does not increase as it is used, and will also reduce future tiers as well.\n      <br>\n      <br>\n      Space Theorems allow you to purchase Time Studies which are normally forbidden, such as multiple paths in the\n      Pace Split after the improved IP formula, or both Time Studies within a dark/light pair near the bottom.\n      Like Time Theorems, they are freely given back every time you respec your studies.\n      With enough Space Theorems you will eventually be able to purchase every single Time Study at once!\n      <br>\n      <br>\n      Reaching ${formatInt(36)} V-Achievements (and therefore completing all of V's Achievements) unlocks the next\n      Celestial.` : \"<span style='color: var(--color-bad);'>(unlock V's Reality to see further details)</span>\"}\n`,\n    isUnlocked: () => Achievement(151).isUnlocked,\n    tags: [\"reality\", \"lategame\", \"endgame\", \"girlfriend\", \"challenges\", \"achievement\", \"space\", \"theorems\", \"study\", \"triad\", \"celestial\"],\n    tab: \"celestials/v\"\n  }, {\n    name: \"Ra, Celestial of the Forgotten\",\n    alias: \"Ra\",\n    info: () => `\nRa is the fifth Celestial, unlocked by fully completing all of V's Achievements. They use their memories in order to\nbring back positive effects from previous Celestials in a stronger way. Over time, you will unlock the previous four\nCelestials <i>within</i> Ra, with each Celestial offering additional upgrades related to their original themes.\n<br>\n<br>\nEach previous Celestial within Ra gains levels by using memories, which are generated passively over time from\nMemory Chunks. Memory Chunks can only be gained by entering Ra's Reality, but inside of the Reality Chunks will\nbe generated passively based on certain resource totals. If you are storing real time, you will not gain any\nChunks inside of Ra's Reality, but Memories will still be generated normally. Having a total of\n${formatInt(Ra.remembrance.requiredLevels)} levels across all Celestials unlocks Remembrance,\nwhich allows you to choose a particular Celestial to gain more chunks while inside of Ra's Reality.\n<br>\n<br>\nMemories can be spent on three things - an increase to Memory Chunk gain, an increase to Memory gain, and leveling up\nthe Celestial. You start Ra with only Teresa unlocked and each successive Celestial is unlocked by reaching level\n${formatInt(8)} with the previous Celestial. Levels are capped at ${formatInt(25)}.\n<br>\n<br>\nTeresa unlocks the ability to charge your Infinity Upgrades, making them much stronger. They also\nimprove your Glyph effects once you reach certain thresholds in Glyph sacrifice value.\n<br>\n<br>\nAt level ${formatInt(2)}, Effarig unlocks\n${Ra.unlocks.effarigUnlock.canBeApplied ? \"a new mechanic called Glyph Alchemy and later on also makes Effarig Glyphs stronger while gradually removing \" + \"almost all random elements of Glyph generation. Glyph Alchemy also has its own How To Play entry.\" : \"<span style='color: var(--color-bad);'>(unlock Effarig within Ra to see unlock details)</span>\"}\n<br>\n<br>\nThe Nameless Ones unlocks\n${Ra.unlocks.enslavedUnlock.canBeApplied ? \"additional mechanics related to charging the Black Holes, as well as making them significantly stronger.\" : \"<span style='color: var(--color-bad);'>(unlock The Nameless Ones within Ra to see unlock details)</span>\"}\n<br>\n<br>\nV unlocks\n${Ra.unlocks.vUnlock.canBeApplied ? \"Triad Studies, which are new studies near the bottom of the tree which cost Space Theorems. Each Triad Study \" + \"requires you to also have the three nearby studies as well in order to purchase them. They also unlock a \" + \"smaller set of more difficult V-Achievements to complete for additional Space Theorems.\" : \"<span style='color: var(--color-bad);'>(unlock V within Ra to see unlock details)</span>\"}\n<br>\n<br>\nRa will not directly unlock the next Celestial.`,\n    isUnlocked: () => VUnlocks.raUnlock.isUnlocked,\n    tags: [\"reality\", \"memories\", \"razenpok\", \"levels\", \"glyphs\", \"lategame\", \"endgame\", \"effarig\", \"teresa\", \"nameless\", \"v\", \"celestial\"],\n    tab: \"celestials/ra\"\n  }, {\n    name: \"Glyph Alchemy Resources\",\n    info: () => `\nGlyph Alchemy is a mechanic unlocked by reaching Effarig level ${formatInt(2)} in Ra. It unlocks the ability to\nuse up your Glyphs by refining them into Alchemy Resources associated with their type. You can refine Glyphs by\nsetting your Sacrifice Type to something other than \"Always Sacrifice\" in the Glyphs tab, and doing the normal\nprocedure for a sacrifice.\nEach Alchemy Resource has a unique effect, which you can view on the Alchemy tab.\n<br>\n<br>\nIn addition to all their other properties, Glyphs now have a <i>refinement value</i> which determines how much of\nits associated Alchemy Resource it is worth. This value is based on the cube of the Glyph's level, scaled\nso that level ${formatInt(10000)} Glyphs correspond to ${formatInt(10000)} Alchemy Resources. A single Glyph itself,\nhowever, only gives ${formatPercents(GlyphSacrificeHandler.glyphRefinementEfficiency)} of this value when refined.\nThese are values for ${formatPercents(1)} rarity Glyphs; Glyphs of lower rarity still have the same cap but give\nproportionally less resources. For example, a ${formatPercents(0.5)} rarity Glyph will give only half as much.\n<br>\n<br>\nAlchemy Resources cannot be gained indefinitely; there is a per-resource cap which is based on the highest refinement\nvalue of all the Glyphs of that type you have refined. For example, if the highest level Time Glyph you have refined\nis level ${formatInt(8000)} (refinement value: ${formatInt(GlyphSacrificeHandler.levelRefinementValue(8000))}), then no\nmatter how many Time Glyphs you refine, you can never have more than\n${formatInt(GlyphSacrificeHandler.levelRefinementValue(8000))} of the Time resource until you refine another Time Glyph\nwith a higher refinement value.\n`,\n    isUnlocked: () => Ra.unlocks.unlockGlyphAlchemy.canBeApplied,\n    // Oh god I'm so sorry this is so many words\n    tags: [\"reality\", \"lategame\", \"endgame\", \"ra\", \"effarig\", \"alchemy\", \"power\", \"infinity\", \"time\", \"replication\", \"dilation\", \"cardinality\", \"eternity\", \"dimensionality\", \"inflation\", \"alternation\", \"synergism\", \"momentum\", \"decoherence\", \"force\", \"exponential\", \"uncountability\", \"boundless\", \"unpredictability\", \"multiversal\", \"reaction\"],\n    tab: \"reality/alchemy\"\n  }, {\n    name: \"Glyph Alchemy Reactions\",\n    info: () => `\nAlchemy Resources can be combined together in certain combinations in order to create new compound resources, which\nare unlocked at certain Effarig levels. Resources are combined once per Reality, unaffected by real time\namplification. Reactions have a higher yield and thus happen faster when your reagent amounts are higher. The cap for\ncompound resources is equal to the lowest cap amongst all of its reagents. In order for a reaction to occur, the\ncurrent amount of all reagents must be greater than the current amount of the produced resource.\n<br>\n<br>\nReaction speed is proportional to the amount of usable reagents for the reaction, but only reagent amounts above the\nproduct amount are eligible for being used. For example, if you have ${formatInt(10000)} of all reagents and\n${formatInt(7500)} of the product, only ${formatInt(2500)} of the reagents are used in calculating the reaction speed.\nIf you instead had ${formatInt(0)} of the product, <i>all</i> of the reagent is available for the reaction and it will\nproduce ${formatX(4)} faster. Lastly, if you had ${formatInt(10000)} of the product, then none of the reagent can be\nused and the reaction will not run at all.\n<br>\n<br>\nTo activate or deactivate a reaction, click the circle corresponding to the reaction's product. When the reaction can\nbe applied, moving lines will be shown from all reagents to the product. If a connection is a solid line, that means\nthat the reaction cannot proceed due to not having enough of that reagent to get more of the product due to its cap.\n`,\n    isUnlocked: () => Ra.unlocks.unlockGlyphAlchemy.canBeApplied,\n    tags: [\"reality\", \"lategame\", \"endgame\", \"ra\", \"effarig\", \"alchemy\", \"power\", \"infinity\", \"time\", \"replication\", \"dilation\", \"cardinality\", \"eternity\", \"dimensionality\", \"inflation\", \"alternation\", \"synergism\", \"momentum\", \"decoherence\", \"force\", \"exponential\", \"uncountability\", \"boundless\", \"unpredictability\", \"multiversal\", \"reaction\"],\n    tab: \"reality/alchemy\"\n  }, {\n    name: \"Imaginary Machines\",\n    info: () => `\nOnce you are able to gain at least ${format(MachineHandler.baseRMCap)} Reality Machines in a single Reality, you\nunlock the ability to gain a new resource called Imaginary Machines. Reality Machines will also become hardcapped\nat ${format(MachineHandler.baseRMCap)}; you will be unable to gain any more past this limit.\n<br>\n<br>\nAdditionally you unlock the Imaginary Upgrades tab, which contains a set of upgrades similar to the Reality Upgrades -\neach upgrade has a condition you must fulfill to unlock it and an Imaginary Machine cost to actually purchase it.\nThe first two rows of upgrades can be repeatedly bought, while the other three are one-time upgrades.\n<br>\n<br>\nYour iM amount is affected by two things:\n<br>\n<b>iM Cap</b> - There is a maximum amount of iM you can ever have, which is based on the highest RM amount you would\nhave been able to get if there were no RM cap. This is updated on a continual basis and thus will immediately increase\nif you ever surpass your previous highest uncapped RM amount.\n<br>\n<b>Current iM</b> - Over time your current iM will passively rise towards your iM cap, in a way that slows down\nexponentially as you approach the cap. By default iM slows down at a rate where the amount you are <i>missing</i>\n(ie. your cap minus your current amount) is cut in half every minute. This growth rate is unaffected by any\nmodifiers to game speed.\n<br>\n<br>\nImaginary Machine upgrades will unlock the final two Celestials.\n`,\n    isUnlocked: () => MachineHandler.isIMUnlocked,\n    tags: [\"imaginary\", \"machines\", \"reality\", \"lategame\", \"endgame\"],\n    tab: \"reality/imag_upgrades\"\n  }, {\n    name: \"Lai'tela, Celestial of Dimensions\",\n    alias: \"Lai'tela\",\n    info: () => `\nLai'tela is the sixth Celestial, unlocked by purchasing the appropriate Imaginary Upgrade for\n${format(ImaginaryUpgrade(15).cost)} iM.\n<br>\n<br>\nLai'tela gives a new currency called Dark Matter, which provides a multiplier to Continuum's effect\nbased on the highest amount of Dark Matter you have ever had. Dark Matter is produced by\nDark Matter Dimensions, in a similar cascading way to all other types of dimensions in the game. Unlike other\ndimensions, there are only four Dark Matter Dimensions rather than eight. You start with the first one unlocked\nimmediately and the higher ones are unlocked via Imaginary Upgrades. When unlocking dimensions, you are given\n${formatInt(1)} of the dimension and cannot gain more without having it produced from the next tier up.\n<br>\n<br>\nEach Dark Matter Dimension, after a certain interval of time, generates two things: Dark Matter or the next lower\nDark Matter Dimension and another resource called Dark Energy. Dark Matter and Dark Matter Dimension production\nper interval is equal to the product of your Dark Matter multiplier and the number of dimensions you have, while\nDark Energy production is independent of your dimension amount. Dark Energy is used to produce Singularities, which\nhave their own How To Play entry.\n<br>\n<br>\nDark Matter Dimensions can have their intervals upgraded down to a minimum of ${formatInt(10)}ms, at which point\nyou cannot upgrade the interval any further. You can choose to ascend Dark Matter Dimensions which reach\nthat point, which initially multiplies Dark Matter gain by ${formatInt(POWER_DM_PER_ASCENSION)} and Dark Energy by\n${formatInt(POWER_DE_PER_ASCENSION)}. The interval gets multiplied by ${formatInt(1200)}, but can be upgraded once\nagain. Reaching ${formatInt(10)}ms again allows you to ascend again if you choose to.\n<br>\n<br>\nAn Imaginary Upgrade allows you to unlock a prestige called Annihilation. Annihilation resets your Dark Matter\nand Dark Matter Dimensions, but adds to a permanent multiplier to Dark Matter that applies to all Dark Matter\nDimensions. You can Annihilate multiple times; the additions to the multiplier stack additively, and there is\nno need to Annihilate for a greater addition each time. You must have at least\n${format(Laitela.annihilationDMRequirement)} Dark Matter in order to Annihilate.\n<br>\n<br>\nLai'tela has a Reality which gives a multiplier to Dark Matter Dimensions' Dark Matter power based on how well you\ndo in the Reality. Whenever you complete the Reality in under ${formatInt(30)} seconds, your highest available\nDimension will be permanently disabled during further attempts of the Reality. Disabling all of your dimensions by\ncompleting the Reality in under ${formatInt(30)} seconds eight times will also give you a ${formatX(8)} multiplier\nto Dark Energy gain.\n<br>\n<br>\nLai'tela will not directly unlock the next Celestial.\n`,\n    isUnlocked: () => Laitela.isUnlocked,\n    tags: [\"omsi\", \"reality\", \"dark\", \"matter\", \"dimensions\", \"lategame\", \"endgame\", \"ascend\", \"celestial\"],\n    tab: \"celestials/laitela\"\n  }, {\n    name: \"Continuum\",\n    info: () => `\nWhen you unlock Lai'tela, your Antimatter Dimensions and Tickspeed Upgrades switch to a new mode of production\ncalled Continuum, which gives the same effect as previously but allows for buying partial Dimension or\nTickspeed Upgrades. These fractional purchases are given for free without spending your antimatter and will provide\nan appropriate portion of their multiplier.\n<br>\n<br>\nThe purchase buttons for Antimatter Dimensions and Tickspeed Upgrades become modified to display the number of upgrades\nyou would be able to purchase if Continuum was inactive, and the purchase count is scaled smoothly with antimatter.\nFor example, having ${format(2e7)} antimatter will give you a Continuum value of ${format(5.3, 0, 1)} for tickspeed\n(initial cost of ${format(1e3)} and increase of ${formatX(10)}) since you can purchase it ${formatInt(5)} times and\nare roughly ${formatPercents(0.3)} of the way to the next. Tickspeed Continuum in this case will then\ngive a production boost equal to (upgrade multiplier)<sup>${format(5.3, 0, 1)}</sup>.\n<br>\n<br>\nSome upgrades will multiply Continuum value directly, which gives a production boost without affecting the cost\nscaling. However, these upgrades will not function if Continuum is disabled on the Autobuyers page, which may result\nin a loss of production if disabled. Continuum makes your autobuyers for Antimatter Dimensions and Tickspeed obsolete,\nso all the related autobuyer settings for these autobuyers are now hidden on that tab as long as Continuum is active.\n`,\n    // Apparently continuumUnlocked is really important in a lot of places and if we keep it unlocked\n    // Things break, so we check for the iMU instead.\n    isUnlocked: () => ImaginaryUpgrade(15).isBought,\n    tags: [\"continuum\", \"purchase\", \"reality\", \"lategame\", \"endgame\"],\n    tab: \"\"\n  }, {\n    name: \"Singularities\",\n    info: () => `\nSingularities are a new resource which you can obtain using features within Lai'tela.\n<br>\n<br>\nIn order to obtain Singularities, you need to reach ${format(200)} Dark Energy. When you do, you get the option to\ncondense all your Dark Energy into a Singularity, resetting it back to zero. Any extra Dark Energy above this amount\ndo not carry over, and is thus wasted. Note that only Dark Energy is reset, the status of your Dark Matter and its\ndimensions stays the same when condensing Singularities.\n<br>\n<br>\nOnce you reach ${formatInt(10)} Singularities, you can freely increase or decrease the Dark Energy requirement to\ncondense Singularities by a factor of ${formatInt(10)} (with a minimum of ${format(200)}). This increases or decreases\nthe number of Singularities gained from resetting at the cap by <i>more than</i> a factor of ${formatInt(10)}, making\nhigher caps worth more if you are willing to wait.\n<br>\n<br>\nThe purpose of Singularities is to unlock Singularity Milestones, which act similarly to Eternity Milestones. Unlocking\nthese milestones simply requires you to reach the total number of Singularities specified; Singularities are not spent.\nThere are three types of milestones - one-time milestones, milestones repeatable a limited number of times, and\nmilestones which can be repeated indefinitely.\n<br>\n<br>\nIndependently of the milestone type, milestones also have an icon indicating what kind of upgrade they generally give:\n<br>\n<b>ᛝ</b> These milestones help mechanics specific to Lai'tela\n<br>\n<i class=\"fas fa-arrows-alt\"></i> These milestones let a resource in Lai'tela affect the rest of the game\n<br>\n<i class=\"fas fa-compress-arrows-alt\"></i> These milestones improve Lai'tela based on something outside of Lai'tela\n`,\n    isUnlocked: () => Laitela.isUnlocked,\n    tags: [\"reality\", \"lategame\", \"endgame\", \"laitela\", \"dark\"],\n    tab: \"\"\n  }, {\n    name: \"Pelle, Celestial of Antimatter\",\n    alias: \"Pelle\",\n    info: () => `\nWhen you purchase the last Imaginary Upgrade and unlock Pelle, you unlock their tab, where you can find a button to\n\"Doom your Reality\". In order to Doom your Reality, you must have completed all ${formatInt(17)} rows of Achievements\navailable to you at this point, and attained ${formatInt(25000)} of each Alchemy Resource.\n<br>\n<br>\n${Pelle.isDoomed ? `Dooming your Reality will start a new <b>Doomed Reality</b>, resetting almost the entire game up to\n      Reality, not giving you any rewards from your progress in your current Reality.\n      <br>\n      <br>\n      When you enter the Doomed Reality, you keep all values under the General and Reality headers in the Statistics\n      tab and all of your best Challenge times. Inside Doomed Realities, multiple upgrades, Time Studies, Challenge and\n      Celestial rewards, Perks, and other game mechanics are disabled or grant no reward.\n      You can view the \"Show effects in Doomed Reality\" in Pelle tab for further information.\n      <br>\n      <br>\n      Remnants are a new currency gained on Armageddon resets. Remnant gain is based on your best ever antimatter,\n      Infinity Points, and Eternity Points across all Doomed Realities. Remnants produce Reality Shards which can be\n      spent on Pelle Upgrades.\n      <br>\n      <br>\n      Pelle Upgrades can be divided into two categories. The five upgrades in the first row can be repeatedly bought,\n      but eventually reach a cap. They grant boosts to different aspects of the game, making progression within Doomed\n      Realities easier.\n      <br>\n      <br>\n      The other upgrades in the bottom rows offer automation and QoL (quality of life) improvements. Everything unlocked\n      from these upgrades cannot be unlocked by their usual methods in the game; for example, none of the Normal\n      Challenges will unlock autobuyers if completed since they are all locked behind Pelle Upgrades instead.\n      You can toggle a button above upgrade to hide bought upgrades or click the\n      <i class=\"fas fa-compress-arrows-alt\"></i>-icon to collapse and hide the entire panel.\n      <br>\n      <br>\n      <b>Hotkey: Z</b> will try to perform an Armageddon reset.` : \"<span style='color: var(--color-bad);'><b>You must Doom your Reality to read the rest of this entry.</b></span>\"}\n`,\n    isUnlocked: () => Pelle.isUnlocked,\n    tags: [\"reality\", \"antimatter\", \"lategame\", \"endgame\", \"final\", \"hevipelle\", \"celestial\", \"doom\"],\n    tab: \"celestials/pelle\"\n  }, {\n    name: \"Pelle Strikes\",\n    info: () => `\nPelle Strikes are encountered on different events in the Doomed Reality. You have encountered the first Pelle Strike by\nreaching Infinity for the first time within a Doomed Reality. More Strikes eventually occur by further progression.\nEach Pelle Strike adds a nerf to a specific aspect of the game, which can be seen by clicking on the Strike name.\nEach Pelle Strike also unlocks a Rift bar.\n<br>\n<br>\nRift bars can be filled by clicking them to toggle between \"Idle\" and \"Filling\", although only two Rifts can be\n\"Filling\" at any given time. When active, Rifts consume ${formatInt(3)}% of a Rift-specific resource per second. Each\nRift offers a Rift-specific effect which are based on the total amount filled.\n${PelleStrikes.eternity.hasStrike ? `An exception for this is Decay/Collapse/Disarray, whose effect gets capped once you have drained a total of\n    ${formatPostBreak(DC.E2000)} Replicanti.` : \"\"}\nIn addition, each Rift offers three milestone rewards for filling them up to a certain percentage.\n`,\n    isUnlocked: () => PelleStrikes.infinity.hasStrike,\n    tags: [\"reality\", \"antimatter\", \"lategame\", \"endgame\", \"final\", \"pelle\", \"strike\", \"rift\", \"celestial\"],\n    tab: \"celestials/pelle\"\n  }, {\n    name: \"The Galaxy Generator\",\n    info: () => `\nWhen you reach ${formatInt(100)}% Recursion/Dispersion/Destruction, you unlock the <b>Galaxy Generator</b>, which can\npassively generate Galaxies. Generated Galaxies are like Replicanti Galaxies and Tachyon Galaxies in that they affect\ntickspeed as if they were Antimatter Galaxies, but they do not increase the cost of your next Antimatter Galaxy. You\nalso unlock five new upgrades. The first upgrade increases the base amount of Galaxies generated. The other four\nupgrades then give a multiplier to this base amount. The first two upgrades can be bought by spending antimatter and\nGenerated Galaxies. Replicanti or Tachyon Galaxies cannot be spent for purchasing those upgrades.\n<br>\n<br>\nThe <b>Galaxy Generator</b> has a maximum number of Galaxies it can generate, which can only be increased by draining\nRifts once the current cap has been reached.`,\n    isUnlocked: () => Pelle.hasGalaxyGenerator,\n    tags: [\"reality\", \"antimatter\", \"lategame\", \"endgame\", \"final\", \"pelle\", \"galaxy\", \"galaxies\", \"generator\", \"celestial\"],\n    tab: \"celestials/pelle\"\n  }]\n};\n\n(function () {\n  for (let i = 0; i < h2p.tabs.length; i++) {\n    const tab = h2p.tabs[i];\n    tab.id = i;\n    if (tab.alias === undefined) tab.alias = tab.name;\n    tab.searchTermsRelevance = {};\n  }\n\n  const searchIndex = {};\n\n  const addTerm = (term, tab) => {\n    let entry = searchIndex[term];\n\n    if (entry === undefined) {\n      entry = [];\n      searchIndex[term] = entry;\n    }\n\n    if (entry.includes(tab)) return;\n    entry.push(tab);\n  };\n\n  const addWord = (word, tab) => {\n    const lowerCase = word.toLowerCase();\n\n    for (let i = 0; i < lowerCase.length; i++) {\n      const term = lowerCase.slice(0, i + 1);\n      addTerm(term, tab);\n\n      if (tab.searchTermsRelevance[term] === undefined) {\n        tab.searchTermsRelevance[term] = ((i + 1) / lowerCase.length) ** 0.65;\n      } else {\n        tab.searchTermsRelevance[term] = Math.max(tab.searchTermsRelevance[term], ((i + 1) / lowerCase.length) ** 0.65);\n      }\n    }\n  };\n\n  const addPhrase = (phrase, tab) => {\n    addWord(phrase, tab);\n\n    for (const part of phrase.split(\" \")) {\n      addWord(part, tab);\n    }\n  };\n\n  for (const tab of h2p.tabs) {\n    addPhrase(tab.name, tab);\n  }\n\n  for (const tab of h2p.tabs) {\n    for (const tag of tab.tags) {\n      addPhrase(tag, tab);\n    }\n  }\n\n  for (const tab of h2p.tabs) {\n    addPhrase(tab.alias, tab);\n  }\n\n  const map2dToObject = function (arr, keyFun, valueFun) {\n    const out = {};\n\n    for (let idx1 = 0; idx1 < arr.length; idx1++) {\n      for (let idx2 = 0; idx2 < arr[idx1].length; idx2++) {\n        out[keyFun(arr[idx1][idx2], idx1, idx2)] = valueFun(arr[idx1][idx2], idx1, idx2);\n      }\n    }\n\n    return out;\n  }; // Very suboptimal code coming up. If anybody has a better solution, PLEASE, implement it.\n\n\n  const keyboardify = keybrd => map2dToObject(keybrd.split(\",\").map(str => str.split(\"\")), key => key, (_key, x, y) => ({\n    x,\n    y\n  }));\n\n  const qwerty = keyboardify(`1234567890,qwertyuiop,asdfghjkl,zxcvbnm`);\n  const qwertz = keyboardify(`1234567890,qwertzuiop,asdfghjkl,yxcvbnm`);\n  const azerty = keyboardify(`1234567890,azertyuiop,qsdfghjklm,wxcvbn`);\n  const dvorak = keyboardify(`1234567890,'<>pyfgcrl,aoeuidhtns,;qjkxbmwvz`);\n  const colemak = keyboardify(`1234567890,qwfpgjluy,arstdhneio,zxcvbkm`);\n  const workman = keyboardify(`1234567890,qdrwbjfup,ashtgyneoi,zxmcvkl`);\n  const qwprf = keyboardify(`1234567890,qwprfyukl,asdtghnioe,zxcvbjm`);\n  const keyboards = [qwerty, qwertz, azerty, dvorak, colemak, workman, qwprf];\n\n  const keyboardDist = function (a, b, keyboard) {\n    const aPos = keyboard[a],\n          bPos = keyboard[b];\n    if (!aPos || !bPos) return 100;\n    return Math.max(Math.abs(aPos.x - bPos.x), Math.abs(aPos.y - bPos.y));\n  }; // I copied this code based on OSA distance off wikipedia, with a few added changes.\n  // The cost for \"substitution\" (third item of the first Math.min) is replaced from a static value\n  // to a function which roughly estimates how likely the user is to mispress the key based on its\n  // minimum distance from several common keyboard layouts.\n  // I have no idea how the actual \"distance\" calculation works but as long as it does don't touch it.\n\n\n  const howBadlyTypoedWithKeyboard = function (a, b, keyboard) {\n    // If they're the same, skip all calculations\n    if (a === b) return 0;\n    const aLen = a.length;\n    const bLen = b.length; // If they're way too different, don't bother\n\n    if (Math.abs(aLen - bLen) > 3) return 100; // 2d Array with dimensions aLen + 1 x bLen + 1\n\n    const d = new Array(aLen + 1).fill(0).map(() => new Array(bLen + 1).fill(0));\n\n    for (let i = 0; i <= aLen; i++) {\n      d[i][0] = i;\n    }\n\n    for (let i = 0; i <= bLen; i++) {\n      d[0][i] = i;\n    }\n\n    for (let i = 1; i <= aLen; i++) {\n      for (let j = 1; j <= bLen; j++) {\n        const distance = keyboardDist(a[i - 1], b[j - 1], keyboard);\n        const cost = distance === 0 ? 0 : 0.3 + distance * distance * 0.25;\n        d[i][j] = Math.min(d[i - 1][j] + 0.55, d[i][j - 1] + 0.7, d[i - 1][j - 1] + cost);\n      }\n    }\n\n    return d[aLen][bLen];\n  };\n\n  const howBadlyTypoed = function (a, b) {\n    // Arbitrarily large number\n    let minTypoed = 1e10;\n\n    for (const keyboard of keyboards) {\n      minTypoed = Math.min(minTypoed, howBadlyTypoedWithKeyboard(a, b, keyboard));\n    }\n\n    return minTypoed;\n  };\n\n  const specialChars = [\"'\", \"\\\"\", \",\", \"-\", \".\", \"_\"];\n\n  const replaceSpecialChars = function (str) {\n    let result = str;\n\n    for (const i of specialChars) {\n      result = result.replaceAll(i, \"\");\n    }\n\n    return result;\n  }; // There are a LOT of magic numbers in this code, mostly from arbitrary choices for \"What number is large enough to\n  // act as a placeholder for 'basically not found'?\"\n  // This will need some cleanup if possible.\n\n\n  h2p.search = query => {\n    const truncatedQuery = replaceSpecialChars(query);\n    if (truncatedQuery === \"\") return h2p.tabs.map(x => ({\n      tab: x,\n      relevance: 1.5\n    }));\n    const searchTerms = truncatedQuery.toLowerCase().split(\" \").filter(str => str !== \"\"); // A higher \"Relevance\" value actually means it's further away from the search, important to keep in mind\n\n    const relevances = Array.repeat(1e4, h2p.tabs.length);\n\n    for (const searchWord of searchTerms) {\n      const minimumRequirement = Math.min(searchWord.length - 0.9, 3) * 0.5;\n\n      for (const searchIndexStr in searchIndex) {\n        const typoThreshold = howBadlyTypoed(replaceSpecialChars(searchIndexStr), searchWord);\n\n        if (typoThreshold < minimumRequirement) {\n          for (const tab of searchIndex[searchIndexStr]) {\n            const maxRelevance = tab.searchTermsRelevance[searchIndexStr];\n            const decrease = Math.max(maxRelevance * 1.6 - 0.9, 0);\n            relevances[tab.id] = Math.min(relevances[tab.id], Math.max(typoThreshold, 1 - maxRelevance) - decrease);\n          }\n        }\n      }\n    }\n\n    const results = h2p.tabs.filter(x => relevances[x.id] < 0.9).map(x => ({\n      tab: x,\n      relevance: relevances[x.id]\n    })); // Provide both the relevance and the tab itself\n    // Sort by id first, then push more relevant results to top.\n\n    results.sort((a, b) => a.tab.id - b.tab.id).sort((a, b) => a.relevance - b.relevance); // Provide both the relevance and the tab itself\n\n    return results;\n  };\n})();","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/h2p.js"],"names":["DC","credits","h2p","tabs","name","info","isUnlocked","tags","tab","formatX","globalSpeedFactor","player","blackHole","unlocked","records","fullGameCompletions","speedrun","PlayerProgress","infinityUnlocked","Autobuyer","bigCrunch","hasMaxedInterval","eternityUnlocked","Math","pow","Player","automatorUnlocked","EffarigUnlock","eternity","VUnlocks","raUnlock","Laitela","Pelle","isDoomed","Achievement","realityUnlocked","format","GameSaveSerializer","startingString","savefile","endingString","formatInt","options","updateRate","E6","dilationUnlocked","InfinityDimension","replicantiUnlocked","MachineHandler","isIMUnlocked","formatPercents","Array","range","map","tier","AntimatterDimension","_baseCost","join","_baseCostMultiplier","Tickspeed","Galaxy","remoteStart","Sacrifice","isVisible","formatPostBreak","Number","MAX_VALUE","Infinity","_unlockRequirement","_powerMultiplier","_costMultiplier","GameDatabase","challenges","infinity","ic","unlockAM","E140","E150","E15","E10","E170","E25","E55","E5","Replicanti","areUnlocked","E349","TimeDimension","_costIncreaseThresholds","FreeTickspeed","softcap","E20000","E100","TimeStudy","dilation","totalTimeTheoremRequirement","formatPow","DilationTimeStudyState","studies","isBought","E4000","timeDisplayNoDecimals","C10P16000D3","reality","Perk","firstPerk","config","effect","AutomatorPoints","pointsForAutomator","AutomatorData","MAX_ALLOWED_SCRIPT_CHARACTERS","MAX_ALLOWED_TOTAL_CHARACTERS","MAX_ALLOWED_SCRIPT_NAME_LENGTH","MAX_ALLOWED_CONSTANT_NAME_LENGTH","MAX_ALLOWED_CONSTANT_VALUE_LENGTH","MAX_ALLOWED_SCRIPT_COUNT","MAX_ALLOWED_CONSTANT_COUNT","BlackHoles","ACCELERATION_TIME","E310","Teresa","alias","TeresaUnlocks","run","price","runCompleted","effarig","celestials","unlocks","cost","Ra","glyphEffectCount","canBeApplied","adjuster","glyphFilter","setSaves","E30","E12","TimeSpan","fromMilliseconds","ENSLAVED_UNLOCKS","FREE_TICKSPEED_SOFTCAP","totalYears","RUN","Enslaved","isCompleted","people","p","InfinityDimensions","HARDCAP_PURCHASES","v","mainUnlock","realities","requirement","realityMachines","eternities","infinities","dilatedTime","replicanti","vAchievementUnlock","remembrance","requiredLevels","effarigUnlock","enslavedUnlock","vUnlock","GlyphSacrificeHandler","glyphRefinementEfficiency","levelRefinementValue","unlockGlyphAlchemy","baseRMCap","ImaginaryUpgrade","POWER_DM_PER_ASCENSION","POWER_DE_PER_ASCENSION","annihilationDMRequirement","PelleStrikes","hasStrike","E2000","hasGalaxyGenerator","i","length","id","undefined","searchTermsRelevance","searchIndex","addTerm","term","entry","includes","push","addWord","word","lowerCase","toLowerCase","slice","max","addPhrase","phrase","part","split","tag","map2dToObject","arr","keyFun","valueFun","out","idx1","idx2","keyboardify","keybrd","str","key","_key","x","y","qwerty","qwertz","azerty","dvorak","colemak","workman","qwprf","keyboards","keyboardDist","a","b","keyboard","aPos","bPos","abs","howBadlyTypoedWithKeyboard","aLen","bLen","d","fill","j","distance","min","howBadlyTypoed","minTypoed","specialChars","replaceSpecialChars","result","replaceAll","search","query","truncatedQuery","relevance","searchTerms","filter","relevances","repeat","searchWord","minimumRequirement","searchIndexStr","typoThreshold","maxRelevance","decrease","results","sort"],"mappings":"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","sourcesContent":["import { DC } from \"../constants\";\r\n\r\nimport { credits } from \"@/core/secret-formula/credits\";\r\n\r\nexport const h2p = {\r\n  /**\r\n   * @template\r\n   * {\r\n   *  @property {String} name   Internal name for the tab entry\r\n   *  @property {String} alias  Display name for the tab; if not present, will use the internal name\r\n   *  @property {Number} id     Unique ID for each entry (generated in-game, not explicitly stated)\r\n   *  @property {function: @return String} info         Text body of information for the entry\r\n   *  @property {function: @return Boolean} isUnlocked  Condition for when the entry is visible and searchable\r\n   *  @property {Array: String} tags  List of keywords which are linked to this tab in the search function\r\n   *  @property {String} tab    Key of a tab+subtab combination which will default the h2p to this entry if opened\r\n   * }\r\n   */\r\n  tabs: [\r\n    {\r\n      name: \"This Modal\",\r\n      info: () => `\r\nWelcome to the How to Play!\r\n<br>\r\n<br>\r\n<b>See the next How To Play entry to view the changes in this mod.</b>\r\n<br>\r\n<br>\r\nThis modal (pop-up window) contains in-depth explanations and additional details for everything you will encounter\r\nas you progress through the game. As you unlock new features and mechanics, you will also gain access to additional\r\npages here. If you ever feel lost or confused about how something in the game works, you may find a helpful\r\nexplanation within the related entry in here. \r\n<br>\r\n<br>\r\nFor now, opening the How to Play will always start you on this page. After you get your first Dimension Boost,\r\nopening this modal will instead place you on the How to Play entry most relevant to the game content on your currently\r\nvisible tab and subtab, if such an entry exists.\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"h2p\", \"how\", \"to\", \"play\", \"modal\"],\r\n      tab: \"\"\r\n    },\r\n    {\r\n      name: \"What has changed\",\r\n      info: () => `\r\nAs the mod name, almost all mechanics are speeded up by ${formatX(globalSpeedFactor)}. This is called the global speed factor.<br>\r\n<br>\r\nTo be separated from the in-game speed change mechanic, 'real/game real/game time' means\r\nthis timer doesn't/does count speed up from this mod and doesn't/does count in-game speed change.<br>\r\n<br>\r\nTo make the game run normally and still balanced in some way, some mechanics are not speeded up\r\n${player.blackHole[0].unlocked||player.records.fullGameCompletions>0?\"or speeded up by a lower factor\":\"\"}:<br>\r\n${player.speedrun.isUnlocked?`\r\n- Speedrun timer is not speeded up.<br>\r\n`:\"\"}\r\n- News scrolling is not speeded up.<br>\r\n- Playtime tracking (real time) is not speeded up.<br>\r\n- Autobuyers are not speeded up.<br>\r\n- The timers of requirements of achievements are not speeded up unless specified.<br>\r\n- The timers of achievement rewards that drops over time are not speeded up.<br>\r\n${PlayerProgress.infinityUnlocked()?`\r\n- The timers that record the fastest completion of challenges or prestiges are not speeded up.<br>\r\n- The normal matter appears in some challenges is not speeded up.<br>\r\n`:\"\"}\r\n${Autobuyer.bigCrunch.hasMaxedInterval||PlayerProgress.eternityUnlocked()||player.records.fullGameCompletions>0?`\r\n- The production drop in Infinity Challenge 8 is not speeded up.<br>\r\n`:\"\"}\r\n${PlayerProgress.eternityUnlocked()||player.records.fullGameCompletions>0?`\r\n- Time Study 141's multiplier's drop is not speeded up.<br>\r\n`:\"\"}\r\n${player.blackHole[0].unlocked||player.records.fullGameCompletions>0?`\r\n- Black Hole ticking is still speeded up, but only square-rooted as ${formatX(Math.pow(globalSpeedFactor,1/2))}. Notice that both inactive time and duration are speeded up.<br>\r\n`:\"\"}\r\n${Player.automatorUnlocked||player.records.fullGameCompletions>0?`\r\n- Automator running is not speeded up.<br>\r\n`:\"\"}\r\n${EffarigUnlock.eternity.isUnlocked||player.records.fullGameCompletions>0?`\r\n- Charging real time doesn't charge ${formatX(globalSpeedFactor)} time.<br>\r\n`:\"\"}\r\n${VUnlocks.raUnlock.isUnlocked||player.records.fullGameCompletions>0?`\r\n- Memory Chunk and Memory production are still speeded up, but only square-rooted as ${formatX(Math.pow(globalSpeedFactor,1/2))}.<br>\r\n`:\"\"}\r\n${Laitela.isUnlocked||player.records.fullGameCompletions>0?`\r\n- In Lai'tela's Reality, entropy production and game speed recovery are not speeded up.<br>\r\n- Dark Matter Dimensions are still speeded up, but only square-rooted as ${formatX(Math.pow(globalSpeedFactor,1/2))}.<br>\r\n`:\"\"}\r\n${Pelle.isDoomed||player.records.fullGameCompletions>0?`\r\n- In Doomed Reality, the global speed factor is square-rooted as ${formatX(Math.pow(globalSpeedFactor,1/2))}.<br>\r\n`:\"\"}\r\n${Achievement(188).isUnlocked||player.records.fullGameCompletions>0?`\r\n- The ending animation is not speeded up.<br>\r\n`:\"\"}\r\n${Achievement(188).isUnlocked||player.records.fullGameCompletions>0?\"\":\r\n`More mechanics will show here as you reach them.<br>`\r\n}\r\n<br>\r\nAlso, there are some extra buffs to the game.<br>\r\n${Autobuyer.bigCrunch.hasMaxedInterval||PlayerProgress.eternityUnlocked()?`\r\n- The infinity generating break infinity upgrade counts the boost from achievement 87 and time study 32.<br>\r\n${PlayerProgress.eternityUnlocked()||player.records.fullGameCompletions>0?`\r\n- You gain a multiplier to eternities gained on eternity based on your current eternities, to a minimal of ${formatX(5)} and a maximal of ${formatX(1000)}.<br>\r\n`:\"\"}\r\n${PlayerProgress.realityUnlocked()||player.records.fullGameCompletions>0?`\r\n- Realities are always simuated +${format(4)}× (additive with other amplify mutipliers).<br>\r\n- You gain a multiplier to perk points gained on reality based on your current realities, to a maximal of ${formatX(20)}.<br>\r\n`:\"\"}\r\n${PlayerProgress.realityUnlocked()||player.records.fullGameCompletions>0?\"\":\r\n`More buffs will show here as you reach them.<br>`\r\n}\r\n`:\"These buffs will show here as you reach them.<br>\"\r\n}\r\n<br>\r\nVisit here often to be clear about what has changed, especially when unlocking a new mechanic.\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"mod\", \"speed\", \"change\"],\r\n      tab: \"\"\r\n    },\r\n    {\r\n      name: \"Your savefile\",\r\n      info: () => `\r\nYour game's save data is stored on your computer's browser data if you are playing on a web browser, or in your Steam\r\ninstallation folder if you are playing on Steam. This means that clearing your browser's cache or cookies, or fully\r\nuninstalling the game from Steam will also delete your save file.\r\nSimilarly, if you are playing in a private or incognito window, your save\r\nwill not be there the next time you open up your browser. The saves are browser-specific as well, so for example\r\nif you play the game on Chrome, you will not find your save on Firefox. Lastly, any saves you have on the web version\r\nand the Steam version will also be completely independent from each other.\r\n<br>\r\n<br>\r\nYou can transfer your save between places by using the export function, which will copy a <i>very</i> long string of\r\nrandom-looking characters into your clipboard. That text contains your save data, which you can load back into the\r\ngame by pasting it into the text box on the import prompt. You need the entirety of the save text for importing to\r\nwork properly, or else the game might not recognize the text as a valid save. Certain messaging applications may\r\ncut off part of the text if you are using one to transfer the save between devices.\r\n<br>\r\n<br>\r\nA properly-formatted save string from the Reality update will start with\r\n<b>${GameSaveSerializer.startingString.savefile}</b> and end with <b>${GameSaveSerializer.endingString.savefile}</b>.\r\nIf you are importing from a version of the game from before Reality was released, it will instead start with <b>eyJ</b>\r\nand end with <b>In19</b>, <b>fX0=</b>, or <b>fQ==</b>. If neither of these are the case, then part of your save is\r\nmissing and it will fail to import. In addition to importing and exporting to your clipboard, you can also import\r\nand export from text files as well.\r\n<br>\r\nYou can use the \"Choose save\" button to pick between three separate saves on your browser. These saves are, for most\r\nintents and purposes, completely separate from each other. Importing and exporting will only affect the current save\r\nslot. <b>The only exception is clearing your browser or Steam data, in which case all three saves will be reset.</b>\r\n<br>\r\n<br>\r\nThe game automatically saves periodically, by default once every ${formatInt(30)} seconds.\r\nKeep this in mind if you need to close the game - anything you\r\ndo right before closing it might not be saved unless you wait for the autosave interval or manually save again. The\r\nlength of the autosave interval is adjustable, and its timer can be seen in the bottom-left of the screen.\r\n<br>\r\n<br>\r\nBackups of your savefile are also saved after certain amounts of time online or offline, which you can examine and\r\nreload at any point by clicking the \"Open Automatic Save Backup Menu\" button. These backups may be useful if you wish\r\nto revert your save to what it looked like some time in the past, such as a few minutes ago or when you were last\r\noffline for a while.\r\n<br>\r\n<br>\r\nYou can also connect a Google Account to the game, allowing you to save your progress online. This allows you to play\r\nwith the same save on any device which is also logged into the same account. Cloud saving is only compatible with other\r\nsaves on the web or Steam versions of the game; saves from the Android app of the game will not be automatically linked\r\nvia Cloud saving. Saving and loading from the Cloud will\r\nautomatically overwrite the other save unless the other save is either older or has noticeably more progression, in\r\nwhich case a modal will appear which asks you which save you want to keep.\r\n<br>\r\n<br>\r\nYou can completely reset your save at any point if desired by clicking the button, which brings up a prompt you need\r\nto fill out in order to make sure you intentionally wanted to reset. Going through with this reset will only clear\r\nyour current save; the other save slots will be unaffected. <b>Resetting your game in this way is completely\r\nirreversible and gives you no permanent benefits, secret or otherwise.</b>\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"choose\", \"cloud\", \"google\", \"save\", \"import\", \"export\", \"reset\"],\r\n      tab: \"options/saving\"\r\n    },\r\n    {\r\n      name: \"Customization\",\r\n      info: () => `\r\nThe game has two different UI layouts - the Classic UI maintains the style of Antimatter Dimensions from before the\r\nReality update, while the Modern UI is a redesign based on more modern dark theme styles. Additionally, there are\r\nvarious themes which can be applied to modify the appearance of everything in the game. There are a few secret themes\r\nwhich can be unlocked through importing certain phrases. Both UI layouts support all the different possible themes.\r\n<br>\r\n<br>\r\nThe notation used to display numbers in the game defaults to Mixed Scientific, but can be changed to one of numerous\r\noptions in the drop-down menu. Many of these notations are intended as jokes and in some cases will format numbers\r\nin a way that causes text to spill over into other parts of the screen - this is not a bug. You can additionally\r\nconfigure what numbers look like when they are extremely large using the \"Exponent Notation Options\" menu,\r\nalthough this may result in some odd text appearances in some places.\r\n<br>\r\n<br>\r\nMany events in the game trigger full-screen animations or pop-up modals which require you to confirm that you want to\r\ncontinue. Most of these animations and confirmations can be disabled on an individual basis through the options,\r\nalthough the ability to disable any given animation or confirmation will only appear after they have already shown up\r\nat least once.\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"UI\", \"update\", \"news\", \"theme\", \"notation\", \"comma\", \"exponent\", \"animation\", \"retry\", \"confirmation\",\r\n        \"offline\", \"hotkey\", \"classic\", \"modern\"],\r\n      tab: \"options/visual\"\r\n    },\r\n    {\r\n      name: \"Offline Progress\",\r\n      info: () => `\r\nAntimatter Dimensions has a catch-up mechanic which attempts to simulate the game's behavior if the game is closed for\r\nan extended period of time. The simulation behavior is only somewhat accurate, as the game is too mathematically\r\ncomplicated to be run at full accuracy in a reasonable amount of time. At the end of the simulation, the game will\r\nsummarize how various relevant resources have changed while you were gone.\r\n<br>\r\n<br>\r\nIf the game is left open and becomes unfocused or otherwise suspended for an extended period of time, it will attempt\r\nto apply the missed time as offline progress when you return. This can be potentially unreliable, as different devices\r\nhandle these situations differently. If this results in undesirable behavior, there is a toggle to turn this off in the\r\noptions - in that case the game will try to apply all the missed time in a single tick.\r\n<br>\r\n<br>\r\nThe game runs on a system where everything is updated once per tick - all Dimensions and resources do one unit of\r\nproduction, all autobuyers trigger once, all multipliers and values are changed accordingly, and all the displayed\r\nnumbers are updated. By default there are ${formatInt(20)} ticks per second when the game is running, although this can\r\nbe modified by changing the \"Update rate\" within the game Options.\r\nYour current settings will run the game at ${format(1000 / player.options.updateRate, 2, 1)} ticks per second on\r\naverage, although lag and internal javascript behavior may cause individual ticks to vary by a few percent.\r\n<br>\r\n<br>\r\nWhen offline simulation is active, these ticks have an adjusted length in order to fill the amount of time you were\r\naway - for example having a setting for ${formatInt(1000)} offline ticks and closing the game for an hour will result in\r\nticks which are ${format(3.6, 1, 1)} seconds long each. For most things in the game, this is not an issue because this\r\nwill still result in approximately the same amount of resources after the simulation completes. A notable exception is\r\nautobuyers - in this situation autobuyers will effectively only trigger once every ${format(3.6, 1, 1)} seconds, which\r\nmay have a strong impact depending on the part of the game.\r\n<br>\r\n<br>\r\n${player.blackHole[0].unlocked\r\n    ? `<b>Offline Black Hole behavior:</b> Once the Black Hole has been unlocked, the offline progress simulation will\r\n      attempt to run the game in a way where each tick contains roughly the same amount of <i>game</i> time. This may\r\n      give the appearance of the Black Hole(s) being active for a much larger fraction of time than normal while\r\n      simulating, when in fact the game is running active periods more slowly and \"skipping past\" the inactive periods\r\n      because they contribute much less production per real time. This results in behavior which is generally in your\r\n      favor when compared to ticks with constant real time.\r\n      <br>\r\n      <br>`\r\n    : \"\"\r\n}\r\nOffline tick count can be adjusted between ${formatInt(500)} and ${formatInt(DC.E6)} ticks. Smaller counts will result\r\nin faster but less accurate simulations, while larger counts will result in more accurate simulations which take longer\r\nto complete. There is a limit of one day of time per game tick, meaning there are some rare situations (such as not\r\nplaying the game for more than a year) where you may not get all of the time you were away.\r\n<br>\r\n<br>\r\nOffline progress can be disabled entirely if desired, for example for diagnostic or timing purposes, or in order\r\nto do an \"online only\" playthrough of the game. Otherwise, offline progress is on by default from the very beginning\r\nof the game. Note that if offline progress is disabled, the statistic for total time played will also be paused while\r\nthe game closed.\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"offline\", \"away\", \"progress\"],\r\n      tab: \"options/gameplay\"\r\n    }, {\r\n      name: \"Effect Stacking\",\r\n      info: () => `\r\nMost of the effects and upgrades in Antimatter Dimensions largely fall into three categories:\r\n<br>\r\n- <b>Additive:</b> These effects are typically denoted with a + (or the word \"increase\") followed by a number,\r\nand add their value to some\r\nbase amount. Multiple additive effects are summed up. These can also sometimes show up as subtractive effects which\r\nreduce resource costs.\r\n<br>\r\n- <b>Multiplicative:</b> These effects are shown either by a × (or the word \"multiply\") followed by a number or,\r\nmore rarely, as two numbers\r\nseparated by a ➜. Different multiplicative sources always combine by multiplying, never by adding. In some situations,\r\nthere may be negative effects or cost reductions that apply in this category as division.\r\n<br>\r\n- <b>Power</b>: These effects are much rarer and appear as ^ followed by a number. Multiple power effects apply\r\nsequentially, or equivalently by multiplying the values of the power effects together and applying the final value\r\nas a single power. In rare situations, negative effects may apply here in this category as powers which are less\r\nthan ${formatInt(1)}.\r\n<br>\r\n<br>\r\nUnless otherwise noted when an upgrade or reward <i>replaces</i> an older value, all of these effects stack\r\nwith each other. In the case of an upgrade replacing an older value with a newer value, the replacement occurs before\r\nany of the above effects are applied. To determine the final value of a set of effects, the effects from each category\r\nare individually combined, and then applied in the order of additive, multiplicative, then power effects.\r\n<br>\r\n<br>\r\n${PlayerProgress.realityUnlocked() || PlayerProgress.dilationUnlocked()\r\n    ? \"Dilation and any Dilation-like effects apply <i>after</i> all of these other effects are stacked together.\"\r\n    : \"\"}\r\n<br>\r\n<br>\r\n${PlayerProgress.realityUnlocked()\r\n    ? `Glyph Effects effectively have two stacking attributes; their internal way of stacking together and the way\r\n      they stack with all other game effects. These may not necessarily be the same - for example, the \"Antimatter\r\n      Dimension Power\" effect will stack <i>additively with itself</i>, but then the total effect will be added to\r\n      a base value of ${formatInt(1)} and then applied as a <i>power effect</i> to Antimatter Dimensions.`\r\n    : \"\"}\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"effect\", \"stack\", \"combine\", \"add\", \"reduce\", \"multiply\", \"divide\", \"power\", \"dilation\", \"glyph\"],\r\n      tab: \"options/gameplay\"\r\n    }, {\r\n      name: \"Common Abbreviations\",\r\n      info: () => `\r\nMany resources within the game may appear in an abbreviated format as text in order to save space. This How to\r\nPlay entry will update itself with additional entries for new resources as you encounter them for the first time.\r\n<br>\r\n- <b>AM</b>: Antimatter<br>\r\n- <b>AD</b>: Antimatter Dimension<br>\r\n- <b>AG</b>: Antimatter Galaxy<br>\r\n${PlayerProgress.infinityUnlocked() ? \"- <b>IP</b>: Infinity Point<br>\" : \"\"}\r\n${PlayerProgress.infinityUnlocked() ? \"- <b>NC</b>: Normal Challenge<br>\" : \"\"}\r\n${PlayerProgress.infinityUnlocked() ? \"- <b>IC</b>: Infinity Challenge<br>\" : \"\"}\r\n${InfinityDimension(1).isUnlocked || PlayerProgress.eternityUnlocked() ? \"- <b>ID</b>: Infinity Dimension<br>\" : \"\"}\r\n${PlayerProgress.replicantiUnlocked() ? \"- <b>RG</b>: Replicanti Galaxy<br>\" : \"\"}\r\n${PlayerProgress.eternityUnlocked() ? \"- <b>EP</b>: Eternity Point<br>\" : \"\"}\r\n${PlayerProgress.eternityUnlocked() ? \"- <b>TT</b>: Time Theorem<br>\" : \"\"}\r\n${PlayerProgress.eternityUnlocked() ? \"- <b>TD</b>: Time Dimension<br>\" : \"\"}\r\n${PlayerProgress.eternityUnlocked() ? \"- <b>EC</b>: Eternity Challenge<br>\" : \"\"}\r\n${PlayerProgress.dilationUnlocked() ? \"- <b>TP</b>: Tachyon Particle<br>\" : \"\"}\r\n${PlayerProgress.dilationUnlocked() ? \"- <b>DT</b>: Dilated Time<br>\" : \"\"}\r\n${PlayerProgress.dilationUnlocked() ? \"- <b>TG</b>: Tachyon Galaxy<br>\" : \"\"}\r\n${PlayerProgress.realityUnlocked() ? \"- <b>RM</b>: Reality Machine<br>\" : \"\"}\r\n${PlayerProgress.realityUnlocked() ? \"- <b>AP</b>: Automator Point<br>\" : \"\"}\r\n${PlayerProgress.realityUnlocked() ? \"- <b>BH</b>: Black Hole<br>\" : \"\"}\r\n${MachineHandler.isIMUnlocked ? \"- <b>iM</b>: Imaginary Machine<br>\" : \"\"}\r\n${Laitela.isUnlocked ? \"- <b>DM</b>: Dark Matter<br>\" : \"\"}\r\n${Laitela.isUnlocked ? \"- <b>DE</b>: Dark Energy<br>\" : \"\"}\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"abbreviation\", \"shorten\", \"am\", \"ad\", \"ag\", \"ip\", \"nc\", \"ic\", \"id\", \"rg\", \"ep\", \"tt\", \"td\", \"ec\", \"tp\",\r\n        \"dt\", \"tg\", \"rm\", \"ap\", \"bh\", \"im\", \"dm\", \"de\"],\r\n      tab: \"\"\r\n    }, {\r\n      name: \"Antimatter Dimensions\",\r\n      info: () => `\r\nAntimatter is a resource that is used throughout the entire game for purchasing various things as you progress. You\r\nstart with ${formatInt(10)} antimatter when you first open the game, and you can\r\nspend it to buy the 1st Antimatter Dimension to start the game.\r\n<br>\r\n<br>\r\nAntimatter Dimensions are your production units in game. The 1st Antimatter Dimension produces your antimatter.\r\nEach consecutive Antimatter Dimension produces the previous one, allowing you to have steady growth.\r\nThere are eight Antimatter Dimensions total.\r\n<br>\r\n<br>\r\n<b>Dimension Multiplier:</b> Beside the Dimension there is a multiplier (example: 1st Dimension ${formatX(1, 1, 1)}).\r\nThe base production of each Dimension is multiplied by this number.\r\nThis multiplier increases by ${formatX(2)} for every ${formatInt(10)} of that Dimension purchased.\r\nEach time this occurs, the price of the dimension will increase.\r\n<br>\r\n<br>\r\n<b>Accumulated Dimension Quantity:</b> The next column is your current amount of that Dimension you own.\r\nThis is a combination of how many you have purchased with antimatter,\r\nas well as produced from the higher Dimension.\r\n<br>\r\n<br>\r\n<b>Purchased Dimensions Quantity:</b> Next to each accumulated quantity of owned Dimensions,\r\nthe amount of that Dimension purchased toward the next multiplier upgrade is displayed in brackets.\r\nFor example if you have (${formatInt(4)}) next to your accumulated dimension quantity,\r\nyou will need ${formatInt(6)} more of that dimension for the next multiplier increase.\r\n<br>\r\n<br>\r\n<b>Dimension Growth Percent:</b> This number represents the amount of growth that each\r\nDimension experiences per second. ${formatPercents(1)} means the dimension is doubling each second.\r\nThis allows you to judge overall growth.\r\n<br>\r\n<br>\r\n<b>Cost &amp; until ${formatInt(10)}:</b>\r\nYou can buy a single quantity of each Dimension with antimatter when the cost button is highlighted.\r\nAlternatively, if the Until ${formatInt(10)} button is highlighted,\r\nyou can buy whatever quantity gets you to that Dimension's next Dimension multiplier.\r\n<br>\r\n<br>\r\n<b>Max all:</b> Max all will buy until ${formatInt(10)} of the 1st Antimatter Dimension until it cannot anymore,\r\nthen second, and so on until the 8th Antimatter Dimension, and then buy max Tickspeed Upgrades.\r\n<br>\r\n<br>\r\n<b>Dimension base prices:</b> ${Array.range(1, 8)\r\n    .map(tier => format(AntimatterDimension(tier)._baseCost, 2, 2))\r\n    .join(\", \")}\r\n<br>\r\n<b>Base per ${formatInt(10)} bought dimension price increases:</b> ${Array.range(1, 8)\r\n  .map(tier => format(AntimatterDimension(tier)._baseCostMultiplier, 2, 2))\r\n  .join(\", \")}\r\n<br>\r\n<br>\r\n<b>Hotkeys: 1, 2, 3, 4, 5, 6, 7, 8</b> for buy until ${formatInt(10)} Xth Dimension\r\n(you can also hold down Shift while buying Dimensions, which will only buy\r\n${formatInt(1)} instead of ${formatInt(10)}), <b>M</b> for Max all\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"dims\", \"normal\", \"antimatter\", \"ad\"],\r\n      tab: \"dimensions/antimatter\"\r\n    }, {\r\n      name: \"Tickspeed\",\r\n      info: () => `\r\nProduction in the game happens on each \"tick\", which initially occurs once per second. By buying Tickspeed Upgrades,\r\nyou can make your Antimatter Dimensions produce faster, as if multiple ticks occur in each second.\r\n<br>\r\n<br>\r\n<b>Tickspeed:</b> This states how many game ticks are occurring every second. Fractional ticks are accounted for,\r\nboosting production as if part of a game tick has passed. Note that the actual tickspeed time is simulated and the\r\ngame always runs calculations at the update rate you've chosen in the Options tab.\r\n<br>\r\n<br>\r\n<b>Cost:</b> The cost of antimatter for multiplying ticks/sec by the displayed multiplier.\r\n(without any Galaxies, this is ${formatX(1.1245, 0, 3)} per purchase)\r\n<br>\r\n<br>\r\n<b>Buy Max:</b> This will buy the maximum amount of Tickspeed Upgrades available\r\nwith your current amount of antimatter.\r\n<br>\r\n<br>\r\n<b>Hotkeys: T</b> will purchase as many Tickspeed Upgrades as possible, or <b>Shift+T</b> to buy a single upgrade.\r\n<b>M</b> for Max all.\r\n`,\r\n      isUnlocked: () => Tickspeed.isUnlocked,\r\n      tags: [\"dimension\", \"earlygame\", \"time\"],\r\n      tab: \"dimensions/antimatter\"\r\n    }, {\r\n      name: \"Dimension Boosts\",\r\n      info: () => `\r\n<b>Dimension Boost:</b> This resets your antimatter and all of your Antimatter Dimensions, but unlocks another\r\nAntimatter Dimension for you to purchase and boosts your Dimension multipliers.\r\nThe 1st Dimension Boost requires ${formatInt(20)} 4th Dimensions, the 2nd requires ${formatInt(20)} 5th Dimensions, etc.\r\nAfter unlocking all ${formatInt(8)} Dimensions,\r\nevery additional boost will cost ${formatInt(15)} more 8th Dimensions than the previous Boost and will no longer\r\nunlock a Dimension, but will continue to increase your Dimension multipliers.\r\n<br>\r\n<br>\r\nYou gain a ${formatX(2)} multiplier to the 1st Dimension for every Dimension Boost you have. Each higher\r\nDimension will have the multiplier applied one less time as the previous, down to a minimum of ${formatInt(0)}.\r\nFor example, with ${formatInt(3)} Boosts, the 1st Dimension will gain ${formatX(8)}, the 2nd Dimension ${formatX(4)},\r\nthe 3rd Dimension ${formatX(2)}, and all other Dimensions are unaffected.\r\n<br>\r\n<br>\r\n<b>Hotkey: D</b> will try to purchase a Dimension Boost.\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"dimboost\", \"reset\", \"earlygame\"],\r\n      tab: \"dimensions/antimatter\"\r\n    }, {\r\n      name: \"Antimatter Galaxies\",\r\n      info: () => `\r\nPurchasing an Antimatter Galaxy will reset your game back to the point where only ${formatInt(4)} Dimensions are\r\navailable, but will increase the effect of your Tickspeed Upgrades by +${format(0.02, 0, 2)} for your first two\r\nGalaxies. As you get more Galaxies, the multiplier will continue becoming stronger and stronger.\r\n<br>\r\n<br>\r\nThough it will have very little impact for the first few Tickspeed purchases,\r\nthe increase is multiplicative and will not take long to be visible.\r\n<br>\r\n<br>\r\nYour first Antimatter Galaxy requires ${formatInt(80)} Eighth Dimensions, and each additional Galaxy will cost\r\nanother ${formatInt(60)} more.\r\n<br>\r\n<b>Distant Galaxy scaling:</b> Above ${formatInt(100)} Antimatter Galaxies the cost increase between Galaxies will\r\nincrease by ${formatInt(2)} per Galaxy, making the next Galaxy cost ${formatInt(62)} more, then ${formatInt(64)} more,\r\netc.\r\n<br>\r\n<b>Remote Galaxy scaling:</b> Above ${formatInt(Galaxy.remoteStart)} Antimatter Galaxies, the <i>total</i> cost\r\nincreases by another ${formatPercents(0.002, 1)} per Galaxy, on top of Distant scaling.\r\n<br>\r\n<br>\r\n<b>Hotkey: G</b> will try to purchase an Antimatter Galaxy.\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"8th\", \"reset\", \"galaxy\", \"earlygame\"],\r\n      tab: \"dimensions/antimatter\"\r\n    }, {\r\n      name: \"Dimensional Sacrifice\",\r\n      info: () => `\r\n<b>You unlock Dimensional Sacrifice after your fifth Dimension Boost.</b>\r\n<br>\r\n<br>\r\nSacrificing will immediately reset the owned quantity of all non-Eighth Dimensions to zero, without reducing the\r\nmultiplier or the current cost. In return, it will multiply the Eighth Dimension Multiplier by the shown value.\r\nIt will take time to get back to the production you previously had, but you will end up with a net increase.\r\n<br>\r\n<br>\r\nThe Dimensional Sacrifice multiplier scales with the number of 1st Dimensions you had at the time of sacrifice,\r\nand the scaling can be improved by completing certain Achievements and challenges. The multiplier is kept between\r\nsacrifices, meaning that sacrificing once at ${formatX(10)} and then once at ${formatX(4)} will be the same as\r\n${formatX(8)} then ${formatX(5)}; in both cases you will end up with a total sacrifice multiplier of ${formatX(40)}.\r\n<br>\r\n<br>\r\n<b>Hotkey: S</b> will try to sacrifice.\r\n`,\r\n      isUnlocked: () => Sacrifice.isVisible,\r\n      tags: [\"8th\", \"reset\", \"earlygame\", \"gods\", \"earlygame\"],\r\n      tab: \"dimensions/antimatter\"\r\n    }, {\r\n      name: \"Achievements\",\r\n      info: () => `\r\nEach Achievement has requirements to unlock. Once unlocked, some Achievements give a reward.\r\nRequirements and rewards vary in difficulty and benefit significantly.\r\n<br>\r\n<br>\r\nIn addition to any specific rewards for individual Achievements, you will receive a ${formatX(1.03, 2, 2)} multiplier\r\nto all Antimatter Dimensions. Each fully completed row also gives another ${formatX(1.25, 2, 2)}. The total multiplier\r\neffect from all Achievements together is shown above all the Achievement images.\r\n<br>\r\n<br>\r\nSecret Achievements offer no gameplay benefits or advantages and are simply there for fun. Hovering over a Secret\r\nAchievement will give a hint on how to attain them.\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"earlygame\", \"awards\", \"earlygame\"],\r\n      tab: \"achievements\"\r\n    }, {\r\n      name: \"Infinity\",\r\n      info: () => `\r\nOnce you have too much antimatter for the world to handle (${formatInt(2)}<sup>${formatInt(1024)}</sup>\r\nor about ${formatPostBreak(Number.MAX_VALUE, 6)},\r\nsometimes called \"Infinity\"), you will be forced to do a “Big Crunch”. This will reset your antimatter, Antimatter\r\nDimensions, Dimension Boosts, and your Antimatter Galaxies. Doing a Big Crunch is also sometimes referred to as\r\n\"Infinitying\".\r\n<br>\r\n<br>\r\nYou will eventually be able to pass ${formatPostBreak(Number.MAX_VALUE, 6)}, but until then any larger numbers will\r\ndisplay as ${format(Infinity)}.\r\n<br>\r\n<br>\r\nEach Infinity completed will give an Infinity Point, which can be spent on upgrades in the new Infinity tab.\r\nYou must purchase these upgrades from top to bottom. You will also gain one \"Infinity\", which is effectively\r\nthe number of times you have crunched.\r\n<br>\r\n<br>\r\nThe \"Multiply Infinity Points from all sources by ${formatInt(2)}\" upgrade can be bought multiple times,\r\nbut each purchase requires ${formatInt(10)} times as much IP.\r\nYou must complete the Achievement \"No DLC required\" to start purchasing this particular upgrade.\r\n<br>\r\n<br>\r\n<b>Hotkey: C</b> will try to perform a Big Crunch.\r\n`,\r\n      isUnlocked: () => PlayerProgress.infinityUnlocked(),\r\n      tags: [\"crunch\", \"big\", \"upgrades\", \"ip\", \"reset\", \"prestige\", \"earlygame\"],\r\n      tab: \"infinity/upgrades\"\r\n    }, {\r\n      name: \"Normal Challenges\",\r\n      info: () => `\r\nNormal Challenges are unlocked after your first Infinity; they change in-game mechanics in different ways to create more\r\ndifficult Infinity circumstances. To complete a challenge, you must reach ${formatPostBreak(Number.MAX_VALUE, 2)}\r\nantimatter again.\r\n<br>\r\n<br>\r\nEach completed Normal Challenge will award an autobuyer or the ability to upgrade an existing autobuyer.\r\nYou can run them multiple times (though only the first time grants a reward),\r\nand they can be exited at any time via the “Exit Challenge” button.\r\n<br>\r\n<br>\r\nYour first Infinity is considered to be the first Normal Challenge, and is thus already completed when\r\nyou unlock challenges.\r\n<br>\r\n<br>\r\nThe rightmost column of Infinity Upgrades does not work in challenges.\r\n`,\r\n      isUnlocked: () => PlayerProgress.infinityUnlocked(),\r\n      tags: [\"infinity\", \"autobuyer\", \"earlygame\"],\r\n      tab: \"challenges/normal\"\r\n    }, {\r\n      name: \"Autobuyers\",\r\n      info: () => `\r\nAutobuyers allow you to automatically purchase dimensions, upgrades, or prestiges. All autobuyer\r\ncontrols are located under the \"Autobuyers\" subtab of the \"Automation\" tab, including any additional autobuyers\r\nunlocked later in the game.\r\n<br>\r\n<br>\r\nAntimatter Dimension Autobuyers and the Tickspeed Upgrade Autobuyer can be unlocked based on your total antimatter,\r\nbut most other autobuyers require upgrades to be purchased or challenges to be beaten.\r\n<br>\r\n<br>\r\nMost Autobuyers have similar attributes:\r\n<br>\r\n<br>\r\n<b>Autobuyer Interval:</b> The cooldown period before the autobuyer attempts to make another purchase.\r\nAntimatter Dimension Autobuyers and the Tickspeed Upgrade Autobuyer require their respective challenges to be beaten\r\nbefore their interval can be upgraded.\r\n<br>\r\n<br>\r\n<b>Antimatter Dimension Autobuyer Bulk Buy:</b> Once the interval of an autobuyer reaches its minimum\r\n(at ${formatInt(100)} ms), all future upgrades will double the maximum amount the autobuyer can purchase per tick.\r\nThis can be disabled.\r\n<br>\r\n<br>\r\n<b>Antimatter Dimension Autobuyer Buy Quantity:</b> Autobuyers for Dimensions can be set to buy a single Dimension,\r\nor until ${formatInt(10)}. Bulk buy is disabled when the autobuyer is set to singles.\r\n<br>\r\n<br>\r\n<b>Tickspeed Autobuyer Buy Quantity:</b> The tickspeed autobuyer can be set to buy a single upgrade per activation\r\nor to buy the max possible once the Tickspeed Challenge (C9) has been beaten.\r\n<br>\r\n<br>\r\n<b>Automatic Dimension Boost Customization:</b> With the Dimension Boost autobuyer you can set the max number of\r\nBoosts it will attempt to buy, a minimum number of Antimatter Galaxies before Dimension Boosts are\r\nalways auto-purchased, and (when unlocked) the ability to buy an exact number of Dimension Boosts in bulk.\r\nIf you reach your specified Galaxy threshold, the autobuyer will ignore your max Boost limit.\r\n<br>\r\n<br>\r\n<b>Max Galaxies:</b> The highest amount of Galaxies the Galaxies autobuyer will buy.\r\n<br>\r\n<br>\r\n<b>IP on crunch:</b> Once you Break Infinity, you can set how many IP you would like to wait for before crunching.\r\n<br>\r\n<br>\r\n<b>Sacrifice Autobuyer:</b> This autobuyer starts with a maxed interval, potentially triggering every tick.\r\n<br>\r\n<br>\r\n<b>Dynamic Amount:</b> Upgraded prestige autobuyers have a mode that triggers a prestige when a specified threshold\r\nis passed. Turning on \"Dynamic Amount\" will allow this threshold value to be automatically increased when unlocking\r\ncertain upgrades or achievements which apply a multiplier to this value.\r\n<br>\r\n<br>\r\n<b>Pause/Resume Autobuyers:</b> This button will pause or resume autobuyers which are turned on.\r\nIt does not change individual autobuyer settings. Think of it like a master switch.\r\n<br>\r\n<br>\r\n<b>Enable/Disable All Autobuyers:</b> This button will turn all of your autobuyers on or off individually.\r\n<br>\r\n<br>\r\n<b>Hotkey: A</b> (for pausing/resuming autobuyers).\r\nAdditionally, holding <b>Alt</b> when pressing a hotkey associated with an upgrade, dimension, or prestige will\r\ntoggle the associated autobuyer.\r\n`,\r\n      isUnlocked: () => true,\r\n      tags: [\"infinity\", \"automation\", \"challenges\", \"rewards\", \"interval\", \"earlygame\"],\r\n      tab: \"automation/autobuyers\"\r\n    }, {\r\n      name: \"Break Infinity\",\r\n      info: () => `\r\nOnce you Break Infinity, you are no longer limited to ${formatPostBreak(Number.MAX_VALUE, 2)} antimatter and can start\r\ngaining more than ${formatInt(1)} IP per crunch depending on how much more antimatter you have when you crunch.\r\n<br>\r\n<br>\r\nYou now gain ~${format(1.78, 2, 2)} IP for crunching at ${formatPostBreak(Number.MAX_VALUE, 2)} antimatter. The IP you\r\ngain for crunching is multiplied by ${formatInt(10)} for every additional factor of\r\n${formatPostBreak(Number.MAX_VALUE, 2)} antimatter you gain (in a continuous manner). This is rounded down to the\r\nnearest integer <i>after</i> all multipliers are applied.\r\n<br>\r\n<br>\r\nThe antimatter costs of all Dimensions begin to increase faster after they pass\r\n${formatPostBreak(Number.MAX_VALUE, 2)}. The cost <i>between</i> upgrades will increase by ${formatX(10)}\r\n<i>per upgrade</i> above ${formatPostBreak(Number.MAX_VALUE, 2)}, and a similar scaling happens to\r\nTickspeed Upgrade costs as well.\r\n`,\r\n      isUnlocked: () => Autobuyer.bigCrunch.hasMaxedInterval || PlayerProgress.eternityUnlocked(),\r\n      tags: [\"limit\", \"crunch\", \"upgrades\", \"midgame\"],\r\n      tab: \"infinity/break\"\r\n    }, {\r\n      name: \"Infinity Dimensions\",\r\n      info: () => `\r\n<b>Unlocking Infinity Dimensions:</b> Infinity Dimensions are unlocked by reaching a certain amount of antimatter.\r\n<br>\r\n<br>\r\n<b>Infinity Dimension Purchasing:</b> Infinity Dimensions are only purchasable in sets of ${formatInt(10)}, and cost\r\nInfinity Points. They give a permanent multiplier per purchase, similar to the other dimensions. The actual multiplier\r\napplied depends on which Infinity Dimension you purchase. <!-- Sorry Garnet :/ -->\r\n<br>\r\n<br>\r\n<b>Infinity Dimension Production:</b> Just like Antimatter Dimensions, each Infinity Dimension produces the\r\nnext highest Infinity Dimension.\r\n<br>\r\n<br>\r\nEvery crunch, your produced Infinity Dimensions are reset to the amount you purchased. While the production\r\nof Infinity Dimensions does not carry between crunches, all the multipliers you got from purchasing them do.\r\n<br>\r\n<br>\r\n<b>Infinity Dimension unlock thresholds (antimatter):</b> ${Array.range(1, 8)\r\n    .map(tier => formatPostBreak(InfinityDimension(tier)._unlockRequirement))\r\n    .join(\", \")}\r\n<br>\r\n<b>Infinity Dimension purchase multipliers:</b> ${Array.range(1, 8)\r\n    .map(tier => format(InfinityDimension(tier)._powerMultiplier))\r\n    .join(\", \")}\r\n<br>\r\n<b>Infinity Dimension base prices (IP):</b> ${Array.range(1, 8)\r\n    .map(tier => format(InfinityDimension(tier)._baseCost))\r\n    .join(\", \")}\r\n<br>\r\n<b>Infinity Dimension price increases:</b> ${Array.range(1, 8)\r\n    .map(tier => format(InfinityDimension(tier)._costMultiplier))\r\n    .join(\", \")}\r\n<br>\r\n<br>\r\nInstead of antimatter, the 1st Infinity Dimension produces Infinity Power, which gives a multiplier applied\r\nto all Antimatter Dimensions equal to (power<sup>${formatInt(7)}</sup>). Infinity Dimensions are not\r\naffected by Tickspeed Upgrades.\r\n`,\r\n      isUnlocked: () => Autobuyer.bigCrunch.hasMaxedInterval || PlayerProgress.eternityUnlocked(),\r\n      tags: [\"id\", \"power\", \"new\", \"dims\", \"unlock\", \"break\", \"midgame\"],\r\n      tab: \"dimensions/infinity\"\r\n    }, {\r\n      name: \"Infinity Challenges\",\r\n      // This one could use some work!\r\n      info: () => `\r\nInfinity Challenges are like Normal Challenges, but they have higher end goals and are generally harder. Instead of\r\nonly unlocking autobuyers, they give you boosts to your various forms of production in more unique ways. Similarly to\r\nNormal Challenges, the rightmost column of Infinity Upgrades are disabled within Infinity Challenges.\r\n<br>\r\n<br>\r\nUnlike the Normal Challenges, which are all unlocked at once, Infinity Challenges require you to reach a certain\r\namount of antimatter before you can attempt them.\r\n<br>\r\n<br>\r\n<b>Infinity Challenge unlock thresholds:</b> ${GameDatabase.challenges.infinity\r\n    .map(ic => formatPostBreak(ic.unlockAM)).join(\", \")}\r\n`,\r\n      isUnlocked: () => Autobuyer.bigCrunch.hasMaxedInterval || PlayerProgress.eternityUnlocked(),\r\n      tags: [\"rewards\", \"break\", \"ic\", \"midgame\"],\r\n      tab: \"challenges/infinity\"\r\n    }, {\r\n      name: \"Replicanti\",\r\n      info: () => `\r\nReplicanti are another resource you unlock at ${format(DC.E140)} IP. Rather\r\nthan producing something else, Replicanti actually produces <i>itself</i> up to a maximum of\r\n${formatPostBreak(Number.MAX_VALUE, 2)}. Replicanti are produced at their own pace, unaffected by Tickspeed Upgrades.\r\nEach individual Replicanti has a certain chance (initially ${formatPercents(0.01)}) of producing another Replicanti\r\nevery Replicanti tick (initially every second), and both of these can be upgraded by spending IP.\r\n<br>\r\n<br>\r\nIf you have purchased a Replicanti Galaxy upgrade, then you can get a \"free\" Replicanti Galaxy in exchange for\r\nresetting your Replicanti count back to ${formatInt(1)}. This Galaxy is free in that it will act as if it was an\r\nAntimatter Galaxy, but it will not make your next Antimatter Galaxy more expensive. However, it will still reset the\r\nsame things as an Antimatter Galaxy does.\r\n<br>\r\n<br>\r\n<b>Hotkey: R</b> will try to purchase a Replicanti Galaxy.\r\n<br>\r\nReplicanti give a multiplier to all Infinity Dimensions, which will reach a maximum of\r\n${formatX(Math.pow(2, 20), 2, 2)} at ${formatPostBreak(Number.MAX_VALUE, 2)} Replicanti.\r\n<br>\r\n<br>\r\n<b>Chance upgrade cost:</b> Base ${format(DC.E150)} IP, cost increment ${formatX(DC.E15)} IP\r\n<br>\r\n<b>Interval upgrade cost:</b> Base ${format(DC.E140)} IP, cost increment ${formatX(DC.E10)} IP\r\n<br>\r\n<b>Galaxy upgrade cost:</b> Base ${format(DC.E170)} IP, cost increment ${formatX(DC.E25)} IP and an additional\r\n${formatX(1e5)} IP per upgrade, scaling similarly to distant Antimatter Galaxies. Above ${formatInt(100)} Replicanti\r\nGalaxies, this ${formatX(1e5)} per upgrade changes to ${formatX(DC.E55)}. Above ${formatInt(1000)}, the scaling switches\r\nfrom quadratic to cubic, with the ${formatX(DC.E55)} multiplier itself increasing by ${formatX(DC.E5)} per upgrade.\r\n`,\r\n      isUnlocked: () => Replicanti.areUnlocked || PlayerProgress.eternityUnlocked(),\r\n      tags: [\"interval\", \"chance\", \"infinity\", \"galaxy\", \"galaxies\", \"midgame\"],\r\n      tab: \"infinity/replicanti\"\r\n    }, {\r\n      name: \"Eternity\",\r\n      info: () => `\r\nUpon reaching ${formatPostBreak(Number.MAX_VALUE, 2)} IP, you can Eternity. Eternities will reset everything before this\r\npoint except challenge times, Achievements, and anything under the General section of the Statistics tab. You will be\r\nable to access more content after your first Eternity.\r\n<br>\r\n<br>\r\nYou can pass ${formatPostBreak(Number.MAX_VALUE, 2)} IP without anything being forced upon you, unlike the first time\r\nyou reached ${formatPostBreak(Number.MAX_VALUE, 2)} antimatter. You will receive more Eternity Points the more\r\nInfinity Points you had before going Eternal. You will also gain one \"Eternity\" for completing an Eternity.\r\n<br>\r\n<br>\r\nEternity Point gain scales similarly to Infinity Point gain, but scaling off of Infinity Points instead of antimatter.\r\nThe base amount of EP gained at ${formatPostBreak(Number.MAX_VALUE, 2)} IP is ~${format(1.62, 2, 2)} EP, multiplied by\r\n${formatInt(5)} for every factor of ${formatPostBreak(Number.MAX_VALUE, 2)} more IP you have. This is always rounded\r\ndown, which means that you will get ${formatInt(1)} EP at ${formatPostBreak(Number.MAX_VALUE, 2)} IP but will not reach\r\n${formatInt(2)} EP until ${formatPostBreak(DC.E349)}.\r\n<br>\r\n<br>\r\n<b>Hotkey: E</b> will try to perform an Eternity reset.\r\n`,\r\n      isUnlocked: () => PlayerProgress.eternityUnlocked(),\r\n      tags: [\"eternal\", \"ep\", \"reset\", \"prestige\", \"midgame\"],\r\n      tab: \"eternity/upgrades\"\r\n    }, {\r\n      name: \"Eternity Milestones\",\r\n      info: () => `\r\nTo make Eternities faster and more convenient, you will unlock various buffs as you get more \"Eternity\". These\r\nbuffs will generally let you start with certain upgrades you would otherwise lose after Eternity, give you new\r\nautobuyers for better automation, or give you a way to passively gain resources offline at a reduced rate.\r\n<br>\r\n<br>\r\nMilestones which give you upgrades will automatically purchase and upgrade them to their maximum when first starting\r\nthe Eternity, effectively letting you have them permanently.\r\n<br>\r\n<br>\r\nAll of the new autobuyers will have toggles next to their respective manual buttons (for example, Infinity Dimension\r\nautobuyers can be found on the Infinity Dimension tab) in addition to their entries on the autobuyers tab.\r\nThe improvements to the Dimension Boost, Antimatter Galaxy, and Big Crunch autobuyers update their\r\nalready existing entries on the autobuyer tab.\r\n<br>\r\n<br>\r\nThe passive generation milestones only work offline by design and may need certain autobuyer settings to work\r\nproperly, as noted on the milestone page itself.\r\n`,\r\n      isUnlocked: () => PlayerProgress.eternityUnlocked(),\r\n      tags: [\"eternities\", \"rewards\", \"automation\", \"midgame\"],\r\n      tab: \"eternity/milestones\"\r\n    }, {\r\n      name: \"Time Dimensions\",\r\n      info: () => `\r\nAfter your first Eternity, you unlock Time Dimensions. You buy them with Eternity Points and they produce Time Shards,\r\nwhich provide Tickspeed Upgrades. These Tickspeed Upgrades function like normal Tickspeed Upgrades but do not increase\r\ntheir cost. Time Dimensions, Time Shards, and the Tickspeed Upgrades they provide are kept on Infinity,\r\nbut reset every Eternity.\r\n<br>\r\n<br>\r\nSimilarly to the other dimensions, Second Time Dimensions produce 1st Time Dimensions and so on. Similarly to Infinity\r\nDimensions, your production will be reset to the amount you purchased after every Eternity, but you will keep any\r\nupgrades to your multipliers you purchased.\r\n<br>\r\n<br>\r\nEach purchase increases the multiplier of that specific Time Dimension by ${formatX(4)}. The cost multiplier between\r\nupgrades has a base value, but is increased by ${formatX(1.5, 1, 1)} at\r\n${format(TimeDimension(1)._costIncreaseThresholds[0], 2)} EP and ${formatX(2.2, 1, 1)} (of the base value) at\r\n${format(TimeDimension(1)._costIncreaseThresholds[1])} EP. These increases apply retroactively, causing the cost to\r\njump when they reach those thresholds, and only apply to the first four dimensions. Beyond\r\n${format(TimeDimension(1)._costIncreaseThresholds[2])} EP each dimension purchase counts as four purchases for the\r\npurpose of cost increases, causing the price to rise much more steeply.\r\n<br>\r\n<b>Time Dimension base prices (EP):</b> ${Array.range(1, 8)\r\n    .map(tier => format(TimeDimension(tier)._baseCost))\r\n    .join(\", \")}\r\n<br>\r\n<b>Time Dimension base price increases:</b> ${Array.range(1, 8)\r\n    .map(tier => format(TimeDimension(tier)._costMultiplier))\r\n    .join(\", \")}\r\n<br>\r\n<br>\r\nEach threshold to gain another Tickspeed Upgrade is ${formatPercents(0.33)} more Time Shards than the previous,\r\nor ${formatPercents(0.25)} with the relevant Time Study. After ${formatInt(FreeTickspeed.softcap)} upgrades, the\r\nmultiplier between each successive free Tickspeed Upgrade will gradually increase at a rate of ~${formatX(1.35, 0, 2)}\r\nper ${formatInt(50000)} upgrades (${formatX(1.000006, 0, 6)} per upgrade).\r\n`,\r\n      isUnlocked: () => PlayerProgress.eternityUnlocked(),\r\n      tags: [\"dims\", \"td\", \"shards\", \"eternity\", \"midgame\"],\r\n      tab: \"dimensions/time\"\r\n    }, {\r\n      name: \"Time Studies\",\r\n      info: () => `\r\nA Time Study is a powerful post-Eternity upgrade, which costs a new resource called Time Theorems. Time Studies can\r\nboost the production of anything you have seen so far in the game, or even change the way some formulas work.\r\n<br>\r\n<br>\r\nTime Theorems are a limited resource which costs more for each one you buy. They can be bought with antimatter,\r\nInfinity Points, or Eternity Points. Their cost increases by a set factor per purchase. Time Theorems do not\r\nreset on Eternity.\r\n<br>\r\n<br>\r\nStudies are laid out in a tree-like fashion, where you must buy prerequisites before continuing. The only study you\r\ncan buy at first is the very top one, and then from there you can purchase any study directly below it which you can\r\nafford. However, there are three exceptions:\r\n<br>\r\nWhere the lines between studies have a color, you can only choose one of the three paths at a time.\r\n<br>\r\nWhen a study for an Eternity Challenge is in the way, you need to complete all challenges connected to it at least\r\nonce in order to access the study. You do not need to have the challenge study purchased in order to access it.\r\n<br>\r\nNear the bottom, where all the edges join together again, you can only pick one study out of each pair.\r\n<br>\r\n<br>\r\nYou are able to hold down shift and then click on a Time Study to buy all studies until that point. This might not buy\r\nthe studies you want if you shift-click a study in a position where you would have to choose between two or more\r\ndifferent options which you cannot get together (see above), or you cannot afford all the studies needed to reach that\r\npoint. Shift-click will buy studies greedily, getting as many as possible per row before moving farther downward.\r\n<br>\r\n<br>\r\n<b>Presets:</b> The buttons initially labeled 1 through 6 allow you to save your current set of studies into the slot,\r\nletting you quickly buy that particular set of studies again with a single click. You can hover over the button and\r\nuse the tooltip to load/save a slot, or click to load and shift-click to save. These presets can be renamed, but you\r\nare not allowed to give multiple presets the same name.\r\n<br>\r\n<br>\r\n<b>Import Tree/Edit Preset:</b> When editing a preset or importing a Time Study Tree, the modal will display what\r\nTime Studies will be bought when it is loaded, along with any errors.\r\nFor the split paths, you can use the name as a shorthand for the collection of studies.\r\nFor instance, you can replace \"71, 81, 91, 101\" to represent fully purchasing the antimatter split with\r\njust \"antimatter\". Additionally, if a Time Study string has a valid Eternity Challenge, adding a \"!\" to the end of\r\nthe string will make the game to try to immediately unlock and enter the Eternity Challenge when used.\r\n<br>\r\n<br>\r\n<b>Preferences:</b> Clicking the gear icon will open up a dialog which lets you select \"default\" paths to pick in the\r\nthree-way branches. Choosing a default will change the shift-click behavior mentioned above so that it will attempt\r\nto buy your preferred path and continue on instead of stopping completely at the tree splits. You can choose two paths\r\nfor the Dimension split in this dialog if you have purchased the relevant Time Study.\r\n<br>\r\n<br>\r\n<b>Respecs:</b> A respec allows you to reset the upgrades you have in the tree to retrieve all of the Time Theorems\r\nspent on them. It can be done for free, but only triggers on finishing an Eternity; you cannot respec Time Studies in\r\nthe middle of an Eternity.\r\n<br>\r\n<br>\r\n<b>Costs for Time Theorems:</b>\r\n<br>\r\n<b>Antimatter:</b> Initially ${format(DC.E20000)}, ${formatX(DC.E20000)} per Theorem\r\n<br>\r\n<b>Infinity Points:</b> Initially ${formatInt(1)}, ${formatX(DC.E100)} per Theorem\r\n<br>\r\n<b>Eternity Points:</b> Initially ${formatInt(1)}, ${formatX(2)} per Theorem\r\n`,\r\n      isUnlocked: () => PlayerProgress.eternityUnlocked(),\r\n      tags: [\"eternity\", \"ts\", \"theorems\", \"tree\", \"study\", \"midgame\"],\r\n      tab: \"eternity/studies\"\r\n    }, {\r\n      name: \"Eternity Challenges\",\r\n      info: () => `\r\nEternity Challenges are another set of challenges which are unlocked by the Time Study Tree. They require a certain\r\namount of Time Theorems and a secondary requirement which you must meet when you unlock the challenge.\r\n<br>\r\n<br>\r\nWhen you enter an Eternity Challenge, your goal becomes reaching a certain target IP. After completing the challenge,\r\nyou do not need to have the Eternity Challenge's study unlocked for the reward to take effect. The rewards for these\r\nchallenges are similar to Time Studies, but often even stronger and permanent since they do not require you to spend\r\nTime Theorems to have their effects.\r\n<br>\r\n<br>\r\nYou can only have one Eternity Challenge unlocked at a time.\r\n<br>\r\n<br>\r\nYou can complete each Eternity Challenge up to five times. After each completion, the rewards grow stronger but the\r\ngoal to the next completion also increases. Additionally, the secondary requirement to unlock the challenge again will\r\nalso increase. The Time Theorem cost does not increase.\r\n<br>\r\n<br>\r\nCompleting an Eternity Challenge's secondary requirements will remove them from the study requirement until you complete\r\nthat particular Eternity Challenge, meaning you only need to complete the secondary requirement <i>once</i>.\r\nAs a result, you can unlock an Eternity Challenge with one set of studies, and then respec into a different set of\r\nstudies to beat the challenge. EC11 and EC12 are exceptions to this rule - the Dimension path restrictions remain even\r\nif you respec your time studies.\r\n`,\r\n      isUnlocked: () => PlayerProgress.eternityUnlocked(),\r\n      tags: [\"ec\", \"study\", \"time\", \"rewards\", \"completions\", \"midgame\"],\r\n      tab: \"challenges/eternity\"\r\n    }, {\r\n      name: \"Time Dilation\",\r\n      info: () => `\r\nTime Dilation is unlocked when you purchase the Time Study to unlock it below the EC11 and EC12 studies.\r\nIn order to purchase this Time Study, you need ${formatInt(5000)} unspent TT with a tree that can reach\r\nthe study, a <i>total</i> of ${formatInt(TimeStudy.dilation.totalTimeTheoremRequirement)} TT, and must have\r\ncompleted both EC11 and EC12 five times each.\r\n<br>\r\n<br>\r\nDilating time will start a modified Eternity, called Time Dilation, in which all of your Antimatter/Infinity/Time\r\nDimension multipliers’ <i>exponents</i> and the tickspeed multipliers’ <i>exponent</i> will be raised to\r\n${formatPow(0.75, 2, 2)}, significantly reducing them. If you can reach ${formatPostBreak(Number.MAX_VALUE, 2)} IP\r\nto complete this Dilated Eternity, you will be rewarded with a new resource called Tachyon Particles.\r\n<br>\r\n<br>\r\nYou can Dilate as many times as you want, but Tachyon Particles cannot be \"farmed\" like other resources. Tachyon\r\nParticles are never reduced, only increased, and they are increased up to a cap based on your TP multipliers and\r\nantimatter earned in the current Dilation. As a result, you generally cannot increase your TP unless\r\nyou have gained a TP multiplier or are able to significantly increase your antimatter in Dilation.\r\n<br>\r\n<br>\r\nTachyon Particles generate another currency called Dilated Time. Dilated Time is translated into Tachyon Galaxies by\r\nreaching thresholds similarly to the Tickspeed Upgrades gained from Time Dimensions. These Tachyon Galaxies are like\r\nReplicanti Galaxies in that they affect tickspeed as if they were Antimatter Galaxies but they do not increase the cost\r\nof your next Antimatter Galaxy.\r\n<br>\r\n<br>\r\nUnlocking Time Dilation also unlocks upgrades you can purchase using Dilated Time. The first and third upgrades in the\r\nfirst row of Dilation Upgrades can be repeatedly purchased as many times as you can afford them. The second upgrade can\r\nalso be repeatedly bought, but eventually reaches a cap.\r\n`,\r\n      isUnlocked: () => DilationTimeStudyState.studies[1].isBought || PlayerProgress.realityUnlocked(),\r\n      tags: [\"dial\", \"dt\", \"dilated\", \"tachyon\", \"particle\", \"study\", \"free\", \"galaxy\", \"galaxies\", \"midgame\"],\r\n      tab: \"eternity/dilation\"\r\n    }, {\r\n      name: \"Reality\",\r\n      info: () => `\r\nWhen you reach ${formatPostBreak(DC.E4000)} EP and have completed the first\r\n${formatInt(13)} rows of Achievements, you will be able to purchase the Time Study that unlocks Reality.\r\nUnlocking it opens a new tab, where you can find the button to make a new Reality. Starting a new Reality\r\nwill reset almost the entire game up to this point, but in exchange gives\r\nyou a new currency known as Reality Machines, a Glyph, and a Perk Point.\r\n<br>\r\n<br>\r\nUnlike the other resets so far, you also lose the first ${formatInt(13)} rows of Achievements - that is, all of the\r\npre-Reality Achievements and all of their associated rewards. However, you will still keep all values under the General\r\nheader in the Statistics tab and all of your best Challenge times.\r\n<br>\r\n<br>\r\nAfter completing your first Reality, the Glyphs tab contain a button which lets you restart your current Reality again,\r\nwithout changing what your upcoming Glyph choices are. <b>Note that this will not give you any rewards, even if you\r\nwould otherwise be able to complete the Reality normally.</b>\r\n<br>\r\n<br>\r\nYou need to redo the requirements for each Achievement in order to get their rewards again, but you will also passively\r\nunlock the next incomplete Achievement every ${timeDisplayNoDecimals(30 * 60000)} without any effort even if you\r\notherwise do not have the requirements to do so. This automatic completion can be disabled, in which case the timer will\r\ncount down to zero and pause, immediately completing another Achievement when unpaused. The timer still progresses\r\nat the same rate while offline.\r\n<br>\r\n<br>\r\nReality Machines can be spent on different upgrades throughout the Reality tab and are your primary currency from this\r\npoint onwards. Glyphs are equippable objects which you must equip in order to use their boosts. Perk Points are another\r\ncurrency that can be spent in the Perks subtab on different Perks.\r\n<br>\r\n<br>\r\nReality Machines scale purely off of EP, and the Reality button will tell you how much EP you need in order to gain\r\nthe next one. The first ${formatInt(10)} RM scale linearly in the exponent between\r\n${formatPostBreak(DC.E4000)} EP and ${formatPostBreak(DC.C10P16000D3)} EP, and then past that\r\nRM = ${formatInt(1000)}<sup>log<sub>${formatInt(10)}</sub>(EP)/${formatInt(4000)}-${formatInt(1)}</sup>. This formula\r\nis higher RM gain than linear above ${formatPostBreak(DC.C10P16000D3)} EP.\r\n<br>\r\n<br>\r\nGlyph level scales off of a combination of Eternity Points, Replicanti, and Dilated Time, with a minimum level of\r\n${formatInt(1)}. The type, effects, and rarity of Glyphs are randomized.\r\n<br>\r\n<br>\r\nYou get exactly ${formatInt(1)} Perk Point per Reality.\r\n<br>\r\n<br>\r\n<b>Hotkey: Y</b> will try to perform a Reality reset.\r\n`,\r\n      isUnlocked: () => PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought,\r\n      tags: [\"rm\", \"machines\", \"glyph\", \"perk\", \"reset\", \"prestige\", \"endgame\", \"lategame\"],\r\n      tab: \"reality/upgrades\"\r\n    }, {\r\n      name: \"Glyphs\",\r\n      info: () => `\r\nA Glyph is an equippable object that has four attributes:\r\n<br>\r\n<b>Type</b> - This is a name given to the Glyph based on what part of the game it will tend to boost\r\n(eg. \"Glyph of X\"). This determines the possible effects it may have.\r\n<br>\r\n<b>Level</b> - This contributes to how strong your Glyph is, and it scales based how much of various\r\nresources you obtained in the Reality you gained it from.\r\n<br>\r\n<b>Rarity</b> - This is a percentage, between ${formatPercents(0)} and ${formatPercents(1)}, which also\r\naffects the strength of your Glyph. This is random, but can be influenced by various upgrades.\r\nThe percentage is effectively a quality\r\nrating, higher values are better. Specific ranges of rarities are given names, such as Common or Uncommon.\r\n<br>\r\n<b>Effects</b> - These are the boosts that equipping the Glyph will give you, and can contain up to four effects.\r\nGlyphs with higher level or rarity will generally have more effects than weaker Glyphs.\r\n<br>\r\n<b>Note: Your first Glyph will have a fixed effect and rarity, but its level will scale based on your progress before\r\nany Reality content. Once you receive a Glyph, its attributes cannot be changed.</b>\r\n<br>\r\n<br>\r\nTo equip a Glyph, double-click or drag the icon from your inventory into one of the active circles in the middle\r\nof the screen. When equipped, Glyph icons become circular and add their effects to the list on the right.\r\n<br>\r\n<br>\r\nEquipping multiple Glyphs with the same effect will combine their effects; effects with \"+\" will generally add\r\ntheir values together and effects with \"×\" will generally multiply their values together.\r\n<br>\r\n<br>\r\nYou can equip Glyphs into <i>empty</i> active slots at any time during a Reality, which will immediately apply the\r\neffects of the new Glyph. You can also drag Glyphs into already-occupied slots to switch which ones you have equipped,\r\nbut this will restart your current Reality.\r\n<br>\r\n<br>\r\nThe slots in the first rows of your inventory are \"protected\" slots. New Glyphs will never be placed into them (even if\r\nthere is no more room in your inventory), and they are unaffected by the Sort and Auto clean buttons. If you run out of\r\nspace for new Glyphs in your inventory, any Glyphs you would receive will be automatically deleted (or sacrificed\r\nif unlocked).\r\n<br>\r\n<br>\r\nYou can delete Glyphs from your inventory by shift-clicking them, which will prompt you with a confirmation dialog\r\nasking if you are sure you want to delete the Glyph. Holding shift and ctrl together while clicking will bypass this\r\ndialog. <b>However, deleting Glyphs will give you no benefit beyond clearing up inventory space if you do so before\r\nunlocking Glyph Sacrifice from a Reality Upgrade!</b>\r\n<br>\r\n<br>\r\nOnce you unlock Glyph Sacrifice, you will be able to disable the Glyph Selection modal from appearing. If desired, you\r\ncan force the modal to appear again for this Reality (ignoring this setting) by shift-clicking the Reality button.\r\nCompleting a Reality with the selection modal disabled will choose a random Glyph from your options.\r\n<br>\r\n<br>\r\nClicking a group of circular Glyphs outside of a modal window will open up a modal which displays a detailed summary\r\nof all those Glyphs and their various attributes. The summary will show the information for all Glyphs at once with\r\nslightly shorter descriptions, making it more suitable for sharing with others. This can be done for Glyph records\r\nin the Statistics page, your equipped Glyphs, and the Upcoming Glyph Selection this Reality.\r\n`,\r\n      isUnlocked: () => PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought,\r\n      tags: [\"reality\", \"sacrifice\", \"level\", \"endgame\", \"lategame\"],\r\n      tab: \"reality/glyphs\"\r\n    }, {\r\n      name: \"Perks\",\r\n      info: () => `\r\nPerks are a type of upgrade unlocked upon Reality. Each Perk effect varies, but most are QoL (quality of life)\r\nimprovements which you can choose your own path through. All Perks only require ${formatInt(1)} Perk Point to buy.\r\n<br>\r\n<br>\r\nEach Reality you gain ${formatInt(1)} Perk Point which can be spent on an upgrade on the tree, starting with\r\n\"You can now choose from ${formatInt(Perk.firstPerk.config.effect)} Glyphs on Reality\". You can only unlock Perks\r\nwhich are directly adjacent\r\nto Perks you already have, although there are loops in the tree which you can go through in either direction.\r\n<br>\r\n<br>\r\nThe Perk nodes can have two different shapes - circular or diamond. The only difference between the two is that\r\ndiamond-shaped Perks give Automator Points in addition to their normal effect. Different nodes also have\r\ndifferent colors, roughly indicating which part of the game they affect the most.\r\n`,\r\n      isUnlocked: () => PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought,\r\n      tags: [\"pp\", \"reality\", \"tree\", \"endgame\", \"lategame\"],\r\n      tab: \"reality/perks\"\r\n    }, {\r\n      name: \"Automator Overview\",\r\n      info: () => `\r\nThe Automator is unlocked upon reaching a total of ${formatInt(AutomatorPoints.pointsForAutomator)} Automator Points.\r\nAutomator Points are given when unlocking various Perks or Reality Upgrades, by unlocking the Black Hole, or by\r\nsimply completing more Realities.\r\n<br>\r\n<br>\r\nThe Automator uses a scripting language that allows you to automate nearly the entire game.\r\nThe interface has two panes, a script pane on the left where you enter the commands to automate the game and a pane\r\non the right which has multiple panels which do many different things as explained on the Automator Introduction page.\r\n<br>\r\n<br>\r\nIf you want a larger workspace, you can press the button in the top right corner of the documentation pane of the\r\nAutomator to expand it to fullscreen. You can also drag the boundary between the panes horizontally to resize the\r\npanes if you want more room to write your script or read documentation.\r\n<br>\r\n<br>\r\nBy pressing the top-right button on the script pane, you can switch between the Automator's block and text editor\r\nmodes; the block mode may be more approachable if you are unfamiliar with programming. To enter commands in block mode,\r\nselect the command block pane on the right and drag the box for the relevant command into the script pane and drop it\r\nwhere you want the command to go. Commands can be freely rearranged by dragging the blocks around if needed. Switching\r\nbetween block and text mode will attempt to automatically translate your script as well, although you may lose part of\r\nyour converted script if it contains errors.\r\n<br>\r\n<br>\r\nJust like your entire savefile, individual Automator scripts can be imported and exported from the game.\r\nProperly-formatted script strings will begin with <b>${GameSaveSerializer.startingString[\"automator script\"]}</b> and\r\nend with <b>${GameSaveSerializer.endingString[\"automator script\"]}</b>. If this is not the case then part of your script\r\nwas lost in the process of copy-pasting. The import function will load the script into a new slot; your current script\r\nwill not be lost or overwritten.\r\n<br>\r\n<br>\r\n<b>Hotkey: U</b> will pause/unpause the Automator.\r\n`,\r\n      isUnlocked: () => Player.automatorUnlocked,\r\n      tags: [\"automation\", \"reality\", \"code\", \"script\", \"endgame\", \"lategame\"],\r\n      tab: \"automation/automator\"\r\n    }, {\r\n      name: \"Automator Technical Details\",\r\n      info: () => `\r\n<b>Technical Limits</b>\r\n<br>\r\n<br>\r\nThere are a few limitations to scripts in order to reduce lag and prevent save file size from getting too large.\r\nThese limits are as follows:\r\n<br>\r\n- Individual scripts are limited to a maximum of ${formatInt(AutomatorData.MAX_ALLOWED_SCRIPT_CHARACTERS)}\r\ncharacters each and all scripts combined together cannot exceed ${formatInt(AutomatorData.MAX_ALLOWED_TOTAL_CHARACTERS)}\r\ncharacters total.\r\n<br>\r\n- Script names cannot exceed ${formatInt(AutomatorData.MAX_ALLOWED_SCRIPT_NAME_LENGTH)} characters.\r\n<br>\r\n- Defined constants cannot have names longer than ${formatInt(AutomatorData.MAX_ALLOWED_CONSTANT_NAME_LENGTH)}\r\ncharacters, or values longer than ${formatInt(AutomatorData.MAX_ALLOWED_CONSTANT_VALUE_LENGTH)} characters.\r\n<br>\r\n- You cannot have more than a total of ${formatInt(AutomatorData.MAX_ALLOWED_SCRIPT_COUNT)} scripts or\r\n${formatInt(AutomatorData.MAX_ALLOWED_CONSTANT_COUNT)} defined constants.\r\n<br>\r\n<br>\r\n<b>Script Saving</b>\r\n<br>\r\n<br>\r\nScripts are automatically saved as you edit them, but are not saved to your game save until the global autosave timer\r\n(ie. \"Time since last save\") triggers a full game save. If you make changes to scripts right before closing the game,\r\nyou should wait until the game saves afterwards in order to not lose your changes. Any edits made to your scripts\r\nwhile above the length limits will not be saved until you shorten your scripts to be below them again.\r\n<br>\r\n<br>\r\n<b>Automator Ticks</b>\r\n<br>\r\n<br>\r\nThe Automator's \"execution timer\" is based on real time, and is therefore unaffected by things such as the Black Hole,\r\nTime Glyph effects, and EC12's negative effect. However this execution timer runs entirely independently from the main\r\ngame's production loop, meaning that at faster speeds the Automator can run multiple commands per production tick.\r\n<br>\r\n<br>\r\nSome commands are more intensive on the game's internal code and may take longer than a single Automator tick in order\r\nto process on slower computers. In that case, the Automator will execute those commands and then attempt to \"catch up\"\r\nby executing the following commands as quickly as possible until it has run as many commands as it should have at a\r\nconstant execution speed.\r\n<br>\r\n<br>\r\n<b>Interactions with Offline Progress</b>\r\n<br>\r\n<br>\r\nLonger production ticks during Offline Progress simulation means that all of your resources are effectively given\r\nin large chunks instead of more continuously. This may have potentially adverse effects on your script's\r\nbehavior while offline, depending on how exactly your script depends on the game state to work properly.\r\nAdditionally, the PAUSE command may behave oddly due to it also being based on real time.\r\n`,\r\n      isUnlocked: () => Player.automatorUnlocked,\r\n      tags: [\"automation\", \"reality\", \"code\", \"script\", \"endgame\", \"lategame\"],\r\n      tab: \"automation/automator\"\r\n    }, {\r\n      name: \"Black Hole\",\r\n      info: () => `\r\nThe Black Hole is a feature which speeds up how fast the game runs, on a periodic cycle.\r\nThe game will run at normal speed for some amount of time, then have a burst of running extremely fast for a short\r\nperiod of time before going back to normal speed and repeating the cycle.\r\n<br>\r\n<br>\r\nIncreased game speed from Black Holes is much stronger than tickspeed because unlike tickspeed, it affects\r\n<i>everything equally</i>, including things which are only partially affected by tickspeed\r\n(eg. Infinity/Time Dimensions), things which are normally completely unaffected (eg. DT/TT generation),\r\nand effects which are boosted purely on time spent (eg. idle path IP/EP multipliers).\r\n<br>\r\n<br>\r\nWhile most features in the game are boosted by this increased game speed, there are some which remain unaffected.\r\nIn these cases, it will be specifically mentioned that a given time is stated as <i>real time</i> as opposed to\r\n<i>game time</i>. One such example is the set of Perks which automatically completes Eternity Challenges over time.\r\nOtherwise, it should be assumed from this point onward that all references to time are for <i>game time</i>.\r\nNote that this also includes situations where you may want to have a <i>lower</i> amount of time spent, like\r\nthe Reality Upgrade \"Replicative Rapidity\" for example.<br>\r\n<b>See 'What has changed' to know about how this works with this mod's speedup.</b>\r\n<br>\r\n<br>\r\nYou can buy upgrades for the Black Hole by using Reality Machines. There are three upgrades for the Black Hole:\r\n<br>\r\n<b>Interval</b> - How long the Black Hole is inactive between bursts,\r\nreduced by ${formatPercents(0.2)} per upgrade.\r\n<br>\r\n<b>Power</b> - How much faster the game runs during the temporary speed bursts,\r\nincreased by ${formatPercents(0.35)} per upgrade.\r\n<br>\r\n<b>Duration</b> - How long each speed burst lasts before going back to normal speed,\r\nincreased by ${formatPercents(0.3)} per upgrade.\r\n<br>\r\n<br>\r\n${formatInt(100)} days of <i>game time</i> after unlocking the Black Hole, you unlock the ability to purchase\r\na Reality Upgrade that allows you to have a second Black Hole.\r\nThe timer on the second Black Hole only advances when the first Black Hole is active. So, for example, if the first\r\nBlack Hole has a duration of ${formatInt(4)} minutes and the second has an interval of ${formatInt(8)} minutes, the\r\nsecond Black Hole will only activate once every two cycles of the first Black Hole regardless of how short the\r\nfirst Black Hole's interval is. Note that the timer shown in the in-game header takes account of this and shows\r\nthe actual time until the second Black Hole activates; in the Black Hole tab, you can see the amount of time with\r\nthe first Black Hole active needed for the second Black Hole to activate.\r\n<br>\r\n<br>\r\nWhen a Black Hole is active at least ${formatPercents(0.9999, 2)} of the time, it becomes permanently active.\r\nThis is tracked separately for the two Black Holes.\r\n<br>\r\n<br>\r\nWhile offline, Black Hole cycles will still advance normally and their active speed boosts will apply fully as if the\r\ngame were still open. Offline time simulates segments of inactive and active Black Holes with different tick lengths\r\nin order to reduce the negative effects of small tick count during active periods; the entry for \"Offline Progress\"\r\nhas been updated with more technical details.\r\n<br>\r\n<br>\r\nThe Black Holes can be paused, completely halting their interval/duration cycle. However, when unpausing them, it will\r\ntake ${BlackHoles.ACCELERATION_TIME} real-time seconds for them to go from inactive to their maximum boosted speed.\r\nThis acceleration time will still advance the cycle as if it were running at full speed; so\r\nwhile pausing gives some more control, it also ultimately results in some boosted time being lost.\r\n<br>\r\n<br>\r\nPausing and unpausing affects both Black Holes; they cannot be paused or unpaused independently. They can be paused\r\nautomatically ${BlackHoles.ACCELERATION_TIME} real-time seconds before activation by toggling the relevant setting on\r\nthe Black Hole tab.\r\n<br>\r\n<br>\r\n<b>Upgrade Cost Information:</b>\r\n<br>\r\n<b>Interval</b> - Base cost of ${formatInt(15)} RM and increase of ${formatX(3.5, 0, 1)} per upgrade.\r\n<br>\r\n<b>Power</b> - Base cost of ${formatInt(20)} RM and increase of ${formatX(2)} per upgrade.\r\n<br>\r\n<b>Duration</b> - Base cost of ${formatInt(10)} RM and increase of ${formatX(4)} per upgrade.\r\n<br>\r\n<b>Increased cost scaling:</b> Above ${format(1e30)} RM, the cost multiplier between purchases increases by an additive\r\n+${format(0.2, 0, 1)} per upgrade. Above ${format(Number.MAX_VALUE, 1)} RM, a new scaling occurs which ignores all the\r\nprevious behavior. From this point, all upgrades instead behave as if they had an initial cost of ${format(DC.E310)}\r\nand further upgrade costs increase by ${format(1e6)}, ${format(1e7)}, and so on (${formatX(10)} between upgrades).\r\n<br>\r\n<b>Black Hole 2:</b> All upgrades have an initial cost ${formatX(1000)} higher than the first Black Hole,\r\nbut the same cost multipliers.\r\n<br>\r\n<br>\r\n<b>Hotkey: B</b> will pause/unpause the Black Holes.\r\n`,\r\n      isUnlocked: () => player.blackHole[0].unlocked,\r\n      tags: [\"reality\", \"time\", \"speed\", \"duration\", \"interval\", \"rm\", \"endgame\", \"lategame\"],\r\n      tab: \"reality/hole\"\r\n    }, {\r\n      name: \"Celestials\",\r\n      info: () => `\r\nOnce you get all of the Reality Upgrades, the first Celestial is unlocked. This opens up a new tab for Celestials, next\r\nto the Reality tab. The first subtab under the Celestials tab shows a map called \"Celestial Navigation\" which updates as\r\nyou progress through the game. Only part of the map will be visible when first unlocked, but new content will gradually\r\nbe revealed as you approach it, generally with a visual indication of your progress towards the next step.\r\n<br>\r\n<br>\r\nEach Celestial has unique mechanics and upgrades, and you need to defeat all seven to beat the game.\r\nUnlocking or defeating a Celestial has different conditions depending on the Celestial's mechanics.\r\n<br>\r\n<br>\r\nAll Celestials have their own Celestial Reality, but how the Reality is relevant to each Celestial and the rest of\r\nthe game will depend on the Celestial.\r\n<br>\r\n<br>\r\nCelestials are timeless entities. Unless otherwise stated, any new mechanics introduced by Celestials are not affected\r\nby game speed multipliers and instead refer specifically to real time instead of game time.\r\n`,\r\n      isUnlocked: () => Teresa.isUnlocked,\r\n      tags: [\"reality\", \"challenges\", \"endgame\", \"lategame\"],\r\n      tab: \"celestials/celestial-navigation\"\r\n    }, {\r\n      name: \"Teresa, Celestial of Reality\",\r\n      alias: \"Teresa\",\r\n      info: () => `\r\nTeresa is the first Celestial. They are unlocked by Achievement 147, which requires obtaining all Reality Upgrades.\r\n<br>\r\n<br>\r\nOn the main screen, there is a bar with a button above it that says \"Pour RM\". This allows you to put your RM into the\r\ncontainer for a Reality Machine multiplier. RM which has been poured into the container cannot be retrieved.\r\nWhen you reach ${format(TeresaUnlocks.run.price)} RM inside of the container, you unlock Teresa's Reality.\r\n<br>\r\n<br>\r\nWhen you complete Teresa's Reality,\r\n${Teresa.runCompleted\r\n    ? \"your Glyph Sacrifice is multiplied based on the amount of antimatter gained during the run\"\r\n    : \"<div style='color: var(--color-bad);'>(complete Teresa's Reality to see the reward)</div>\"}.\r\nCompleting Teresa's Reality is only part of the story; you need to keep pouring RM in order to progress. Once\r\nyou are at ${format(TeresaUnlocks.effarig.price)} RM in the container, you will unlock the next Celestial.\r\n<br>\r\n<br>\r\n${Teresa.runCompleted\r\n    ? \"Teresa's Reality can be entered again after completing it, and its reward will become stronger if you \" +\r\n      \"reach a higher amount of antimatter on this repeat run.\"\r\n    : \"(More information available - complete Teresa's Reality)\"}\r\n`,\r\n      isUnlocked: () => Teresa.isUnlocked,\r\n      tags: [\"rm\", \"endgame\", \"lategame\", \"perks\", \"sacrifice\", \"boo\", \"ghost\", \"celestial\"],\r\n      tab: \"celestials/teresa\"\r\n    }, {\r\n      name: \"Effarig, Celestial of Ancient Relics\",\r\n      alias: \"Effarig\",\r\n      info: () => `\r\nEffarig is the second Celestial you encounter.\r\nThey are unlocked by pouring at least ${format(TeresaUnlocks.effarig.price)} RM into Teresa's container.\r\n<br>\r\n<br>\r\nEffarig introduces a currency called Relic Shards, which are obtained by using different kinds of Glyph effects during\r\na Reality. The number of distinct effects active during the Reality very strongly affects Relic Shard gain, and EP\r\naffects it to a much lesser degree. Relic Shards are the currency for Effarig unlocks, and will be gained from every\r\nReality from now on.\r\n<br>\r\n<br>\r\nUsing Relic Shards, you can purchase multiple upgrades (see \"Advanced Glyph Mechanics\") which improve your Glyphs and\r\nallow you to filter them based on their effects and rarity when you are doing fully automated Realities.\r\n<br>\r\n<br>\r\nEffarig's final unlock is their own Reality at ${format(GameDatabase.celestials.effarig.unlocks.run.cost)} Relic\r\nShards.\r\n${EffarigUnlock.run.isUnlocked\r\n    ? \"Their Reality is divided into three layers: Infinity, Eternity, and Reality. You must complete each layer \" +\r\n      \"before getting access to the next one. Completing Effarig's Eternity unlocks the next Celestial.\"\r\n    : \"<div style='color: var(--color-effarig--base);'>(unlock Effarig's Reality to see details about it)</div>\"\r\n}\r\n<br>\r\n<br>\r\nCompleting Effarig's Reality unlocks\r\n${EffarigUnlock.reality.isUnlocked\r\n    ? `a new Glyph type, <span style='color: var(--color-effarig--base);'>Effarig</span> Glyphs. Effarig Glyphs have\r\n      ${formatInt(7)} different possible effects, which you can view in the Glyph filter settings. You can only\r\n      have one Effarig Glyph equipped at a time.\r\n${Ra.unlocks.glyphEffectCount.canBeApplied\r\n    ? `Due to having Effarig at level 10 within Ra, there are no longer any restrictions on effects that appear on\r\n      Effarig Glyphs. Any given Effarig Glyph can now have up to all ${formatInt(7)} effects at the same time.`\r\n    : `Effarig Glyphs can only have at most ${formatInt(4)} effects, and the RM multiplier and Glyph instability\r\n      effects cannot appear together on the same Glyph.`}`\r\n    : \"<span style='color: var(--color-effarig--base);'>(complete Effarig's Reality to see reward details)</span>\"}\r\n<br>\r\n<br>\r\n`,\r\n      isUnlocked: () => TeresaUnlocks.effarig.canBeApplied,\r\n      tags: [\"glyph\", \"sacrifice\", \"shards\", \"reality\", \"spectralflame\", \"lategame\", \"endgame\", \"celestial\"],\r\n      tab: \"celestials/effarig\"\r\n    }, {\r\n      name: \"Advanced Glyph Mechanics\",\r\n      info: () => `\r\nGlyph level Adjustment is purchasable for ${format(GameDatabase.celestials.effarig.unlocks.adjuster.cost)} Relic\r\nShards. This allows you to set weights for each resource (EP, DT, Replicanti, Eternities), in how much they affect the\r\nlevel of Glyphs gained on Reality.\r\n<br>\r\n<br>\r\nAutomatic Glyph Filtering is purchasable for ${format(GameDatabase.celestials.effarig.unlocks.glyphFilter.cost)}\r\nRelic Shards. This system uses one of many methods to assign a score to your Glyph choices, and then picks the choice\r\nwith the highest score. After picking this Glyph, it checks the score against a threshold and either keeps it if the\r\nscore is above the threshold, or sacrifices it instead. There are three basic modes:\r\n<br>\r\n<b>Lowest total sacrifice:</b> Glyphs are given a score based on how much sacrifice value you have of that\r\nparticular Glyph's type. Glyphs of the type you have the least sacrifice value in will have the highest score.\r\nThis mode does not have a threshold and always sacrifices your Glyphs.\r\n<br>\r\n<b>Number of effects:</b> Glyphs are given a score equal to the number of effects they have, and when multiple\r\nGlyphs have the same effect count, Glyphs with higher rarity will be picked. The threshold they are\r\ncompared to is specified by your input in the text box.\r\n<br>\r\n<b>Rarity Threshold Mode:</b> Glyphs are given a score equal to their rarity percent. The comparison threshold\r\ncan be set individually per Glyph type.\r\n<br>\r\n<br>\r\nAdditionally, there are two more advanced modes with some additional flexibility. You may not need these initially, but\r\nthey can come in handy later on:\r\n<br>\r\n<b>Specified Effect Mode:</b> Glyphs are given a score equal to their rarity and checked against the rarity threshold\r\nyou specify, but this score is modified based on your inputs for effects. The Glyph will be checked for having a minimum\r\nnumber of effects and having all of the effects you choose, and its score is lowered by ${formatInt(200)} for every\r\nmissing effect. This guarantees that any Glyph that does not have the effects you want will be below the threshold. You\r\ncan forbid specific Glyph <i>types</i> by setting impossible conditions (eg. at least ${formatInt(6)} effects on a Power\r\nGlyph will prevent Power Glyphs from being selected).\r\n<br>\r\n<b>Effect Score Mode:</b> The score of a Glyph is calculated from its rarity plus the score of each effect it has,\r\nand you can set the threshold and values of each effect individually. Some possible ways this could be used:\r\n<br>\r\n- Giving a weaker effect a value of ${formatInt(5)} allows you to keep Glyphs without that effect as long as they are\r\nrarer to compensate for being weaker\r\n<br>\r\n- Assigning a large negative score to a certain effect you do <i>not</i> want will forbid Glyphs with that effect from\r\nbeing selected; this can be useful for effect testing and other more limited situations\r\n<br>\r\n- Setting an impossible condition (eg. a threshold score of ${formatInt(999)} and all effects worth ${formatInt(0)})\r\nwill let you forbid entire types like Specified Effect Mode as well\r\n<br>\r\n<br>\r\nThe Glyph Filter mode is a global setting which applies to all Glyph types at once; for example, you cannot filter\r\npower Glyphs with \"Rarity Threshold\" and time Glyphs with \"Specified Effect\". Selecting one mode will require\r\nyou to configure every Glyph type within its settings for proper filtering. Each filter mode has its own settings\r\nwhich will be kept if you switch to another mode.\r\n<br>\r\n<br>\r\nUnlocking the Glyph Filter also lets you use the highest Glyph score amongst your upcoming choices as a comparable\r\nCurrency in the Automator. Additionally, you can make your Filter force an immediate Reality (once available) if\r\nnone of the upcoming choices will be kept by the filter, as long as the Reality autobuyer is on.\r\n<br>\r\n<br>\r\nGlyph Presets are purchasable for ${format(GameDatabase.celestials.effarig.unlocks.setSaves.cost)} Relic\r\nShards. This unlocks ${formatInt(7)} slots that allow you to save your currently equipped Glyphs into sets.\r\nYou cannot overwrite a set, you must delete it first. When you load a set, each Glyph in it is found and equipped.\r\nIf any are not found, it will display a warning, but equip all the rest regardless.\r\nWhen loading a set, you can be Level and/or Rarity sensitive. The best Glyph from the possible Glyphs\r\nwill always be the one equipped. Just like other groups of circular Glyphs, you can click any of them\r\nin order to bring up a modal summarizing the whole set of Glyphs.\r\n`,\r\n      isUnlocked: () => EffarigUnlock.adjuster.isUnlocked,\r\n      tags: [\"glyph\", \"weight\", \"adjustment\", \"sacrifice\", \"filter\", \"threshold\", \"set\", \"save\", \"reality\", \"lategame\",\r\n        \"endgame\"],\r\n      tab: \"celestials/glyphfilter\"\r\n    }, {\r\n      name: \"The Nameless Ones, Celestial of Time\",\r\n      alias: \"Nameless Ones\",\r\n      info: () => `\r\nThe Nameless Ones are the third Celestial, unlocked by completing Effarig's Eternity.\r\n<br>\r\n<br>\r\nWhen unlocking The Nameless Ones, you immediately gain access to two new mechanics related to time. You can store\r\n\"game time\" by charging your Black Hole, and you can store \"real time\" by intentionally halting your production.\r\nStored game time is also used as a currency for purchasing unlocks from The Nameless Ones.\r\n<br>\r\n<br>\r\nCharging your Black Hole gives you stored game time, which it does at the expense of setting your game speed to\r\n${formatInt(1)}. The game is in effect using your increased game speed in order to store game time itself. Its\r\nmain use is to discharge the Black Hole, which takes uses your stored game time to skip forward in time by a duration\r\nequal to the game time stored. This is different than regular game speed multipliers in that discharging is not subject\r\nto any modifiers to game speed when it is used, only when it is stored.\r\n<br>\r\n<br>\r\nStoring real time completely stops all production, effectively pausing your game. For every real-time second that\r\npasses, you gain stored real time (modified by some efficiency factor). You can use stored real time in order to\r\namplify a Reality in the Glyphs tab. When you complete the Reality, this uses all of your stored real time at once\r\nin order to attempt to repeat that\r\nexact Reality over and over, giving you all the rewards you would normally get from the repetitions. For example, if\r\nyou have ${formatInt(50)} minutes stored and amplify a Reality which has lasted ${formatInt(10)} minutes and would\r\ngive ${format(DC.E30)} RM and ${format(DC.E12)} Relic Shards, the amplified Reality will give you ${format(5e30)} RM,\r\n${format(5e12)} Relic Shards, ${formatInt(5)} Glyphs (subject to your filtering settings),\r\nand ${formatInt(5)} Perk Points.\r\n<br>\r\n<br>\r\nHowever, if your Reality has lasted for less than ${formatInt(1)} second, the amplification factor is capped by the\r\namount of seconds stored. For example, if you have ${formatInt(1000)} seconds stored and amplify a Reality which has\r\nlasted ${format(0.2, 2, 2)} seconds, you will use ${formatInt(200)} seconds to simulate ${formatInt(1000)} Realities.\r\n<br>\r\n<br>\r\nYou can toggle a setting to automatically store offline time as stored real time.\r\n<br>\r\n<br>\r\nTheir first unlock costs ${format(TimeSpan.fromMilliseconds(ENSLAVED_UNLOCKS.FREE_TICKSPEED_SOFTCAP.price).totalYears)}\r\nyears of stored game time. It increases the softcap to Tickspeed Upgrades gained from Time Dimensions\r\n(the point at which their cost starts increasing faster)\r\nby ${format(1e5)} Tickspeed Upgrades.\r\n<br>\r\n<br>\r\nAt ${format(TimeSpan.fromMilliseconds(ENSLAVED_UNLOCKS.RUN.price).totalYears)} years of stored game time, you are able\r\nto finally unlock their Reality. The reward for completing The Nameless Ones' Reality is\r\n${Enslaved.isCompleted\r\n    ? \"unlocking Tesseracts, which have their own How To Play entry.\"\r\n    : \"<span style='color: var(--color-bad);'>(complete The Nameless Ones' Reality to see reward details)</span>\"}\r\n<br>\r\n<br>\r\nThe Nameless Ones will not directly unlock the next Celestial.\r\n`,\r\n      isUnlocked: () => EffarigUnlock.eternity.isUnlocked,\r\n      tags: [\"reality\", \"time\", \"blackhole\", \"lategame\", \"endgame\", \"testers\", \"celestial\",\r\n        ...credits.people.map(p => p.name)\r\n      ],\r\n      tab: \"celestials/enslaved\"\r\n    }, {\r\n      name: \"Tesseracts\",\r\n      info: () => `\r\nTesseracts are a new resource you unlock for completing The Nameless Ones' Reality.\r\n<br>\r\n<br>\r\nInfinity Dimensions are normally capped at ${format(InfinityDimensions.HARDCAP_PURCHASES)} total purchases,\r\nwhich limits how large their multipliers can grow since eventually you cannot upgrade them any more.\r\nTesseracts allow you to raise this cap by spending Infinity Points.\r\n<br>\r\n<br>\r\nThe cost of Tesseracts increases super-exponentially, but each successive Tesseract is significantly stronger than\r\nthe last in order to make up for that. Tesseract count is never reset, meaning that once purchased, you do not need\r\nto reach the IP cost again in order to take advantage of the raised cap in later Realities.\r\n<br>\r\n<br>\r\nYou can see additional information about your current Tesseract count and the cost of the next one in the Infinity\r\nDimensions tab. Additionally, your current Infinity Points will now also show a percentage towards the next Tesseract.\r\nIf affordable, the Infinity button itself will visually change and bring you to the Infinity Dimension tab when clicked.\r\n`,\r\n      isUnlocked: () => Enslaved.isCompleted,\r\n      tags: [\"reality\", \"lategame\", \"endgame\", \"tesseract\", \"id\", \"celestial\"],\r\n      tab: \"celestials/tesseract\"\r\n    }, {\r\n      name: \"V, Celestial of Achievements\",\r\n      alias: \"V\",\r\n      info: () => `\r\nV is a special Celestial in the sense that they are not unlocked by another Celestial,\r\nbut is instead unlocked by completing Achievement ID 151 (row ${formatInt(15)}, column ${formatInt(1)},\r\n\"You really didn't need it anyway\"), which requires you to get ${formatInt(800)} Antimatter Galaxies\r\nwithout buying 8th Antimatter Dimensions in your current Infinity.\r\n<br>\r\n<br>\r\nAfter the subtab is unlocked from the Achievement, you are met with another set of requirements to fully unlock V.\r\nYou must have completed ${formatInt(GameDatabase.celestials.v.mainUnlock.realities.requirement)} Realities and have\r\n${format(GameDatabase.celestials.v.mainUnlock.realityMachines.requirement)} unspent RM.\r\nAdditionally you need to reach ${format(GameDatabase.celestials.v.mainUnlock.eternities.requirement)} Eternities,\r\n${format(GameDatabase.celestials.v.mainUnlock.infinities.requirement)} Infinities,\r\n${format(GameDatabase.celestials.v.mainUnlock.dilatedTime.requirement)} Dilated Time, and\r\n${format(GameDatabase.celestials.v.mainUnlock.replicanti.requirement)} Replicanti, all in the same Reality.\r\n<br>\r\n<br>\r\nWhen you meet all of those requirements, you will be able to access V's Reality.\r\n${VUnlocks.vAchievementUnlock.isUnlocked\r\n    ? `However, completing the Reality itself is only the beginning. V has six different requirements, each of which\r\n      require you to make a certain amount of progress within V's Reality. Completing a requirement rewards you with a\r\n      V-Achievement.\r\n      V-Achievements are permanent and persist after exiting V's Reality, and do not all need to be done simultaneously.\r\n      <br>\r\n      <br>\r\n      After completing the requirement, the V-Achievement threshold then increases and can be completed again\r\n      if you can reach the new goal.  You can complete each category of V-Achievement up to six times.\r\n      Completed V-Achievements do two things:\r\n      <br>\r\n      - Upon reaching certain totals of V-Achievements, you automatically unlock upgrades on the V tab without needing\r\n      to spend any resources.\r\n      <br>\r\n      - Each V-Achievement also gives you one Space Theorem.\r\n      <br>\r\n      <br>\r\n      The goal reduction unlocked by having ${formatInt(2)} V-Achievements allows you to make some V-Achievement\r\n      requirements easier to complete by spending Perk Points, down to a limit of whatever the easiest tier requires.\r\n      The cost of reducing a goal does not increase as it is used, and will also reduce future tiers as well.\r\n      <br>\r\n      <br>\r\n      Space Theorems allow you to purchase Time Studies which are normally forbidden, such as multiple paths in the\r\n      Pace Split after the improved IP formula, or both Time Studies within a dark/light pair near the bottom.\r\n      Like Time Theorems, they are freely given back every time you respec your studies.\r\n      With enough Space Theorems you will eventually be able to purchase every single Time Study at once!\r\n      <br>\r\n      <br>\r\n      Reaching ${formatInt(36)} V-Achievements (and therefore completing all of V's Achievements) unlocks the next\r\n      Celestial.`\r\n    : \"<span style='color: var(--color-bad);'>(unlock V's Reality to see further details)</span>\"}\r\n`,\r\n      isUnlocked: () => Achievement(151).isUnlocked,\r\n      tags: [\"reality\", \"lategame\", \"endgame\", \"girlfriend\", \"challenges\", \"achievement\", \"space\", \"theorems\",\r\n        \"study\", \"triad\", \"celestial\"],\r\n      tab: \"celestials/v\"\r\n    }, {\r\n      name: \"Ra, Celestial of the Forgotten\",\r\n      alias: \"Ra\",\r\n      info: () => `\r\nRa is the fifth Celestial, unlocked by fully completing all of V's Achievements. They use their memories in order to\r\nbring back positive effects from previous Celestials in a stronger way. Over time, you will unlock the previous four\r\nCelestials <i>within</i> Ra, with each Celestial offering additional upgrades related to their original themes.\r\n<br>\r\n<br>\r\nEach previous Celestial within Ra gains levels by using memories, which are generated passively over time from\r\nMemory Chunks. Memory Chunks can only be gained by entering Ra's Reality, but inside of the Reality Chunks will\r\nbe generated passively based on certain resource totals. If you are storing real time, you will not gain any\r\nChunks inside of Ra's Reality, but Memories will still be generated normally. Having a total of\r\n${formatInt(Ra.remembrance.requiredLevels)} levels across all Celestials unlocks Remembrance,\r\nwhich allows you to choose a particular Celestial to gain more chunks while inside of Ra's Reality.\r\n<br>\r\n<br>\r\nMemories can be spent on three things - an increase to Memory Chunk gain, an increase to Memory gain, and leveling up\r\nthe Celestial. You start Ra with only Teresa unlocked and each successive Celestial is unlocked by reaching level\r\n${formatInt(8)} with the previous Celestial. Levels are capped at ${formatInt(25)}.\r\n<br>\r\n<br>\r\nTeresa unlocks the ability to charge your Infinity Upgrades, making them much stronger. They also\r\nimprove your Glyph effects once you reach certain thresholds in Glyph sacrifice value.\r\n<br>\r\n<br>\r\nAt level ${formatInt(2)}, Effarig unlocks\r\n${Ra.unlocks.effarigUnlock.canBeApplied\r\n    ? \"a new mechanic called Glyph Alchemy and later on also makes Effarig Glyphs stronger while gradually removing \" +\r\n      \"almost all random elements of Glyph generation. Glyph Alchemy also has its own How To Play entry.\"\r\n    : \"<span style='color: var(--color-bad);'>(unlock Effarig within Ra to see unlock details)</span>\"}\r\n<br>\r\n<br>\r\nThe Nameless Ones unlocks\r\n${Ra.unlocks.enslavedUnlock.canBeApplied\r\n    ? \"additional mechanics related to charging the Black Holes, as well as making them significantly stronger.\"\r\n    : \"<span style='color: var(--color-bad);'>(unlock The Nameless Ones within Ra to see unlock details)</span>\"}\r\n<br>\r\n<br>\r\nV unlocks\r\n${Ra.unlocks.vUnlock.canBeApplied\r\n    ? \"Triad Studies, which are new studies near the bottom of the tree which cost Space Theorems. Each Triad Study \" +\r\n      \"requires you to also have the three nearby studies as well in order to purchase them. They also unlock a \" +\r\n      \"smaller set of more difficult V-Achievements to complete for additional Space Theorems.\"\r\n    : \"<span style='color: var(--color-bad);'>(unlock V within Ra to see unlock details)</span>\"}\r\n<br>\r\n<br>\r\nRa will not directly unlock the next Celestial.`,\r\n      isUnlocked: () => VUnlocks.raUnlock.isUnlocked,\r\n      tags: [\"reality\", \"memories\", \"razenpok\", \"levels\", \"glyphs\", \"lategame\", \"endgame\",\r\n        \"effarig\", \"teresa\", \"nameless\", \"v\", \"celestial\"],\r\n      tab: \"celestials/ra\"\r\n    }, {\r\n      name: \"Glyph Alchemy Resources\",\r\n      info: () => `\r\nGlyph Alchemy is a mechanic unlocked by reaching Effarig level ${formatInt(2)} in Ra. It unlocks the ability to\r\nuse up your Glyphs by refining them into Alchemy Resources associated with their type. You can refine Glyphs by\r\nsetting your Sacrifice Type to something other than \"Always Sacrifice\" in the Glyphs tab, and doing the normal\r\nprocedure for a sacrifice.\r\nEach Alchemy Resource has a unique effect, which you can view on the Alchemy tab.\r\n<br>\r\n<br>\r\nIn addition to all their other properties, Glyphs now have a <i>refinement value</i> which determines how much of\r\nits associated Alchemy Resource it is worth. This value is based on the cube of the Glyph's level, scaled\r\nso that level ${formatInt(10000)} Glyphs correspond to ${formatInt(10000)} Alchemy Resources. A single Glyph itself,\r\nhowever, only gives ${formatPercents(GlyphSacrificeHandler.glyphRefinementEfficiency)} of this value when refined.\r\nThese are values for ${formatPercents(1)} rarity Glyphs; Glyphs of lower rarity still have the same cap but give\r\nproportionally less resources. For example, a ${formatPercents(0.5)} rarity Glyph will give only half as much.\r\n<br>\r\n<br>\r\nAlchemy Resources cannot be gained indefinitely; there is a per-resource cap which is based on the highest refinement\r\nvalue of all the Glyphs of that type you have refined. For example, if the highest level Time Glyph you have refined\r\nis level ${formatInt(8000)} (refinement value: ${formatInt(GlyphSacrificeHandler.levelRefinementValue(8000))}), then no\r\nmatter how many Time Glyphs you refine, you can never have more than\r\n${formatInt(GlyphSacrificeHandler.levelRefinementValue(8000))} of the Time resource until you refine another Time Glyph\r\nwith a higher refinement value.\r\n`,\r\n      isUnlocked: () => Ra.unlocks.unlockGlyphAlchemy.canBeApplied,\r\n      // Oh god I'm so sorry this is so many words\r\n      tags: [\"reality\", \"lategame\", \"endgame\", \"ra\", \"effarig\", \"alchemy\", \"power\", \"infinity\", \"time\", \"replication\",\r\n        \"dilation\", \"cardinality\", \"eternity\", \"dimensionality\", \"inflation\", \"alternation\", \"synergism\", \"momentum\",\r\n        \"decoherence\", \"force\", \"exponential\", \"uncountability\", \"boundless\", \"unpredictability\", \"multiversal\",\r\n        \"reaction\"],\r\n      tab: \"reality/alchemy\"\r\n    }, {\r\n      name: \"Glyph Alchemy Reactions\",\r\n      info: () => `\r\nAlchemy Resources can be combined together in certain combinations in order to create new compound resources, which\r\nare unlocked at certain Effarig levels. Resources are combined once per Reality, unaffected by real time\r\namplification. Reactions have a higher yield and thus happen faster when your reagent amounts are higher. The cap for\r\ncompound resources is equal to the lowest cap amongst all of its reagents. In order for a reaction to occur, the\r\ncurrent amount of all reagents must be greater than the current amount of the produced resource.\r\n<br>\r\n<br>\r\nReaction speed is proportional to the amount of usable reagents for the reaction, but only reagent amounts above the\r\nproduct amount are eligible for being used. For example, if you have ${formatInt(10000)} of all reagents and\r\n${formatInt(7500)} of the product, only ${formatInt(2500)} of the reagents are used in calculating the reaction speed.\r\nIf you instead had ${formatInt(0)} of the product, <i>all</i> of the reagent is available for the reaction and it will\r\nproduce ${formatX(4)} faster. Lastly, if you had ${formatInt(10000)} of the product, then none of the reagent can be\r\nused and the reaction will not run at all.\r\n<br>\r\n<br>\r\nTo activate or deactivate a reaction, click the circle corresponding to the reaction's product. When the reaction can\r\nbe applied, moving lines will be shown from all reagents to the product. If a connection is a solid line, that means\r\nthat the reaction cannot proceed due to not having enough of that reagent to get more of the product due to its cap.\r\n`,\r\n      isUnlocked: () => Ra.unlocks.unlockGlyphAlchemy.canBeApplied,\r\n      tags: [\"reality\", \"lategame\", \"endgame\", \"ra\", \"effarig\", \"alchemy\", \"power\", \"infinity\", \"time\", \"replication\",\r\n        \"dilation\", \"cardinality\", \"eternity\", \"dimensionality\", \"inflation\", \"alternation\", \"synergism\", \"momentum\",\r\n        \"decoherence\", \"force\", \"exponential\", \"uncountability\", \"boundless\", \"unpredictability\", \"multiversal\",\r\n        \"reaction\"],\r\n      tab: \"reality/alchemy\"\r\n    }, {\r\n      name: \"Imaginary Machines\",\r\n      info: () => `\r\nOnce you are able to gain at least ${format(MachineHandler.baseRMCap)} Reality Machines in a single Reality, you\r\nunlock the ability to gain a new resource called Imaginary Machines. Reality Machines will also become hardcapped\r\nat ${format(MachineHandler.baseRMCap)}; you will be unable to gain any more past this limit.\r\n<br>\r\n<br>\r\nAdditionally you unlock the Imaginary Upgrades tab, which contains a set of upgrades similar to the Reality Upgrades -\r\neach upgrade has a condition you must fulfill to unlock it and an Imaginary Machine cost to actually purchase it.\r\nThe first two rows of upgrades can be repeatedly bought, while the other three are one-time upgrades.\r\n<br>\r\n<br>\r\nYour iM amount is affected by two things:\r\n<br>\r\n<b>iM Cap</b> - There is a maximum amount of iM you can ever have, which is based on the highest RM amount you would\r\nhave been able to get if there were no RM cap. This is updated on a continual basis and thus will immediately increase\r\nif you ever surpass your previous highest uncapped RM amount.\r\n<br>\r\n<b>Current iM</b> - Over time your current iM will passively rise towards your iM cap, in a way that slows down\r\nexponentially as you approach the cap. By default iM slows down at a rate where the amount you are <i>missing</i>\r\n(ie. your cap minus your current amount) is cut in half every minute. This growth rate is unaffected by any\r\nmodifiers to game speed.\r\n<br>\r\n<br>\r\nImaginary Machine upgrades will unlock the final two Celestials.\r\n`,\r\n      isUnlocked: () => MachineHandler.isIMUnlocked,\r\n      tags: [\"imaginary\", \"machines\", \"reality\", \"lategame\", \"endgame\"],\r\n      tab: \"reality/imag_upgrades\"\r\n    }, {\r\n      name: \"Lai'tela, Celestial of Dimensions\",\r\n      alias: \"Lai'tela\",\r\n      info: () => `\r\nLai'tela is the sixth Celestial, unlocked by purchasing the appropriate Imaginary Upgrade for\r\n${format(ImaginaryUpgrade(15).cost)} iM.\r\n<br>\r\n<br>\r\nLai'tela gives a new currency called Dark Matter, which provides a multiplier to Continuum's effect\r\nbased on the highest amount of Dark Matter you have ever had. Dark Matter is produced by\r\nDark Matter Dimensions, in a similar cascading way to all other types of dimensions in the game. Unlike other\r\ndimensions, there are only four Dark Matter Dimensions rather than eight. You start with the first one unlocked\r\nimmediately and the higher ones are unlocked via Imaginary Upgrades. When unlocking dimensions, you are given\r\n${formatInt(1)} of the dimension and cannot gain more without having it produced from the next tier up.\r\n<br>\r\n<br>\r\nEach Dark Matter Dimension, after a certain interval of time, generates two things: Dark Matter or the next lower\r\nDark Matter Dimension and another resource called Dark Energy. Dark Matter and Dark Matter Dimension production\r\nper interval is equal to the product of your Dark Matter multiplier and the number of dimensions you have, while\r\nDark Energy production is independent of your dimension amount. Dark Energy is used to produce Singularities, which\r\nhave their own How To Play entry.\r\n<br>\r\n<br>\r\nDark Matter Dimensions can have their intervals upgraded down to a minimum of ${formatInt(10)}ms, at which point\r\nyou cannot upgrade the interval any further. You can choose to ascend Dark Matter Dimensions which reach\r\nthat point, which initially multiplies Dark Matter gain by ${formatInt(POWER_DM_PER_ASCENSION)} and Dark Energy by\r\n${formatInt(POWER_DE_PER_ASCENSION)}. The interval gets multiplied by ${formatInt(1200)}, but can be upgraded once\r\nagain. Reaching ${formatInt(10)}ms again allows you to ascend again if you choose to.\r\n<br>\r\n<br>\r\nAn Imaginary Upgrade allows you to unlock a prestige called Annihilation. Annihilation resets your Dark Matter\r\nand Dark Matter Dimensions, but adds to a permanent multiplier to Dark Matter that applies to all Dark Matter\r\nDimensions. You can Annihilate multiple times; the additions to the multiplier stack additively, and there is\r\nno need to Annihilate for a greater addition each time. You must have at least\r\n${format(Laitela.annihilationDMRequirement)} Dark Matter in order to Annihilate.\r\n<br>\r\n<br>\r\nLai'tela has a Reality which gives a multiplier to Dark Matter Dimensions' Dark Matter power based on how well you\r\ndo in the Reality. Whenever you complete the Reality in under ${formatInt(30)} seconds, your highest available\r\nDimension will be permanently disabled during further attempts of the Reality. Disabling all of your dimensions by\r\ncompleting the Reality in under ${formatInt(30)} seconds eight times will also give you a ${formatX(8)} multiplier\r\nto Dark Energy gain.\r\n<br>\r\n<br>\r\nLai'tela will not directly unlock the next Celestial.\r\n`,\r\n      isUnlocked: () => Laitela.isUnlocked,\r\n      tags: [\"omsi\", \"reality\", \"dark\", \"matter\", \"dimensions\", \"lategame\", \"endgame\", \"ascend\", \"celestial\"],\r\n      tab: \"celestials/laitela\"\r\n    }, {\r\n      name: \"Continuum\",\r\n      info: () => `\r\nWhen you unlock Lai'tela, your Antimatter Dimensions and Tickspeed Upgrades switch to a new mode of production\r\ncalled Continuum, which gives the same effect as previously but allows for buying partial Dimension or\r\nTickspeed Upgrades. These fractional purchases are given for free without spending your antimatter and will provide\r\nan appropriate portion of their multiplier.\r\n<br>\r\n<br>\r\nThe purchase buttons for Antimatter Dimensions and Tickspeed Upgrades become modified to display the number of upgrades\r\nyou would be able to purchase if Continuum was inactive, and the purchase count is scaled smoothly with antimatter.\r\nFor example, having ${format(2e7)} antimatter will give you a Continuum value of ${format(5.3, 0, 1)} for tickspeed\r\n(initial cost of ${format(1e3)} and increase of ${formatX(10)}) since you can purchase it ${formatInt(5)} times and\r\nare roughly ${formatPercents(0.3)} of the way to the next. Tickspeed Continuum in this case will then\r\ngive a production boost equal to (upgrade multiplier)<sup>${format(5.3, 0, 1)}</sup>.\r\n<br>\r\n<br>\r\nSome upgrades will multiply Continuum value directly, which gives a production boost without affecting the cost\r\nscaling. However, these upgrades will not function if Continuum is disabled on the Autobuyers page, which may result\r\nin a loss of production if disabled. Continuum makes your autobuyers for Antimatter Dimensions and Tickspeed obsolete,\r\nso all the related autobuyer settings for these autobuyers are now hidden on that tab as long as Continuum is active.\r\n`,\r\n      // Apparently continuumUnlocked is really important in a lot of places and if we keep it unlocked\r\n      // Things break, so we check for the iMU instead.\r\n      isUnlocked: () => ImaginaryUpgrade(15).isBought,\r\n      tags: [\"continuum\", \"purchase\", \"reality\", \"lategame\", \"endgame\"],\r\n      tab: \"\"\r\n    }, {\r\n      name: \"Singularities\",\r\n      info: () => `\r\nSingularities are a new resource which you can obtain using features within Lai'tela.\r\n<br>\r\n<br>\r\nIn order to obtain Singularities, you need to reach ${format(200)} Dark Energy. When you do, you get the option to\r\ncondense all your Dark Energy into a Singularity, resetting it back to zero. Any extra Dark Energy above this amount\r\ndo not carry over, and is thus wasted. Note that only Dark Energy is reset, the status of your Dark Matter and its\r\ndimensions stays the same when condensing Singularities.\r\n<br>\r\n<br>\r\nOnce you reach ${formatInt(10)} Singularities, you can freely increase or decrease the Dark Energy requirement to\r\ncondense Singularities by a factor of ${formatInt(10)} (with a minimum of ${format(200)}). This increases or decreases\r\nthe number of Singularities gained from resetting at the cap by <i>more than</i> a factor of ${formatInt(10)}, making\r\nhigher caps worth more if you are willing to wait.\r\n<br>\r\n<br>\r\nThe purpose of Singularities is to unlock Singularity Milestones, which act similarly to Eternity Milestones. Unlocking\r\nthese milestones simply requires you to reach the total number of Singularities specified; Singularities are not spent.\r\nThere are three types of milestones - one-time milestones, milestones repeatable a limited number of times, and\r\nmilestones which can be repeated indefinitely.\r\n<br>\r\n<br>\r\nIndependently of the milestone type, milestones also have an icon indicating what kind of upgrade they generally give:\r\n<br>\r\n<b>ᛝ</b> These milestones help mechanics specific to Lai'tela\r\n<br>\r\n<i class=\"fas fa-arrows-alt\"></i> These milestones let a resource in Lai'tela affect the rest of the game\r\n<br>\r\n<i class=\"fas fa-compress-arrows-alt\"></i> These milestones improve Lai'tela based on something outside of Lai'tela\r\n`,\r\n      isUnlocked: () => Laitela.isUnlocked,\r\n      tags: [\"reality\", \"lategame\", \"endgame\", \"laitela\", \"dark\"],\r\n      tab: \"\"\r\n    }, {\r\n      name: \"Pelle, Celestial of Antimatter\",\r\n      alias: \"Pelle\",\r\n      info: () => `\r\nWhen you purchase the last Imaginary Upgrade and unlock Pelle, you unlock their tab, where you can find a button to\r\n\"Doom your Reality\". In order to Doom your Reality, you must have completed all ${formatInt(17)} rows of Achievements\r\navailable to you at this point, and attained ${formatInt(25000)} of each Alchemy Resource.\r\n<br>\r\n<br>\r\n${Pelle.isDoomed\r\n    ? `Dooming your Reality will start a new <b>Doomed Reality</b>, resetting almost the entire game up to\r\n      Reality, not giving you any rewards from your progress in your current Reality.\r\n      <br>\r\n      <br>\r\n      When you enter the Doomed Reality, you keep all values under the General and Reality headers in the Statistics\r\n      tab and all of your best Challenge times. Inside Doomed Realities, multiple upgrades, Time Studies, Challenge and\r\n      Celestial rewards, Perks, and other game mechanics are disabled or grant no reward.\r\n      You can view the \"Show effects in Doomed Reality\" in Pelle tab for further information.\r\n      <br>\r\n      <br>\r\n      Remnants are a new currency gained on Armageddon resets. Remnant gain is based on your best ever antimatter,\r\n      Infinity Points, and Eternity Points across all Doomed Realities. Remnants produce Reality Shards which can be\r\n      spent on Pelle Upgrades.\r\n      <br>\r\n      <br>\r\n      Pelle Upgrades can be divided into two categories. The five upgrades in the first row can be repeatedly bought,\r\n      but eventually reach a cap. They grant boosts to different aspects of the game, making progression within Doomed\r\n      Realities easier.\r\n      <br>\r\n      <br>\r\n      The other upgrades in the bottom rows offer automation and QoL (quality of life) improvements. Everything unlocked\r\n      from these upgrades cannot be unlocked by their usual methods in the game; for example, none of the Normal\r\n      Challenges will unlock autobuyers if completed since they are all locked behind Pelle Upgrades instead.\r\n      You can toggle a button above upgrade to hide bought upgrades or click the\r\n      <i class=\"fas fa-compress-arrows-alt\"></i>-icon to collapse and hide the entire panel.\r\n      <br>\r\n      <br>\r\n      <b>Hotkey: Z</b> will try to perform an Armageddon reset.`\r\n    : \"<span style='color: var(--color-bad);'><b>You must Doom your Reality to read the rest of this entry.</b></span>\"\r\n}\r\n`,\r\n      isUnlocked: () => Pelle.isUnlocked,\r\n      tags: [\"reality\", \"antimatter\", \"lategame\", \"endgame\", \"final\", \"hevipelle\", \"celestial\", \"doom\"],\r\n      tab: \"celestials/pelle\"\r\n    }, {\r\n      name: \"Pelle Strikes\",\r\n      info: () => `\r\nPelle Strikes are encountered on different events in the Doomed Reality. You have encountered the first Pelle Strike by\r\nreaching Infinity for the first time within a Doomed Reality. More Strikes eventually occur by further progression.\r\nEach Pelle Strike adds a nerf to a specific aspect of the game, which can be seen by clicking on the Strike name.\r\nEach Pelle Strike also unlocks a Rift bar.\r\n<br>\r\n<br>\r\nRift bars can be filled by clicking them to toggle between \"Idle\" and \"Filling\", although only two Rifts can be\r\n\"Filling\" at any given time. When active, Rifts consume ${formatInt(3)}% of a Rift-specific resource per second. Each\r\nRift offers a Rift-specific effect which are based on the total amount filled.\r\n${PelleStrikes.eternity.hasStrike\r\n    ? `An exception for this is Decay/Collapse/Disarray, whose effect gets capped once you have drained a total of\r\n    ${formatPostBreak(DC.E2000)} Replicanti.`\r\n    : \"\"}\r\nIn addition, each Rift offers three milestone rewards for filling them up to a certain percentage.\r\n`,\r\n      isUnlocked: () => PelleStrikes.infinity.hasStrike,\r\n      tags: [\"reality\", \"antimatter\", \"lategame\", \"endgame\", \"final\", \"pelle\", \"strike\", \"rift\", \"celestial\"],\r\n      tab: \"celestials/pelle\"\r\n    }, {\r\n      name: \"The Galaxy Generator\",\r\n      info: () => `\r\nWhen you reach ${formatInt(100)}% Recursion/Dispersion/Destruction, you unlock the <b>Galaxy Generator</b>, which can\r\npassively generate Galaxies. Generated Galaxies are like Replicanti Galaxies and Tachyon Galaxies in that they affect\r\ntickspeed as if they were Antimatter Galaxies, but they do not increase the cost of your next Antimatter Galaxy. You\r\nalso unlock five new upgrades. The first upgrade increases the base amount of Galaxies generated. The other four\r\nupgrades then give a multiplier to this base amount. The first two upgrades can be bought by spending antimatter and\r\nGenerated Galaxies. Replicanti or Tachyon Galaxies cannot be spent for purchasing those upgrades.\r\n<br>\r\n<br>\r\nThe <b>Galaxy Generator</b> has a maximum number of Galaxies it can generate, which can only be increased by draining\r\nRifts once the current cap has been reached.`,\r\n      isUnlocked: () => Pelle.hasGalaxyGenerator,\r\n      tags: [\"reality\", \"antimatter\", \"lategame\", \"endgame\", \"final\", \"pelle\", \"galaxy\",\r\n        \"galaxies\", \"generator\", \"celestial\"],\r\n      tab: \"celestials/pelle\"\r\n    }\r\n  ]\r\n};\r\n\r\n(function() {\r\n  for (let i = 0; i < h2p.tabs.length; i++) {\r\n    const tab = h2p.tabs[i];\r\n    tab.id = i;\r\n    if (tab.alias === undefined) tab.alias = tab.name;\r\n\r\n    tab.searchTermsRelevance = {};\r\n  }\r\n\r\n  const searchIndex = {};\r\n\r\n  const addTerm = (term, tab) => {\r\n    let entry = searchIndex[term];\r\n    if (entry === undefined) {\r\n      entry = [];\r\n      searchIndex[term] = entry;\r\n    }\r\n    if (entry.includes(tab)) return;\r\n    entry.push(tab);\r\n  };\r\n\r\n  const addWord = (word, tab) => {\r\n    const lowerCase = word.toLowerCase();\r\n    for (let i = 0; i < lowerCase.length; i++) {\r\n      const term = lowerCase.slice(0, i + 1);\r\n      addTerm(term, tab);\r\n      if (tab.searchTermsRelevance[term] === undefined) {\r\n        tab.searchTermsRelevance[term] = ((i + 1) / lowerCase.length) ** 0.65;\r\n      } else {\r\n        tab.searchTermsRelevance[term] = Math.max(tab.searchTermsRelevance[term], ((i + 1) / lowerCase.length) ** 0.65);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addPhrase = (phrase, tab) => {\r\n    addWord(phrase, tab);\r\n    for (const part of phrase.split(\" \")) {\r\n      addWord(part, tab);\r\n    }\r\n  };\r\n\r\n  for (const tab of h2p.tabs) {\r\n    addPhrase(tab.name, tab);\r\n  }\r\n  for (const tab of h2p.tabs) {\r\n    for (const tag of tab.tags) {\r\n      addPhrase(tag, tab);\r\n    }\r\n  }\r\n  for (const tab of h2p.tabs) {\r\n    addPhrase(tab.alias, tab);\r\n  }\r\n\r\n  const map2dToObject = function(arr, keyFun, valueFun) {\r\n    const out = {};\r\n    for (let idx1 = 0; idx1 < arr.length; idx1++) {\r\n      for (let idx2 = 0; idx2 < arr[idx1].length; idx2++) {\r\n        out[keyFun(arr[idx1][idx2], idx1, idx2)] = valueFun(arr[idx1][idx2], idx1, idx2);\r\n      }\r\n    }\r\n    return out;\r\n  };\r\n\r\n  // Very suboptimal code coming up. If anybody has a better solution, PLEASE, implement it.\r\n  const keyboardify = keybrd => map2dToObject(keybrd.split(\",\").map(str => str.split(\"\")),\r\n    key => key, (_key, x, y) => ({ x, y }));\r\n\r\n  const qwerty = keyboardify(`1234567890,qwertyuiop,asdfghjkl,zxcvbnm`);\r\n  const qwertz = keyboardify(`1234567890,qwertzuiop,asdfghjkl,yxcvbnm`);\r\n  const azerty = keyboardify(`1234567890,azertyuiop,qsdfghjklm,wxcvbn`);\r\n  const dvorak = keyboardify(`1234567890,'<>pyfgcrl,aoeuidhtns,;qjkxbmwvz`);\r\n  const colemak = keyboardify(`1234567890,qwfpgjluy,arstdhneio,zxcvbkm`);\r\n  const workman = keyboardify(`1234567890,qdrwbjfup,ashtgyneoi,zxmcvkl`);\r\n  const qwprf = keyboardify(`1234567890,qwprfyukl,asdtghnioe,zxcvbjm`);\r\n\r\n  const keyboards = [qwerty, qwertz, azerty, dvorak, colemak, workman, qwprf];\r\n\r\n  const keyboardDist = function(a, b, keyboard) {\r\n    const aPos = keyboard[a], bPos = keyboard[b];\r\n    if (!aPos || !bPos) return 100;\r\n    return Math.max(Math.abs(aPos.x - bPos.x), Math.abs(aPos.y - bPos.y));\r\n  };\r\n\r\n  // I copied this code based on OSA distance off wikipedia, with a few added changes.\r\n  // The cost for \"substitution\" (third item of the first Math.min) is replaced from a static value\r\n  // to a function which roughly estimates how likely the user is to mispress the key based on its\r\n  // minimum distance from several common keyboard layouts.\r\n  // I have no idea how the actual \"distance\" calculation works but as long as it does don't touch it.\r\n  const howBadlyTypoedWithKeyboard = function(a, b, keyboard) {\r\n    // If they're the same, skip all calculations\r\n    if (a === b) return 0;\r\n    const aLen = a.length;\r\n    const bLen = b.length;\r\n    // If they're way too different, don't bother\r\n    if (Math.abs(aLen - bLen) > 3) return 100;\r\n    // 2d Array with dimensions aLen + 1 x bLen + 1\r\n    const d = new Array(aLen + 1).fill(0).map(() => new Array(bLen + 1).fill(0));\r\n\r\n    for (let i = 0; i <= aLen; i++) {\r\n      d[i][0] = i;\r\n    }\r\n    for (let i = 0; i <= bLen; i++) {\r\n      d[0][i] = i;\r\n    }\r\n\r\n    for (let i = 1; i <= aLen; i++) {\r\n      for (let j = 1; j <= bLen; j++) {\r\n        const distance = keyboardDist(a[i - 1], b[j - 1], keyboard);\r\n        const cost = distance === 0 ? 0 : 0.3 + distance * distance * 0.25;\r\n        d[i][j] = Math.min(\r\n          d[i - 1][j] + 0.55,\r\n          d[i][j - 1] + 0.7,\r\n          d[i - 1][j - 1] + cost\r\n        );\r\n      }\r\n    }\r\n    return d[aLen][bLen];\r\n  };\r\n\r\n  const howBadlyTypoed = function(a, b) {\r\n    // Arbitrarily large number\r\n    let minTypoed = 1e10;\r\n    for (const keyboard of keyboards) {\r\n      minTypoed = Math.min(minTypoed, howBadlyTypoedWithKeyboard(a, b, keyboard));\r\n    }\r\n    return minTypoed;\r\n  };\r\n\r\n  const specialChars = [\"'\", \"\\\"\", \",\", \"-\", \".\", \"_\"];\r\n\r\n  const replaceSpecialChars = function(str) {\r\n    let result = str;\r\n    for (const i of specialChars) {\r\n      result = result.replaceAll(i, \"\");\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // There are a LOT of magic numbers in this code, mostly from arbitrary choices for \"What number is large enough to\r\n  // act as a placeholder for 'basically not found'?\"\r\n  // This will need some cleanup if possible.\r\n  h2p.search = query => {\r\n    const truncatedQuery = replaceSpecialChars(query);\r\n    if (truncatedQuery === \"\") return h2p.tabs.map(x => ({ tab: x, relevance: 1.5 }));\r\n    const searchTerms = truncatedQuery.toLowerCase().split(\" \").filter(str => str !== \"\");\r\n\r\n    // A higher \"Relevance\" value actually means it's further away from the search, important to keep in mind\r\n    const relevances = Array.repeat(1e4, h2p.tabs.length);\r\n    for (const searchWord of searchTerms) {\r\n      const minimumRequirement = Math.min(searchWord.length - 0.9, 3) * 0.5;\r\n      for (const searchIndexStr in searchIndex) {\r\n        const typoThreshold = howBadlyTypoed(replaceSpecialChars(searchIndexStr), searchWord);\r\n        if (typoThreshold < minimumRequirement) {\r\n          for (const tab of searchIndex[searchIndexStr]) {\r\n            const maxRelevance = tab.searchTermsRelevance[searchIndexStr];\r\n            const decrease = Math.max(maxRelevance * 1.6 - 0.9, 0);\r\n            relevances[tab.id] = Math.min(relevances[tab.id], Math.max(typoThreshold, 1 - maxRelevance) - decrease);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const results = h2p.tabs.filter(x => relevances[x.id] < 0.9)\r\n      .map(x => ({ tab: x, relevance: relevances[x.id] }));\r\n    // Provide both the relevance and the tab itself\r\n\r\n    // Sort by id first, then push more relevant results to top.\r\n    results.sort((a, b) => a.tab.id - b.tab.id).sort((a, b) => a.relevance - b.relevance);\r\n    // Provide both the relevance and the tab itself\r\n    return results;\r\n  };\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}