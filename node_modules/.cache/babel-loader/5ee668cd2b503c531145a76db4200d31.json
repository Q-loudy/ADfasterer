{"ast":null,"code":"import SingleAutobuyerBox from \"./SingleAutobuyerBox\"; // This component contains all of the \"special\" autobuyers which don't fit within existing groups (eg. RG, TT, etc.)\n\nexport default {\n  name: \"MultipleSingleAutobuyersGroup\",\n  components: {\n    SingleAutobuyerBox\n  },\n  computed: {\n    singles() {\n      return Autobuyers.display[1];\n    },\n\n    entryCount() {\n      return this.singles.length;\n    },\n\n    rowCount() {\n      return Math.ceil(this.entryCount / 4);\n    },\n\n    entryCountPerRow() {\n      return this.rowCount === 1 ? this.entryCount : 4;\n    },\n\n    boxSize() {\n      // The 2% reduced flex-basis is used to prevent wrapping due to the margins.\n      // It would be 1%, but apparently the margins are larger here.\n      return `flex: 1 0 ${100 / this.entryCountPerRow - 2}%`;\n    }\n\n  }\n};","map":{"version":3,"sources":["MultipleSingleAutobuyersGroup.vue"],"names":[],"mappings":"AACA,OAAA,kBAAA,MAAA,sBAAA,C,CAEA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,+BADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,QAAA,EAAA;AACA,IAAA,OAAA,GAAA;AACA,aAAA,UAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,KAHA;;AAIA,IAAA,UAAA,GAAA;AACA,aAAA,KAAA,OAAA,CAAA,MAAA;AACA,KANA;;AAOA,IAAA,QAAA,GAAA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA,KAAA,UAAA,GAAA,CAAA,CAAA;AACA,KATA;;AAUA,IAAA,gBAAA,GAAA;AACA,aAAA,KAAA,QAAA,KAAA,CAAA,GAAA,KAAA,UAAA,GAAA,CAAA;AACA,KAZA;;AAaA,IAAA,OAAA,GAAA;AACA;AACA;AACA,aAAA,aAAA,MAAA,KAAA,gBAAA,GAAA,CAAA,GAAA;AACA;;AAjBA;AALA,CAAA","sourcesContent":["<script>\r\nimport SingleAutobuyerBox from \"./SingleAutobuyerBox\";\r\n\r\n// This component contains all of the \"special\" autobuyers which don't fit within existing groups (eg. RG, TT, etc.)\r\nexport default {\r\n  name: \"MultipleSingleAutobuyersGroup\",\r\n  components: {\r\n    SingleAutobuyerBox\r\n  },\r\n  computed: {\r\n    singles() {\r\n      return Autobuyers.display[1];\r\n    },\r\n    entryCount() {\r\n      return this.singles.length;\r\n    },\r\n    rowCount() {\r\n      return Math.ceil(this.entryCount / 4);\r\n    },\r\n    entryCountPerRow() {\r\n      return this.rowCount === 1 ? this.entryCount : 4;\r\n    },\r\n    boxSize() {\r\n      // The 2% reduced flex-basis is used to prevent wrapping due to the margins.\r\n      // It would be 1%, but apparently the margins are larger here.\r\n      return `flex: 1 0 ${100 / this.entryCountPerRow - 2}%`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <span class=\"l-autobuyer-singlet-group\">\r\n    <template\r\n      v-for=\"(type, id) in singles\"\r\n    >\r\n      <SingleAutobuyerBox\r\n        :key=\"id\"\r\n        :autobuyer=\"type\"\r\n        :style=\"boxSize\"\r\n      />\r\n      <br\r\n        v-if=\"id % entryCountPerRow === entryCountPerRow\"\r\n        :key=\"id\"\r\n      >\r\n    </template>\r\n  </span>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/autobuyers"},"metadata":{},"sourceType":"module"}