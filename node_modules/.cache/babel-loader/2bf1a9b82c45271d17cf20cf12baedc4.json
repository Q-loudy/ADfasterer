{"ast":null,"code":"import \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport const Effects = {\n  /**\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\n  sum(...effectSources) {\n    let result = 0;\n    applyEffectsOf(effectSources, v => result += v);\n    return result;\n  },\n\n  /**\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\n  product(...effectSources) {\n    let result = 1;\n    applyEffectsOf(effectSources, v => result *= v);\n    return result;\n  },\n\n  /**\r\n   * @param {Number} defaultValue\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\n  last(defaultValue, ...effectSources) {\n    let result = defaultValue;\n    let foundLast = false;\n    const reversedSources = effectSources.filter(s => s !== null && s !== undefined).reverse();\n\n    const reducer = v => {\n      result = v;\n      foundLast = true;\n    };\n\n    for (const effectSource of reversedSources) {\n      effectSource.applyEffect(reducer);\n      if (foundLast) break;\n    }\n\n    return result;\n  },\n\n  /**\r\n   * @param {Number} defaultValue\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\n  max(defaultValue, ...effectSources) {\n    let result = defaultValue;\n    applyEffectsOf(effectSources, v => result = Math.max(result, v));\n    return result;\n  },\n\n  /**\r\n   * @param {Number} defaultValue\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\n  min(defaultValue, ...effectSources) {\n    let result = defaultValue;\n    applyEffectsOf(effectSources, v => result = Math.min(result, v));\n    return result;\n  }\n\n};\n/**\r\n * @returns {Decimal}\r\n */\n\nDecimal.prototype.plusEffectOf = function (effectSource) {\n  // eslint-disable-next-line consistent-this\n  let result = this;\n  effectSource.applyEffect(v => result = result.plus(v));\n  return result;\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.plusEffectsOf = function (...effectSources) {\n  // eslint-disable-next-line consistent-this\n  let result = this;\n  applyEffectsOf(effectSources, v => result = result.plus(v));\n  return result;\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.minusEffectOf = function (effectSource) {\n  // eslint-disable-next-line consistent-this\n  let result = this;\n  effectSource.applyEffect(v => result = result.minus(v));\n  return result;\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.minusEffectsOf = function (...effectSources) {\n  // eslint-disable-next-line consistent-this\n  let result = this;\n  applyEffectsOf(effectSources, v => result = result.minus(v));\n  return result;\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.timesEffectOf = function (effectSource) {\n  // eslint-disable-next-line consistent-this\n  let result = this;\n  effectSource.applyEffect(v => result = result.times(v));\n  return result;\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.timesEffectsOf = function (...effectSources) {\n  // Normalize is expensive; when we multiply many things together, it's faster\n  // to get a big mantissa and then fix it at the end.\n  let resultMantissa = this.mantissa;\n  let resultExponent = this.exponent;\n  applyEffectsOf(effectSources, v => {\n    const decimal = typeof v === \"number\" ? new Decimal(v) : v;\n    resultMantissa *= decimal.mantissa;\n    resultExponent += decimal.exponent;\n  });\n  return Decimal.fromMantissaExponent(resultMantissa, resultExponent);\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.dividedByEffectOf = function (effectSource) {\n  // eslint-disable-next-line consistent-this\n  let result = this;\n  effectSource.applyEffect(v => result = result.dividedBy(v));\n  return result;\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.dividedByEffectsOf = function (...effectSources) {\n  // eslint-disable-next-line consistent-this\n  let result = this;\n  applyEffectsOf(effectSources, v => result = result.dividedBy(v));\n  return result;\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.powEffectOf = function (effectSource) {\n  // eslint-disable-next-line consistent-this\n  let result = this;\n  effectSource.applyEffect(v => result = result.pow(v));\n  return result;\n};\n/**\r\n * @returns {Decimal}\r\n */\n\n\nDecimal.prototype.powEffectsOf = function (...effectSources) {\n  // eslint-disable-next-line consistent-this\n  let result = this;\n  applyEffectsOf(effectSources, v => result = result.pow(v));\n  return result;\n};\n\nfunction applyEffectsOf(effectSources, applyFn) {\n  for (const effectSource of effectSources) {\n    if (effectSource !== null && effectSource !== undefined) effectSource.applyEffect(applyFn);\n  }\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/game-mechanics/effects.js"],"names":["Effects","sum","effectSources","result","applyEffectsOf","v","product","last","defaultValue","foundLast","reversedSources","filter","s","undefined","reverse","reducer","effectSource","applyEffect","max","Math","min","Decimal","prototype","plusEffectOf","plus","plusEffectsOf","minusEffectOf","minus","minusEffectsOf","timesEffectOf","times","timesEffectsOf","resultMantissa","mantissa","resultExponent","exponent","decimal","fromMantissaExponent","dividedByEffectOf","dividedBy","dividedByEffectsOf","powEffectOf","pow","powEffectsOf","applyFn"],"mappings":"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","sourcesContent":["export const Effects = {\r\n  /**\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\r\n  sum(...effectSources) {\r\n    let result = 0;\r\n    applyEffectsOf(effectSources, v => result += v);\r\n    return result;\r\n  },\r\n  /**\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\r\n  product(...effectSources) {\r\n    let result = 1;\r\n    applyEffectsOf(effectSources, v => result *= v);\r\n    return result;\r\n  },\r\n  /**\r\n   * @param {Number} defaultValue\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\r\n  last(defaultValue, ...effectSources) {\r\n    let result = defaultValue;\r\n    let foundLast = false;\r\n    const reversedSources = effectSources\r\n      .filter(s => s !== null && s !== undefined)\r\n      .reverse();\r\n    const reducer = v => {\r\n      result = v;\r\n      foundLast = true;\r\n    };\r\n    for (const effectSource of reversedSources) {\r\n      effectSource.applyEffect(reducer);\r\n      if (foundLast) break;\r\n    }\r\n    return result;\r\n  },\r\n  /**\r\n   * @param {Number} defaultValue\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\r\n  max(defaultValue, ...effectSources) {\r\n    let result = defaultValue;\r\n    applyEffectsOf(effectSources, v => result = Math.max(result, v));\r\n    return result;\r\n  },\r\n  /**\r\n   * @param {Number} defaultValue\r\n   * @param effectSources\r\n   * @return {Number}\r\n   */\r\n  min(defaultValue, ...effectSources) {\r\n    let result = defaultValue;\r\n    applyEffectsOf(effectSources, v => result = Math.min(result, v));\r\n    return result;\r\n  }\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.plusEffectOf = function(effectSource) {\r\n  // eslint-disable-next-line consistent-this\r\n  let result = this;\r\n  effectSource.applyEffect(v => result = result.plus(v));\r\n  return result;\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.plusEffectsOf = function(...effectSources) {\r\n  // eslint-disable-next-line consistent-this\r\n  let result = this;\r\n  applyEffectsOf(effectSources, v => result = result.plus(v));\r\n  return result;\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.minusEffectOf = function(effectSource) {\r\n  // eslint-disable-next-line consistent-this\r\n  let result = this;\r\n  effectSource.applyEffect(v => result = result.minus(v));\r\n  return result;\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.minusEffectsOf = function(...effectSources) {\r\n  // eslint-disable-next-line consistent-this\r\n  let result = this;\r\n  applyEffectsOf(effectSources, v => result = result.minus(v));\r\n  return result;\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.timesEffectOf = function(effectSource) {\r\n  // eslint-disable-next-line consistent-this\r\n  let result = this;\r\n  effectSource.applyEffect(v => result = result.times(v));\r\n  return result;\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.timesEffectsOf = function(...effectSources) {\r\n  // Normalize is expensive; when we multiply many things together, it's faster\r\n  // to get a big mantissa and then fix it at the end.\r\n  let resultMantissa = this.mantissa;\r\n  let resultExponent = this.exponent;\r\n  applyEffectsOf(effectSources, v => {\r\n    const decimal = typeof v === \"number\" ? new Decimal(v) : v;\r\n    resultMantissa *= decimal.mantissa;\r\n    resultExponent += decimal.exponent;\r\n  });\r\n  return Decimal.fromMantissaExponent(resultMantissa, resultExponent);\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.dividedByEffectOf = function(effectSource) {\r\n  // eslint-disable-next-line consistent-this\r\n  let result = this;\r\n  effectSource.applyEffect(v => result = result.dividedBy(v));\r\n  return result;\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.dividedByEffectsOf = function(...effectSources) {\r\n  // eslint-disable-next-line consistent-this\r\n  let result = this;\r\n  applyEffectsOf(effectSources, v => result = result.dividedBy(v));\r\n  return result;\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.powEffectOf = function(effectSource) {\r\n  // eslint-disable-next-line consistent-this\r\n  let result = this;\r\n  effectSource.applyEffect(v => result = result.pow(v));\r\n  return result;\r\n};\r\n\r\n/**\r\n * @returns {Decimal}\r\n */\r\nDecimal.prototype.powEffectsOf = function(...effectSources) {\r\n  // eslint-disable-next-line consistent-this\r\n  let result = this;\r\n  applyEffectsOf(effectSources, v => result = result.pow(v));\r\n  return result;\r\n};\r\n\r\nfunction applyEffectsOf(effectSources, applyFn) {\r\n  for (const effectSource of effectSources) {\r\n    if (effectSource !== null && effectSource !== undefined) effectSource.applyEffect(applyFn);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}