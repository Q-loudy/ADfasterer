{"ast":null,"code":"import AutobuyerToggles from \"./AutobuyerToggles\";\nimport BigCrunchAutobuyerBox from \"./BigCrunchAutobuyerBox\";\nimport DimensionAutobuyerBox from \"./DimensionAutobuyerBox\";\nimport DimensionBoostAutobuyerBox from \"./DimensionBoostAutobuyerBox\";\nimport EternityAutobuyerBox from \"./EternityAutobuyerBox\";\nimport GalaxyAutobuyerBox from \"./GalaxyAutobuyerBox\";\nimport OpenModalHotkeysButton from \"@/components/OpenModalHotkeysButton\";\nimport RealityAutobuyerBox from \"./RealityAutobuyerBox\";\nimport SimpleAutobuyersMultiBox from \"./SimpleAutobuyersMultiBox\";\nimport TickspeedAutobuyerBox from \"./TickspeedAutobuyerBox\";\nexport default {\n  name: \"AutobuyersTab\",\n  components: {\n    AutobuyerToggles,\n    OpenModalHotkeysButton,\n    RealityAutobuyerBox,\n    EternityAutobuyerBox,\n    BigCrunchAutobuyerBox,\n    GalaxyAutobuyerBox,\n    DimensionBoostAutobuyerBox,\n    TickspeedAutobuyerBox,\n    DimensionAutobuyerBox,\n    SimpleAutobuyersMultiBox\n  },\n\n  data() {\n    return {\n      hasInfinity: false,\n      hasContinuum: false,\n      displayADAutobuyersIndividually: false,\n      hasInstant: false\n    };\n  },\n\n  computed: {\n    // It only makes sense to show this if the player has seen gamespeed-altering effects, but we should keep it there\n    // permanently as soon as they have\n    hasSeenGamespeedAlteringEffects() {\n      return PlayerProgress.seenAlteredSpeed();\n    },\n\n    gameTickLength() {\n      return `${formatInt(player.options.updateRate)} ms`;\n    }\n\n  },\n  methods: {\n    update() {\n      this.hasInfinity = PlayerProgress.infinityUnlocked();\n      this.hasContinuum = Laitela.continuumActive;\n      this.checkADAutoStatus();\n    },\n\n    checkADAutoStatus() {\n      const ad = Autobuyer.antimatterDimension; // Since you don't need to buy autobuyers in Doomed and unbought ones are hidden, we can check if only the\n      // autobuyers you can see (ie, have unlocked) have been maxed.\n\n      if (Pelle.isDoomed) {\n        this.displayADAutobuyersIndividually = !ad.zeroIndexed.filter(x => x.isUnlocked).every(x => x.hasUnlimitedBulk && x.hasMaxedInterval);\n        return;\n      }\n\n      this.hasInstant = ad.hasInstant;\n      this.displayADAutobuyersIndividually = !ad.collapseDisplay;\n    }\n\n  }\n};","map":{"version":3,"sources":["AutobuyersTab.vue"],"names":[],"mappings":"AACA,OAAA,gBAAA,MAAA,oBAAA;AACA,OAAA,qBAAA,MAAA,yBAAA;AACA,OAAA,qBAAA,MAAA,yBAAA;AACA,OAAA,0BAAA,MAAA,8BAAA;AACA,OAAA,oBAAA,MAAA,wBAAA;AACA,OAAA,kBAAA,MAAA,sBAAA;AACA,OAAA,sBAAA,MAAA,qCAAA;AACA,OAAA,mBAAA,MAAA,uBAAA;AACA,OAAA,wBAAA,MAAA,4BAAA;AACA,OAAA,qBAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,gBADA;AAEA,IAAA,sBAFA;AAGA,IAAA,mBAHA;AAIA,IAAA,oBAJA;AAKA,IAAA,qBALA;AAMA,IAAA,kBANA;AAOA,IAAA,0BAPA;AAQA,IAAA,qBARA;AASA,IAAA,qBATA;AAUA,IAAA;AAVA,GAFA;;AAcA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA;AAEA,MAAA,YAAA,EAAA,KAFA;AAGA,MAAA,+BAAA,EAAA,KAHA;AAIA,MAAA,UAAA,EAAA;AAJA,KAAA;AAMA,GArBA;;AAsBA,EAAA,QAAA,EAAA;AACA;AACA;AACA,IAAA,+BAAA,GAAA;AACA,aAAA,cAAA,CAAA,gBAAA,EAAA;AACA,KALA;;AAMA,IAAA,cAAA,GAAA;AACA,aAAA,GAAA,SAAA,CAAA,MAAA,CAAA,OAAA,CAAA,UAAA,CAAA,KAAA;AACA;;AARA,GAtBA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,WAAA,GAAA,cAAA,CAAA,gBAAA,EAAA;AACA,WAAA,YAAA,GAAA,OAAA,CAAA,eAAA;AACA,WAAA,iBAAA;AACA,KALA;;AAMA,IAAA,iBAAA,GAAA;AACA,YAAA,EAAA,GAAA,SAAA,CAAA,mBAAA,CADA,CAEA;AACA;;AACA,UAAA,KAAA,CAAA,QAAA,EAAA;AACA,aAAA,+BAAA,GAAA,CAAA,EAAA,CAAA,WAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,CAAA,UAAA,EACA,KADA,CACA,CAAA,IAAA,CAAA,CAAA,gBAAA,IAAA,CAAA,CAAA,gBADA,CAAA;AAEA;AACA;;AACA,WAAA,UAAA,GAAA,EAAA,CAAA,UAAA;AACA,WAAA,+BAAA,GAAA,CAAA,EAAA,CAAA,eAAA;AACA;;AAjBA;AAhCA,CAAA","sourcesContent":["<script>\r\nimport AutobuyerToggles from \"./AutobuyerToggles\";\r\nimport BigCrunchAutobuyerBox from \"./BigCrunchAutobuyerBox\";\r\nimport DimensionAutobuyerBox from \"./DimensionAutobuyerBox\";\r\nimport DimensionBoostAutobuyerBox from \"./DimensionBoostAutobuyerBox\";\r\nimport EternityAutobuyerBox from \"./EternityAutobuyerBox\";\r\nimport GalaxyAutobuyerBox from \"./GalaxyAutobuyerBox\";\r\nimport OpenModalHotkeysButton from \"@/components/OpenModalHotkeysButton\";\r\nimport RealityAutobuyerBox from \"./RealityAutobuyerBox\";\r\nimport SimpleAutobuyersMultiBox from \"./SimpleAutobuyersMultiBox\";\r\nimport TickspeedAutobuyerBox from \"./TickspeedAutobuyerBox\";\r\n\r\nexport default {\r\n  name: \"AutobuyersTab\",\r\n  components: {\r\n    AutobuyerToggles,\r\n    OpenModalHotkeysButton,\r\n    RealityAutobuyerBox,\r\n    EternityAutobuyerBox,\r\n    BigCrunchAutobuyerBox,\r\n    GalaxyAutobuyerBox,\r\n    DimensionBoostAutobuyerBox,\r\n    TickspeedAutobuyerBox,\r\n    DimensionAutobuyerBox,\r\n    SimpleAutobuyersMultiBox\r\n  },\r\n  data() {\r\n    return {\r\n      hasInfinity: false,\r\n      hasContinuum: false,\r\n      displayADAutobuyersIndividually: false,\r\n      hasInstant: false,\r\n    };\r\n  },\r\n  computed: {\r\n    // It only makes sense to show this if the player has seen gamespeed-altering effects, but we should keep it there\r\n    // permanently as soon as they have\r\n    hasSeenGamespeedAlteringEffects() {\r\n      return PlayerProgress.seenAlteredSpeed();\r\n    },\r\n    gameTickLength() {\r\n      return `${formatInt(player.options.updateRate)} ms`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.hasInfinity = PlayerProgress.infinityUnlocked();\r\n      this.hasContinuum = Laitela.continuumActive;\r\n      this.checkADAutoStatus();\r\n    },\r\n    checkADAutoStatus() {\r\n      const ad = Autobuyer.antimatterDimension;\r\n      // Since you don't need to buy autobuyers in Doomed and unbought ones are hidden, we can check if only the\r\n      // autobuyers you can see (ie, have unlocked) have been maxed.\r\n      if (Pelle.isDoomed) {\r\n        this.displayADAutobuyersIndividually = !ad.zeroIndexed.filter(x => x.isUnlocked)\r\n          .every(x => x.hasUnlimitedBulk && x.hasMaxedInterval);\r\n        return;\r\n      }\r\n      this.hasInstant = ad.hasInstant;\r\n      this.displayADAutobuyersIndividually = !ad.collapseDisplay;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-autobuyers-tab\">\r\n    <AutobuyerToggles />\r\n    <OpenModalHotkeysButton />\r\n    <div v-if=\"hasSeenGamespeedAlteringEffects\">\r\n      Autobuyer intervals and time-based settings are always <b>real time</b> and therefore\r\n      <br>\r\n      unaffected by anything which may alter how fast the game itself is running.\r\n      <br>\r\n      <br>\r\n    </div>\r\n    <div v-if=\"!hasInfinity\">\r\n      Challenges for upgrading autobuyers are unlocked by reaching Infinity.\r\n    </div>\r\n    <b>Autobuyers with no displayed bulk have unlimited bulk by default.</b>\r\n    <b>\r\n      Antimatter Dimension Autobuyers can have their bulk upgraded once interval is below {{ formatInt(100) }} ms.\r\n    </b>\r\n    <b v-if=\"hasInstant\">Autobuyers with \"Instant\" interval will trigger every game tick ({{ gameTickLength }}).</b>\r\n    <RealityAutobuyerBox class=\"c-reality-pos\" />\r\n    <EternityAutobuyerBox class=\"c-eternity-pos\" />\r\n    <BigCrunchAutobuyerBox class=\"c-infinity-pos\" />\r\n    <GalaxyAutobuyerBox />\r\n    <DimensionBoostAutobuyerBox />\r\n    <TickspeedAutobuyerBox v-if=\"!hasContinuum\" />\r\n    <template v-if=\"displayADAutobuyersIndividually\">\r\n      <DimensionAutobuyerBox\r\n        v-for=\"tier in 8\"\r\n        :key=\"tier\"\r\n        :tier=\"tier\"\r\n      />\r\n    </template>\r\n    <SimpleAutobuyersMultiBox />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n/* This is necessary for the ExpandingControlBox within these components to render in the right stacking order\r\nwhen they're open. It looks slightly hacky but actually can't be done any other way; each AutobuyerBox creates\r\nits own stacking context, which means that all z-indices specified within are essentially scoped and the\r\nAutobuyerBox components will always render in page order regardless of internal z-indices without these. */\r\n.c-reality-pos {\r\n  z-index: 3;\r\n}\r\n\r\n.c-eternity-pos {\r\n  z-index: 2;\r\n}\r\n\r\n.c-infinity-pos {\r\n  z-index: 1;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/autobuyers"},"metadata":{},"sourceType":"module"}