{"ast":null,"code":"import { GameMechanicState } from \"./game-mechanic\";\n/**\r\n * @abstract\r\n */\n\nexport class PurchasableMechanicState extends GameMechanicState {\n  /**\r\n   * @abstract\r\n   */\n  get currency() {\n    throw new NotImplementedError();\n  }\n\n  get isAffordable() {\n    return this.currency.gte(this.cost);\n  }\n\n  get isAvailableForPurchase() {\n    return true;\n  }\n\n  get isRebuyable() {\n    return false;\n  }\n\n  get cost() {\n    return this.config.cost;\n  }\n  /**\r\n   * @abstract\r\n   */\n\n\n  get isBought() {\n    throw new NotImplementedError();\n  }\n  /**\r\n   * @abstract\r\n   */\n\n\n  set isBought(value) {\n    throw new NotImplementedError();\n  }\n\n  get canBeBought() {\n    return !this.isBought && this.isAffordable && this.isAvailableForPurchase;\n  }\n\n  purchase() {\n    if (!this.canBeBought) return false;\n    this.currency.subtract(this.cost);\n    this.isBought = true;\n    this.onPurchased();\n    GameUI.update();\n    return true;\n  } // eslint-disable-next-line no-empty-function\n\n\n  onPurchased() {}\n\n  get isEffectActive() {\n    return this.isBought;\n  }\n\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/game-mechanics/puchasable.js"],"names":["GameMechanicState","PurchasableMechanicState","currency","NotImplementedError","isAffordable","gte","cost","isAvailableForPurchase","isRebuyable","config","isBought","value","canBeBought","purchase","subtract","onPurchased","GameUI","update","isEffectActive"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,iBAAlC;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,wBAAN,SAAuCD,iBAAvC,CAAyD;AAC9D;AACF;AACA;AACc,MAARE,QAAQ,GAAG;AAAE,UAAM,IAAIC,mBAAJ,EAAN;AAAkC;;AAEnC,MAAZC,YAAY,GAAG;AACjB,WAAO,KAAKF,QAAL,CAAcG,GAAd,CAAkB,KAAKC,IAAvB,CAAP;AACD;;AAEyB,MAAtBC,sBAAsB,GAAG;AAC3B,WAAO,IAAP;AACD;;AAEc,MAAXC,WAAW,GAAG;AAChB,WAAO,KAAP;AACD;;AAEO,MAAJF,IAAI,GAAG;AACT,WAAO,KAAKG,MAAL,CAAYH,IAAnB;AACD;AAED;AACF;AACA;;;AACc,MAARI,QAAQ,GAAG;AAAE,UAAM,IAAIP,mBAAJ,EAAN;AAAkC;AAEnD;AACF;AACA;;;AACc,MAARO,QAAQ,CAACC,KAAD,EAAQ;AAAE,UAAM,IAAIR,mBAAJ,EAAN;AAAkC;;AAEzC,MAAXS,WAAW,GAAG;AAChB,WAAO,CAAC,KAAKF,QAAN,IAAkB,KAAKN,YAAvB,IAAuC,KAAKG,sBAAnD;AACD;;AAEDM,EAAAA,QAAQ,GAAG;AACT,QAAI,CAAC,KAAKD,WAAV,EAAuB,OAAO,KAAP;AACvB,SAAKV,QAAL,CAAcY,QAAd,CAAuB,KAAKR,IAA5B;AACA,SAAKI,QAAL,GAAgB,IAAhB;AACA,SAAKK,WAAL;AACAC,IAAAA,MAAM,CAACC,MAAP;AACA,WAAO,IAAP;AACD,GA3C6D,CA6C9D;;;AACAF,EAAAA,WAAW,GAAG,CAAG;;AAEC,MAAdG,cAAc,GAAG;AACnB,WAAO,KAAKR,QAAZ;AACD;;AAlD6D","sourcesContent":["import { GameMechanicState } from \"./game-mechanic\";\r\n\r\n/**\r\n * @abstract\r\n */\r\nexport class PurchasableMechanicState extends GameMechanicState {\r\n  /**\r\n   * @abstract\r\n   */\r\n  get currency() { throw new NotImplementedError(); }\r\n\r\n  get isAffordable() {\r\n    return this.currency.gte(this.cost);\r\n  }\r\n\r\n  get isAvailableForPurchase() {\r\n    return true;\r\n  }\r\n\r\n  get isRebuyable() {\r\n    return false;\r\n  }\r\n\r\n  get cost() {\r\n    return this.config.cost;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  get isBought() { throw new NotImplementedError(); }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  set isBought(value) { throw new NotImplementedError(); }\r\n\r\n  get canBeBought() {\r\n    return !this.isBought && this.isAffordable && this.isAvailableForPurchase;\r\n  }\r\n\r\n  purchase() {\r\n    if (!this.canBeBought) return false;\r\n    this.currency.subtract(this.cost);\r\n    this.isBought = true;\r\n    this.onPurchased();\r\n    GameUI.update();\r\n    return true;\r\n  }\r\n\r\n  // eslint-disable-next-line no-empty-function\r\n  onPurchased() { }\r\n\r\n  get isEffectActive() {\r\n    return this.isBought;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}