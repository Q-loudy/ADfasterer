{"ast":null,"code":"export const secretAchievements = [{\n  id: 11,\n  name: \"The first one's always free\",\n  description: \"Click on this Achievement.\"\n}, {\n  id: 12,\n  name: \"Just in case\",\n\n  get description() {\n    return `Save ${formatInt(100)} times without refreshing.`;\n  }\n\n}, {\n  id: 13,\n  name: \"It pays to have respect\",\n  description: \"Pay respects.\"\n}, {\n  id: 14,\n  name: \"So do I\",\n  description: \"Say something naughty.\"\n}, {\n  id: 15,\n  name: \"Do a barrel roll!\",\n  description: \"Do a barrel roll.\"\n}, {\n  id: 16,\n  name: \"Do you enjoy pain?\",\n\n  get description() {\n    return `Use a \"painful\" notation for ${formatInt(10)} real-time minutes\n      after doing an Eternity.`;\n  },\n\n  checkRequirement: () => AchievementTimers.pain.check(PlayerProgress.eternityUnlocked() && Notations.current.isPainful, 600),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 17,\n  name: \"30 Lives\",\n  description: \"Input the konami code.\"\n}, {\n  id: 18,\n  name: \"Do you feel lucky? Well do ya punk?\",\n\n  get description() {\n    return `You have a ${formatInt(1)}/${formatInt(1e5)} chance of getting this achievement every second.`;\n  }\n\n}, {\n  id: 21,\n  name: \"Go study in real life instead\",\n  description: \"Purchase the secret Time Study.\"\n}, {\n  id: 22,\n  name: \"Deep fried\",\n\n  get description() {\n    return `Buy ${formatInt(1e5)} Antimatter Galaxies in total while using emoji notation.`;\n  },\n\n  checkRequirement: () => player.requirementChecks.permanent.emojiGalaxies >= 1e5,\n  checkEvent: GAME_EVENT.GALAXY_RESET_AFTER\n}, {\n  id: 23,\n  name: \"Stop right there criminal scum!\",\n  description: \"Open the console.\"\n}, {\n  id: 24,\n  name: \"Real news\",\n  description: \"Click on a news ticker message that does something when you click on it.\"\n}, {\n  id: 25,\n  name: \"Shhh... It's a secret\",\n  description: \"Discover a secret theme.\"\n}, {\n  id: 26,\n  name: \"You're a failure\",\n\n  get description() {\n    return `Fail Eternity Challenges ${formatInt(10)} times without refreshing.\n      What are you doing with your life...`;\n  },\n\n  checkRequirement: function () {\n    let count = 0;\n    return () => ++count >= 10;\n  }(),\n  checkEvent: GAME_EVENT.CHALLENGE_FAILED\n}, {\n  id: 27,\n  name: \"It's not called matter dimensions is it?\",\n  description: \"Get Infinite matter.\",\n  checkRequirement: () => Currency.matter.gte(Decimal.NUMBER_MAX_VALUE),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 28,\n  name: \"Nice.\",\n  description: \"Don't act like you don't know what you did.\"\n}, {\n  id: 31,\n  name: \"You should download some more RAM\",\n\n  get description() {\n    return `Set your update rate to ${formatInt(200)}ms.`;\n  }\n\n}, {\n  id: 32,\n  name: \"Less than or equal to 0.001\",\n\n  get description() {\n    return `Get a fastest infinity or eternity time of less than or equal to ${format(0.001, 3, 3)} seconds.`;\n  },\n\n  checkRequirement: () => Time.bestInfinity.totalMilliseconds <= 1 || Time.bestEternity.totalMilliseconds <= 1,\n  checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.ETERNITY_RESET_AFTER]\n}, {\n  id: 33,\n  name: \"Chess Battle Advanced\",\n  description: \"Chess Fight Improved\" // CBA is now in ADfaster!\n\n}, {\n  id: 34,\n  name: \"You do know how these work, right?\",\n  description: \"Respec with an empty Time Study Tree.\"\n}, {\n  id: 35,\n  name: \"Should we tell them about buy max...\",\n\n  get description() {\n    return `Buy single Tickspeed upgrades ${formatInt(1e5)} times.`;\n  },\n\n  checkRequirement: () => player.requirementChecks.permanent.singleTickspeed >= 1e5,\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 36,\n  name: \"While you were away... Nothing happened.\",\n  description: \"See nothing happen while you were away.\"\n}, {\n  id: 37,\n  name: \"You followed the instructions\",\n  description: \"Follow instructions.\"\n}, {\n  id: 38,\n  name: \"Knife's edge\",\n  description: \"Close the Hard Reset modal after typing in the confirmation.\"\n}, {\n  id: 41,\n  name: \"That dimension doesnâ€™t exist\",\n  description: \"Try to purchase the 9th dimension.\"\n}, {\n  id: 42,\n  name: \"SHAME ON ME\",\n  description: \"Try to use EC12 to speed up time.\"\n}, {\n  id: 43,\n  name: \"A cacophonous chorus\",\n  description: \"Have all equipped Glyphs be Music Glyphs.\",\n  checkRequirement: () => Glyphs.active.length && Glyphs.active.every(x => Glyphs.isMusicGlyph(x)),\n  checkEvent: GAME_EVENT.GLYPHS_EQUIPPED_CHANGED\n}, {\n  id: 44,\n  name: \"Are you statisfied now?\",\n\n  get description() {\n    return `Stare intently at the statistics tab for ${formatInt(15)} real-time minutes.`;\n  },\n\n  checkRequirement: () => AchievementTimers.stats.check(Tab.statistics.isOpen, 900),\n  checkEvent: GAME_EVENT.GAME_TICK_AFTER\n}, {\n  id: 45,\n  name: \"This dragging is dragging on\",\n  description: \"Drag the Perks around for a minute.\",\n  checkRequirement: () => player.requirementChecks.permanent.perkTreeDragging++ / 100 >= 60\n}, {\n  id: 46,\n  name: \"For a rainy day\",\n  description: \"Store a day of real time.\"\n}, {\n  id: 47,\n  name: \"ALT+\",\n  description: \"Hide every possible tab.\"\n}, {\n  id: 48,\n  name: \"Stack overflow\",\n  description: \"Have more Automator errors than lines.\"\n}];","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/achievements/secret-achievements.js"],"names":["secretAchievements","id","name","description","formatInt","checkRequirement","AchievementTimers","pain","check","PlayerProgress","eternityUnlocked","Notations","current","isPainful","checkEvent","GAME_EVENT","GAME_TICK_AFTER","player","requirementChecks","permanent","emojiGalaxies","GALAXY_RESET_AFTER","count","CHALLENGE_FAILED","Currency","matter","gte","Decimal","NUMBER_MAX_VALUE","format","Time","bestInfinity","totalMilliseconds","bestEternity","BIG_CRUNCH_AFTER","ETERNITY_RESET_AFTER","singleTickspeed","Glyphs","active","length","every","x","isMusicGlyph","GLYPHS_EQUIPPED_CHANGED","stats","Tab","statistics","isOpen","perkTreeDragging"],"mappings":"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","sourcesContent":["export const secretAchievements = [\r\n  {\r\n    id: 11,\r\n    name: \"The first one's always free\",\r\n    description: \"Click on this Achievement.\"\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Just in case\",\r\n    get description() { return `Save ${formatInt(100)} times without refreshing.`; }\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"It pays to have respect\",\r\n    description: \"Pay respects.\"\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"So do I\",\r\n    description: \"Say something naughty.\"\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Do a barrel roll!\",\r\n    description: \"Do a barrel roll.\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Do you enjoy pain?\",\r\n    get description() {\r\n      return `Use a \"painful\" notation for ${formatInt(10)} real-time minutes\r\n      after doing an Eternity.`;\r\n    },\r\n    checkRequirement: () => AchievementTimers.pain\r\n      .check(PlayerProgress.eternityUnlocked() && Notations.current.isPainful, 600),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"30 Lives\",\r\n    description: \"Input the konami code.\"\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Do you feel lucky? Well do ya punk?\",\r\n    get description() {\r\n      return `You have a ${formatInt(1)}/${formatInt(1e5)} chance of getting this achievement every second.`;\r\n    }\r\n  },\r\n  {\r\n    id: 21,\r\n    name: \"Go study in real life instead\",\r\n    description: \"Purchase the secret Time Study.\"\r\n  },\r\n  {\r\n    id: 22,\r\n    name: \"Deep fried\",\r\n    get description() { return `Buy ${formatInt(1e5)} Antimatter Galaxies in total while using emoji notation.`; },\r\n    checkRequirement: () => player.requirementChecks.permanent.emojiGalaxies >= 1e5,\r\n    checkEvent: GAME_EVENT.GALAXY_RESET_AFTER\r\n  },\r\n  {\r\n    id: 23,\r\n    name: \"Stop right there criminal scum!\",\r\n    description: \"Open the console.\"\r\n  },\r\n  {\r\n    id: 24,\r\n    name: \"Real news\",\r\n    description: \"Click on a news ticker message that does something when you click on it.\"\r\n  },\r\n  {\r\n    id: 25,\r\n    name: \"Shhh... It's a secret\",\r\n    description: \"Discover a secret theme.\"\r\n  },\r\n  {\r\n    id: 26,\r\n    name: \"You're a failure\",\r\n    get description() {\r\n      return `Fail Eternity Challenges ${formatInt(10)} times without refreshing.\r\n      What are you doing with your life...`;\r\n    },\r\n    checkRequirement: (function() {\r\n      let count = 0;\r\n      return () => ++count >= 10;\r\n    }()),\r\n    checkEvent: GAME_EVENT.CHALLENGE_FAILED\r\n  },\r\n  {\r\n    id: 27,\r\n    name: \"It's not called matter dimensions is it?\",\r\n    description: \"Get Infinite matter.\",\r\n    checkRequirement: () => Currency.matter.gte(Decimal.NUMBER_MAX_VALUE),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 28,\r\n    name: \"Nice.\",\r\n    description: \"Don't act like you don't know what you did.\"\r\n  },\r\n  {\r\n    id: 31,\r\n    name: \"You should download some more RAM\",\r\n    get description() { return `Set your update rate to ${formatInt(200)}ms.`; }\r\n  },\r\n  {\r\n    id: 32,\r\n    name: \"Less than or equal to 0.001\",\r\n    get description() {\r\n      return `Get a fastest infinity or eternity time of less than or equal to ${format(0.001, 3, 3)} seconds.`;\r\n    },\r\n    checkRequirement: () =>\r\n      Time.bestInfinity.totalMilliseconds <= 1 ||\r\n      Time.bestEternity.totalMilliseconds <= 1,\r\n    checkEvent: [GAME_EVENT.BIG_CRUNCH_AFTER, GAME_EVENT.ETERNITY_RESET_AFTER]\r\n  },\r\n  {\r\n    id: 33,\r\n    name: \"Chess Battle Advanced\",\r\n    description: \"Chess Fight Improved\"\r\n    // CBA is now in ADfaster!\r\n  },\r\n  {\r\n    id: 34,\r\n    name: \"You do know how these work, right?\",\r\n    description: \"Respec with an empty Time Study Tree.\"\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Should we tell them about buy max...\",\r\n    get description() { return `Buy single Tickspeed upgrades ${formatInt(1e5)} times.`; },\r\n    checkRequirement: () => player.requirementChecks.permanent.singleTickspeed >= 1e5,\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 36,\r\n    name: \"While you were away... Nothing happened.\",\r\n    description: \"See nothing happen while you were away.\"\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"You followed the instructions\",\r\n    description: \"Follow instructions.\"\r\n  },\r\n  {\r\n    id: 38,\r\n    name: \"Knife's edge\",\r\n    description: \"Close the Hard Reset modal after typing in the confirmation.\"\r\n  },\r\n  {\r\n    id: 41,\r\n    name: \"That dimension doesnâ€™t exist\",\r\n    description: \"Try to purchase the 9th dimension.\"\r\n  },\r\n  {\r\n    id: 42,\r\n    name: \"SHAME ON ME\",\r\n    description: \"Try to use EC12 to speed up time.\"\r\n  },\r\n  {\r\n    id: 43,\r\n    name: \"A cacophonous chorus\",\r\n    description: \"Have all equipped Glyphs be Music Glyphs.\",\r\n    checkRequirement: () => Glyphs.active.length && Glyphs.active.every(x => Glyphs.isMusicGlyph(x)),\r\n    checkEvent: GAME_EVENT.GLYPHS_EQUIPPED_CHANGED\r\n  },\r\n  {\r\n    id: 44,\r\n    name: \"Are you statisfied now?\",\r\n    get description() { return `Stare intently at the statistics tab for ${formatInt(15)} real-time minutes.`; },\r\n    checkRequirement: () => AchievementTimers.stats.check(Tab.statistics.isOpen, 900),\r\n    checkEvent: GAME_EVENT.GAME_TICK_AFTER\r\n  },\r\n  {\r\n    id: 45,\r\n    name: \"This dragging is dragging on\",\r\n    description: \"Drag the Perks around for a minute.\",\r\n    checkRequirement: () => player.requirementChecks.permanent.perkTreeDragging++ / 100 >= 60\r\n  },\r\n  {\r\n    id: 46,\r\n    name: \"For a rainy day\",\r\n    description: \"Store a day of real time.\"\r\n  },\r\n  {\r\n    id: 47,\r\n    name: \"ALT+\",\r\n    description: \"Hide every possible tab.\"\r\n  },\r\n  {\r\n    id: 48,\r\n    name: \"Stack overflow\",\r\n    description: \"Have more Automator errors than lines.\"\r\n  },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}