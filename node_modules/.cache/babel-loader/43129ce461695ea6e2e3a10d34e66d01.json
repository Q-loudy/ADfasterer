{"ast":null,"code":"import AlchemyResourceArc from \"./AlchemyResourceArc\";\nimport HintText from \"@/components/HintText\";\nexport default {\n  name: \"AlchemyCircleNode\",\n  components: {\n    HintText,\n    AlchemyResourceArc\n  },\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    isFocused: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      isReactionActive: false,\n      amount: 0,\n      flow: 0,\n      isUnlocked: false\n    };\n  },\n\n  computed: {\n    resource() {\n      return this.node.resource;\n    },\n\n    isBaseResource() {\n      return this.resource.isBaseResource;\n    },\n\n    layoutStyle() {\n      const scaledFlow = Math.clamp(0.7 * Math.sqrt(Math.abs(this.flow)), 0, 1);\n      return {\n        left: `${this.node.x}%`,\n        top: `${this.node.y}%`,\n        \"box-shadow\": `0 0 0.3rem 0.3rem\n          rgba(${this.flow > 0 ? \"156, 204, 101\" : \"204, 102, 102\"}, ${scaledFlow})`\n      };\n    },\n\n    classObject() {\n      return {\n        \"o-alchemy-node--base\": this.isBaseResource,\n        \"o-alchemy-node--active\": this.isReactionActive,\n        \"o-alchemy-node--unfocused\": !this.isFocused,\n        \"o-alchemy-node--locked\": !this.isUnlocked\n      };\n    },\n\n    hintClassObject() {\n      return this.isFocused ? undefined : \"o-hint-text--alchemy-node--unfocused\";\n    }\n\n  },\n  methods: {\n    update() {\n      this.isReactionActive = !Pelle.isDoomed && !this.isBaseResource && this.node.resource.reaction.isActive;\n      this.amount = this.resource.amount;\n      this.flow = this.resource.flow;\n      this.isUnlocked = this.resource.isUnlocked;\n    }\n\n  }\n};","map":{"version":3,"sources":["AlchemyCircleNode.vue"],"names":[],"mappings":"AACA,OAAA,kBAAA,MAAA,sBAAA;AACA,OAAA,QAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QADA;AAEA,IAAA;AAFA,GAFA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AALA,GANA;;AAiBA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,KADA;AAEA,MAAA,MAAA,EAAA,CAFA;AAGA,MAAA,IAAA,EAAA,CAHA;AAIA,MAAA,UAAA,EAAA;AAJA,KAAA;AAMA,GAxBA;;AAyBA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,GAAA;AACA,aAAA,KAAA,IAAA,CAAA,QAAA;AACA,KAHA;;AAIA,IAAA,cAAA,GAAA;AACA,aAAA,KAAA,QAAA,CAAA,cAAA;AACA,KANA;;AAOA,IAAA,WAAA,GAAA;AACA,YAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,MAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,GAAA,KAAA,IAAA,CAAA,CAAA,GADA;AAEA,QAAA,GAAA,EAAA,GAAA,KAAA,IAAA,CAAA,CAAA,GAFA;AAGA,sBAAA;AACA,iBAAA,KAAA,IAAA,GAAA,CAAA,GAAA,eAAA,GAAA,eAAA,KAAA,UAAA;AAJA,OAAA;AAMA,KAfA;;AAgBA,IAAA,WAAA,GAAA;AACA,aAAA;AACA,gCAAA,KAAA,cADA;AAEA,kCAAA,KAAA,gBAFA;AAGA,qCAAA,CAAA,KAAA,SAHA;AAIA,kCAAA,CAAA,KAAA;AAJA,OAAA;AAMA,KAvBA;;AAwBA,IAAA,eAAA,GAAA;AACA,aAAA,KAAA,SAAA,GAAA,SAAA,GAAA,sCAAA;AACA;;AA1BA,GAzBA;AAqDA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,gBAAA,GAAA,CAAA,KAAA,CAAA,QAAA,IAAA,CAAA,KAAA,cAAA,IAAA,KAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA;AACA,WAAA,MAAA,GAAA,KAAA,QAAA,CAAA,MAAA;AACA,WAAA,IAAA,GAAA,KAAA,QAAA,CAAA,IAAA;AACA,WAAA,UAAA,GAAA,KAAA,QAAA,CAAA,UAAA;AACA;;AANA;AArDA,CAAA","sourcesContent":["<script>\r\nimport AlchemyResourceArc from \"./AlchemyResourceArc\";\r\nimport HintText from \"@/components/HintText\";\r\n\r\nexport default {\r\n  name: \"AlchemyCircleNode\",\r\n  components: {\r\n    HintText,\r\n    AlchemyResourceArc\r\n  },\r\n  props: {\r\n    node: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    isFocused: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isReactionActive: false,\r\n      amount: 0,\r\n      flow: 0,\r\n      isUnlocked: false\r\n    };\r\n  },\r\n  computed: {\r\n    resource() {\r\n      return this.node.resource;\r\n    },\r\n    isBaseResource() {\r\n      return this.resource.isBaseResource;\r\n    },\r\n    layoutStyle() {\r\n      const scaledFlow = Math.clamp(0.7 * Math.sqrt(Math.abs(this.flow)), 0, 1);\r\n      return {\r\n        left: `${this.node.x}%`,\r\n        top: `${this.node.y}%`,\r\n        \"box-shadow\": `0 0 0.3rem 0.3rem\r\n          rgba(${this.flow > 0 ? \"156, 204, 101\" : \"204, 102, 102\"}, ${scaledFlow})`\r\n      };\r\n    },\r\n    classObject() {\r\n      return {\r\n        \"o-alchemy-node--base\": this.isBaseResource,\r\n        \"o-alchemy-node--active\": this.isReactionActive,\r\n        \"o-alchemy-node--unfocused\": !this.isFocused,\r\n        \"o-alchemy-node--locked\": !this.isUnlocked,\r\n      };\r\n    },\r\n    hintClassObject() {\r\n      return this.isFocused ? undefined : \"o-hint-text--alchemy-node--unfocused\";\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isReactionActive = !Pelle.isDoomed && !this.isBaseResource && this.node.resource.reaction.isActive;\r\n      this.amount = this.resource.amount;\r\n      this.flow = this.resource.flow;\r\n      this.isUnlocked = this.resource.isUnlocked;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"o-alchemy-node\"\r\n    :style=\"layoutStyle\"\r\n    :class=\"classObject\"\r\n    @mouseenter=\"$emit('mouseenter')\"\r\n    @mouseleave=\"$emit('mouseleave')\"\r\n    @click=\"emitClick\"\r\n  >\r\n    <AlchemyResourceArc\r\n      :resource=\"resource\"\r\n      :class-object=\"classObject\"\r\n    />\r\n    <span v-if=\"isUnlocked\">\r\n      <HintText\r\n        type=\"alchemy\"\r\n        :class=\"hintClassObject\"\r\n        class=\"o-hint-text--alchemy-node l-hint-text--alchemy-node\"\r\n      >\r\n        {{ formatInt(amount) }}\r\n      </HintText>\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/alchemy"},"metadata":{},"sourceType":"module"}