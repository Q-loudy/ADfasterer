{"ast":null,"code":"import { DC } from \"../constants\";\nexport const tabNotifications = {\n  firstInfinity: {\n    id: 0,\n    tabsToHighLight: [{\n      parent: \"infinity\",\n      tab: \"upgrades\"\n    }, {\n      parent: \"challenges\",\n      tab: \"normal\"\n    }, {\n      parent: \"statistics\",\n      tab: \"multipliers\"\n    }],\n    condition: () => !PlayerProgress.realityUnlocked() && !PlayerProgress.eternityUnlocked() && !PlayerProgress.infinityUnlocked(),\n    events: [GAME_EVENT.BIG_CRUNCH_BEFORE]\n  },\n  breakInfinity: {\n    id: 1,\n    tabsToHighLight: [{\n      parent: \"infinity\",\n      tab: \"break\"\n    }],\n    condition: () => !PlayerProgress.realityUnlocked() && !PlayerProgress.eternityUnlocked() && Autobuyer.bigCrunch.hasMaxedInterval\n  },\n  IDUnlock: {\n    id: 2,\n    tabsToHighLight: [{\n      parent: \"dimensions\",\n      tab: \"infinity\"\n    }],\n    condition: () => !PlayerProgress.realityUnlocked() && !PlayerProgress.eternityUnlocked() && !InfinityDimension(2).isUnlocked\n  },\n  ICUnlock: {\n    id: 3,\n    tabsToHighLight: [{\n      parent: \"challenges\",\n      tab: \"infinity\"\n    }],\n    condition: () => !PlayerProgress.realityUnlocked() && !PlayerProgress.eternityUnlocked()\n  },\n  replicanti: {\n    id: 4,\n    tabsToHighLight: [{\n      parent: \"infinity\",\n      tab: \"replicanti\"\n    }],\n    condition: () => !PlayerProgress.realityUnlocked() && !PlayerProgress.eternityUnlocked() && Currency.infinityPoints.gte(DC.E140),\n    events: [GAME_EVENT.BIG_CRUNCH_AFTER]\n  },\n  firstEternity: {\n    id: 5,\n    tabsToHighLight: [{\n      parent: \"eternity\",\n      tab: \"studies\"\n    }, {\n      parent: \"eternity\",\n      tab: \"milestones\"\n    }, {\n      parent: \"eternity\",\n      tab: \"upgrades\"\n    }, {\n      parent: \"dimensions\",\n      tab: \"time\"\n    }],\n    condition: () => !PlayerProgress.realityUnlocked() && !PlayerProgress.eternityUnlocked(),\n    events: [GAME_EVENT.ETERNITY_RESET_BEFORE]\n  },\n  dilationAfterUnlock: {\n    id: 6,\n    tabsToHighLight: [{\n      parent: \"eternity\",\n      tab: \"dilation\"\n    }],\n    condition: () => !PlayerProgress.realityUnlocked()\n  },\n  realityUnlock: {\n    id: 7,\n    tabsToHighLight: [{\n      parent: \"eternity\",\n      tab: \"studies\"\n    }],\n    condition: () => !PlayerProgress.realityUnlocked() && TimeStudy.reality.canBeBought,\n    events: [GAME_EVENT.ETERNITY_RESET_AFTER, GAME_EVENT.SAVE_CONVERTED_FROM_PREVIOUS_VERSION, GAME_EVENT.OFFLINE_CURRENCY_GAINED, GAME_EVENT.ACHIEVEMENT_UNLOCKED]\n  },\n  blackHoleUnlock: {\n    id: 8,\n    tabsToHighLight: [{\n      parent: \"reality\",\n      tab: \"hole\"\n    }],\n    condition: () => !BlackHoles.areUnlocked && Currency.realityMachines.gte(100),\n    events: [GAME_EVENT.REALITY_RESET_AFTER]\n  },\n  automatorUnlock: {\n    id: 9,\n    tabsToHighLight: [{\n      parent: \"automation\",\n      tab: \"automator\"\n    }],\n    condition: () => Player.automatorUnlocked,\n    events: [GAME_EVENT.REALITY_RESET_AFTER]\n  },\n  teresaUnlock: {\n    id: 10,\n    tabsToHighLight: [{\n      parent: \"celestials\",\n      tab: \"celestial-navigation\"\n    }, {\n      parent: \"celestials\",\n      tab: \"teresa\"\n    }],\n    condition: () => player.celestials.teresa.pouredAmount === 0 && Teresa.isUnlocked,\n    events: [GAME_EVENT.REALITY_UPGRADE_BOUGHT]\n  },\n  alchemyUnlock: {\n    id: 11,\n    tabsToHighLight: [{\n      parent: \"reality\",\n      tab: \"glyphs\"\n    }, {\n      parent: \"reality\",\n      tab: \"alchemy\"\n    }],\n    condition: () => player.celestials.ra.pets.effarig.level >= 2,\n    events: [GAME_EVENT.GAME_TICK_AFTER]\n  },\n  newAutobuyer: {\n    id: 12,\n    tabsToHighLight: [{\n      parent: \"automation\",\n      tab: \"autobuyers\"\n    }],\n    // Always externally triggered, but needs to be ignored in cel7 because they're unlocked differently\n    condition: () => !Pelle.isDoomed\n  },\n  imaginaryMachineUnlock: {\n    id: 13,\n    tabsToHighLight: [{\n      parent: \"reality\",\n      tab: \"imag_upgrades\"\n    }],\n    condition: () => MachineHandler.isIMUnlocked,\n    events: [GAME_EVENT.GAME_TICK_AFTER]\n  },\n  laitelaUnlock: {\n    id: 14,\n    tabsToHighLight: [{\n      parent: \"celestials\",\n      tab: \"laitela\"\n    }],\n    // Always externally triggered\n    condition: () => true\n  },\n  pelleUnlock: {\n    id: 15,\n    tabsToHighLight: [{\n      parent: \"celestials\",\n      tab: \"pelle\"\n    }],\n    // Always externally triggered\n    condition: () => true\n  },\n  newGlyphCosmetic: {\n    id: 16,\n    tabsToHighLight: [{\n      parent: \"reality\",\n      tab: \"glyphs\"\n    }],\n    // Always externally triggered\n    condition: () => true\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/tab-notifications.js"],"names":["DC","tabNotifications","firstInfinity","id","tabsToHighLight","parent","tab","condition","PlayerProgress","realityUnlocked","eternityUnlocked","infinityUnlocked","events","GAME_EVENT","BIG_CRUNCH_BEFORE","breakInfinity","Autobuyer","bigCrunch","hasMaxedInterval","IDUnlock","InfinityDimension","isUnlocked","ICUnlock","replicanti","Currency","infinityPoints","gte","E140","BIG_CRUNCH_AFTER","firstEternity","ETERNITY_RESET_BEFORE","dilationAfterUnlock","realityUnlock","TimeStudy","reality","canBeBought","ETERNITY_RESET_AFTER","SAVE_CONVERTED_FROM_PREVIOUS_VERSION","OFFLINE_CURRENCY_GAINED","ACHIEVEMENT_UNLOCKED","blackHoleUnlock","BlackHoles","areUnlocked","realityMachines","REALITY_RESET_AFTER","automatorUnlock","Player","automatorUnlocked","teresaUnlock","player","celestials","teresa","pouredAmount","Teresa","REALITY_UPGRADE_BOUGHT","alchemyUnlock","ra","pets","effarig","level","GAME_TICK_AFTER","newAutobuyer","Pelle","isDoomed","imaginaryMachineUnlock","MachineHandler","isIMUnlocked","laitelaUnlock","pelleUnlock","newGlyphCosmetic"],"mappings":"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","sourcesContent":["import { DC } from \"../constants\";\r\n\r\nexport const tabNotifications = {\r\n  firstInfinity: {\r\n    id: 0,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"infinity\",\r\n        tab: \"upgrades\"\r\n      },\r\n      {\r\n        parent: \"challenges\",\r\n        tab: \"normal\"\r\n      },\r\n      {\r\n        parent: \"statistics\",\r\n        tab: \"multipliers\"\r\n      }\r\n    ],\r\n    condition: () => !PlayerProgress.realityUnlocked() &&\r\n      !PlayerProgress.eternityUnlocked() &&\r\n      !PlayerProgress.infinityUnlocked(),\r\n    events: [GAME_EVENT.BIG_CRUNCH_BEFORE]\r\n  },\r\n  breakInfinity: {\r\n    id: 1,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"infinity\",\r\n        tab: \"break\"\r\n      }\r\n    ],\r\n    condition: () => !PlayerProgress.realityUnlocked() &&\r\n      !PlayerProgress.eternityUnlocked() && Autobuyer.bigCrunch.hasMaxedInterval\r\n  },\r\n  IDUnlock: {\r\n    id: 2,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"dimensions\",\r\n        tab: \"infinity\"\r\n      }\r\n    ],\r\n    condition: () => !PlayerProgress.realityUnlocked() &&\r\n      !PlayerProgress.eternityUnlocked() && !InfinityDimension(2).isUnlocked\r\n  },\r\n  ICUnlock: {\r\n    id: 3,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"challenges\",\r\n        tab: \"infinity\"\r\n      }\r\n    ],\r\n    condition: () => !PlayerProgress.realityUnlocked() &&\r\n      !PlayerProgress.eternityUnlocked()\r\n  },\r\n  replicanti: {\r\n    id: 4,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"infinity\",\r\n        tab: \"replicanti\"\r\n      }\r\n    ],\r\n    condition: () => !PlayerProgress.realityUnlocked() &&\r\n      !PlayerProgress.eternityUnlocked() && Currency.infinityPoints.gte(DC.E140),\r\n    events: [GAME_EVENT.BIG_CRUNCH_AFTER]\r\n  },\r\n  firstEternity: {\r\n    id: 5,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"eternity\",\r\n        tab: \"studies\"\r\n      },\r\n      {\r\n        parent: \"eternity\",\r\n        tab: \"milestones\"\r\n      },\r\n      {\r\n        parent: \"eternity\",\r\n        tab: \"upgrades\"\r\n      },\r\n      {\r\n        parent: \"dimensions\",\r\n        tab: \"time\"\r\n      }\r\n    ],\r\n    condition: () => !PlayerProgress.realityUnlocked() &&\r\n      !PlayerProgress.eternityUnlocked(),\r\n    events: [GAME_EVENT.ETERNITY_RESET_BEFORE]\r\n  },\r\n  dilationAfterUnlock: {\r\n    id: 6,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"eternity\",\r\n        tab: \"dilation\"\r\n      }\r\n    ],\r\n    condition: () => !PlayerProgress.realityUnlocked()\r\n  },\r\n  realityUnlock: {\r\n    id: 7,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"eternity\",\r\n        tab: \"studies\"\r\n      }\r\n    ],\r\n    condition: () => !PlayerProgress.realityUnlocked() && TimeStudy.reality.canBeBought,\r\n    events: [GAME_EVENT.ETERNITY_RESET_AFTER, GAME_EVENT.SAVE_CONVERTED_FROM_PREVIOUS_VERSION,\r\n      GAME_EVENT.OFFLINE_CURRENCY_GAINED, GAME_EVENT.ACHIEVEMENT_UNLOCKED]\r\n  },\r\n  blackHoleUnlock: {\r\n    id: 8,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"reality\",\r\n        tab: \"hole\"\r\n      }\r\n    ],\r\n    condition: () => !BlackHoles.areUnlocked && Currency.realityMachines.gte(100),\r\n    events: [GAME_EVENT.REALITY_RESET_AFTER]\r\n  },\r\n  automatorUnlock: {\r\n    id: 9,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"automation\",\r\n        tab: \"automator\"\r\n      }\r\n    ],\r\n    condition: () => Player.automatorUnlocked,\r\n    events: [GAME_EVENT.REALITY_RESET_AFTER]\r\n  },\r\n  teresaUnlock: {\r\n    id: 10,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"celestials\",\r\n        tab: \"celestial-navigation\"\r\n      },\r\n      {\r\n        parent: \"celestials\",\r\n        tab: \"teresa\"\r\n      }\r\n    ],\r\n    condition: () => player.celestials.teresa.pouredAmount === 0 && Teresa.isUnlocked,\r\n    events: [GAME_EVENT.REALITY_UPGRADE_BOUGHT]\r\n  },\r\n  alchemyUnlock: {\r\n    id: 11,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"reality\",\r\n        tab: \"glyphs\"\r\n      },\r\n      {\r\n        parent: \"reality\",\r\n        tab: \"alchemy\"\r\n      }\r\n    ],\r\n    condition: () => player.celestials.ra.pets.effarig.level >= 2,\r\n    events: [GAME_EVENT.GAME_TICK_AFTER]\r\n  },\r\n  newAutobuyer: {\r\n    id: 12,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"automation\",\r\n        tab: \"autobuyers\"\r\n      },\r\n    ],\r\n    // Always externally triggered, but needs to be ignored in cel7 because they're unlocked differently\r\n    condition: () => !Pelle.isDoomed,\r\n  },\r\n  imaginaryMachineUnlock: {\r\n    id: 13,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"reality\",\r\n        tab: \"imag_upgrades\"\r\n      }\r\n    ],\r\n    condition: () => MachineHandler.isIMUnlocked,\r\n    events: [GAME_EVENT.GAME_TICK_AFTER]\r\n  },\r\n  laitelaUnlock: {\r\n    id: 14,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"celestials\",\r\n        tab: \"laitela\"\r\n      },\r\n    ],\r\n    // Always externally triggered\r\n    condition: () => true,\r\n  },\r\n  pelleUnlock: {\r\n    id: 15,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"celestials\",\r\n        tab: \"pelle\"\r\n      },\r\n    ],\r\n    // Always externally triggered\r\n    condition: () => true,\r\n  },\r\n  newGlyphCosmetic: {\r\n    id: 16,\r\n    tabsToHighLight: [\r\n      {\r\n        parent: \"reality\",\r\n        tab: \"glyphs\",\r\n      },\r\n    ],\r\n    // Always externally triggered\r\n    condition: () => true,\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}