{"ast":null,"code":"import PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\nimport TimeStudySaveLoadButton from \"./TimeStudySaveLoadButton\";\nimport TimeTheoremBuyButton from \"./TimeTheoremBuyButton\";\nexport default {\n  name: \"TimeTheoremShop\",\n  components: {\n    PrimaryToggleButton,\n    TimeTheoremBuyButton,\n    TimeStudySaveLoadButton\n  },\n\n  data() {\n    return {\n      theoremAmount: new Decimal(0),\n      theoremGeneration: new Decimal(0),\n      totalTimeTheorems: new Decimal(0),\n      shopMinimized: false,\n      minimizeAvailable: false,\n      hasTTAutobuyer: false,\n      isAutobuyerOn: false,\n      budget: {\n        am: new Decimal(0),\n        ip: new Decimal(0),\n        ep: new Decimal(0)\n      },\n      costs: {\n        am: new Decimal(0),\n        ip: new Decimal(0),\n        ep: new Decimal(0)\n      },\n      showST: false,\n      STamount: 0,\n      hasTTGen: false,\n      showTTGen: false,\n      invertTTgenDisplay: false\n    };\n  },\n\n  computed: {\n    minimized() {\n      return this.minimizeAvailable && this.shopMinimized;\n    },\n\n    formatTimeTheoremType() {\n      if (this.theoremAmount.gte(1e6)) {\n        return format;\n      }\n\n      if (!(Teresa.isRunning || Enslaved.isRunning) && getAdjustedGlyphEffect(\"dilationTTgen\") > 0 && !DilationUpgrade.ttGenerator.isBought) {\n        return formatFloat;\n      }\n\n      return formatInt;\n    },\n\n    TTgenRateText() {\n      if (this.theoremGeneration.lt(1 / 3600)) {\n        return `one TT every ${TimeSpan.fromSeconds(this.theoremGeneration.reciprocal().toNumber()).toStringShort(false)}`;\n      }\n\n      if (this.theoremGeneration.lt(0.1)) {\n        return `${format(this.theoremGeneration.times(3600), 2, 2)} TT/hour`;\n      }\n\n      return `${format(this.theoremGeneration, 2, 2)} TT/sec`;\n    },\n\n    totalTimeTheoremText() {\n      return `${quantify(\"total Time Theorem\", this.totalTimeTheorems, 2, 2, this.formatTimeTheoremType)}`;\n    },\n\n    minimizeArrowStyle() {\n      return {\n        transform: this.minimized ? \"rotate(-180deg)\" : \"\",\n        transition: \"all 0.25s ease-out\"\n      };\n    },\n\n    saveLoadText() {\n      return this.$viewModel.shiftDown ? \"Save:\" : \"Load:\";\n    },\n\n    shopBottomRowHeightStyle() {\n      return {\n        height: this.hasTTAutobuyer ? \"6.7rem\" : \"4.4rem\"\n      };\n    }\n\n  },\n  watch: {\n    isAutobuyerOn(newValue) {\n      Autobuyer.timeTheorem.isActive = newValue;\n    },\n\n    invertTTgenDisplay(newValue) {\n      player.options.invertTTgenDisplay = newValue;\n    }\n\n  },\n  methods: {\n    minimize() {\n      player.timestudy.shopMinimized = !player.timestudy.shopMinimized;\n    },\n\n    formatAM(am) {\n      return `${format(am)} AM`;\n    },\n\n    buyWithAM() {\n      TimeTheorems.buyOne(false, \"am\");\n    },\n\n    formatIP(ip) {\n      return `${format(ip)} IP`;\n    },\n\n    buyWithIP() {\n      TimeTheorems.buyOne(false, \"ip\");\n    },\n\n    formatEP(ep) {\n      return `${format(ep, 2, 0)} EP`;\n    },\n\n    buyWithEP() {\n      TimeTheorems.buyOne(false, \"ep\");\n    },\n\n    buyMaxTheorems() {\n      TimeTheorems.buyMax(false);\n    },\n\n    update() {\n      this.theoremAmount.copyFrom(Currency.timeTheorems);\n      this.theoremGeneration.copyFrom(getTTPerSecond().times(getGameSpeedupForDisplay()));\n      this.totalTimeTheorems.copyFrom(Currency.timeTheorems.max);\n      this.shopMinimized = player.timestudy.shopMinimized;\n      this.hasTTAutobuyer = Autobuyer.timeTheorem.isUnlocked;\n      this.isAutobuyerOn = Autobuyer.timeTheorem.isActive;\n      this.minimizeAvailable = DilationUpgrade.ttGenerator.isBought || this.hasTTAutobuyer;\n      const budget = this.budget;\n      budget.am.copyFrom(TimeTheoremPurchaseType.am.currency);\n      budget.ip.copyFrom(TimeTheoremPurchaseType.ip.currency);\n      budget.ep.copyFrom(TimeTheoremPurchaseType.ep.currency);\n      const costs = this.costs;\n      costs.am.copyFrom(TimeTheoremPurchaseType.am.cost);\n      costs.ip.copyFrom(TimeTheoremPurchaseType.ip.cost);\n      costs.ep.copyFrom(TimeTheoremPurchaseType.ep.cost);\n      this.showST = V.spaceTheorems > 0 && !Pelle.isDoomed;\n      this.STamount = V.availableST;\n      this.hasTTGen = this.theoremGeneration.gt(0);\n      this.showTTGen = this.hasTTGen && ui.view.shiftDown === this.invertTTgenDisplay;\n      this.invertTTgenDisplay = player.options.invertTTgenDisplay;\n    },\n\n    toggleTTgen() {\n      this.invertTTgenDisplay = !this.invertTTgenDisplay;\n    }\n\n  }\n};","map":{"version":3,"sources":["TimeTheoremShop.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\nimport TimeStudySaveLoadButton from \"./TimeStudySaveLoadButton\";\r\nimport TimeTheoremBuyButton from \"./TimeTheoremBuyButton\";\r\n\r\nexport default {\r\n  name: \"TimeTheoremShop\",\r\n  components: {\r\n    PrimaryToggleButton,\r\n    TimeTheoremBuyButton,\r\n    TimeStudySaveLoadButton\r\n  },\r\n  data() {\r\n    return {\r\n      theoremAmount: new Decimal(0),\r\n      theoremGeneration: new Decimal(0),\r\n      totalTimeTheorems: new Decimal(0),\r\n      shopMinimized: false,\r\n      minimizeAvailable: false,\r\n      hasTTAutobuyer: false,\r\n      isAutobuyerOn: false,\r\n      budget: {\r\n        am: new Decimal(0),\r\n        ip: new Decimal(0),\r\n        ep: new Decimal(0)\r\n      },\r\n      costs: {\r\n        am: new Decimal(0),\r\n        ip: new Decimal(0),\r\n        ep: new Decimal(0)\r\n      },\r\n      showST: false,\r\n      STamount: 0,\r\n      hasTTGen: false,\r\n      showTTGen: false,\r\n      invertTTgenDisplay: false,\r\n    };\r\n  },\r\n  computed: {\r\n    minimized() {\r\n      return this.minimizeAvailable && this.shopMinimized;\r\n    },\r\n    formatTimeTheoremType() {\r\n      if (this.theoremAmount.gte(1e6)) {\r\n        return format;\r\n      }\r\n      if (!(Teresa.isRunning || Enslaved.isRunning) &&\r\n        getAdjustedGlyphEffect(\"dilationTTgen\") > 0 && !DilationUpgrade.ttGenerator.isBought) {\r\n        return formatFloat;\r\n      }\r\n      return formatInt;\r\n    },\r\n    TTgenRateText() {\r\n      if (this.theoremGeneration.lt(1 / 3600)) {\r\n        return `one TT every ${TimeSpan.fromSeconds(\r\n          this.theoremGeneration.reciprocal().toNumber()).toStringShort(false)}`;\r\n      }\r\n      if (this.theoremGeneration.lt(0.1)) {\r\n        return `${format(this.theoremGeneration.times(3600), 2, 2)} TT/hour`;\r\n      }\r\n      return `${format(this.theoremGeneration, 2, 2)} TT/sec`;\r\n    },\r\n    totalTimeTheoremText() {\r\n      return `${quantify(\"total Time Theorem\", this.totalTimeTheorems, 2, 2, this.formatTimeTheoremType)}`;\r\n    },\r\n    minimizeArrowStyle() {\r\n      return {\r\n        transform: this.minimized ? \"rotate(-180deg)\" : \"\",\r\n        transition: \"all 0.25s ease-out\"\r\n      };\r\n    },\r\n    saveLoadText() {\r\n      return this.$viewModel.shiftDown ? \"Save:\" : \"Load:\";\r\n    },\r\n    shopBottomRowHeightStyle() {\r\n      return {\r\n        height: this.hasTTAutobuyer ? \"6.7rem\" : \"4.4rem\",\r\n      };\r\n    }\r\n  },\r\n  watch: {\r\n    isAutobuyerOn(newValue) {\r\n      Autobuyer.timeTheorem.isActive = newValue;\r\n    },\r\n    invertTTgenDisplay(newValue) {\r\n      player.options.invertTTgenDisplay = newValue;\r\n    },\r\n  },\r\n  methods: {\r\n    minimize() {\r\n      player.timestudy.shopMinimized = !player.timestudy.shopMinimized;\r\n    },\r\n    formatAM(am) {\r\n      return `${format(am)} AM`;\r\n    },\r\n    buyWithAM() {\r\n      TimeTheorems.buyOne(false, \"am\");\r\n    },\r\n    formatIP(ip) {\r\n      return `${format(ip)} IP`;\r\n    },\r\n    buyWithIP() {\r\n      TimeTheorems.buyOne(false, \"ip\");\r\n    },\r\n    formatEP(ep) {\r\n      return `${format(ep, 2, 0)} EP`;\r\n    },\r\n    buyWithEP() {\r\n      TimeTheorems.buyOne(false, \"ep\");\r\n    },\r\n    buyMaxTheorems() {\r\n      TimeTheorems.buyMax(false);\r\n    },\r\n    update() {\r\n      this.theoremAmount.copyFrom(Currency.timeTheorems);\r\n      this.theoremGeneration.copyFrom(getTTPerSecond().times(getGameSpeedupForDisplay()));\r\n      this.totalTimeTheorems.copyFrom(Currency.timeTheorems.max);\r\n      this.shopMinimized = player.timestudy.shopMinimized;\r\n      this.hasTTAutobuyer = Autobuyer.timeTheorem.isUnlocked;\r\n      this.isAutobuyerOn = Autobuyer.timeTheorem.isActive;\r\n      this.minimizeAvailable = DilationUpgrade.ttGenerator.isBought || this.hasTTAutobuyer;\r\n      const budget = this.budget;\r\n      budget.am.copyFrom(TimeTheoremPurchaseType.am.currency);\r\n      budget.ip.copyFrom(TimeTheoremPurchaseType.ip.currency);\r\n      budget.ep.copyFrom(TimeTheoremPurchaseType.ep.currency);\r\n      const costs = this.costs;\r\n      costs.am.copyFrom(TimeTheoremPurchaseType.am.cost);\r\n      costs.ip.copyFrom(TimeTheoremPurchaseType.ip.cost);\r\n      costs.ep.copyFrom(TimeTheoremPurchaseType.ep.cost);\r\n      this.showST = V.spaceTheorems > 0 && !Pelle.isDoomed;\r\n      this.STamount = V.availableST;\r\n      this.hasTTGen = this.theoremGeneration.gt(0);\r\n      this.showTTGen = this.hasTTGen && (ui.view.shiftDown === this.invertTTgenDisplay);\r\n      this.invertTTgenDisplay = player.options.invertTTgenDisplay;\r\n    },\r\n    toggleTTgen() {\r\n      this.invertTTgenDisplay = !this.invertTTgenDisplay;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"time-theorem-buttons\">\r\n    <div class=\"ttshop-container ttshop-background\">\r\n      <div\r\n        data-role=\"page\"\r\n        class=\"ttbuttons-row ttbuttons-top-row\"\r\n      >\r\n        <button\r\n          class=\"l-tt-save-load-btn c-tt-buy-button c-tt-buy-button--unlocked\"\r\n          onClick=\"Modal.preferredTree.show()\"\r\n        >\r\n          <i class=\"fas fa-cog\" />\r\n        </button>\r\n        <p class=\"timetheorems\">\r\n          <span class=\"c-tt-amount\">\r\n            {{ quantify(\"Time Theorem\", theoremAmount, 2, 0, formatTimeTheoremType) }}\r\n          </span>\r\n          <span v-if=\"showST\">\r\n            <br>\r\n            {{ quantifyInt(\"Space Theorem\", STamount) }}\r\n          </span>\r\n        </p>\r\n        <div class=\"l-load-tree-area\">\r\n          <div class=\"l-tree-load-button-wrapper\">\r\n            <span class=\"c-ttshop__save-load-text\">{{ saveLoadText }}</span>\r\n            <TimeStudySaveLoadButton\r\n              v-for=\"saveslot in 6\"\r\n              :key=\"saveslot\"\r\n              :saveslot=\"saveslot\"\r\n            />\r\n          </div>\r\n          <div class=\"tt-gen-container\">\r\n            <span\r\n              v-if=\"hasTTGen\"\r\n              class=\"checkbox-margin\"\r\n              ach-tooltip=\"This shows TT generation by default and total TT if you hold shift.\r\n                Check this box to swap this behavior.\"\r\n            >\r\n              <input\r\n                v-model=\"invertTTgenDisplay\"\r\n                type=\"checkbox\"\r\n                :value=\"invertTTgenDisplay\"\r\n                class=\"o-clickable\"\r\n                @input=\"toggleTTgen()\"\r\n              >\r\n            </span>\r\n            <span v-if=\"showTTGen\">\r\n              You are gaining {{ TTgenRateText }}.\r\n            </span>\r\n            <span v-else>\r\n              You have {{ totalTimeTheoremText }}.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"!minimized\"\r\n        class=\"ttbuttons-row\"\r\n        :style=\"shopBottomRowHeightStyle\"\r\n      >\r\n        <TimeTheoremBuyButton\r\n          :budget=\"budget.am\"\r\n          :cost=\"costs.am\"\r\n          :format-cost=\"formatAM\"\r\n          :action=\"buyWithAM\"\r\n        />\r\n        <TimeTheoremBuyButton\r\n          :budget=\"budget.ip\"\r\n          :cost=\"costs.ip\"\r\n          :format-cost=\"formatIP\"\r\n          :action=\"buyWithIP\"\r\n        />\r\n        <TimeTheoremBuyButton\r\n          :budget=\"budget.ep\"\r\n          :cost=\"costs.ep\"\r\n          :format-cost=\"formatEP\"\r\n          :action=\"buyWithEP\"\r\n        />\r\n        <div class=\"l-tt-buy-max-vbox\">\r\n          <button\r\n            v-if=\"!minimized\"\r\n            class=\"o-tt-top-row-button c-tt-buy-button c-tt-buy-button--unlocked\"\r\n            @click=\"buyMaxTheorems\"\r\n          >\r\n            Buy max\r\n          </button>\r\n          <PrimaryToggleButton\r\n            v-if=\"!minimized && hasTTAutobuyer\"\r\n            v-model=\"isAutobuyerOn\"\r\n            class=\"o-tt-autobuyer-button c-tt-buy-button c-tt-buy-button--unlocked\"\r\n            label=\"Auto:\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-else\r\n        class=\"ttbuttons-row ttbuttons-bottom-row-hide\"\r\n      />\r\n    </div>\r\n    <button\r\n      v-if=\"minimizeAvailable\"\r\n      class=\"ttshop-minimize-btn ttshop-background\"\r\n      @click=\"minimize\"\r\n    >\r\n      <span\r\n        class=\"minimize-arrow\"\r\n        :style=\"minimizeArrowStyle\"\r\n      >▼</span>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-load-tree-area {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  align-items: left;\r\n}\r\n\r\n.l-tree-load-button-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n}\r\n\r\n.ttbuttons-bottom-row-hide {\r\n  height: 0;\r\n}\r\n\r\n.tt-gen-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n\r\n.checkbox-margin {\r\n  margin: 0 0.4rem;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/time-studies/tt-shop"},"metadata":{},"sourceType":"module"}