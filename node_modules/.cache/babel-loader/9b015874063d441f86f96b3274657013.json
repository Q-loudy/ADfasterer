{"ast":null,"code":"import ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\nimport SaveInfoEntry from \"@/components/modals/cloud/SaveInfoEntry\";\nexport default {\n  name: \"CloudSaveConflictModal\",\n  components: {\n    ModalWrapperChoice,\n    SaveInfoEntry\n  },\n  computed: {\n    conflict() {\n      return this.$viewModel.modal.cloudConflict;\n    },\n\n    older() {\n      return this.conflict.saveComparison.older === -1;\n    },\n\n    farther() {\n      return this.conflict.saveComparison.farther === -1;\n    },\n\n    hasDifferentName() {\n      return this.conflict.cloud.saveName !== this.conflict.local.saveName;\n    },\n\n    wrongHash() {\n      return this.conflict.saveComparison.hashMismatch;\n    },\n\n    suggestionText() {\n      const goodStyle = `style=\"color: var(--color-good)\"`;\n      const badStyle = `style=\"color: var(--color-infinity)\"`;\n      const suggestions = [\"Saving to the Cloud \"];\n      const cloudProg = this.conflict.cloud.compositeProgress,\n            localProg = this.conflict.local.compositeProgress;\n      const warnOverwrite = this.farther && Math.abs(cloudProg - localProg) > 0.15;\n      suggestions.push(warnOverwrite ? `<b ${badStyle}>would overwrite a save with significantly more progress</b>` : `<b ${goodStyle}>is probably safe</b>`);\n\n      if (this.hasDifferentName || this.wrongHash) {\n        suggestions.push(` ${warnOverwrite ? \"Additionally\" : \"However\"}, you may be overwriting a \n          <b ${badStyle}>save from a different device</b>.`);\n      }\n\n      if (warnOverwrite || this.hasDifferentName || this.wrongHash) {\n        suggestions.push(`<br><b ${badStyle}>Are you sure you wish to overwrite the Cloud save?</b>`);\n      }\n\n      return suggestions.join(\"\");\n    },\n\n    noOverwriteInfo() {\n      return `Save conflicts will keep occurring without overwriting.`;\n    },\n\n    overwriteInfo() {\n      return `If another device is also saving to the cloud on this Google Account at the same time,\n        this modal may appear repeatedly.`;\n    }\n\n  },\n  methods: {\n    doNotSave() {\n      player.options.cloudEnabled = false;\n      EventHub.dispatch(GAME_EVENT.CLOSE_MODAL);\n    },\n\n    overwrite() {\n      var _this$conflict$onAcce, _this$conflict;\n\n      (_this$conflict$onAcce = (_this$conflict = this.conflict).onAccept) === null || _this$conflict$onAcce === void 0 ? void 0 : _this$conflict$onAcce.call(_this$conflict);\n      EventHub.dispatch(GAME_EVENT.CLOSE_MODAL);\n    }\n\n  }\n};","map":{"version":3,"sources":["CloudSaveConflictModal.vue"],"names":[],"mappings":"AACA,OAAA,kBAAA,MAAA,wCAAA;AACA,OAAA,aAAA,MAAA,yCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,wBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,kBADA;AAEA,IAAA;AAFA,GAFA;AAMA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,GAAA;AACA,aAAA,KAAA,UAAA,CAAA,KAAA,CAAA,aAAA;AACA,KAHA;;AAIA,IAAA,KAAA,GAAA;AACA,aAAA,KAAA,QAAA,CAAA,cAAA,CAAA,KAAA,KAAA,CAAA,CAAA;AACA,KANA;;AAOA,IAAA,OAAA,GAAA;AACA,aAAA,KAAA,QAAA,CAAA,cAAA,CAAA,OAAA,KAAA,CAAA,CAAA;AACA,KATA;;AAUA,IAAA,gBAAA,GAAA;AACA,aAAA,KAAA,QAAA,CAAA,KAAA,CAAA,QAAA,KAAA,KAAA,QAAA,CAAA,KAAA,CAAA,QAAA;AACA,KAZA;;AAaA,IAAA,SAAA,GAAA;AACA,aAAA,KAAA,QAAA,CAAA,cAAA,CAAA,YAAA;AACA,KAfA;;AAgBA,IAAA,cAAA,GAAA;AACA,YAAA,SAAA,GAAA,kCAAA;AACA,YAAA,QAAA,GAAA,sCAAA;AAEA,YAAA,WAAA,GAAA,CAAA,sBAAA,CAAA;AACA,YAAA,SAAA,GAAA,KAAA,QAAA,CAAA,KAAA,CAAA,iBAAA;AAAA,YAAA,SAAA,GAAA,KAAA,QAAA,CAAA,KAAA,CAAA,iBAAA;AACA,YAAA,aAAA,GAAA,KAAA,OAAA,IAAA,IAAA,CAAA,GAAA,CAAA,SAAA,GAAA,SAAA,IAAA,IAAA;AACA,MAAA,WAAA,CAAA,IAAA,CAAA,aAAA,GACA,MAAA,QAAA,8DADA,GAEA,MAAA,SAAA,uBAFA;;AAGA,UAAA,KAAA,gBAAA,IAAA,KAAA,SAAA,EAAA;AACA,QAAA,WAAA,CAAA,IAAA,CAAA,IAAA,aAAA,GAAA,cAAA,GAAA,SAAA;AACA,eAAA,QAAA,oCADA;AAEA;;AACA,UAAA,aAAA,IAAA,KAAA,gBAAA,IAAA,KAAA,SAAA,EAAA;AACA,QAAA,WAAA,CAAA,IAAA,CAAA,UAAA,QAAA,yDAAA;AACA;;AACA,aAAA,WAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA,KAlCA;;AAmCA,IAAA,eAAA,GAAA;AACA,aAAA,yDAAA;AACA,KArCA;;AAsCA,IAAA,aAAA,GAAA;AACA,aAAA;AACA,0CADA;AAEA;;AAzCA,GANA;AAiDA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,GAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,YAAA,GAAA,KAAA;AACA,MAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,WAAA;AACA,KAJA;;AAKA,IAAA,SAAA,GAAA;AAAA;;AACA,sDAAA,QAAA,EAAA,QAAA;AACA,MAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,WAAA;AACA;;AARA;AAjDA,CAAA","sourcesContent":["<script>\r\nimport ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\r\nimport SaveInfoEntry from \"@/components/modals/cloud/SaveInfoEntry\";\r\n\r\nexport default {\r\n  name: \"CloudSaveConflictModal\",\r\n  components: {\r\n    ModalWrapperChoice,\r\n    SaveInfoEntry,\r\n  },\r\n  computed: {\r\n    conflict() {\r\n      return this.$viewModel.modal.cloudConflict;\r\n    },\r\n    older() {\r\n      return this.conflict.saveComparison.older === -1;\r\n    },\r\n    farther() {\r\n      return this.conflict.saveComparison.farther === -1;\r\n    },\r\n    hasDifferentName() {\r\n      return this.conflict.cloud.saveName !== this.conflict.local.saveName;\r\n    },\r\n    wrongHash() {\r\n      return this.conflict.saveComparison.hashMismatch;\r\n    },\r\n    suggestionText() {\r\n      const goodStyle = `style=\"color: var(--color-good)\"`;\r\n      const badStyle = `style=\"color: var(--color-infinity)\"`;\r\n\r\n      const suggestions = [\"Saving to the Cloud \"];\r\n      const cloudProg = this.conflict.cloud.compositeProgress, localProg = this.conflict.local.compositeProgress;\r\n      const warnOverwrite = this.farther && Math.abs(cloudProg - localProg) > 0.15;\r\n      suggestions.push(warnOverwrite\r\n        ? `<b ${badStyle}>would overwrite a save with significantly more progress</b>`\r\n        : `<b ${goodStyle}>is probably safe</b>`);\r\n      if (this.hasDifferentName || this.wrongHash) {\r\n        suggestions.push(` ${warnOverwrite ? \"Additionally\" : \"However\"}, you may be overwriting a \r\n          <b ${badStyle}>save from a different device</b>.`);\r\n      }\r\n      if (warnOverwrite || this.hasDifferentName || this.wrongHash) {\r\n        suggestions.push(`<br><b ${badStyle}>Are you sure you wish to overwrite the Cloud save?</b>`);\r\n      }\r\n      return suggestions.join(\"\");\r\n    },\r\n    noOverwriteInfo() {\r\n      return `Save conflicts will keep occurring without overwriting.`;\r\n    },\r\n    overwriteInfo() {\r\n      return `If another device is also saving to the cloud on this Google Account at the same time,\r\n        this modal may appear repeatedly.`;\r\n    }\r\n  },\r\n  methods: {\r\n    doNotSave() {\r\n      player.options.cloudEnabled = false;\r\n      EventHub.dispatch(GAME_EVENT.CLOSE_MODAL);\r\n    },\r\n    overwrite() {\r\n      this.conflict.onAccept?.();\r\n      EventHub.dispatch(GAME_EVENT.CLOSE_MODAL);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ModalWrapperChoice\r\n    class=\"c-modal-options__large\"\r\n    :cancel-class=\"'c-modal-message__okay-btn'\"\r\n    :confirm-class=\"'c-modal-message__okay-btn c-modal__confirm-btn'\"\r\n    :cancel-fn=\"overwrite\"\r\n    @confirm=\"doNotSave()\"\r\n  >\r\n    <template #header>\r\n      Save Game to Cloud\r\n    </template>\r\n    <span v-if=\"wrongHash\">\r\n      Your Cloud Save has been <b>changed by a different device</b> since you last saved to the Cloud this session.\r\n    </span>\r\n    <span v-else-if=\"hasDifferentName\">\r\n      Your Local and Cloud Saves have <b>different names</b>.\r\n    </span>\r\n    <span v-else-if=\"older\">\r\n      Saving to the Cloud would <b>overwrite an older save</b>.\r\n    </span>\r\n    <span v-else-if=\"farther\">\r\n      Saving to the Cloud would <b>overwrite a save with more progress</b>.\r\n    </span>\r\n    <span v-else>\r\n      Your Local Save and Cloud Save <b>appear to have similar amounts of progress</b>.\r\n    </span>\r\n    <br>\r\n    <SaveInfoEntry\r\n      :save-data=\"conflict.local\"\r\n      :other-data=\"conflict.cloud\"\r\n      :save-id=\"conflict.saveId\"\r\n      :show-name=\"hasDifferentName\"\r\n      save-type=\"Local Save\"\r\n    />\r\n    <SaveInfoEntry\r\n      :save-data=\"conflict.cloud\"\r\n      :other-data=\"conflict.local\"\r\n      :save-id=\"conflict.saveId\"\r\n      :show-name=\"hasDifferentName\"\r\n      save-type=\"Cloud Save\"\r\n    />\r\n    <span v-html=\"suggestionText\" />\r\n    <br>\r\n    <span>\r\n      Not overwriting will turn off Cloud saving and you will need to manually turn it back on again\r\n      if you want to use it.\r\n      <span :ach-tooltip=\"noOverwriteInfo\">\r\n        <i class=\"fas fa-question-circle\" />\r\n      </span>\r\n    </span>\r\n    <span>\r\n      Overwriting will force a save to the Cloud in this particular instance; in most\r\n      cases this should prevent this modal from reappearing afterwards.\r\n      <span :ach-tooltip=\"overwriteInfo\">\r\n        <i class=\"fas fa-question-circle\" />\r\n      </span>\r\n    </span>\r\n    <template #cancel-text>\r\n      Overwrite Cloud Save\r\n    </template>\r\n    <template #confirm-text>\r\n      Do not overwrite\r\n    </template>\r\n  </ModalWrapperChoice>\r\n</template>\r\n"],"sourceRoot":"src/components/modals/cloud"},"metadata":{},"sourceType":"module"}