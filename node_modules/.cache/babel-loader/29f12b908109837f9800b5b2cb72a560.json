{"ast":null,"code":"import { MultiplierTabIcons } from \"./icons\"; // See index.js for documentation\n\nexport const AM = {\n  total: {\n    name: \"Antimatter Production\",\n    displayOverride: () => `${format(Currency.antimatter.productionPerSecond, 2, 2)}/sec`,\n    multValue: () => new Decimal(Currency.antimatter.productionPerSecond).clampMin(1),\n    isActive: true,\n    overlay: [\"<i class='fas fa-atom' />\"]\n  },\n  effarigAM: {\n    name: \"Glyph Effect - Effarig Antimatter Production\",\n    powValue: () => {\n      const ad1 = AntimatterDimension(1);\n      const baseProd = ad1.totalAmount.times(ad1.multiplier).times(Tickspeed.perSecond);\n      return Math.pow(baseProd.log10(), getAdjustedGlyphEffect(\"effarigantimatter\") - 1);\n    },\n    isActive: () => getAdjustedGlyphEffect(\"effarigantimatter\") > 1 && AntimatterDimension(1).isProducing,\n    icon: MultiplierTabIcons.SPECIFIC_GLYPH(\"effarig\")\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/multiplier-tab/antimatter.js"],"names":["MultiplierTabIcons","AM","total","name","displayOverride","format","Currency","antimatter","productionPerSecond","multValue","Decimal","clampMin","isActive","overlay","effarigAM","powValue","ad1","AntimatterDimension","baseProd","totalAmount","times","multiplier","Tickspeed","perSecond","Math","pow","log10","getAdjustedGlyphEffect","isProducing","icon","SPECIFIC_GLYPH"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,SAAnC,C,CAEA;;AACA,OAAO,MAAMC,EAAE,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,uBADD;AAELC,IAAAA,eAAe,EAAE,MAAO,GAAEC,MAAM,CAACC,QAAQ,CAACC,UAAT,CAAoBC,mBAArB,EAA0C,CAA1C,EAA6C,CAA7C,CAAgD,MAF3E;AAGLC,IAAAA,SAAS,EAAE,MAAM,IAAIC,OAAJ,CAAYJ,QAAQ,CAACC,UAAT,CAAoBC,mBAAhC,EAAqDG,QAArD,CAA8D,CAA9D,CAHZ;AAILC,IAAAA,QAAQ,EAAE,IAJL;AAKLC,IAAAA,OAAO,EAAE,CAAC,2BAAD;AALJ,GADS;AAQhBC,EAAAA,SAAS,EAAE;AACTX,IAAAA,IAAI,EAAE,8CADG;AAETY,IAAAA,QAAQ,EAAE,MAAM;AACd,YAAMC,GAAG,GAAGC,mBAAmB,CAAC,CAAD,CAA/B;AACA,YAAMC,QAAQ,GAAGF,GAAG,CAACG,WAAJ,CAAgBC,KAAhB,CAAsBJ,GAAG,CAACK,UAA1B,EAAsCD,KAAtC,CAA4CE,SAAS,CAACC,SAAtD,CAAjB;AACA,aAAOC,IAAI,CAACC,GAAL,CAASP,QAAQ,CAACQ,KAAT,EAAT,EAA2BC,sBAAsB,CAAC,mBAAD,CAAtB,GAA8C,CAAzE,CAAP;AACD,KANQ;AAOTf,IAAAA,QAAQ,EAAE,MAAMe,sBAAsB,CAAC,mBAAD,CAAtB,GAA8C,CAA9C,IAAmDV,mBAAmB,CAAC,CAAD,CAAnB,CAAuBW,WAPjF;AAQTC,IAAAA,IAAI,EAAE7B,kBAAkB,CAAC8B,cAAnB,CAAkC,SAAlC;AARG;AARK,CAAX","sourcesContent":["import { MultiplierTabIcons } from \"./icons\";\r\n\r\n// See index.js for documentation\r\nexport const AM = {\r\n  total: {\r\n    name: \"Antimatter Production\",\r\n    displayOverride: () => `${format(Currency.antimatter.productionPerSecond, 2, 2)}/sec`,\r\n    multValue: () => new Decimal(Currency.antimatter.productionPerSecond).clampMin(1),\r\n    isActive: true,\r\n    overlay: [\"<i class='fas fa-atom' />\"],\r\n  },\r\n  effarigAM: {\r\n    name: \"Glyph Effect - Effarig Antimatter Production\",\r\n    powValue: () => {\r\n      const ad1 = AntimatterDimension(1);\r\n      const baseProd = ad1.totalAmount.times(ad1.multiplier).times(Tickspeed.perSecond);\r\n      return Math.pow(baseProd.log10(), getAdjustedGlyphEffect(\"effarigantimatter\") - 1);\r\n    },\r\n    isActive: () => getAdjustedGlyphEffect(\"effarigantimatter\") > 1 && AntimatterDimension(1).isProducing,\r\n    icon: MultiplierTabIcons.SPECIFIC_GLYPH(\"effarig\"),\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}