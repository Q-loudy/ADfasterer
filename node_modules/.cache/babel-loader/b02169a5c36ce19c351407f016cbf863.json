{"ast":null,"code":"import { IntervaledAutobuyerState } from \"./autobuyer\";\nexport class ReplicantiUpgradeAutobuyerState extends IntervaledAutobuyerState {\n  get _upgradeName() {\n    return [\"chance\", \"interval\", \"galaxies\"][this.id - 1];\n  }\n\n  get name() {\n    return `Replicanti ${[`Chance`, `Interval`, `Max Galaxies`][this.id - 1]}`;\n  }\n\n  get data() {\n    return player.auto.replicantiUpgrades.all[this.id - 1];\n  }\n\n  get interval() {\n    return 1000 * Perk.autobuyerFasterReplicanti.effectOrDefault(1) / PerkShopUpgrade.autoSpeed.effectOrDefault(1);\n  }\n\n  get isUnlocked() {\n    return ReplicantiUpgrade[this._upgradeName].autobuyerMilestone.isReached || PelleUpgrade.replicantiAutobuyers.canBeApplied;\n  }\n\n  get resetTickOn() {\n    return PRESTIGE_EVENT.ETERNITY;\n  }\n\n  get hasUnlimitedBulk() {\n    return true;\n  }\n\n  tick() {\n    if (EternityChallenge(8).isRunning) return;\n    super.tick();\n\n    ReplicantiUpgrade[this._upgradeName].autobuyerTick();\n  }\n\n  static get entryCount() {\n    return 3;\n  }\n\n  static get autobuyerGroupName() {\n    return \"Replicanti Upgrade\";\n  }\n\n  static get isActive() {\n    return player.auto.replicantiUpgrades.isActive;\n  }\n\n  static set isActive(value) {\n    player.auto.replicantiUpgrades.isActive = value;\n  }\n\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/autobuyers/replicanti-upgrade-autobuyer.js"],"names":["IntervaledAutobuyerState","ReplicantiUpgradeAutobuyerState","_upgradeName","id","name","data","player","auto","replicantiUpgrades","all","interval","Perk","autobuyerFasterReplicanti","effectOrDefault","PerkShopUpgrade","autoSpeed","isUnlocked","ReplicantiUpgrade","autobuyerMilestone","isReached","PelleUpgrade","replicantiAutobuyers","canBeApplied","resetTickOn","PRESTIGE_EVENT","ETERNITY","hasUnlimitedBulk","tick","EternityChallenge","isRunning","autobuyerTick","entryCount","autobuyerGroupName","isActive","value"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,aAAzC;AAEA,OAAO,MAAMC,+BAAN,SAA8CD,wBAA9C,CAAuE;AAC5D,MAAZE,YAAY,GAAG;AAAE,WAAO,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,KAAKC,EAAL,GAAU,CAA7C,CAAP;AAAyD;;AAEtE,MAAJC,IAAI,GAAG;AACT,WAAQ,cAAa,CAAE,QAAF,EAAY,UAAZ,EAAwB,cAAxB,EAAuC,KAAKD,EAAL,GAAU,CAAjD,CAAoD,EAAzE;AACD;;AAEO,MAAJE,IAAI,GAAG;AACT,WAAOC,MAAM,CAACC,IAAP,CAAYC,kBAAZ,CAA+BC,GAA/B,CAAmC,KAAKN,EAAL,GAAU,CAA7C,CAAP;AACD;;AAEW,MAARO,QAAQ,GAAG;AACb,WAAO,OAAOC,IAAI,CAACC,yBAAL,CAA+BC,eAA/B,CAA+C,CAA/C,CAAP,GAA2DC,eAAe,CAACC,SAAhB,CAA0BF,eAA1B,CAA0C,CAA1C,CAAlE;AACD;;AAEa,MAAVG,UAAU,GAAG;AACf,WAAOC,iBAAiB,CAAC,KAAKf,YAAN,CAAjB,CAAqCgB,kBAArC,CAAwDC,SAAxD,IACLC,YAAY,CAACC,oBAAb,CAAkCC,YADpC;AAED;;AAEc,MAAXC,WAAW,GAAG;AAChB,WAAOC,cAAc,CAACC,QAAtB;AACD;;AAEmB,MAAhBC,gBAAgB,GAAG;AACrB,WAAO,IAAP;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,QAAIC,iBAAiB,CAAC,CAAD,CAAjB,CAAqBC,SAAzB,EAAoC;AACpC,UAAMF,IAAN;;AACAV,IAAAA,iBAAiB,CAAC,KAAKf,YAAN,CAAjB,CAAqC4B,aAArC;AACD;;AAEoB,aAAVC,UAAU,GAAG;AAAE,WAAO,CAAP;AAAW;;AACR,aAAlBC,kBAAkB,GAAG;AAAE,WAAO,oBAAP;AAA8B;;AAC7C,aAARC,QAAQ,GAAG;AAAE,WAAO3B,MAAM,CAACC,IAAP,CAAYC,kBAAZ,CAA+ByB,QAAtC;AAAiD;;AACtD,aAARA,QAAQ,CAACC,KAAD,EAAQ;AAAE5B,IAAAA,MAAM,CAACC,IAAP,CAAYC,kBAAZ,CAA+ByB,QAA/B,GAA0CC,KAA1C;AAAkD;;AArCH","sourcesContent":["import { IntervaledAutobuyerState } from \"./autobuyer\";\r\n\r\nexport class ReplicantiUpgradeAutobuyerState extends IntervaledAutobuyerState {\r\n  get _upgradeName() { return [\"chance\", \"interval\", \"galaxies\"][this.id - 1]; }\r\n\r\n  get name() {\r\n    return `Replicanti ${[`Chance`, `Interval`, `Max Galaxies`][this.id - 1]}`;\r\n  }\r\n\r\n  get data() {\r\n    return player.auto.replicantiUpgrades.all[this.id - 1];\r\n  }\r\n\r\n  get interval() {\r\n    return 1000 * Perk.autobuyerFasterReplicanti.effectOrDefault(1) / PerkShopUpgrade.autoSpeed.effectOrDefault(1);\r\n  }\r\n\r\n  get isUnlocked() {\r\n    return ReplicantiUpgrade[this._upgradeName].autobuyerMilestone.isReached ||\r\n      PelleUpgrade.replicantiAutobuyers.canBeApplied;\r\n  }\r\n\r\n  get resetTickOn() {\r\n    return PRESTIGE_EVENT.ETERNITY;\r\n  }\r\n\r\n  get hasUnlimitedBulk() {\r\n    return true;\r\n  }\r\n\r\n  tick() {\r\n    if (EternityChallenge(8).isRunning) return;\r\n    super.tick();\r\n    ReplicantiUpgrade[this._upgradeName].autobuyerTick();\r\n  }\r\n\r\n  static get entryCount() { return 3; }\r\n  static get autobuyerGroupName() { return \"Replicanti Upgrade\"; }\r\n  static get isActive() { return player.auto.replicantiUpgrades.isActive; }\r\n  static set isActive(value) { player.auto.replicantiUpgrades.isActive = value; }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}