{"ast":null,"code":"export const notify = function () {\n  const template = document.createElement(\"div\");\n  template.classList.add(\"o-notification\");\n  const enterAnimation = \"a-notification--enter\";\n  const leaveAnimation = \"a-notification--leave\";\n\n  function showNotification(text, elClass, duration = 2000) {\n    if (!GameUI.initialized) {\n      setTimeout(showNotification, 500, text, elClass, duration);\n      return;\n    }\n\n    const el = template.cloneNode();\n    el.textContent = text;\n    el.classList.add(elClass, enterAnimation);\n    const container = document.getElementById(\"notification-container\");\n    container.appendChild(el);\n    let entered = false;\n\n    function stopEnter() {\n      if (entered) return;\n      entered = true;\n      el.classList.remove(enterAnimation);\n    }\n\n    setTimeout(() => stopEnter(), 500);\n    let leaving = false;\n\n    function leave() {\n      if (leaving) return;\n      leaving = true;\n      stopEnter();\n      el.classList.add(leaveAnimation);\n      setTimeout(() => el.remove(), 500);\n    }\n\n    setTimeout(() => leave(), duration);\n\n    el.onclick = () => leave();\n  }\n\n  return {\n    success: (text, duration) => showNotification(text, \"o-notification--success\", duration),\n    error: (text, duration) => showNotification(text, \"o-notification--error\", duration),\n    info: (text, duration) => showNotification(text, \"o-notification--info\", duration),\n    infinity: (text, duration) => showNotification(text, \"o-notification--infinity\", duration),\n    eternity: (text, duration) => showNotification(text, \"o-notification--eternity\", duration),\n    reality: (text, duration) => showNotification(text, \"o-notification--reality\", duration),\n    automator: (text, duration) => showNotification(text, \"o-notification--automator\", duration),\n    blackHole: (text, duration) => showNotification(text, \"o-notification--black-hole\", duration),\n    strike: (text, duration) => showNotification(text, \"o-notification--strike\", duration),\n    showBlackHoles: true\n  };\n}();","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/notify.js"],"names":["notify","template","document","createElement","classList","add","enterAnimation","leaveAnimation","showNotification","text","elClass","duration","GameUI","initialized","setTimeout","el","cloneNode","textContent","container","getElementById","appendChild","entered","stopEnter","remove","leaving","leave","onclick","success","error","info","infinity","eternity","reality","automator","blackHole","strike","showBlackHoles"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAI,YAAW;AAChC,QAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACAF,EAAAA,QAAQ,CAACG,SAAT,CAAmBC,GAAnB,CAAuB,gBAAvB;AACA,QAAMC,cAAc,GAAG,uBAAvB;AACA,QAAMC,cAAc,GAAG,uBAAvB;;AACA,WAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,QAAQ,GAAG,IAApD,EAA0D;AACxD,QAAI,CAACC,MAAM,CAACC,WAAZ,EAAyB;AACvBC,MAAAA,UAAU,CAACN,gBAAD,EAAmB,GAAnB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuCC,QAAvC,CAAV;AACA;AACD;;AACD,UAAMI,EAAE,GAAGd,QAAQ,CAACe,SAAT,EAAX;AACAD,IAAAA,EAAE,CAACE,WAAH,GAAiBR,IAAjB;AACAM,IAAAA,EAAE,CAACX,SAAH,CAAaC,GAAb,CAAiBK,OAAjB,EAA0BJ,cAA1B;AACA,UAAMY,SAAS,GAAGhB,QAAQ,CAACiB,cAAT,CAAwB,wBAAxB,CAAlB;AACAD,IAAAA,SAAS,CAACE,WAAV,CAAsBL,EAAtB;AACA,QAAIM,OAAO,GAAG,KAAd;;AACA,aAASC,SAAT,GAAqB;AACnB,UAAID,OAAJ,EAAa;AACbA,MAAAA,OAAO,GAAG,IAAV;AACAN,MAAAA,EAAE,CAACX,SAAH,CAAamB,MAAb,CAAoBjB,cAApB;AACD;;AACDQ,IAAAA,UAAU,CAAC,MAAMQ,SAAS,EAAhB,EAAoB,GAApB,CAAV;AACA,QAAIE,OAAO,GAAG,KAAd;;AACA,aAASC,KAAT,GAAiB;AACf,UAAID,OAAJ,EAAa;AACbA,MAAAA,OAAO,GAAG,IAAV;AACAF,MAAAA,SAAS;AACTP,MAAAA,EAAE,CAACX,SAAH,CAAaC,GAAb,CAAiBE,cAAjB;AACAO,MAAAA,UAAU,CAAC,MAAMC,EAAE,CAACQ,MAAH,EAAP,EAAoB,GAApB,CAAV;AACD;;AACDT,IAAAA,UAAU,CAAC,MAAMW,KAAK,EAAZ,EAAgBd,QAAhB,CAAV;;AACAI,IAAAA,EAAE,CAACW,OAAH,GAAa,MAAMD,KAAK,EAAxB;AACD;;AACD,SAAO;AACLE,IAAAA,OAAO,EAAE,CAAClB,IAAD,EAAOE,QAAP,KAAoBH,gBAAgB,CAACC,IAAD,EAAO,yBAAP,EAAkCE,QAAlC,CADxC;AAELiB,IAAAA,KAAK,EAAE,CAACnB,IAAD,EAAOE,QAAP,KAAoBH,gBAAgB,CAACC,IAAD,EAAO,uBAAP,EAAgCE,QAAhC,CAFtC;AAGLkB,IAAAA,IAAI,EAAE,CAACpB,IAAD,EAAOE,QAAP,KAAoBH,gBAAgB,CAACC,IAAD,EAAO,sBAAP,EAA+BE,QAA/B,CAHrC;AAILmB,IAAAA,QAAQ,EAAE,CAACrB,IAAD,EAAOE,QAAP,KAAoBH,gBAAgB,CAACC,IAAD,EAAO,0BAAP,EAAmCE,QAAnC,CAJzC;AAKLoB,IAAAA,QAAQ,EAAE,CAACtB,IAAD,EAAOE,QAAP,KAAoBH,gBAAgB,CAACC,IAAD,EAAO,0BAAP,EAAmCE,QAAnC,CALzC;AAMLqB,IAAAA,OAAO,EAAE,CAACvB,IAAD,EAAOE,QAAP,KAAoBH,gBAAgB,CAACC,IAAD,EAAO,yBAAP,EAAkCE,QAAlC,CANxC;AAOLsB,IAAAA,SAAS,EAAE,CAACxB,IAAD,EAAOE,QAAP,KAAoBH,gBAAgB,CAACC,IAAD,EAAO,2BAAP,EAAoCE,QAApC,CAP1C;AAQLuB,IAAAA,SAAS,EAAE,CAACzB,IAAD,EAAOE,QAAP,KAAoBH,gBAAgB,CAACC,IAAD,EAAO,4BAAP,EAAqCE,QAArC,CAR1C;AASLwB,IAAAA,MAAM,EAAE,CAAC1B,IAAD,EAAOE,QAAP,KAAoBH,gBAAgB,CAACC,IAAD,EAAO,wBAAP,EAAiCE,QAAjC,CATvC;AAULyB,IAAAA,cAAc,EAAE;AAVX,GAAP;AAYD,CA7CsB,EAAhB","sourcesContent":["export const notify = (function() {\r\n  const template = document.createElement(\"div\");\r\n  template.classList.add(\"o-notification\");\r\n  const enterAnimation = \"a-notification--enter\";\r\n  const leaveAnimation = \"a-notification--leave\";\r\n  function showNotification(text, elClass, duration = 2000) {\r\n    if (!GameUI.initialized) {\r\n      setTimeout(showNotification, 500, text, elClass, duration);\r\n      return;\r\n    }\r\n    const el = template.cloneNode();\r\n    el.textContent = text;\r\n    el.classList.add(elClass, enterAnimation);\r\n    const container = document.getElementById(\"notification-container\");\r\n    container.appendChild(el);\r\n    let entered = false;\r\n    function stopEnter() {\r\n      if (entered) return;\r\n      entered = true;\r\n      el.classList.remove(enterAnimation);\r\n    }\r\n    setTimeout(() => stopEnter(), 500);\r\n    let leaving = false;\r\n    function leave() {\r\n      if (leaving) return;\r\n      leaving = true;\r\n      stopEnter();\r\n      el.classList.add(leaveAnimation);\r\n      setTimeout(() => el.remove(), 500);\r\n    }\r\n    setTimeout(() => leave(), duration);\r\n    el.onclick = () => leave();\r\n  }\r\n  return {\r\n    success: (text, duration) => showNotification(text, \"o-notification--success\", duration),\r\n    error: (text, duration) => showNotification(text, \"o-notification--error\", duration),\r\n    info: (text, duration) => showNotification(text, \"o-notification--info\", duration),\r\n    infinity: (text, duration) => showNotification(text, \"o-notification--infinity\", duration),\r\n    eternity: (text, duration) => showNotification(text, \"o-notification--eternity\", duration),\r\n    reality: (text, duration) => showNotification(text, \"o-notification--reality\", duration),\r\n    automator: (text, duration) => showNotification(text, \"o-notification--automator\", duration),\r\n    blackHole: (text, duration) => showNotification(text, \"o-notification--black-hole\", duration),\r\n    strike: (text, duration) => showNotification(text, \"o-notification--strike\", duration),\r\n    showBlackHoles: true\r\n  };\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}