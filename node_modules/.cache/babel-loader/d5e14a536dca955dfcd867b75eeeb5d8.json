{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\nimport SpeedrunMilestoneSingle from \"./SpeedrunMilestoneSingle\";\nexport default {\n  name: \"SpeedrunMilestonesTab\",\n  components: {\n    PrimaryToggleButton,\n    SpeedrunMilestoneSingle\n  },\n\n  data() {\n    return {\n      milestoneTimes: [],\n      maxMilestone: 1,\n      startTimeStr: \"\",\n      displayAll: false,\n      isSpectating: false\n    };\n  },\n\n  computed: {\n    milestones: () => GameDatabase.speedrunMilestones,\n\n    spectateText() {\n      return this.isSpectating ? \"Times here are unaffected by END so that you can see your final records\" : null;\n    }\n\n  },\n  watch: {\n    displayAll(newValue) {\n      player.speedrun.displayAllMilestones = newValue;\n    }\n\n  },\n  methods: {\n    update() {\n      this.milestoneTimes = [...player.speedrun.records];\n      this.maxMilestone = this.milestoneTimes.map(i => Boolean(i)).lastIndexOf(true) + 1;\n      this.startTimeStr = player.speedrun.startDate === 0 ? \"Speedrun not started yet.\" : `Speedrun started at ${Time.toDateTimeString(player.speedrun.startDate)}`;\n      this.displayAll = player.speedrun.displayAllMilestones;\n      this.isSpectating = GameEnd.endState > END_STATE_MARKERS.SPECTATE_GAME;\n    }\n\n  }\n};","map":{"version":3,"sources":["SpeedrunMilestonesTab.vue"],"names":[],"mappings":";AACA,OAAA,mBAAA,MAAA,kCAAA;AACA,OAAA,uBAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,uBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,mBADA;AAEA,IAAA;AAFA,GAFA;;AAMA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,CAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA,KAJA;AAKA,MAAA,YAAA,EAAA;AALA,KAAA;AAOA,GAdA;;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,UAAA,EAAA,MAAA,YAAA,CAAA,kBADA;;AAEA,IAAA,YAAA,GAAA;AACA,aAAA,KAAA,YAAA,GACA,yEADA,GAEA,IAFA;AAGA;;AANA,GAfA;AAuBA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,CAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,GAAA,QAAA;AACA;;AAHA,GAvBA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,cAAA,GAAA,CAAA,GAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA;AACA,WAAA,YAAA,GAAA,KAAA,cAAA,CAAA,GAAA,CAAA,CAAA,IAAA,OAAA,CAAA,CAAA,CAAA,EAAA,WAAA,CAAA,IAAA,IAAA,CAAA;AACA,WAAA,YAAA,GAAA,MAAA,CAAA,QAAA,CAAA,SAAA,KAAA,CAAA,GACA,2BADA,GAEA,uBAAA,IAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,QAAA,CAAA,SAAA,CAAA,EAFA;AAGA,WAAA,UAAA,GAAA,MAAA,CAAA,QAAA,CAAA,oBAAA;AACA,WAAA,YAAA,GAAA,OAAA,CAAA,QAAA,GAAA,iBAAA,CAAA,aAAA;AACA;;AATA;AA5BA,CAAA","sourcesContent":["<script>\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\nimport SpeedrunMilestoneSingle from \"./SpeedrunMilestoneSingle\";\r\n\r\nexport default {\r\n  name: \"SpeedrunMilestonesTab\",\r\n  components: {\r\n    PrimaryToggleButton,\r\n    SpeedrunMilestoneSingle,\r\n  },\r\n  data() {\r\n    return {\r\n      milestoneTimes: [],\r\n      maxMilestone: 1,\r\n      startTimeStr: \"\",\r\n      displayAll: false,\r\n      isSpectating: false,\r\n    };\r\n  },\r\n  computed: {\r\n    milestones: () => GameDatabase.speedrunMilestones,\r\n    spectateText() {\r\n      return this.isSpectating\r\n        ? \"Times here are unaffected by END so that you can see your final records\"\r\n        : null;\r\n    }\r\n  },\r\n  watch: {\r\n    displayAll(newValue) {\r\n      player.speedrun.displayAllMilestones = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.milestoneTimes = [...player.speedrun.records];\r\n      this.maxMilestone = this.milestoneTimes.map(i => Boolean(i)).lastIndexOf(true) + 1;\r\n      this.startTimeStr = player.speedrun.startDate === 0\r\n        ? \"Speedrun not started yet.\"\r\n        : `Speedrun started at ${Time.toDateTimeString(player.speedrun.startDate)}`;\r\n      this.displayAll = player.speedrun.displayAllMilestones;\r\n      this.isSpectating = GameEnd.endState > END_STATE_MARKERS.SPECTATE_GAME;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <PrimaryToggleButton\r\n      v-model=\"displayAll\"\r\n      class=\"o-primary-btn--subtab-option\"\r\n      label=\"Describe all milestones:\"\r\n    />\r\n    <br>\r\n    <b>{{ startTimeStr }}</b>\r\n    <br>\r\n    <b>{{ spectateText }}</b>\r\n    <br>\r\n    <div class=\"l-speedrun-milestone-tab\">\r\n      <SpeedrunMilestoneSingle\r\n        v-for=\"milestone in milestones\"\r\n        :key=\"milestone.id\"\r\n        :milestone=\"milestone\"\r\n        :display=\"displayAll || milestone.id <= maxMilestone\"\r\n        :time=\"milestoneTimes[milestone.id]\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"sourceRoot":"src/components/tabs/speedrun-milestones"},"metadata":{},"sourceType":"module"}