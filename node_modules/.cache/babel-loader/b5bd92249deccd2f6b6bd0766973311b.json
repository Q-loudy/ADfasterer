{"ast":null,"code":"import { discordRichPresence } from \"./secret-formula/discord-rich-presence\";\nexport const RichPresenceInfo = {\n  get gameStage() {\n    const stageDB = discordRichPresence.stages;\n\n    for (let stage = stageDB.length - 1; stage >= 0; stage--) {\n      if (stageDB[stage].hasReached()) return stageDB[stage];\n    }\n\n    throw Error(\"No valid progress stage found\");\n  },\n\n  get challengeState() {\n    const challDB = discordRichPresence.challenges;\n\n    for (let index = 0; index < challDB.length; index++) {\n      const chall = challDB[index];\n      if (chall.activityToken()) return chall;\n    }\n\n    return null;\n  },\n\n  // First line of info for DRP\n  get details() {\n    const chall = this.challengeState;\n    const stageName = typeof this.gameStage.name === \"function\" ? this.gameStage.name() : this.gameStage.name;\n    if (!chall) return `At ${stageName} (${this.gameStage.mainResource()})`;\n    const challResStr = chall.resource() ? `, ${chall.resource()}` : \"\";\n    return `At ${stageName} (In ${chall.name(chall.activityToken())}${challResStr})`;\n  },\n\n  // Second line of info for DRP\n  get state() {\n    var _this$gameStage$resou;\n\n    const mainRes = this.challengeState ? [this.gameStage.mainResource()] : [];\n    return mainRes.concat(((_this$gameStage$resou = this.gameStage.resourceList) !== null && _this$gameStage$resou !== void 0 ? _this$gameStage$resou : []).map(res => res())).join(\" | \");\n  }\n\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/discord-parser.js"],"names":["discordRichPresence","RichPresenceInfo","gameStage","stageDB","stages","stage","length","hasReached","Error","challengeState","challDB","challenges","index","chall","activityToken","details","stageName","name","mainResource","challResStr","resource","state","mainRes","concat","resourceList","map","res","join"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,wCAApC;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC9B,MAAIC,SAAJ,GAAgB;AACd,UAAMC,OAAO,GAAGH,mBAAmB,CAACI,MAApC;;AACA,SAAK,IAAIC,KAAK,GAAGF,OAAO,CAACG,MAAR,GAAiB,CAAlC,EAAqCD,KAAK,IAAI,CAA9C,EAAiDA,KAAK,EAAtD,EAA0D;AACxD,UAAIF,OAAO,CAACE,KAAD,CAAP,CAAeE,UAAf,EAAJ,EAAiC,OAAOJ,OAAO,CAACE,KAAD,CAAd;AAClC;;AACD,UAAMG,KAAK,CAAC,+BAAD,CAAX;AACD,GAP6B;;AAQ9B,MAAIC,cAAJ,GAAqB;AACnB,UAAMC,OAAO,GAAGV,mBAAmB,CAACW,UAApC;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,OAAO,CAACJ,MAApC,EAA4CM,KAAK,EAAjD,EAAqD;AACnD,YAAMC,KAAK,GAAGH,OAAO,CAACE,KAAD,CAArB;AACA,UAAIC,KAAK,CAACC,aAAN,EAAJ,EAA2B,OAAOD,KAAP;AAC5B;;AACD,WAAO,IAAP;AACD,GAf6B;;AAiB9B;AACA,MAAIE,OAAJ,GAAc;AACZ,UAAMF,KAAK,GAAG,KAAKJ,cAAnB;AACA,UAAMO,SAAS,GAAG,OAAO,KAAKd,SAAL,CAAee,IAAtB,KAA+B,UAA/B,GAA4C,KAAKf,SAAL,CAAee,IAAf,EAA5C,GAAoE,KAAKf,SAAL,CAAee,IAArG;AACA,QAAI,CAACJ,KAAL,EAAY,OAAQ,MAAKG,SAAU,KAAI,KAAKd,SAAL,CAAegB,YAAf,EAA8B,GAAzD;AACZ,UAAMC,WAAW,GAAGN,KAAK,CAACO,QAAN,KACf,KAAIP,KAAK,CAACO,QAAN,EAAiB,EADN,GAEhB,EAFJ;AAGA,WAAQ,MAAKJ,SAAU,QAAOH,KAAK,CAACI,IAAN,CAAWJ,KAAK,CAACC,aAAN,EAAX,CAAkC,GAAEK,WAAY,GAA9E;AACD,GA1B6B;;AA2B9B;AACA,MAAIE,KAAJ,GAAY;AAAA;;AACV,UAAMC,OAAO,GAAG,KAAKb,cAAL,GAAsB,CAAC,KAAKP,SAAL,CAAegB,YAAf,EAAD,CAAtB,GAAwD,EAAxE;AACA,WAAOI,OAAO,CAACC,MAAR,CAAe,0BAAC,KAAKrB,SAAL,CAAesB,YAAhB,yEAAgC,EAAhC,EAAoCC,GAApC,CAAwCC,GAAG,IAAIA,GAAG,EAAlD,CAAf,EAAsEC,IAAtE,CAA2E,KAA3E,CAAP;AACD;;AA/B6B,CAAzB","sourcesContent":["import { discordRichPresence } from \"./secret-formula/discord-rich-presence\";\r\n\r\nexport const RichPresenceInfo = {\r\n  get gameStage() {\r\n    const stageDB = discordRichPresence.stages;\r\n    for (let stage = stageDB.length - 1; stage >= 0; stage--) {\r\n      if (stageDB[stage].hasReached()) return stageDB[stage];\r\n    }\r\n    throw Error(\"No valid progress stage found\");\r\n  },\r\n  get challengeState() {\r\n    const challDB = discordRichPresence.challenges;\r\n    for (let index = 0; index < challDB.length; index++) {\r\n      const chall = challDB[index];\r\n      if (chall.activityToken()) return chall;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  // First line of info for DRP\r\n  get details() {\r\n    const chall = this.challengeState;\r\n    const stageName = typeof this.gameStage.name === \"function\" ? this.gameStage.name() : this.gameStage.name;\r\n    if (!chall) return `At ${stageName} (${this.gameStage.mainResource()})`;\r\n    const challResStr = chall.resource()\r\n      ? `, ${chall.resource()}`\r\n      : \"\";\r\n    return `At ${stageName} (In ${chall.name(chall.activityToken())}${challResStr})`;\r\n  },\r\n  // Second line of info for DRP\r\n  get state() {\r\n    const mainRes = this.challengeState ? [this.gameStage.mainResource()] : [];\r\n    return mainRes.concat((this.gameStage.resourceList ?? []).map(res => res())).join(\" | \");\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}