{"ast":null,"code":"export default {\n  name: \"PreviousSpeedrunInfo\",\n  props: {\n    // This will be undefined for records which don't exist in the speedrun history\n    prevRunInfo: {\n      type: Object,\n      required: false,\n      default: () => {}\n    },\n    index: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    segmentAttr() {\n      return {\n        icon: `fas o-icon ${this.prevRunInfo.isSegmented ? \"fa-stopwatch-20\" : \"fa-stopwatch\"}`,\n        text: this.prevRunInfo.isSegmented ? \"Segmented\" : \"Single Segment\"\n      };\n    },\n\n    stdAttr() {\n      return {\n        icon: `fas fa-coins o-icon ${this.prevRunInfo.usedSTD ? \"l-icon-on\" : \"l-icon-off\"}`,\n        text: this.prevRunInfo.usedSTD ? \"Used STD Upgrades\" : \"No STDs used\"\n      };\n    },\n\n    offlineAttr() {\n      const offlineFrac = this.prevRunInfo.offlineTimeUsed / this.prevRunInfo.records.max();\n      let symbol;\n      if (offlineFrac === 0) symbol = \"fa-eye\";else if (offlineFrac < 0.1) symbol = \"fa-computer\";else if (offlineFrac < 0.6) symbol = \"fa-moon\";else symbol = \"fa-power-off\";\n      return {\n        icon: `fas o-icon ${symbol}`,\n        text: `${offlineFrac === 0 ? \"No\" : formatPercents(offlineFrac, 1)} Offline Time`\n      };\n    },\n\n    seedAttr() {\n      let symbol;\n\n      switch (this.prevRunInfo.seedSelection) {\n        case SPEEDRUN_SEED_STATE.UNKNOWN:\n          symbol = \"fa-question\";\n          break;\n\n        case SPEEDRUN_SEED_STATE.FIXED:\n          symbol = \"fa-gamepad\";\n          break;\n\n        case SPEEDRUN_SEED_STATE.RANDOM:\n          symbol = \"fa-dice\";\n          break;\n\n        case SPEEDRUN_SEED_STATE.PLAYER:\n          symbol = \"fa-user-pen\";\n          break;\n\n        default:\n          throw new Error(\"Unrecognized speedrun seed option in previous run subtab\");\n      }\n\n      return {\n        icon: `fas ${symbol} o-icon`,\n        text: Speedrun.seedModeText(this.prevRunInfo)\n      };\n    },\n\n    iconAttrs() {\n      return [this.offlineAttr, this.segmentAttr, this.stdAttr, this.seedAttr];\n    },\n\n    startDate() {\n      return Time.toDateTimeString(this.prevRunInfo.startDate);\n    },\n\n    finalTime() {\n      return TimeSpan.fromMilliseconds(this.prevRunInfo.records.max()).toStringShort(true, true);\n    }\n\n  }\n};","map":{"version":3,"sources":["PreviousSpeedrunInfo.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,sBADA;AAEA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA,MAAA,CAAA;AAHA,KAFA;AAOA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AAPA,GAFA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,WAAA,GAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,cAAA,KAAA,WAAA,CAAA,WAAA,GAAA,iBAAA,GAAA,cAAA,EADA;AAEA,QAAA,IAAA,EAAA,KAAA,WAAA,CAAA,WAAA,GAAA,WAAA,GAAA;AAFA,OAAA;AAIA,KANA;;AAOA,IAAA,OAAA,GAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,uBAAA,KAAA,WAAA,CAAA,OAAA,GAAA,WAAA,GAAA,YAAA,EADA;AAEA,QAAA,IAAA,EAAA,KAAA,WAAA,CAAA,OAAA,GAAA,mBAAA,GAAA;AAFA,OAAA;AAIA,KAZA;;AAaA,IAAA,WAAA,GAAA;AACA,YAAA,WAAA,GAAA,KAAA,WAAA,CAAA,eAAA,GAAA,KAAA,WAAA,CAAA,OAAA,CAAA,GAAA,EAAA;AACA,UAAA,MAAA;AACA,UAAA,WAAA,KAAA,CAAA,EAAA,MAAA,GAAA,QAAA,CAAA,KACA,IAAA,WAAA,GAAA,GAAA,EAAA,MAAA,GAAA,aAAA,CAAA,KACA,IAAA,WAAA,GAAA,GAAA,EAAA,MAAA,GAAA,SAAA,CAAA,KACA,MAAA,GAAA,cAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,cAAA,MAAA,EADA;AAEA,QAAA,IAAA,EAAA,GAAA,WAAA,KAAA,CAAA,GAAA,IAAA,GAAA,cAAA,CAAA,WAAA,EAAA,CAAA,CAAA;AAFA,OAAA;AAIA,KAxBA;;AAyBA,IAAA,QAAA,GAAA;AACA,UAAA,MAAA;;AACA,cAAA,KAAA,WAAA,CAAA,aAAA;AACA,aAAA,mBAAA,CAAA,OAAA;AACA,UAAA,MAAA,GAAA,aAAA;AACA;;AACA,aAAA,mBAAA,CAAA,KAAA;AACA,UAAA,MAAA,GAAA,YAAA;AACA;;AACA,aAAA,mBAAA,CAAA,MAAA;AACA,UAAA,MAAA,GAAA,SAAA;AACA;;AACA,aAAA,mBAAA,CAAA,MAAA;AACA,UAAA,MAAA,GAAA,aAAA;AACA;;AACA;AACA,gBAAA,IAAA,KAAA,CAAA,0DAAA,CAAA;AAdA;;AAiBA,aAAA;AACA,QAAA,IAAA,EAAA,OAAA,MAAA,SADA;AAEA,QAAA,IAAA,EAAA,QAAA,CAAA,YAAA,CAAA,KAAA,WAAA;AAFA,OAAA;AAIA,KAhDA;;AAiDA,IAAA,SAAA,GAAA;AACA,aAAA,CAAA,KAAA,WAAA,EAAA,KAAA,WAAA,EAAA,KAAA,OAAA,EAAA,KAAA,QAAA,CAAA;AACA,KAnDA;;AAoDA,IAAA,SAAA,GAAA;AACA,aAAA,IAAA,CAAA,gBAAA,CAAA,KAAA,WAAA,CAAA,SAAA,CAAA;AACA,KAtDA;;AAuDA,IAAA,SAAA,GAAA;AACA,aAAA,QAAA,CAAA,gBAAA,CAAA,KAAA,WAAA,CAAA,OAAA,CAAA,GAAA,EAAA,EAAA,aAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AACA;;AAzDA;AAdA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"PreviousSpeedrunInfo\",\r\n  props: {\r\n    // This will be undefined for records which don't exist in the speedrun history\r\n    prevRunInfo: {\r\n      type: Object,\r\n      required: false,\r\n      default: () => {}\r\n    },\r\n    index: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    segmentAttr() {\r\n      return {\r\n        icon: `fas o-icon ${this.prevRunInfo.isSegmented ? \"fa-stopwatch-20\" : \"fa-stopwatch\"}`,\r\n        text: this.prevRunInfo.isSegmented ? \"Segmented\" : \"Single Segment\",\r\n      };\r\n    },\r\n    stdAttr() {\r\n      return {\r\n        icon: `fas fa-coins o-icon ${this.prevRunInfo.usedSTD ? \"l-icon-on\" : \"l-icon-off\"}`,\r\n        text: this.prevRunInfo.usedSTD ? \"Used STD Upgrades\" : \"No STDs used\",\r\n      };\r\n    },\r\n    offlineAttr() {\r\n      const offlineFrac = this.prevRunInfo.offlineTimeUsed / this.prevRunInfo.records.max();\r\n      let symbol;\r\n      if (offlineFrac === 0) symbol = \"fa-eye\";\r\n      else if (offlineFrac < 0.1) symbol = \"fa-computer\";\r\n      else if (offlineFrac < 0.6) symbol = \"fa-moon\";\r\n      else symbol = \"fa-power-off\";\r\n      return {\r\n        icon: `fas o-icon ${symbol}`,\r\n        text: `${offlineFrac === 0 ? \"No\" : formatPercents(offlineFrac, 1)} Offline Time`,\r\n      };\r\n    },\r\n    seedAttr() {\r\n      let symbol;\r\n      switch (this.prevRunInfo.seedSelection) {\r\n        case SPEEDRUN_SEED_STATE.UNKNOWN:\r\n          symbol = \"fa-question\";\r\n          break;\r\n        case SPEEDRUN_SEED_STATE.FIXED:\r\n          symbol = \"fa-gamepad\";\r\n          break;\r\n        case SPEEDRUN_SEED_STATE.RANDOM:\r\n          symbol = \"fa-dice\";\r\n          break;\r\n        case SPEEDRUN_SEED_STATE.PLAYER:\r\n          symbol = \"fa-user-pen\";\r\n          break;\r\n        default:\r\n          throw new Error(\"Unrecognized speedrun seed option in previous run subtab\");\r\n      }\r\n\r\n      return {\r\n        icon: `fas ${symbol} o-icon`,\r\n        text: Speedrun.seedModeText(this.prevRunInfo),\r\n      };\r\n    },\r\n    iconAttrs() {\r\n      return [this.offlineAttr, this.segmentAttr, this.stdAttr, this.seedAttr];\r\n    },\r\n    startDate() {\r\n      return Time.toDateTimeString(this.prevRunInfo.startDate);\r\n    },\r\n    finalTime() {\r\n      return TimeSpan.fromMilliseconds(this.prevRunInfo.records.max()).toStringShort(true, true);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-if=\"prevRunInfo\"\r\n    class=\"c-icon-container\"\r\n  >\r\n    <span>Run {{ index }}</span>\r\n    <span>{{ prevRunInfo.name }}</span>\r\n    <span\r\n      v-for=\"attr in iconAttrs\"\r\n      :key=\"attr.icon\"\r\n      v-tooltip=\"attr.text\"\r\n      :class=\"attr.icon\"\r\n    />\r\n    <span>Started: {{ startDate }}</span>\r\n    <span>Final Time: {{ finalTime }}</span>\r\n  </div>\r\n  <div\r\n    v-else\r\n    class=\"c-no-record\"\r\n  >\r\n    No speedrun records found for run {{ index }}.\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-icon-container {\r\n  display: grid;\r\n  grid-template-columns: 7rem 20rem 4rem 4rem 4rem 4rem 30rem 20rem;\r\n  align-items: center;\r\n  font-size: 1.3rem;\r\n}\r\n\r\n.c-no-record {\r\n  align-items: center;\r\n  font-size: 1.3rem;\r\n  padding: 0.65rem;\r\n  width: 100%;\r\n}\r\n\r\n.o-icon {\r\n  font-size: 2.8rem;\r\n}\r\n\r\n.l-icon-on {\r\n  color: var(--color-text);\r\n}\r\n\r\n.l-icon-off {\r\n  color: #999999;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/speedrun-milestones"},"metadata":{},"sourceType":"module"}