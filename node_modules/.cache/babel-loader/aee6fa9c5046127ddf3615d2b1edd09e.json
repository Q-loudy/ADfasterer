{"ast":null,"code":"import CurrentGlyphEffects from \"./CurrentGlyphEffects\";\nimport EquippedGlyphs from \"./EquippedGlyphs\";\nimport ExpandingControlBox from \"@/components/ExpandingControlBox\";\nimport GlyphInventory from \"./GlyphInventory\";\nimport GlyphLevelsAndWeights from \"./GlyphLevelsAndWeights\";\nimport GlyphPeek from \"./GlyphPeek\";\nimport GlyphTabSidebar from \"./sidebar/GlyphTabSidebar\";\nimport RealityAmplifyButton from \"./RealityAmplifyButton\";\nimport RealityReminder from \"./RealityReminder\";\nimport ResetRealityButton from \"./ResetRealityButton\";\nimport SacrificedGlyphs from \"./SacrificedGlyphs\";\nimport SingleGlyphCustomzationPanel from \"./SingleGlyphCustomzationPanel\";\nexport default {\n  name: \"GlyphsTab\",\n  components: {\n    ExpandingControlBox,\n    GlyphTabSidebar,\n    GlyphPeek,\n    RealityAmplifyButton,\n    GlyphInventory,\n    SacrificedGlyphs,\n    CurrentGlyphEffects,\n    EquippedGlyphs,\n    GlyphLevelsAndWeights,\n    ResetRealityButton,\n    RealityReminder,\n    SingleGlyphCustomzationPanel\n  },\n\n  data() {\n    return {\n      enslavedHint: \"\",\n      showInstability: false,\n      instabilityThreshold: 0,\n      hyperInstabilityThreshold: 0,\n      isInCelestialReality: false,\n      canAmplify: false,\n      glyphTextColors: true,\n      autoRestartCelestialRuns: false,\n      sacrificeUnlocked: false,\n      sacrificeDisplayed: false,\n      resetRealityDisplayed: false\n    };\n  },\n\n  computed: {\n    showEnslavedHint() {\n      return this.enslavedHint !== \"\";\n    },\n\n    glyphColorState() {\n      return {\n        \"o-glyph-color-checkbox\": true,\n        \"o-glyph-color-checkbox--active\": this.glyphTextColors,\n        \"o-glyph-color-checkbox--inactive\": !this.glyphTextColors\n      };\n    }\n\n  },\n  methods: {\n    update() {\n      this.resetRealityDisplayed = PlayerProgress.realityUnlocked();\n      this.showInstability = player.records.bestReality.glyphLevel > 800;\n      this.instabilityThreshold = Glyphs.instabilityThreshold;\n      this.hyperInstabilityThreshold = Glyphs.hyperInstabilityThreshold;\n      this.isInCelestialReality = isInCelestialReality();\n      this.canAmplify = Enslaved.isUnlocked && !this.isInCelestialReality;\n      this.autoRestartCelestialRuns = player.options.retryCelestial;\n      this.glyphTextColors = player.options.glyphTextColors;\n      this.enslavedHint = \"\";\n      this.sacrificeUnlocked = GlyphSacrificeHandler.canSacrifice;\n      this.sacrificeDisplayed = player.reality.showGlyphSacrifice;\n      if (!Enslaved.isRunning) return;\n      const haveBoost = Glyphs.activeWithoutCompanion.find(e => e.level < Enslaved.glyphLevelMin) !== undefined;\n\n      if (haveBoost) {\n        this.enslavedHint = \"done... what little... I can... with Glyphs...\";\n      }\n    },\n\n    toggleAutoRestartCelestial() {\n      player.options.retryCelestial = !player.options.retryCelestial;\n    },\n\n    toggleGlyphTextColors() {\n      player.options.glyphTextColors = !player.options.glyphTextColors;\n    },\n\n    glyphInfoClass(isSacrificeOption) {\n      return {\n        \"l-glyph-info-button\": true,\n        \"c-glyph-info-button\": true,\n        \"c-glyph-info-button--active\": isSacrificeOption,\n        \"c-glyph-info-button--inactive\": !isSacrificeOption\n      };\n    },\n\n    setInfoState(state) {\n      player.reality.showGlyphSacrifice = state;\n    },\n\n    glyphColorPosition() {\n      return this.sacrificeUnlocked ? \"l-glyph-color-position__low\" : \"l-glyph-color-position__top\";\n    },\n\n    glyphInfoBorderClass() {\n      return {\n        \"c-current-glyph-effects-with-top-border\": !this.sacrificeUnlocked\n      };\n    },\n\n    buttonGroupClass() {\n      return {\n        \"l-half-width\": this.canAmplify\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["GlyphsTab.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport CurrentGlyphEffects from \"./CurrentGlyphEffects\";\r\nimport EquippedGlyphs from \"./EquippedGlyphs\";\r\nimport ExpandingControlBox from \"@/components/ExpandingControlBox\";\r\nimport GlyphInventory from \"./GlyphInventory\";\r\nimport GlyphLevelsAndWeights from \"./GlyphLevelsAndWeights\";\r\nimport GlyphPeek from \"./GlyphPeek\";\r\nimport GlyphTabSidebar from \"./sidebar/GlyphTabSidebar\";\r\nimport RealityAmplifyButton from \"./RealityAmplifyButton\";\r\nimport RealityReminder from \"./RealityReminder\";\r\nimport ResetRealityButton from \"./ResetRealityButton\";\r\nimport SacrificedGlyphs from \"./SacrificedGlyphs\";\r\nimport SingleGlyphCustomzationPanel from \"./SingleGlyphCustomzationPanel\";\r\n\r\nexport default {\r\n  name: \"GlyphsTab\",\r\n  components: {\r\n    ExpandingControlBox,\r\n    GlyphTabSidebar,\r\n    GlyphPeek,\r\n    RealityAmplifyButton,\r\n    GlyphInventory,\r\n    SacrificedGlyphs,\r\n    CurrentGlyphEffects,\r\n    EquippedGlyphs,\r\n    GlyphLevelsAndWeights,\r\n    ResetRealityButton,\r\n    RealityReminder,\r\n    SingleGlyphCustomzationPanel\r\n  },\r\n  data() {\r\n    return {\r\n      enslavedHint: \"\",\r\n      showInstability: false,\r\n      instabilityThreshold: 0,\r\n      hyperInstabilityThreshold: 0,\r\n      isInCelestialReality: false,\r\n      canAmplify: false,\r\n      glyphTextColors: true,\r\n      autoRestartCelestialRuns: false,\r\n      sacrificeUnlocked: false,\r\n      sacrificeDisplayed: false,\r\n      resetRealityDisplayed: false,\r\n    };\r\n  },\r\n  computed: {\r\n    showEnslavedHint() {\r\n      return this.enslavedHint !== \"\";\r\n    },\r\n    glyphColorState() {\r\n      return {\r\n        \"o-glyph-color-checkbox\": true,\r\n        \"o-glyph-color-checkbox--active\": this.glyphTextColors,\r\n        \"o-glyph-color-checkbox--inactive\": !this.glyphTextColors,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.resetRealityDisplayed = PlayerProgress.realityUnlocked();\r\n      this.showInstability = player.records.bestReality.glyphLevel > 800;\r\n      this.instabilityThreshold = Glyphs.instabilityThreshold;\r\n      this.hyperInstabilityThreshold = Glyphs.hyperInstabilityThreshold;\r\n      this.isInCelestialReality = isInCelestialReality();\r\n      this.canAmplify = Enslaved.isUnlocked && !this.isInCelestialReality;\r\n      this.autoRestartCelestialRuns = player.options.retryCelestial;\r\n      this.glyphTextColors = player.options.glyphTextColors;\r\n      this.enslavedHint = \"\";\r\n      this.sacrificeUnlocked = GlyphSacrificeHandler.canSacrifice;\r\n      this.sacrificeDisplayed = player.reality.showGlyphSacrifice;\r\n      if (!Enslaved.isRunning) return;\r\n      const haveBoost = Glyphs.activeWithoutCompanion.find(e => e.level < Enslaved.glyphLevelMin) !== undefined;\r\n      if (haveBoost) {\r\n        this.enslavedHint = \"done... what little... I can... with Glyphs...\";\r\n      }\r\n    },\r\n    toggleAutoRestartCelestial() {\r\n      player.options.retryCelestial = !player.options.retryCelestial;\r\n    },\r\n    toggleGlyphTextColors() {\r\n      player.options.glyphTextColors = !player.options.glyphTextColors;\r\n    },\r\n    glyphInfoClass(isSacrificeOption) {\r\n      return {\r\n        \"l-glyph-info-button\": true,\r\n        \"c-glyph-info-button\": true,\r\n        \"c-glyph-info-button--active\": isSacrificeOption,\r\n        \"c-glyph-info-button--inactive\": !isSacrificeOption\r\n      };\r\n    },\r\n    setInfoState(state) {\r\n      player.reality.showGlyphSacrifice = state;\r\n    },\r\n    glyphColorPosition() {\r\n      return this.sacrificeUnlocked ? \"l-glyph-color-position__low\" : \"l-glyph-color-position__top\";\r\n    },\r\n    glyphInfoBorderClass() {\r\n      return {\r\n        \"c-current-glyph-effects-with-top-border\": !this.sacrificeUnlocked\r\n      };\r\n    },\r\n    buttonGroupClass() {\r\n      return {\r\n        \"l-half-width\": this.canAmplify\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"l-glyphs-tab\">\r\n      <div class=\"l-reality-button-column\">\r\n        <GlyphPeek />\r\n\r\n        <div\r\n          v-if=\"resetRealityDisplayed\"\r\n          class=\"l-reality-button-group\"\r\n        >\r\n          <RealityAmplifyButton\r\n            v-if=\"!isInCelestialReality\"\r\n            :class=\"buttonGroupClass()\"\r\n          />\r\n          <ResetRealityButton :class=\"buttonGroupClass()\" />\r\n        </div>\r\n\r\n        <div\r\n          v-if=\"isInCelestialReality\"\r\n          class=\"l-celestial-auto-restart-checkbox\"\r\n        >\r\n          <input\r\n            id=\"autoRestart\"\r\n            v-model=\"autoRestartCelestialRuns\"\r\n            type=\"checkbox\"\r\n            :value=\"autoRestartCelestialRuns\"\r\n            class=\"o-clickable\"\r\n            @input=\"toggleAutoRestartCelestial()\"\r\n          >\r\n          <label\r\n            for=\"autoRestart\"\r\n            class=\"o-clickable\"\r\n          >\r\n            Repeat this Celestial's Reality\r\n          </label>\r\n        </div>\r\n\r\n        <br>\r\n\r\n        <RealityReminder />\r\n\r\n        <div v-if=\"showInstability\">\r\n          <br>\r\n          Glyphs are becoming unstable.\r\n          <br>\r\n          Glyph levels higher than {{ formatInt(instabilityThreshold) }} are harder to reach.\r\n          <br>\r\n          This effect is even stronger above level {{ formatInt(hyperInstabilityThreshold) }}.\r\n        </div>\r\n        <SingleGlyphCustomzationPanel />\r\n        <ExpandingControlBox\r\n          width-source=\"content\"\r\n          label=\"Glyph Level Factors\"\r\n          container-class=\"c-glyph-level-factors-dropdown-header\"\r\n          class=\"l-glyph-level-factors\"\r\n        >\r\n          <template #dropdown>\r\n            <GlyphLevelsAndWeights />\r\n          </template>\r\n        </ExpandingControlBox>\r\n        <GlyphTabSidebar />\r\n      </div>\r\n      <div class=\"l-player-glyphs-column\">\r\n        <div\r\n          v-if=\"showEnslavedHint\"\r\n          class=\"o-teresa-quotes\"\r\n          v-html=\"enslavedHint\"\r\n        />\r\n        <div class=\"l-equipped-glyphs-and-effects-container\">\r\n          <EquippedGlyphs />\r\n          <div class=\"l-glyph-info-wrapper\">\r\n            <span\r\n              class=\"l-glyph-color-box\"\r\n              @click=\"toggleGlyphTextColors\"\r\n            >\r\n              <div :class=\"glyphColorPosition()\">\r\n                <label\r\n                  :class=\"glyphColorState\"\r\n                >\r\n                  <span class=\"fas fa-palette\" />\r\n                </label>\r\n              </div>\r\n            </span>\r\n            <div\r\n              v-if=\"sacrificeUnlocked\"\r\n              class=\"c-glyph-info-options\"\r\n            >\r\n              <button\r\n                :class=\"glyphInfoClass(!sacrificeDisplayed)\"\r\n                @click=\"setInfoState(false)\"\r\n              >\r\n                Current Glyph effects\r\n              </button>\r\n              <button\r\n                :class=\"glyphInfoClass(sacrificeDisplayed)\"\r\n                @click=\"setInfoState(true)\"\r\n              >\r\n                Glyph Sacrifice totals\r\n              </button>\r\n            </div>\r\n            <SacrificedGlyphs v-if=\"sacrificeUnlocked && sacrificeDisplayed\" />\r\n            <CurrentGlyphEffects\r\n              v-else\r\n              :class=\"glyphInfoBorderClass()\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <GlyphInventory />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-glyph-level-factors {\r\n  margin: 2rem;\r\n}\r\n\r\n.o-clickable {\r\n  cursor: pointer;\r\n}\r\n\r\n.l-celestial-auto-restart-checkbox {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  user-select: none;\r\n}\r\n\r\n.l-half-width {\r\n  width: 50%;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/glyphs"},"metadata":{},"sourceType":"module"}