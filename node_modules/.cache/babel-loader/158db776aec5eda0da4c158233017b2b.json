{"ast":null,"code":"import \"core-js/modules/es.symbol.description.js\";\nimport ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\nexport default {\n  name: \"EternityChallengeStartModal\",\n  components: {\n    ModalWrapperChoice\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    challenge() {\n      return EternityChallenge(this.id);\n    },\n\n    challengeIsCompleted() {\n      return this.challenge.isFullyCompleted;\n    },\n\n    message() {\n      return `You will Eternity (if possible) and start a new Eternity within the Challenge, with all the\n        Challenge-specific restrictions and modifiers active.\n        To complete the Challenge${this.challengeIsCompleted ? \"\" : \" and gain its reward\"},\n        you must reach the Challenge goal of\n        ${format(this.challenge.currentGoal)} Infinity Points. You can complete Eternity Challenges up to\n        ${formatInt(5)} times, with increasing goals and bonuses.`;\n    },\n\n    entranceLabel() {\n      return `You are about to enter Eternity Challenge ${this.id}`;\n    },\n\n    reward() {\n      let rewardDescription = this.challenge._config.reward.description;\n\n      if (typeof rewardDescription === \"function\") {\n        rewardDescription = rewardDescription();\n      }\n\n      return `The reward for completing this challenge is: ${rewardDescription}`;\n    },\n\n    condition() {\n      let conditionOfChallenge = this.challenge._config.description;\n\n      if (typeof conditionOfChallenge === \"function\") {\n        conditionOfChallenge = conditionOfChallenge();\n      }\n\n      return `Inside this Eternity Challenge, ${conditionOfChallenge}`;\n    }\n\n  },\n\n  created() {\n    this.on$(GAME_EVENT.ETERNITY_RESET_AFTER, this.emitClose);\n    this.on$(GAME_EVENT.REALITY_RESET_AFTER, this.emitClose);\n  },\n\n  methods: {\n    handleYesClick() {\n      this.challenge.start(true);\n      EventHub.ui.offAll(this);\n    }\n\n  }\n};","map":{"version":3,"sources":["EternityChallengeStartModal.vue"],"names":[],"mappings":";AACA,OAAA,kBAAA,MAAA,wCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,6BADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GALA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,GAAA;AACA,aAAA,iBAAA,CAAA,KAAA,EAAA,CAAA;AACA,KAHA;;AAIA,IAAA,oBAAA,GAAA;AACA,aAAA,KAAA,SAAA,CAAA,gBAAA;AACA,KANA;;AAOA,IAAA,OAAA,GAAA;AACA,aAAA;AACA;AACA,mCAAA,KAAA,oBAAA,GAAA,EAAA,GAAA,sBAAA;AACA;AACA,UAAA,MAAA,CAAA,KAAA,SAAA,CAAA,WAAA,CAAA;AACA,UAAA,SAAA,CAAA,CAAA,CAAA,4CALA;AAMA,KAdA;;AAeA,IAAA,aAAA,GAAA;AACA,aAAA,6CAAA,KAAA,EAAA,EAAA;AACA,KAjBA;;AAkBA,IAAA,MAAA,GAAA;AACA,UAAA,iBAAA,GAAA,KAAA,SAAA,CAAA,OAAA,CAAA,MAAA,CAAA,WAAA;;AACA,UAAA,OAAA,iBAAA,KAAA,UAAA,EAAA;AACA,QAAA,iBAAA,GAAA,iBAAA,EAAA;AACA;;AACA,aAAA,gDAAA,iBAAA,EAAA;AACA,KAxBA;;AAyBA,IAAA,SAAA,GAAA;AACA,UAAA,oBAAA,GAAA,KAAA,SAAA,CAAA,OAAA,CAAA,WAAA;;AACA,UAAA,OAAA,oBAAA,KAAA,UAAA,EAAA;AACA,QAAA,oBAAA,GAAA,oBAAA,EAAA;AACA;;AACA,aAAA,mCAAA,oBAAA,EAAA;AACA;;AA/BA,GAXA;;AA4CA,EAAA,OAAA,GAAA;AACA,SAAA,GAAA,CAAA,UAAA,CAAA,oBAAA,EAAA,KAAA,SAAA;AACA,SAAA,GAAA,CAAA,UAAA,CAAA,mBAAA,EAAA,KAAA,SAAA;AACA,GA/CA;;AAgDA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,GAAA;AACA,WAAA,SAAA,CAAA,KAAA,CAAA,IAAA;AACA,MAAA,QAAA,CAAA,EAAA,CAAA,MAAA,CAAA,IAAA;AACA;;AAJA;AAhDA,CAAA","sourcesContent":["<script>\r\nimport ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\r\n\r\nexport default {\r\n  name: \"EternityChallengeStartModal\",\r\n  components: {\r\n    ModalWrapperChoice\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    challenge() {\r\n      return EternityChallenge(this.id);\r\n    },\r\n    challengeIsCompleted() {\r\n      return this.challenge.isFullyCompleted;\r\n    },\r\n    message() {\r\n      return `You will Eternity (if possible) and start a new Eternity within the Challenge, with all the\r\n        Challenge-specific restrictions and modifiers active.\r\n        To complete the Challenge${this.challengeIsCompleted ? \"\" : \" and gain its reward\"},\r\n        you must reach the Challenge goal of\r\n        ${format(this.challenge.currentGoal)} Infinity Points. You can complete Eternity Challenges up to\r\n        ${formatInt(5)} times, with increasing goals and bonuses.`;\r\n    },\r\n    entranceLabel() {\r\n      return `You are about to enter Eternity Challenge ${this.id}`;\r\n    },\r\n    reward() {\r\n      let rewardDescription = this.challenge._config.reward.description;\r\n      if (typeof rewardDescription === \"function\") {\r\n        rewardDescription = rewardDescription();\r\n      }\r\n      return `The reward for completing this challenge is: ${rewardDescription}`;\r\n    },\r\n    condition() {\r\n      let conditionOfChallenge = this.challenge._config.description;\r\n      if (typeof conditionOfChallenge === \"function\") {\r\n        conditionOfChallenge = conditionOfChallenge();\r\n      }\r\n      return `Inside this Eternity Challenge, ${conditionOfChallenge}`;\r\n    }\r\n  },\r\n  created() {\r\n    this.on$(GAME_EVENT.ETERNITY_RESET_AFTER, this.emitClose);\r\n    this.on$(GAME_EVENT.REALITY_RESET_AFTER, this.emitClose);\r\n  },\r\n  methods: {\r\n    handleYesClick() {\r\n      this.challenge.start(true);\r\n      EventHub.ui.offAll(this);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ModalWrapperChoice\r\n    option=\"challenges\"\r\n    @confirm=\"handleYesClick\"\r\n  >\r\n    <template #header>\r\n      {{ entranceLabel }}\r\n    </template>\r\n    <div class=\"c-modal-message__text\">\r\n      {{ message }}\r\n      <br><br>\r\n      {{ condition }}\r\n    </div>\r\n    <div\r\n      v-if=\"!challengeIsCompleted\"\r\n      class=\"c-modal-message__text\"\r\n    >\r\n      <br>\r\n      {{ reward }}\r\n    </div>\r\n    <template #confirm-text>\r\n      Begin\r\n    </template>\r\n  </ModalWrapperChoice>\r\n</template>\r\n"],"sourceRoot":"src/components/modals/challenges"},"metadata":{},"sourceType":"module"}