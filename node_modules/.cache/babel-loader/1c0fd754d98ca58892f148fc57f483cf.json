{"ast":null,"code":"// Used for UI purposes to give different theming for different kinds of upgrades\nexport const LAITELA_UPGRADE_DIRECTION = {\n  SELF_BOOST: 0,\n  BOOSTS_MAIN: 1,\n  BOOSTS_LAITELA: 2\n};\nexport const singularityMilestones = {\n  // Infinite\n  continuumMult: {\n    start: 1,\n    repeat: 125,\n    increaseThreshold: 20,\n    limit: Infinity,\n    description: \"Continuum percentage multiplier\",\n    effect: completions => completions * 0.03,\n    effectFormat: x => formatX(1 + x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN\n  },\n  darkMatterMult: {\n    start: 2,\n    repeat: 20,\n    increaseThreshold: 30,\n    limit: Infinity,\n    description: \"Dark Matter production multiplier\",\n    effect: completions => Math.pow(1.5, completions),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  darkEnergyMult: {\n    start: 3,\n    repeat: 120,\n    increaseThreshold: 10,\n    limit: Infinity,\n    description: \"Dark Energy production multiplier\",\n    effect: completions => Math.pow(2, completions),\n    effectFormat: x => formatX(x, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  darkDimensionCostReduction: {\n    start: 4,\n    repeat: 40,\n    increaseThreshold: 25,\n    limit: Infinity,\n    description: \"Dark Matter Dimension upgrades are cheaper\",\n    effect: completions => Math.pow(0.4, completions),\n    effectFormat: x => `/ ${format(1 / x, 2, 2)}`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  singularityMult: {\n    id: 5,\n    start: 50,\n    repeat: 3000,\n    increaseThreshold: 5,\n    limit: Infinity,\n    description: \"Singularity gain multiplier\",\n    effect: completions => Math.pow(2, completions),\n    effectFormat: x => formatX(x, 2, 0),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  darkDimensionIntervalReduction: {\n    start: 10,\n    repeat: 100,\n    increaseThreshold: 20,\n    limit: Infinity,\n    description: \"Dark Matter Dimension interval decrease\",\n    effect: completions => Math.pow(0.6, completions),\n    effectFormat: x => `/ ${format(1 / x, 2, 2)}`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  improvedAscensionDM: {\n    start: 200000,\n    repeat: 4000,\n    increaseThreshold: 15,\n    limit: Infinity,\n    description: \"Ascension affects Dark Matter production more\",\n    effect: completions => 100 * completions,\n    effectFormat: x => formatX(POWER_DM_PER_ASCENSION + x, 1, 0),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  // Limited\n  ascensionIntervalScaling: {\n    start: 1.2e5,\n    repeat: 2400,\n    limit: 8,\n    description: \"Dark Matter Dimensions Ascension increases the interval less\",\n    effect: completions => 1200 - 50 * completions,\n    effectFormat: x => `×${formatInt(x)}`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  autoCondense: {\n    start: 8,\n    repeat: 80,\n    limit: 8,\n    description: \"Automatically condense Singularities when reaching a threshold above the cap\",\n    effect: completions => [Infinity, 1.3, 1.22, 1.15, 1.1, 1.06, 1.03, 1.01, 1][completions],\n    effectFormat: x => `Cap ${formatX(x, 2, 2)}`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  darkDimensionAutobuyers: {\n    start: 30,\n    repeat: 170,\n    limit: 4,\n    description: \"Dark Matter Dimension Autobuyers\",\n    effect: completions => completions,\n    effectFormat: x => x === 0 ? \"No autobuyers\" : `Autobuy up to the ${[\"1st\", \"2nd\", \"3rd\", \"4th\"][x - 1]} DMD`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  ascensionAutobuyers: {\n    start: 1e8,\n    repeat: 140,\n    limit: 4,\n    description: \"DMD Ascension Autobuyers\",\n    effect: completions => completions,\n    effectFormat: x => x === 0 ? \"No autobuyers\" : `Ascend up to the ${[\"1st\", \"2nd\", \"3rd\", \"4th\"][x - 1]} DMD`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  darkAutobuyerSpeed: {\n    start: 45,\n    repeat: 650,\n    limit: 8,\n    description: \"Autobuyer speed for all DMD Autobuyers\",\n    effect: completions => [30, 20, 15, 10, 5, 3, 2, 1, 0][completions],\n    effectFormat: x => x === 0 ? \"Instant\" : `${formatInt(x)}s`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  realityDEMultiplier: {\n    start: 1500,\n    repeat: 10000,\n    limit: 6,\n    description: \"Dark Energy multiplier based on disabled Dimension count within Lai'tela\",\n    effect: completions => Math.pow(1 + 0.05 * completions, Laitela.difficultyTier),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  improvedSingularityCap: {\n    start: 150,\n    repeat: 10000,\n    limit: 4,\n    description: \"Increased Singularity gain per cap increase\",\n    effect: completions => 11 + completions,\n    effectFormat: x => `${formatX(x)}`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  intervalCostScalingReduction: {\n    start: 130000,\n    repeat: 50000,\n    limit: 5,\n    description: \"DMD Interval cost scaling is better\",\n    effect: completions => 1 - 0.03 * completions,\n    effectFormat: x => `${formatPow(x, 2, 2)}`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  // Unique\n  darkFromTesseracts: {\n    start: 80,\n    repeat: 0,\n    limit: 1,\n    description: \"Tesseracts boost Dark Matter and Dark Energy production\",\n    effect: () => Math.pow(1.1, Tesseracts.effectiveCount),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA\n  },\n  multFromInfinitied: {\n    start: 3000,\n    repeat: 0,\n    limit: 1,\n    description: \"Infinities boost Dark Matter and Dark Energy production\",\n    effect: () => Math.clampMin(Currency.infinitiesTotal.value.pLog10() / 1000, 1),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA\n  },\n  dilatedTimeFromSingularities: {\n    start: 8e4,\n    repeat: 0,\n    limit: 1,\n    description: \"Singularities improve the repeatable Dilated Time multiplier upgrade\",\n    // Note that at ~2.15x this causes a runaway purely because of cost scaling\n    effect: () => 1 + Math.clampMax(Math.log10(Currency.singularities.value) / 100, 0.35),\n    effectFormat: x => `${formatX(2)} ➜ ${formatX(2 * Math.clampMin(x, 1), 2, 2)}`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN\n  },\n  darkFromGlyphLevel: {\n    start: 3e6,\n    repeat: 0,\n    limit: 1,\n    description: \"Boost Dark Matter and Dark Energy production based on highest Glyph level\",\n    effect: () => Math.pow(Math.clampMin((player.records.bestReality.glyphLevel - 15000) / 2000, 1), 0.5),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA\n  },\n  gamespeedFromSingularities: {\n    start: 8e7,\n    repeat: 0,\n    limit: 1,\n    description: \"Singularities boost game speed\",\n    effect: () => Math.clampMin(Math.pow(Math.log10(Currency.singularities.value), 3), 1),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN\n  },\n  darkFromTheorems: {\n    start: 3e9,\n    repeat: 0,\n    limit: 1,\n    description: \"Time Theorems boost Dark Matter and Dark Energy gain\",\n    effect: () => Math.sqrt(Math.clampMin((Currency.timeTheorems.value.log10() - 1000) / 50, 1)),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA\n  },\n  dim4Generation: {\n    start: 5e11,\n    repeat: 0,\n    limit: 1,\n    description: \"Annihilation mult. generates 4th DMD when Annihilation is available\",\n    effect: () => Laitela.darkMatterMult,\n    effectFormat: x => `${format(x, 2, 1)}/s`,\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  darkFromDM4: {\n    start: 5e12,\n    repeat: 0,\n    limit: 1,\n    description: \"4th Dark Matter Dimension amount boosts Dark Matter and Dark Energy gain\",\n    effect: () => Math.clampMin(DarkMatterDimension(4).amount.pow(0.03).toNumber(), 1),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  annihilationAutobuyer: {\n    start: 4e18,\n    repeat: 0,\n    limit: 1,\n    description: \"Unlock an Autobuyer for Annihilation\",\n    effect: completions => completions,\n    effectFormat: x => x === 1 ? \"Unlocked\" : \"Locked\",\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST\n  },\n  theoremPowerFromSingularities: {\n    start: 3e21,\n    repeat: 0,\n    limit: 1,\n    description: \"Singularities give a power effect to Time Theorem gain\",\n    effect: () => 1 + Math.log10(Currency.singularities.value + 1) / 70,\n    effectFormat: x => formatPow(x, 2, 3),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN\n  },\n  darkFromGamespeed: {\n    start: 8e22,\n    repeat: 0,\n    limit: 1,\n    description: \"Game speed boosts Dark Matter and Dark Energy production\",\n    effect: () => Math.clampMin(Math.log10(getGameSpeedupFactor() / 1e120) / 40, 1),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA\n  },\n  glyphLevelFromSingularities: {\n    start: 3e24,\n    repeat: 0,\n    limit: 1,\n    description: \"Singularities boost pre-instability Glyph level\",\n    effect: () => 1 + Math.clampMin((Math.log10(Currency.singularities.value) - 20) / 30, 0),\n    effectFormat: x => formatX(Math.clampMin(x, 1), 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN\n  },\n  darkFromDilatedTime: {\n    start: 8e33,\n    repeat: 0,\n    limit: 1,\n    description: \"Dilated Time boosts Dark Matter production\",\n    effect: () => Math.pow(1.6, Decimal.log10(Currency.dilatedTime.value.plus(1)) / 1000),\n    effectFormat: x => formatX(x, 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA\n  },\n  infinitiedPow: {\n    start: 3e38,\n    repeat: 0,\n    limit: 1,\n    description: \"Infinities gain a power effect based on Singularities\",\n    effect: () => 1 + Math.log10(Currency.singularities.value + 1) / 300,\n    effectFormat: x => formatPow(x, 2, 3),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN\n  },\n  tesseractMultFromSingularities: {\n    start: 2.5e45,\n    repeat: 0,\n    limit: 1,\n    description: \"Singularities increase effective Tesseract count\",\n    effect: () => 1 + Math.log10(Currency.singularities.value) / 80,\n    effectFormat: x => formatX(Math.clampMin(x, 1), 2, 2),\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/celestials/singularity-milestones.js"],"names":["LAITELA_UPGRADE_DIRECTION","SELF_BOOST","BOOSTS_MAIN","BOOSTS_LAITELA","singularityMilestones","continuumMult","start","repeat","increaseThreshold","limit","Infinity","description","effect","completions","effectFormat","x","formatX","upgradeDirection","darkMatterMult","Math","pow","darkEnergyMult","darkDimensionCostReduction","format","singularityMult","id","darkDimensionIntervalReduction","improvedAscensionDM","POWER_DM_PER_ASCENSION","ascensionIntervalScaling","formatInt","autoCondense","darkDimensionAutobuyers","ascensionAutobuyers","darkAutobuyerSpeed","realityDEMultiplier","Laitela","difficultyTier","improvedSingularityCap","intervalCostScalingReduction","formatPow","darkFromTesseracts","Tesseracts","effectiveCount","multFromInfinitied","clampMin","Currency","infinitiesTotal","value","pLog10","dilatedTimeFromSingularities","clampMax","log10","singularities","darkFromGlyphLevel","player","records","bestReality","glyphLevel","gamespeedFromSingularities","darkFromTheorems","sqrt","timeTheorems","dim4Generation","darkFromDM4","DarkMatterDimension","amount","toNumber","annihilationAutobuyer","theoremPowerFromSingularities","darkFromGamespeed","getGameSpeedupFactor","glyphLevelFromSingularities","darkFromDilatedTime","Decimal","dilatedTime","plus","infinitiedPow","tesseractMultFromSingularities"],"mappings":"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","sourcesContent":["// Used for UI purposes to give different theming for different kinds of upgrades\r\nexport const LAITELA_UPGRADE_DIRECTION = {\r\n  SELF_BOOST: 0,\r\n  BOOSTS_MAIN: 1,\r\n  BOOSTS_LAITELA: 2\r\n};\r\n\r\nexport const singularityMilestones = {\r\n  // Infinite\r\n  continuumMult: {\r\n    start: 1,\r\n    repeat: 125,\r\n    increaseThreshold: 20,\r\n    limit: Infinity,\r\n    description: \"Continuum percentage multiplier\",\r\n    effect: completions => completions * 0.03,\r\n    effectFormat: x => formatX(1 + x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,\r\n  },\r\n  darkMatterMult: {\r\n    start: 2,\r\n    repeat: 20,\r\n    increaseThreshold: 30,\r\n    limit: Infinity,\r\n    description: \"Dark Matter production multiplier\",\r\n    effect: completions => Math.pow(1.5, completions),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  darkEnergyMult: {\r\n    start: 3,\r\n    repeat: 120,\r\n    increaseThreshold: 10,\r\n    limit: Infinity,\r\n    description: \"Dark Energy production multiplier\",\r\n    effect: completions => Math.pow(2, completions),\r\n    effectFormat: x => formatX(x, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  darkDimensionCostReduction: {\r\n    start: 4,\r\n    repeat: 40,\r\n    increaseThreshold: 25,\r\n    limit: Infinity,\r\n    description: \"Dark Matter Dimension upgrades are cheaper\",\r\n    effect: completions => Math.pow(0.4, completions),\r\n    effectFormat: x => `/ ${format(1 / x, 2, 2)}`,\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  singularityMult: {\r\n    id: 5,\r\n    start: 50,\r\n    repeat: 3000,\r\n    increaseThreshold: 5,\r\n    limit: Infinity,\r\n    description: \"Singularity gain multiplier\",\r\n    effect: completions => Math.pow(2, completions),\r\n    effectFormat: x => formatX(x, 2, 0),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  darkDimensionIntervalReduction: {\r\n    start: 10,\r\n    repeat: 100,\r\n    increaseThreshold: 20,\r\n    limit: Infinity,\r\n    description: \"Dark Matter Dimension interval decrease\",\r\n    effect: completions => Math.pow(0.6, completions),\r\n    effectFormat: x => `/ ${format(1 / x, 2, 2)}`,\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  improvedAscensionDM: {\r\n    start: 200000,\r\n    repeat: 4000,\r\n    increaseThreshold: 15,\r\n    limit: Infinity,\r\n    description: \"Ascension affects Dark Matter production more\",\r\n    effect: completions => 100 * completions,\r\n    effectFormat: x => formatX(POWER_DM_PER_ASCENSION + x, 1, 0),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  // Limited\r\n  ascensionIntervalScaling: {\r\n    start: 1.2e5,\r\n    repeat: 2400,\r\n    limit: 8,\r\n    description: \"Dark Matter Dimensions Ascension increases the interval less\",\r\n    effect: completions => 1200 - 50 * completions,\r\n    effectFormat: x => `×${formatInt(x)}`,\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  autoCondense: {\r\n    start: 8,\r\n    repeat: 80,\r\n    limit: 8,\r\n    description: \"Automatically condense Singularities when reaching a threshold above the cap\",\r\n    effect: completions => [Infinity, 1.3, 1.22, 1.15, 1.1, 1.06, 1.03, 1.01, 1][completions],\r\n    effectFormat: x => `Cap ${formatX(x, 2, 2)}`,\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  darkDimensionAutobuyers: {\r\n    start: 30,\r\n    repeat: 170,\r\n    limit: 4,\r\n    description: \"Dark Matter Dimension Autobuyers\",\r\n    effect: completions => completions,\r\n    effectFormat: x => ((x === 0) ? \"No autobuyers\" : `Autobuy up to the ${[\"1st\", \"2nd\", \"3rd\", \"4th\"][x - 1]} DMD`),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  ascensionAutobuyers: {\r\n    start: 1e8,\r\n    repeat: 140,\r\n    limit: 4,\r\n    description: \"DMD Ascension Autobuyers\",\r\n    effect: completions => completions,\r\n    effectFormat: x => ((x === 0) ? \"No autobuyers\" : `Ascend up to the ${[\"1st\", \"2nd\", \"3rd\", \"4th\"][x - 1]} DMD`),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  darkAutobuyerSpeed: {\r\n    start: 45,\r\n    repeat: 650,\r\n    limit: 8,\r\n    description: \"Autobuyer speed for all DMD Autobuyers\",\r\n    effect: completions => [30, 20, 15, 10, 5, 3, 2, 1, 0][completions],\r\n    effectFormat: x => (x === 0 ? \"Instant\" : `${formatInt(x)}s`),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  realityDEMultiplier: {\r\n    start: 1500,\r\n    repeat: 10000,\r\n    limit: 6,\r\n    description: \"Dark Energy multiplier based on disabled Dimension count within Lai'tela\",\r\n    effect: completions => Math.pow(1 + 0.05 * completions, Laitela.difficultyTier),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  improvedSingularityCap: {\r\n    start: 150,\r\n    repeat: 10000,\r\n    limit: 4,\r\n    description: \"Increased Singularity gain per cap increase\",\r\n    effect: completions => 11 + completions,\r\n    effectFormat: x => `${formatX(x)}`,\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  intervalCostScalingReduction: {\r\n    start: 130000,\r\n    repeat: 50000,\r\n    limit: 5,\r\n    description: \"DMD Interval cost scaling is better\",\r\n    effect: completions => 1 - 0.03 * completions,\r\n    effectFormat: x => `${formatPow(x, 2, 2)}`,\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  // Unique\r\n  darkFromTesseracts: {\r\n    start: 80,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Tesseracts boost Dark Matter and Dark Energy production\",\r\n    effect: () => Math.pow(1.1, Tesseracts.effectiveCount),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,\r\n  },\r\n  multFromInfinitied: {\r\n    start: 3000,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Infinities boost Dark Matter and Dark Energy production\",\r\n    effect: () => Math.clampMin(Currency.infinitiesTotal.value.pLog10() / 1000, 1),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,\r\n  },\r\n  dilatedTimeFromSingularities: {\r\n    start: 8e4,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Singularities improve the repeatable Dilated Time multiplier upgrade\",\r\n    // Note that at ~2.15x this causes a runaway purely because of cost scaling\r\n    effect: () => 1 + Math.clampMax(Math.log10(Currency.singularities.value) / 100, 0.35),\r\n    effectFormat: x => `${formatX(2)} ➜ ${formatX(2 * Math.clampMin(x, 1), 2, 2)}`,\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,\r\n  },\r\n  darkFromGlyphLevel: {\r\n    start: 3e6,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Boost Dark Matter and Dark Energy production based on highest Glyph level\",\r\n    effect: () => Math.pow(Math.clampMin((player.records.bestReality.glyphLevel - 15000) / 2000, 1), 0.5),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,\r\n  },\r\n  gamespeedFromSingularities: {\r\n    start: 8e7,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Singularities boost game speed\",\r\n    effect: () => Math.clampMin(Math.pow(Math.log10(Currency.singularities.value), 3), 1),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,\r\n  },\r\n  darkFromTheorems: {\r\n    start: 3e9,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Time Theorems boost Dark Matter and Dark Energy gain\",\r\n    effect: () => Math.sqrt(Math.clampMin((Currency.timeTheorems.value.log10() - 1000) / 50, 1)),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,\r\n  },\r\n  dim4Generation: {\r\n    start: 5e11,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Annihilation mult. generates 4th DMD when Annihilation is available\",\r\n    effect: () => Laitela.darkMatterMult,\r\n    effectFormat: x => `${format(x, 2, 1)}/s`,\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  darkFromDM4: {\r\n    start: 5e12,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"4th Dark Matter Dimension amount boosts Dark Matter and Dark Energy gain\",\r\n    effect: () => Math.clampMin(DarkMatterDimension(4).amount.pow(0.03).toNumber(), 1),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  annihilationAutobuyer: {\r\n    start: 4e18,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Unlock an Autobuyer for Annihilation\",\r\n    effect: completions => completions,\r\n    effectFormat: x => (x === 1 ? \"Unlocked\" : \"Locked\"),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.SELF_BOOST,\r\n  },\r\n  theoremPowerFromSingularities: {\r\n    start: 3e21,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Singularities give a power effect to Time Theorem gain\",\r\n    effect: () => 1 + Math.log10(Currency.singularities.value + 1) / 70,\r\n    effectFormat: x => formatPow(x, 2, 3),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,\r\n  },\r\n  darkFromGamespeed: {\r\n    start: 8e22,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Game speed boosts Dark Matter and Dark Energy production\",\r\n    effect: () => Math.clampMin(Math.log10(getGameSpeedupFactor() / 1e120) / 40, 1),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,\r\n  },\r\n  glyphLevelFromSingularities: {\r\n    start: 3e24,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Singularities boost pre-instability Glyph level\",\r\n    effect: () => 1 + Math.clampMin((Math.log10(Currency.singularities.value) - 20) / 30, 0),\r\n    effectFormat: x => formatX(Math.clampMin(x, 1), 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,\r\n  },\r\n  darkFromDilatedTime: {\r\n    start: 8e33,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Dilated Time boosts Dark Matter production\",\r\n    effect: () => Math.pow(1.6, Decimal.log10(Currency.dilatedTime.value.plus(1)) / 1000),\r\n    effectFormat: x => formatX(x, 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA,\r\n  },\r\n  infinitiedPow: {\r\n    start: 3e38,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Infinities gain a power effect based on Singularities\",\r\n    effect: () => 1 + Math.log10(Currency.singularities.value + 1) / 300,\r\n    effectFormat: x => formatPow(x, 2, 3),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,\r\n  },\r\n  tesseractMultFromSingularities: {\r\n    start: 2.5e45,\r\n    repeat: 0,\r\n    limit: 1,\r\n    description: \"Singularities increase effective Tesseract count\",\r\n    effect: () => 1 + Math.log10(Currency.singularities.value) / 80,\r\n    effectFormat: x => formatX(Math.clampMin(x, 1), 2, 2),\r\n    upgradeDirection: LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN,\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}