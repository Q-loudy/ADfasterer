{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\n\n/* eslint-disable */\n/// <reference path=\"../typings/PlayFab/PlayFabClientApi.d.ts\" />\nexport var PlayFab = typeof PlayFab != \"undefined\" ? PlayFab : {};\n\nif (!PlayFab.settings) {\n  PlayFab.settings = {\n    titleId: null,\n    // You must set this value for PlayFabSdk to work properly (Found in the Game Manager for your title, at the PlayFab Website)\n    developerSecretKey: null,\n    // For security reasons you must never expose this value to the client or players - You must set this value for Server-APIs to work properly (Found in the Game Manager for your title, at the PlayFab Website)\n    GlobalHeaderInjection: null,\n    productionServerUrl: \".playfabapi.com\"\n  };\n}\n\nif (!PlayFab._internalSettings) {\n  PlayFab._internalSettings = {\n    entityToken: null,\n    sdkVersion: \"1.136.230206\",\n    requestGetParams: {\n      sdk: \"JavaScriptSDK-1.136.230206\"\n    },\n    sessionTicket: null,\n    verticalName: null,\n    // The name of a customer vertical. This is only for customers running a private cluster. Generally you shouldn't touch this\n    errorTitleId: \"Must be have PlayFab.settings.titleId set to call this method\",\n    errorLoggedIn: \"Must be logged in to call this method\",\n    errorEntityToken: \"You must successfully call GetEntityToken before calling this\",\n    errorSecretKey: \"Must have PlayFab.settings.developerSecretKey set to call this method\",\n    GetServerUrl: function () {\n      if (!(PlayFab.settings.productionServerUrl.substring(0, 4) === \"http\")) {\n        if (PlayFab._internalSettings.verticalName) {\n          return \"https://\" + PlayFab._internalSettings.verticalName + PlayFab.settings.productionServerUrl;\n        } else {\n          return \"https://\" + PlayFab.settings.titleId + PlayFab.settings.productionServerUrl;\n        }\n      } else {\n        return PlayFab.settings.productionServerUrl;\n      }\n    },\n    InjectHeaders: function (xhr, headersObj) {\n      if (!headersObj) return;\n\n      for (var headerKey in headersObj) {\n        try {\n          xhr.setRequestHeader(gHeaderKey, headersObj[headerKey]);\n        } catch (e) {\n          console.log(\"Failed to append header: \" + headerKey + \" = \" + headersObj[headerKey] + \"Error: \" + e);\n        }\n      }\n    },\n    ExecuteRequest: function (url, request, authkey, authValue, callback, customData, extraHeaders) {\n      var resultPromise = new Promise(function (resolve, reject) {\n        if (callback != null && typeof callback !== \"function\") throw \"Callback must be null or a function\";\n        if (request == null) request = {};\n        var startTime = new Date();\n        var requestBody = JSON.stringify(request);\n        var urlArr = [url];\n        var getParams = PlayFab._internalSettings.requestGetParams;\n\n        if (getParams != null) {\n          var firstParam = true;\n\n          for (var key in getParams) {\n            if (firstParam) {\n              urlArr.push(\"?\");\n              firstParam = false;\n            } else {\n              urlArr.push(\"&\");\n            }\n\n            urlArr.push(key);\n            urlArr.push(\"=\");\n            urlArr.push(getParams[key]);\n          }\n        }\n\n        var completeUrl = urlArr.join(\"\");\n        var xhr = new XMLHttpRequest(); // window.console.log(\"URL: \" + completeUrl);\n\n        xhr.open(\"POST\", completeUrl, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.setRequestHeader(\"X-PlayFabSDK\", \"JavaScriptSDK-\" + PlayFab._internalSettings.sdkVersion);\n        if (authkey != null) xhr.setRequestHeader(authkey, authValue);\n\n        PlayFab._internalSettings.InjectHeaders(xhr, PlayFab.settings.GlobalHeaderInjection);\n\n        PlayFab._internalSettings.InjectHeaders(xhr, extraHeaders);\n\n        xhr.onloadend = function () {\n          if (callback == null) return;\n\n          var result = PlayFab._internalSettings.GetPlayFabResponse(request, xhr, startTime, customData);\n\n          if (result.code === 200) {\n            callback(result, null);\n          } else {\n            callback(null, result);\n          }\n        };\n\n        xhr.onerror = function () {\n          if (callback == null) return;\n\n          var result = PlayFab._internalSettings.GetPlayFabResponse(request, xhr, startTime, customData);\n\n          callback(null, result);\n        };\n\n        xhr.send(requestBody);\n\n        xhr.onreadystatechange = function () {\n          if (this.readyState === 4) {\n            var xhrResult = PlayFab._internalSettings.GetPlayFabResponse(request, this, startTime, customData);\n\n            if (this.status === 200) {\n              resolve(xhrResult);\n            } else {\n              reject(xhrResult);\n            }\n          }\n        };\n      }); // Return a Promise so that calls to various API methods can be handled asynchronously\n\n      return resultPromise;\n    },\n    GetPlayFabResponse: function (request, xhr, startTime, customData) {\n      var result = null;\n\n      try {\n        // window.console.log(\"parsing json result: \" + xhr.responseText);\n        result = JSON.parse(xhr.responseText);\n      } catch (e) {\n        result = {\n          code: 503,\n          // Service Unavailable\n          status: \"Service Unavailable\",\n          error: \"Connection error\",\n          errorCode: 2,\n          // PlayFabErrorCode.ConnectionError\n          errorMessage: xhr.responseText\n        };\n      }\n\n      result.CallBackTimeMS = new Date() - startTime;\n      result.Request = request;\n      result.CustomData = customData;\n      return result;\n    },\n    authenticationContext: {\n      PlayFabId: null,\n      EntityId: null,\n      EntityType: null,\n      SessionTicket: null,\n      EntityToken: null\n    },\n    UpdateAuthenticationContext: function (authenticationContext, result) {\n      var authenticationContextUpdates = {};\n\n      if (result.data.PlayFabId !== null) {\n        PlayFab._internalSettings.authenticationContext.PlayFabId = result.data.PlayFabId;\n        authenticationContextUpdates.PlayFabId = result.data.PlayFabId;\n      }\n\n      if (result.data.SessionTicket !== null) {\n        PlayFab._internalSettings.authenticationContext.SessionTicket = result.data.SessionTicket;\n        authenticationContextUpdates.SessionTicket = result.data.SessionTicket;\n      }\n\n      if (result.data.EntityToken !== null) {\n        PlayFab._internalSettings.authenticationContext.EntityId = result.data.EntityToken.Entity.Id;\n        authenticationContextUpdates.EntityId = result.data.EntityToken.Entity.Id;\n        PlayFab._internalSettings.authenticationContext.EntityType = result.data.EntityToken.Entity.Type;\n        authenticationContextUpdates.EntityType = result.data.EntityToken.Entity.Type;\n        PlayFab._internalSettings.authenticationContext.EntityToken = result.data.EntityToken.EntityToken;\n        authenticationContextUpdates.EntityToken = result.data.EntityToken.EntityToken;\n      } // Update the authenticationContext with values from the result\n\n\n      authenticationContext = Object.assign(authenticationContext, authenticationContextUpdates);\n      return authenticationContext;\n    },\n    AuthInfoMap: {\n      \"X-EntityToken\": {\n        authAttr: \"entityToken\",\n        authError: \"errorEntityToken\"\n      },\n      \"X-Authorization\": {\n        authAttr: \"sessionTicket\",\n        authError: \"errorLoggedIn\"\n      },\n      \"X-SecretKey\": {\n        authAttr: \"developerSecretKey\",\n        authError: \"errorSecretKey\"\n      }\n    },\n    GetAuthInfo: function (request, authKey) {\n      // Use the most-recently saved authKey, unless one was provided in the request via the AuthenticationContext\n      var authError = PlayFab._internalSettings.AuthInfoMap[authKey].authError;\n      var authAttr = PlayFab._internalSettings.AuthInfoMap[authKey].authAttr;\n      var defaultAuthValue = null;\n      if (authAttr === \"entityToken\") defaultAuthValue = PlayFab._internalSettings.entityToken;else if (authAttr === \"sessionTicket\") defaultAuthValue = PlayFab._internalSettings.sessionTicket;else if (authAttr === \"developerSecretKey\") defaultAuthValue = PlayFab.settings.developerSecretKey;\n      var authValue = request.AuthenticationContext ? request.AuthenticationContext[authAttr] : defaultAuthValue;\n      return {\n        \"authKey\": authKey,\n        \"authValue\": authValue,\n        \"authError\": authError\n      };\n    },\n    ExecuteRequestWrapper: function (apiURL, request, authKey, callback, customData, extraHeaders) {\n      var authValue = null;\n\n      if (authKey !== null) {\n        var authInfo = PlayFab._internalSettings.GetAuthInfo(request, authKey = authKey);\n\n        var authKey = authInfo.authKey,\n            authValue = authInfo.authValue,\n            authError = authInfo.authError;\n        if (!authValue) throw authError;\n      }\n\n      return PlayFab._internalSettings.ExecuteRequest(PlayFab._internalSettings.GetServerUrl() + apiURL, request, authKey, authValue, callback, customData, extraHeaders);\n    }\n  };\n}\n\nPlayFab.buildIdentifier = \"adobuild_javascriptsdk_114\";\nPlayFab.sdkVersion = \"1.136.230206\";\n\nPlayFab.GenerateErrorReport = function (error) {\n  if (error == null) return \"\";\n  var fullErrors = error.errorMessage;\n\n  for (var paramName in error.errorDetails) for (var msgIdx in error.errorDetails[paramName]) fullErrors += \"\\n\" + paramName + \": \" + error.errorDetails[paramName][msgIdx];\n\n  return fullErrors;\n};\n\nPlayFab.ClientApi = {\n  IsClientLoggedIn: function () {\n    return PlayFab._internalSettings.sessionTicket != null && PlayFab._internalSettings.sessionTicket.length > 0;\n  },\n  ForgetAllCredentials: function () {\n    PlayFab._internalSettings.sessionTicket = null;\n    PlayFab._internalSettings.entityToken = null;\n  },\n  AcceptTrade: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AcceptTrade\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  AddFriend: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddFriend\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  AddGenericID: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddGenericID\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  AddOrUpdateContactEmail: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddOrUpdateContactEmail\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  AddSharedGroupMembers: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddSharedGroupMembers\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  AddUsernamePassword: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddUsernamePassword\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  AddUserVirtualCurrency: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddUserVirtualCurrency\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  AndroidDevicePushNotificationRegistration: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AndroidDevicePushNotificationRegistration\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  AttributeInstall: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AttributeInstall\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  CancelTrade: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/CancelTrade\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ConfirmPurchase: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConfirmPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ConsumeItem: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumeItem\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ConsumeMicrosoftStoreEntitlements: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumeMicrosoftStoreEntitlements\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ConsumePS5Entitlements: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumePS5Entitlements\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ConsumePSNEntitlements: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumePSNEntitlements\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ConsumeXboxEntitlements: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumeXboxEntitlements\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  CreateSharedGroup: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/CreateSharedGroup\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ExecuteCloudScript: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ExecuteCloudScript\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetAccountInfo: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetAccountInfo\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetAdPlacements: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetAdPlacements\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetAllUsersCharacters: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetAllUsersCharacters\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetCatalogItems: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCatalogItems\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetCharacterData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetCharacterInventory: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterInventory\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetCharacterLeaderboard: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterLeaderboard\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetCharacterReadOnlyData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterReadOnlyData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetCharacterStatistics: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterStatistics\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetContentDownloadUrl: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetContentDownloadUrl\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetCurrentGames: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCurrentGames\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetFriendLeaderboard: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetFriendLeaderboard\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetFriendLeaderboardAroundPlayer: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetFriendLeaderboardAroundPlayer\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetFriendsList: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetFriendsList\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetGameServerRegions: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetGameServerRegions\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetLeaderboard: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetLeaderboard\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetLeaderboardAroundCharacter: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetLeaderboardAroundCharacter\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetLeaderboardAroundPlayer: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetLeaderboardAroundPlayer\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetLeaderboardForUserCharacters: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetLeaderboardForUserCharacters\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPaymentToken: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPaymentToken\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPhotonAuthenticationToken: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPhotonAuthenticationToken\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayerCombinedInfo: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerCombinedInfo\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayerProfile: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerProfile\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayerSegments: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerSegments\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayerStatistics: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerStatistics\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayerStatisticVersions: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerStatisticVersions\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayerTags: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerTags\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayerTrades: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerTrades\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromFacebookIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromFacebookIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromFacebookInstantGamesIds: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromFacebookInstantGamesIds\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromGameCenterIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromGameCenterIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromGenericIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromGenericIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromGoogleIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromGoogleIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromGooglePlayGamesPlayerIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromGooglePlayGamesPlayerIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromKongregateIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromKongregateIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromNintendoServiceAccountIds: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromNintendoServiceAccountIds\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromNintendoSwitchDeviceIds: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromNintendoSwitchDeviceIds\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromPSNAccountIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromPSNAccountIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromSteamIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromSteamIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromTwitchIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromTwitchIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPlayFabIDsFromXboxLiveIDs: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromXboxLiveIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPublisherData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPublisherData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetPurchase: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetSharedGroupData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetSharedGroupData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetStoreItems: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetStoreItems\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetTime: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTime\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetTitleData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTitleData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetTitleNews: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTitleNews\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetTitlePublicKey: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTitlePublicKey\", request, null, callback, customData, extraHeaders);\n  },\n  GetTradeStatus: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTradeStatus\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetUserData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetUserInventory: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserInventory\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetUserPublisherData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserPublisherData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetUserPublisherReadOnlyData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserPublisherReadOnlyData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GetUserReadOnlyData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserReadOnlyData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  GrantCharacterToUser: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GrantCharacterToUser\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkAndroidDeviceID: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkAndroidDeviceID\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkApple: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkApple\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkCustomID: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkCustomID\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkFacebookAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkFacebookAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkFacebookInstantGamesId: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkFacebookInstantGamesId\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkGameCenterAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkGameCenterAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkGoogleAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkGoogleAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkGooglePlayGamesServicesAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkGooglePlayGamesServicesAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkIOSDeviceID: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkIOSDeviceID\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkKongregate: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkKongregate\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkNintendoServiceAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkNintendoServiceAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkNintendoSwitchDeviceId: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkNintendoSwitchDeviceId\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkOpenIdConnect: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkOpenIdConnect\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkPSNAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkPSNAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkSteamAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkSteamAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkTwitch: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkTwitch\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LinkXboxAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkXboxAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  LoginWithAndroidDeviceID: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithAndroidDeviceID\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithApple: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithApple\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithCustomID: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithCustomID\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithEmailAddress: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithEmailAddress\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithFacebook: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithFacebook\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithFacebookInstantGamesId: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithFacebookInstantGamesId\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithGameCenter: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithGameCenter\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithGoogleAccount: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithGoogleAccount\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithGooglePlayGamesServices: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithGooglePlayGamesServices\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithIOSDeviceID: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithIOSDeviceID\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithKongregate: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithKongregate\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithNintendoServiceAccount: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithNintendoServiceAccount\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithNintendoSwitchDeviceId: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithNintendoSwitchDeviceId\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithOpenIdConnect: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithOpenIdConnect\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithPlayFab: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithPlayFab\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithPSN: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithPSN\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithSteam: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithSteam\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithTwitch: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithTwitch\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  LoginWithXbox: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null) {\n        if (result.data.SessionTicket != null) {\n          PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n        }\n\n        if (result.data.EntityToken != null) {\n          PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\n        } // Apply the updates for the AuthenticationContext returned to the client\n\n\n        authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithXbox\", request, null, overloadCallback, customData, extraHeaders); // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\n\n\n    return new Promise(function (resolve) {\n      resolve(authenticationContext);\n    });\n  },\n  Matchmake: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/Matchmake\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  OpenTrade: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/OpenTrade\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  PayForPurchase: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/PayForPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  PurchaseItem: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/PurchaseItem\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  RedeemCoupon: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RedeemCoupon\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  RefreshPSNAuthToken: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RefreshPSNAuthToken\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  RegisterForIOSPushNotification: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RegisterForIOSPushNotification\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  RegisterPlayFabUser: function (request, callback, customData, extraHeaders) {\n    request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId;\n    if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId; // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\n    // Deep-copy the authenticationContext here to safely update it\n\n    var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\n\n    var overloadCallback = function (result, error) {\n      if (result != null && result.data.SessionTicket != null) {\n        PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\n      }\n\n      if (callback != null && typeof callback === \"function\") callback(result, error);\n    };\n\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RegisterPlayFabUser\", request, null, overloadCallback, customData, extraHeaders);\n  },\n  RemoveContactEmail: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RemoveContactEmail\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  RemoveFriend: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RemoveFriend\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  RemoveGenericID: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RemoveGenericID\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  RemoveSharedGroupMembers: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RemoveSharedGroupMembers\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ReportAdActivity: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ReportAdActivity\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ReportDeviceInfo: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ReportDeviceInfo\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ReportPlayer: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ReportPlayer\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  RestoreIOSPurchases: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RestoreIOSPurchases\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  RewardAdActivity: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RewardAdActivity\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  SendAccountRecoveryEmail: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/SendAccountRecoveryEmail\", request, null, callback, customData, extraHeaders);\n  },\n  SetFriendTags: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/SetFriendTags\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  SetPlayerSecret: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/SetPlayerSecret\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  StartPurchase: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/StartPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  SubtractUserVirtualCurrency: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/SubtractUserVirtualCurrency\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkAndroidDeviceID: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkAndroidDeviceID\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkApple: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkApple\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkCustomID: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkCustomID\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkFacebookAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkFacebookAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkFacebookInstantGamesId: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkFacebookInstantGamesId\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkGameCenterAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkGameCenterAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkGoogleAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkGoogleAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkGooglePlayGamesServicesAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkGooglePlayGamesServicesAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkIOSDeviceID: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkIOSDeviceID\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkKongregate: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkKongregate\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkNintendoServiceAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkNintendoServiceAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkNintendoSwitchDeviceId: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkNintendoSwitchDeviceId\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkOpenIdConnect: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkOpenIdConnect\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkPSNAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkPSNAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkSteamAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkSteamAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkTwitch: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkTwitch\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlinkXboxAccount: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkXboxAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlockContainerInstance: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlockContainerInstance\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UnlockContainerItem: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlockContainerItem\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UpdateAvatarUrl: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateAvatarUrl\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UpdateCharacterData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateCharacterData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UpdateCharacterStatistics: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateCharacterStatistics\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UpdatePlayerStatistics: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdatePlayerStatistics\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UpdateSharedGroupData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateSharedGroupData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UpdateUserData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateUserData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UpdateUserPublisherData: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateUserPublisherData\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  UpdateUserTitleDisplayName: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateUserTitleDisplayName\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ValidateAmazonIAPReceipt: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ValidateAmazonIAPReceipt\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ValidateGooglePlayPurchase: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ValidateGooglePlayPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ValidateIOSReceipt: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ValidateIOSReceipt\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  ValidateWindowsStoreReceipt: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ValidateWindowsStoreReceipt\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  WriteCharacterEvent: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/WriteCharacterEvent\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  WritePlayerEvent: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/WritePlayerEvent\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  },\n  WriteTitleEvent: function (request, callback, customData, extraHeaders) {\n    return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/WriteTitleEvent\", request, \"X-Authorization\", callback, customData, extraHeaders);\n  }\n};\nvar PlayFabClientSDK = PlayFab.ClientApi;\n\nPlayFab.RegisterWithPhaser = function () {\n  if (typeof Phaser === \"undefined\" || typeof Phaser.Plugin === \"undefined\") return;\n\n  Phaser.Plugin.PlayFab = function (game, parent) {\n    Phaser.Plugin.call(this, game, parent);\n  };\n\n  Phaser.Plugin.PlayFab.prototype = Object.create(Phaser.Plugin.prototype);\n  Phaser.Plugin.PlayFab.prototype.constructor = Phaser.Plugin.PlayFab;\n  Phaser.Plugin.PlayFab.prototype.PlayFab = PlayFab;\n  Phaser.Plugin.PlayFab.prototype.settings = PlayFab.settings;\n  Phaser.Plugin.PlayFab.prototype.ClientApi = PlayFab.ClientApi;\n};\n\nPlayFab.RegisterWithPhaser();","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/steam/bindings/PlayFabClientApi.js"],"names":["PlayFab","settings","titleId","developerSecretKey","GlobalHeaderInjection","productionServerUrl","_internalSettings","entityToken","sdkVersion","requestGetParams","sdk","sessionTicket","verticalName","errorTitleId","errorLoggedIn","errorEntityToken","errorSecretKey","GetServerUrl","substring","InjectHeaders","xhr","headersObj","headerKey","setRequestHeader","gHeaderKey","e","console","log","ExecuteRequest","url","request","authkey","authValue","callback","customData","extraHeaders","resultPromise","Promise","resolve","reject","startTime","Date","requestBody","JSON","stringify","urlArr","getParams","firstParam","key","push","completeUrl","join","XMLHttpRequest","open","onloadend","result","GetPlayFabResponse","code","onerror","send","onreadystatechange","readyState","xhrResult","status","parse","responseText","error","errorCode","errorMessage","CallBackTimeMS","Request","CustomData","authenticationContext","PlayFabId","EntityId","EntityType","SessionTicket","EntityToken","UpdateAuthenticationContext","authenticationContextUpdates","data","Entity","Id","Type","Object","assign","AuthInfoMap","authAttr","authError","GetAuthInfo","authKey","defaultAuthValue","AuthenticationContext","ExecuteRequestWrapper","apiURL","authInfo","buildIdentifier","GenerateErrorReport","fullErrors","paramName","errorDetails","msgIdx","ClientApi","IsClientLoggedIn","length","ForgetAllCredentials","AcceptTrade","AddFriend","AddGenericID","AddOrUpdateContactEmail","AddSharedGroupMembers","AddUsernamePassword","AddUserVirtualCurrency","AndroidDevicePushNotificationRegistration","AttributeInstall","CancelTrade","ConfirmPurchase","ConsumeItem","ConsumeMicrosoftStoreEntitlements","ConsumePS5Entitlements","ConsumePSNEntitlements","ConsumeXboxEntitlements","CreateSharedGroup","ExecuteCloudScript","GetAccountInfo","GetAdPlacements","GetAllUsersCharacters","GetCatalogItems","GetCharacterData","GetCharacterInventory","GetCharacterLeaderboard","GetCharacterReadOnlyData","GetCharacterStatistics","GetContentDownloadUrl","GetCurrentGames","GetFriendLeaderboard","GetFriendLeaderboardAroundPlayer","GetFriendsList","GetGameServerRegions","GetLeaderboard","GetLeaderboardAroundCharacter","GetLeaderboardAroundPlayer","GetLeaderboardForUserCharacters","GetPaymentToken","GetPhotonAuthenticationToken","GetPlayerCombinedInfo","GetPlayerProfile","GetPlayerSegments","GetPlayerStatistics","GetPlayerStatisticVersions","GetPlayerTags","GetPlayerTrades","GetPlayFabIDsFromFacebookIDs","GetPlayFabIDsFromFacebookInstantGamesIds","GetPlayFabIDsFromGameCenterIDs","GetPlayFabIDsFromGenericIDs","GetPlayFabIDsFromGoogleIDs","GetPlayFabIDsFromGooglePlayGamesPlayerIDs","GetPlayFabIDsFromKongregateIDs","GetPlayFabIDsFromNintendoServiceAccountIds","GetPlayFabIDsFromNintendoSwitchDeviceIds","GetPlayFabIDsFromPSNAccountIDs","GetPlayFabIDsFromSteamIDs","GetPlayFabIDsFromTwitchIDs","GetPlayFabIDsFromXboxLiveIDs","GetPublisherData","GetPurchase","GetSharedGroupData","GetStoreItems","GetTime","GetTitleData","GetTitleNews","GetTitlePublicKey","GetTradeStatus","GetUserData","GetUserInventory","GetUserPublisherData","GetUserPublisherReadOnlyData","GetUserReadOnlyData","GrantCharacterToUser","LinkAndroidDeviceID","LinkApple","LinkCustomID","LinkFacebookAccount","LinkFacebookInstantGamesId","LinkGameCenterAccount","LinkGoogleAccount","LinkGooglePlayGamesServicesAccount","LinkIOSDeviceID","LinkKongregate","LinkNintendoServiceAccount","LinkNintendoSwitchDeviceId","LinkOpenIdConnect","LinkPSNAccount","LinkSteamAccount","LinkTwitch","LinkXboxAccount","LoginWithAndroidDeviceID","TitleId","overloadCallback","LoginWithApple","LoginWithCustomID","LoginWithEmailAddress","LoginWithFacebook","LoginWithFacebookInstantGamesId","LoginWithGameCenter","LoginWithGoogleAccount","LoginWithGooglePlayGamesServices","LoginWithIOSDeviceID","LoginWithKongregate","LoginWithNintendoServiceAccount","LoginWithNintendoSwitchDeviceId","LoginWithOpenIdConnect","LoginWithPlayFab","LoginWithPSN","LoginWithSteam","LoginWithTwitch","LoginWithXbox","Matchmake","OpenTrade","PayForPurchase","PurchaseItem","RedeemCoupon","RefreshPSNAuthToken","RegisterForIOSPushNotification","RegisterPlayFabUser","RemoveContactEmail","RemoveFriend","RemoveGenericID","RemoveSharedGroupMembers","ReportAdActivity","ReportDeviceInfo","ReportPlayer","RestoreIOSPurchases","RewardAdActivity","SendAccountRecoveryEmail","SetFriendTags","SetPlayerSecret","StartPurchase","SubtractUserVirtualCurrency","UnlinkAndroidDeviceID","UnlinkApple","UnlinkCustomID","UnlinkFacebookAccount","UnlinkFacebookInstantGamesId","UnlinkGameCenterAccount","UnlinkGoogleAccount","UnlinkGooglePlayGamesServicesAccount","UnlinkIOSDeviceID","UnlinkKongregate","UnlinkNintendoServiceAccount","UnlinkNintendoSwitchDeviceId","UnlinkOpenIdConnect","UnlinkPSNAccount","UnlinkSteamAccount","UnlinkTwitch","UnlinkXboxAccount","UnlockContainerInstance","UnlockContainerItem","UpdateAvatarUrl","UpdateCharacterData","UpdateCharacterStatistics","UpdatePlayerStatistics","UpdateSharedGroupData","UpdateUserData","UpdateUserPublisherData","UpdateUserTitleDisplayName","ValidateAmazonIAPReceipt","ValidateGooglePlayPurchase","ValidateIOSReceipt","ValidateWindowsStoreReceipt","WriteCharacterEvent","WritePlayerEvent","WriteTitleEvent","PlayFabClientSDK","RegisterWithPhaser","Phaser","Plugin","game","parent","call","prototype","create","constructor"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\n/// <reference path=\"../typings/PlayFab/PlayFabClientApi.d.ts\" />\r\n\r\nexport var PlayFab = typeof PlayFab != \"undefined\" ? PlayFab : {};\r\n\r\nif(!PlayFab.settings) {\r\n    PlayFab.settings = {\r\n        titleId: null, // You must set this value for PlayFabSdk to work properly (Found in the Game Manager for your title, at the PlayFab Website)\r\n        developerSecretKey: null, // For security reasons you must never expose this value to the client or players - You must set this value for Server-APIs to work properly (Found in the Game Manager for your title, at the PlayFab Website)\r\n        GlobalHeaderInjection: null,\r\n        productionServerUrl: \".playfabapi.com\"\r\n    }\r\n}\r\n\r\nif(!PlayFab._internalSettings) {\r\n    PlayFab._internalSettings = {\r\n        entityToken: null,\r\n        sdkVersion: \"1.136.230206\",\r\n        requestGetParams: {\r\n            sdk: \"JavaScriptSDK-1.136.230206\"\r\n        },\r\n        sessionTicket: null,\r\n        verticalName: null, // The name of a customer vertical. This is only for customers running a private cluster. Generally you shouldn't touch this\r\n        errorTitleId: \"Must be have PlayFab.settings.titleId set to call this method\",\r\n        errorLoggedIn: \"Must be logged in to call this method\",\r\n        errorEntityToken: \"You must successfully call GetEntityToken before calling this\",\r\n        errorSecretKey: \"Must have PlayFab.settings.developerSecretKey set to call this method\",\r\n\r\n        GetServerUrl: function () {\r\n            if (!(PlayFab.settings.productionServerUrl.substring(0, 4) === \"http\")) {\r\n                if (PlayFab._internalSettings.verticalName) {\r\n                    return \"https://\" + PlayFab._internalSettings.verticalName + PlayFab.settings.productionServerUrl;\r\n                } else {\r\n                    return \"https://\" + PlayFab.settings.titleId + PlayFab.settings.productionServerUrl;\r\n                }\r\n            } else {\r\n                return PlayFab.settings.productionServerUrl;\r\n            }\r\n        },\r\n\r\n        InjectHeaders: function (xhr, headersObj) {\r\n            if (!headersObj)\r\n                return;\r\n\r\n            for (var headerKey in headersObj)\r\n            {\r\n                try {\r\n                    xhr.setRequestHeader(gHeaderKey, headersObj[headerKey]);\r\n                } catch (e) {\r\n                    console.log(\"Failed to append header: \" + headerKey + \" = \" + headersObj[headerKey] + \"Error: \" + e);\r\n                }\r\n            }\r\n        },\r\n\r\n        ExecuteRequest: function (url, request, authkey, authValue, callback, customData, extraHeaders) {\r\n            var resultPromise = new Promise(function (resolve, reject) {\r\n                if (callback != null && typeof (callback) !== \"function\")\r\n                    throw \"Callback must be null or a function\";\r\n\r\n                if (request == null)\r\n                    request = {};\r\n\r\n                var startTime = new Date();\r\n                var requestBody = JSON.stringify(request);\r\n\r\n                var urlArr = [url];\r\n                var getParams = PlayFab._internalSettings.requestGetParams;\r\n                if (getParams != null) {\r\n                    var firstParam = true;\r\n                    for (var key in getParams) {\r\n                        if (firstParam) {\r\n                            urlArr.push(\"?\");\r\n                            firstParam = false;\r\n                        } else {\r\n                            urlArr.push(\"&\");\r\n                        }\r\n                        urlArr.push(key);\r\n                        urlArr.push(\"=\");\r\n                        urlArr.push(getParams[key]);\r\n                    }\r\n                }\r\n\r\n                var completeUrl = urlArr.join(\"\");\r\n\r\n                var xhr = new XMLHttpRequest();\r\n                // window.console.log(\"URL: \" + completeUrl);\r\n                xhr.open(\"POST\", completeUrl, true);\r\n\r\n                xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                xhr.setRequestHeader(\"X-PlayFabSDK\", \"JavaScriptSDK-\" + PlayFab._internalSettings.sdkVersion);\r\n                if (authkey != null)\r\n                    xhr.setRequestHeader(authkey, authValue);\r\n                PlayFab._internalSettings.InjectHeaders(xhr, PlayFab.settings.GlobalHeaderInjection);\r\n                PlayFab._internalSettings.InjectHeaders(xhr, extraHeaders);\r\n\r\n                xhr.onloadend = function () {\r\n                    if (callback == null)\r\n                        return;\r\n\r\n                    var result = PlayFab._internalSettings.GetPlayFabResponse(request, xhr, startTime, customData);\r\n                    if (result.code === 200) {\r\n                        callback(result, null);\r\n                    } else {\r\n                        callback(null, result);\r\n                    }\r\n                }\r\n\r\n                xhr.onerror = function () {\r\n                    if (callback == null)\r\n                        return;\r\n\r\n                    var result = PlayFab._internalSettings.GetPlayFabResponse(request, xhr, startTime, customData);\r\n                    callback(null, result);\r\n                }\r\n\r\n                xhr.send(requestBody);\r\n                xhr.onreadystatechange = function () {\r\n                    if (this.readyState === 4) {\r\n                        var xhrResult = PlayFab._internalSettings.GetPlayFabResponse(request, this, startTime, customData);\r\n                        if (this.status === 200) {\r\n                            resolve(xhrResult);\r\n                        } else {\r\n                            reject(xhrResult);\r\n                        }\r\n                    }\r\n                };\r\n            });\r\n            // Return a Promise so that calls to various API methods can be handled asynchronously\r\n            return resultPromise;\r\n        },\r\n\r\n        GetPlayFabResponse: function(request, xhr, startTime, customData) {\r\n            var result = null;\r\n            try {\r\n                // window.console.log(\"parsing json result: \" + xhr.responseText);\r\n                result = JSON.parse(xhr.responseText);\r\n            } catch (e) {\r\n                result = {\r\n                    code: 503, // Service Unavailable\r\n                    status: \"Service Unavailable\",\r\n                    error: \"Connection error\",\r\n                    errorCode: 2, // PlayFabErrorCode.ConnectionError\r\n                    errorMessage: xhr.responseText\r\n                };\r\n            }\r\n\r\n            result.CallBackTimeMS = new Date() - startTime;\r\n            result.Request = request;\r\n            result.CustomData = customData;\r\n            return result;\r\n        },\r\n\r\n        authenticationContext: {\r\n            PlayFabId: null,\r\n            EntityId: null,\r\n            EntityType: null,\r\n            SessionTicket: null,\r\n            EntityToken: null\r\n        },\r\n\r\n        UpdateAuthenticationContext: function (authenticationContext, result) {\r\n            var authenticationContextUpdates = {};\r\n            if(result.data.PlayFabId !== null) {\r\n                PlayFab._internalSettings.authenticationContext.PlayFabId = result.data.PlayFabId;\r\n                authenticationContextUpdates.PlayFabId = result.data.PlayFabId;\r\n            }\r\n            if(result.data.SessionTicket !== null) {\r\n                PlayFab._internalSettings.authenticationContext.SessionTicket = result.data.SessionTicket;\r\n                authenticationContextUpdates.SessionTicket = result.data.SessionTicket;\r\n            }\r\n            if (result.data.EntityToken !== null) {\r\n                PlayFab._internalSettings.authenticationContext.EntityId = result.data.EntityToken.Entity.Id;\r\n                authenticationContextUpdates.EntityId = result.data.EntityToken.Entity.Id;\r\n                PlayFab._internalSettings.authenticationContext.EntityType = result.data.EntityToken.Entity.Type;\r\n                authenticationContextUpdates.EntityType = result.data.EntityToken.Entity.Type;\r\n                PlayFab._internalSettings.authenticationContext.EntityToken = result.data.EntityToken.EntityToken;\r\n                authenticationContextUpdates.EntityToken = result.data.EntityToken.EntityToken;\r\n            }\r\n            // Update the authenticationContext with values from the result\r\n            authenticationContext = Object.assign(authenticationContext, authenticationContextUpdates);\r\n            return authenticationContext;\r\n        },\r\n\r\n        AuthInfoMap: {\r\n            \"X-EntityToken\": {\r\n                authAttr: \"entityToken\",\r\n                authError: \"errorEntityToken\"\r\n            },\r\n            \"X-Authorization\": {\r\n                authAttr: \"sessionTicket\",\r\n                authError: \"errorLoggedIn\"\r\n            },\r\n            \"X-SecretKey\": {\r\n                authAttr: \"developerSecretKey\",\r\n                authError: \"errorSecretKey\"\r\n            }\r\n        },\r\n\r\n        GetAuthInfo: function (request, authKey) {\r\n            // Use the most-recently saved authKey, unless one was provided in the request via the AuthenticationContext\r\n            var authError = PlayFab._internalSettings.AuthInfoMap[authKey].authError;\r\n            var authAttr = PlayFab._internalSettings.AuthInfoMap[authKey].authAttr;\r\n            var defaultAuthValue = null;\r\n            if (authAttr === \"entityToken\")\r\n                defaultAuthValue = PlayFab._internalSettings.entityToken;\r\n            else if (authAttr === \"sessionTicket\")\r\n                defaultAuthValue = PlayFab._internalSettings.sessionTicket;\r\n            else if (authAttr === \"developerSecretKey\")\r\n                defaultAuthValue = PlayFab.settings.developerSecretKey;\r\n            var authValue = request.AuthenticationContext ? request.AuthenticationContext[authAttr] : defaultAuthValue;\r\n            return {\"authKey\": authKey, \"authValue\": authValue, \"authError\": authError};\r\n        },\r\n\r\n        ExecuteRequestWrapper: function (apiURL, request, authKey, callback, customData, extraHeaders) {\r\n            var authValue = null;\r\n            if (authKey !== null){\r\n                var authInfo = PlayFab._internalSettings.GetAuthInfo(request, authKey=authKey);\r\n                var authKey = authInfo.authKey, authValue = authInfo.authValue, authError = authInfo.authError;\r\n\r\n                if (!authValue) throw authError;\r\n            }\r\n            return PlayFab._internalSettings.ExecuteRequest(PlayFab._internalSettings.GetServerUrl() + apiURL, request, authKey, authValue, callback, customData, extraHeaders);\r\n        }\r\n    }\r\n}\r\n\r\nPlayFab.buildIdentifier = \"adobuild_javascriptsdk_114\";\r\nPlayFab.sdkVersion = \"1.136.230206\";\r\nPlayFab.GenerateErrorReport = function (error) {\r\n    if (error == null)\r\n        return \"\";\r\n    var fullErrors = error.errorMessage;\r\n    for (var paramName in error.errorDetails)\r\n        for (var msgIdx in error.errorDetails[paramName])\r\n            fullErrors += \"\\n\" + paramName + \": \" + error.errorDetails[paramName][msgIdx];\r\n    return fullErrors;\r\n};\r\n\r\nPlayFab.ClientApi = {\r\n\r\n    IsClientLoggedIn: function () {\r\n        return PlayFab._internalSettings.sessionTicket != null && PlayFab._internalSettings.sessionTicket.length > 0;\r\n    },\r\n    ForgetAllCredentials: function () {\r\n        PlayFab._internalSettings.sessionTicket = null;\r\n        PlayFab._internalSettings.entityToken = null;\r\n    },\r\n\r\n    AcceptTrade: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AcceptTrade\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    AddFriend: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddFriend\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    AddGenericID: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddGenericID\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    AddOrUpdateContactEmail: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddOrUpdateContactEmail\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    AddSharedGroupMembers: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddSharedGroupMembers\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    AddUsernamePassword: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddUsernamePassword\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    AddUserVirtualCurrency: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AddUserVirtualCurrency\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    AndroidDevicePushNotificationRegistration: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AndroidDevicePushNotificationRegistration\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    AttributeInstall: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/AttributeInstall\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    CancelTrade: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/CancelTrade\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ConfirmPurchase: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConfirmPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ConsumeItem: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumeItem\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ConsumeMicrosoftStoreEntitlements: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumeMicrosoftStoreEntitlements\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ConsumePS5Entitlements: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumePS5Entitlements\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ConsumePSNEntitlements: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumePSNEntitlements\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ConsumeXboxEntitlements: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ConsumeXboxEntitlements\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    CreateSharedGroup: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/CreateSharedGroup\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ExecuteCloudScript: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ExecuteCloudScript\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetAccountInfo: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetAccountInfo\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetAdPlacements: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetAdPlacements\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetAllUsersCharacters: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetAllUsersCharacters\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetCatalogItems: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCatalogItems\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetCharacterData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetCharacterInventory: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterInventory\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetCharacterLeaderboard: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterLeaderboard\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetCharacterReadOnlyData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterReadOnlyData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetCharacterStatistics: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCharacterStatistics\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetContentDownloadUrl: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetContentDownloadUrl\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetCurrentGames: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetCurrentGames\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetFriendLeaderboard: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetFriendLeaderboard\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetFriendLeaderboardAroundPlayer: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetFriendLeaderboardAroundPlayer\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetFriendsList: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetFriendsList\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetGameServerRegions: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetGameServerRegions\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetLeaderboard: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetLeaderboard\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetLeaderboardAroundCharacter: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetLeaderboardAroundCharacter\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetLeaderboardAroundPlayer: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetLeaderboardAroundPlayer\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetLeaderboardForUserCharacters: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetLeaderboardForUserCharacters\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPaymentToken: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPaymentToken\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPhotonAuthenticationToken: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPhotonAuthenticationToken\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayerCombinedInfo: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerCombinedInfo\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayerProfile: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerProfile\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayerSegments: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerSegments\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayerStatistics: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerStatistics\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayerStatisticVersions: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerStatisticVersions\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayerTags: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerTags\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayerTrades: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayerTrades\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromFacebookIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromFacebookIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromFacebookInstantGamesIds: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromFacebookInstantGamesIds\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromGameCenterIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromGameCenterIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromGenericIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromGenericIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromGoogleIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromGoogleIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromGooglePlayGamesPlayerIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromGooglePlayGamesPlayerIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromKongregateIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromKongregateIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromNintendoServiceAccountIds: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromNintendoServiceAccountIds\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromNintendoSwitchDeviceIds: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromNintendoSwitchDeviceIds\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromPSNAccountIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromPSNAccountIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromSteamIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromSteamIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromTwitchIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromTwitchIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPlayFabIDsFromXboxLiveIDs: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPlayFabIDsFromXboxLiveIDs\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPublisherData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPublisherData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetPurchase: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetSharedGroupData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetSharedGroupData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetStoreItems: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetStoreItems\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetTime: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTime\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetTitleData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTitleData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetTitleNews: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTitleNews\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetTitlePublicKey: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTitlePublicKey\", request, null, callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetTradeStatus: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetTradeStatus\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetUserData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetUserInventory: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserInventory\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetUserPublisherData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserPublisherData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetUserPublisherReadOnlyData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserPublisherReadOnlyData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GetUserReadOnlyData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GetUserReadOnlyData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    GrantCharacterToUser: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/GrantCharacterToUser\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkAndroidDeviceID: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkAndroidDeviceID\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkApple: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkApple\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkCustomID: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkCustomID\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkFacebookAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkFacebookAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkFacebookInstantGamesId: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkFacebookInstantGamesId\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkGameCenterAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkGameCenterAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkGoogleAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkGoogleAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkGooglePlayGamesServicesAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkGooglePlayGamesServicesAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkIOSDeviceID: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkIOSDeviceID\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkKongregate: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkKongregate\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkNintendoServiceAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkNintendoServiceAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkNintendoSwitchDeviceId: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkNintendoSwitchDeviceId\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkOpenIdConnect: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkOpenIdConnect\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkPSNAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkPSNAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkSteamAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkSteamAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkTwitch: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkTwitch\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LinkXboxAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LinkXboxAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    LoginWithAndroidDeviceID: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithAndroidDeviceID\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithApple: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithApple\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithCustomID: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithCustomID\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithEmailAddress: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithEmailAddress\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithFacebook: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithFacebook\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithFacebookInstantGamesId: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithFacebookInstantGamesId\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithGameCenter: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithGameCenter\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithGoogleAccount: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithGoogleAccount\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithGooglePlayGamesServices: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithGooglePlayGamesServices\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithIOSDeviceID: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithIOSDeviceID\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithKongregate: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithKongregate\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithNintendoServiceAccount: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithNintendoServiceAccount\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithNintendoSwitchDeviceId: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithNintendoSwitchDeviceId\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithOpenIdConnect: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithOpenIdConnect\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithPlayFab: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithPlayFab\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithPSN: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithPSN\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithSteam: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithSteam\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithTwitch: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithTwitch\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    LoginWithXbox: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null) {\r\n                if(result.data.SessionTicket != null) {\r\n                    PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n                }\r\n                if (result.data.EntityToken != null) {\r\n                    PlayFab._internalSettings.entityToken = result.data.EntityToken.EntityToken;\r\n                }\r\n                // Apply the updates for the AuthenticationContext returned to the client\r\n                authenticationContext = PlayFab._internalSettings.UpdateAuthenticationContext(authenticationContext, result);\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/LoginWithXbox\", request, null, overloadCallback, customData, extraHeaders);\r\n        // Return a Promise so that multiple asynchronous calls to this method can be handled simultaneously with Promise.all()\r\n        return new Promise(function(resolve){resolve(authenticationContext);});\r\n    },\r\n\r\n    Matchmake: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/Matchmake\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    OpenTrade: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/OpenTrade\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    PayForPurchase: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/PayForPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    PurchaseItem: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/PurchaseItem\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    RedeemCoupon: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RedeemCoupon\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    RefreshPSNAuthToken: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RefreshPSNAuthToken\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    RegisterForIOSPushNotification: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RegisterForIOSPushNotification\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    RegisterPlayFabUser: function (request, callback, customData, extraHeaders) {\r\n        request.TitleId = PlayFab.settings.titleId ? PlayFab.settings.titleId : request.TitleId; if (!request.TitleId) throw PlayFab._internalSettings.errorTitleId;\r\n        // PlayFab._internalSettings.authenticationContext can be modified by other asynchronous login attempts\r\n        // Deep-copy the authenticationContext here to safely update it\r\n        var authenticationContext = JSON.parse(JSON.stringify(PlayFab._internalSettings.authenticationContext));\r\n        var overloadCallback = function (result, error) {\r\n            if (result != null && result.data.SessionTicket != null) {\r\n                PlayFab._internalSettings.sessionTicket = result.data.SessionTicket;\r\n            }\r\n            if (callback != null && typeof (callback) === \"function\")\r\n                callback(result, error);\r\n        };\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RegisterPlayFabUser\", request, null, overloadCallback, customData, extraHeaders);\r\n    },\r\n\r\n    RemoveContactEmail: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RemoveContactEmail\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    RemoveFriend: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RemoveFriend\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    RemoveGenericID: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RemoveGenericID\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    RemoveSharedGroupMembers: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RemoveSharedGroupMembers\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ReportAdActivity: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ReportAdActivity\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ReportDeviceInfo: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ReportDeviceInfo\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ReportPlayer: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ReportPlayer\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    RestoreIOSPurchases: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RestoreIOSPurchases\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    RewardAdActivity: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/RewardAdActivity\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    SendAccountRecoveryEmail: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/SendAccountRecoveryEmail\", request, null, callback, customData, extraHeaders);\r\n    },\r\n\r\n    SetFriendTags: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/SetFriendTags\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    SetPlayerSecret: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/SetPlayerSecret\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    StartPurchase: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/StartPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    SubtractUserVirtualCurrency: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/SubtractUserVirtualCurrency\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkAndroidDeviceID: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkAndroidDeviceID\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkApple: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkApple\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkCustomID: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkCustomID\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkFacebookAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkFacebookAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkFacebookInstantGamesId: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkFacebookInstantGamesId\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkGameCenterAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkGameCenterAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkGoogleAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkGoogleAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkGooglePlayGamesServicesAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkGooglePlayGamesServicesAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkIOSDeviceID: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkIOSDeviceID\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkKongregate: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkKongregate\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkNintendoServiceAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkNintendoServiceAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkNintendoSwitchDeviceId: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkNintendoSwitchDeviceId\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkOpenIdConnect: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkOpenIdConnect\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkPSNAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkPSNAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkSteamAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkSteamAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkTwitch: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkTwitch\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlinkXboxAccount: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlinkXboxAccount\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlockContainerInstance: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlockContainerInstance\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UnlockContainerItem: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UnlockContainerItem\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UpdateAvatarUrl: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateAvatarUrl\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UpdateCharacterData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateCharacterData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UpdateCharacterStatistics: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateCharacterStatistics\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UpdatePlayerStatistics: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdatePlayerStatistics\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UpdateSharedGroupData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateSharedGroupData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UpdateUserData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateUserData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UpdateUserPublisherData: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateUserPublisherData\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    UpdateUserTitleDisplayName: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/UpdateUserTitleDisplayName\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ValidateAmazonIAPReceipt: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ValidateAmazonIAPReceipt\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ValidateGooglePlayPurchase: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ValidateGooglePlayPurchase\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ValidateIOSReceipt: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ValidateIOSReceipt\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    ValidateWindowsStoreReceipt: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/ValidateWindowsStoreReceipt\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    WriteCharacterEvent: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/WriteCharacterEvent\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    WritePlayerEvent: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/WritePlayerEvent\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n    WriteTitleEvent: function (request, callback, customData, extraHeaders) {\r\n        return PlayFab._internalSettings.ExecuteRequestWrapper(\"/Client/WriteTitleEvent\", request, \"X-Authorization\", callback, customData, extraHeaders);\r\n    },\r\n\r\n};\r\n\r\nvar PlayFabClientSDK = PlayFab.ClientApi;\r\n\r\nPlayFab.RegisterWithPhaser = function() {\r\n    if ( typeof Phaser === \"undefined\" || typeof Phaser.Plugin === \"undefined\" )\r\n        return;\r\n\r\n    Phaser.Plugin.PlayFab = function (game, parent) {\r\n        Phaser.Plugin.call(this, game, parent);\r\n    };\r\n    Phaser.Plugin.PlayFab.prototype = Object.create(Phaser.Plugin.prototype);\r\n    Phaser.Plugin.PlayFab.prototype.constructor = Phaser.Plugin.PlayFab;\r\n    Phaser.Plugin.PlayFab.prototype.PlayFab = PlayFab;\r\n    Phaser.Plugin.PlayFab.prototype.settings = PlayFab.settings;\r\n    Phaser.Plugin.PlayFab.prototype.ClientApi = PlayFab.ClientApi;\r\n};\r\nPlayFab.RegisterWithPhaser();\r\n\r\n"]},"metadata":{},"sourceType":"module"}