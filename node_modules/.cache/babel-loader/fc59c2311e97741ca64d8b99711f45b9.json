{"ast":null,"code":"import { DC } from \"../../constants\";\nimport { PlayerProgress } from \"../../player-progress\";\nimport { MultiplierTabIcons } from \"./icons\"; // See index.js for documentation\n\nexport const TP = {\n  total: {\n    name: \"Total Tachyon Particles\",\n    displayOverride: () => {\n      const baseTPStr = format(new Decimal(Currency.tachyonParticles.value), 2, 2);\n      return PelleRifts.paradox.milestones[1].canBeApplied ? `${baseTPStr}${formatPow(PelleRifts.paradox.milestones[1].effectValue, 1, 1)}` : baseTPStr;\n    },\n    // This is treated as a multiplier and not a prestige currency, with an overridden display;\n    // therefore we need to return 1 \"by default\"\n    multValue: () => {\n      const baseTP = new Decimal(Currency.tachyonParticles.value).pow(PelleRifts.paradox.milestones[1].effectOrDefault(1));\n      return TimeStudy.dilation.isBought ? baseTP : 1;\n    },\n    isActive: () => PlayerProgress.realityUnlocked() || PlayerProgress.dilationUnlocked(),\n    icon: MultiplierTabIcons.TACHYON_PARTICLES\n  },\n  base: {\n    name: \"Base Tachyon Particle Count\",\n    isBase: true,\n    multValue: () => new Decimal(Currency.tachyonParticles.value).div(tachyonGainMultiplier()),\n    isActive: () => new Decimal(Currency.tachyonParticles.value).gt(0),\n    icon: MultiplierTabIcons.TACHYON_PARTICLES\n  },\n  achievementMult: {\n    name: \"Achievement Multiplier\",\n    multValue: () => RealityUpgrade(8).effectOrDefault(1),\n    isActive: () => RealityUpgrade(8).canBeApplied && !Pelle.isDoomed,\n    icon: MultiplierTabIcons.ACHIEVEMENT\n  },\n  achievement: {\n    name: \"Achievement 132\",\n    multValue: () => Achievement(132).effectOrDefault(1),\n    isActive: () => Achievement(132).canBeApplied,\n    icon: MultiplierTabIcons.ACHIEVEMENT\n  },\n  dilation: {\n    name: () => `Dilation Upgrade - Repeatable ${formatX(3)} TP`,\n    multValue: () => DilationUpgrade.tachyonGain.effectOrDefault(1),\n    isActive: () => DilationUpgrade.tachyonGain.canBeApplied,\n    icon: MultiplierTabIcons.UPGRADE(\"dilation\")\n  },\n  amplifierTP: {\n    name: \"Reality Upgrade - Superluminal Amplifier\",\n    multValue: () => DC.D1.timesEffectsOf(RealityUpgrade(4)),\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\n    icon: MultiplierTabIcons.UPGRADE(\"reality\")\n  },\n  realityUpgrade: {\n    name: \"Reality Upgrade - The Paradoxical Forever\",\n    multValue: () => DC.D1.timesEffectsOf(RealityUpgrade(15)),\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\n    icon: MultiplierTabIcons.UPGRADE(\"reality\")\n  },\n  dilationGlyphSacrifice: {\n    name: \"Dilation Glyph Sacrifice\",\n    multValue: () => GlyphSacrifice.dilation.effectValue,\n    isActive: () => GlyphSacrifice.dilation.effectValue > 1,\n    icon: MultiplierTabIcons.SACRIFICE(\"dilation\")\n  },\n  nerfEnslaved: {\n    name: \"The Nameless Ones' Reality\",\n    powValue: () => Enslaved.tachyonNerf,\n    isActive: () => Enslaved.isRunning,\n    icon: MultiplierTabIcons.GENERIC_ENSLAVED\n  }\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/secret-formula/multiplier-tab/tachyon-particles.js"],"names":["DC","PlayerProgress","MultiplierTabIcons","TP","total","name","displayOverride","baseTPStr","format","Decimal","Currency","tachyonParticles","value","PelleRifts","paradox","milestones","canBeApplied","formatPow","effectValue","multValue","baseTP","pow","effectOrDefault","TimeStudy","dilation","isBought","isActive","realityUnlocked","dilationUnlocked","icon","TACHYON_PARTICLES","base","isBase","div","tachyonGainMultiplier","gt","achievementMult","RealityUpgrade","Pelle","isDoomed","ACHIEVEMENT","achievement","Achievement","formatX","DilationUpgrade","tachyonGain","UPGRADE","amplifierTP","D1","timesEffectsOf","realityUpgrade","dilationGlyphSacrifice","GlyphSacrifice","SACRIFICE","nerfEnslaved","powValue","Enslaved","tachyonNerf","isRunning","GENERIC_ENSLAVED"],"mappings":"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","sourcesContent":["import { DC } from \"../../constants\";\r\nimport { PlayerProgress } from \"../../player-progress\";\r\n\r\nimport { MultiplierTabIcons } from \"./icons\";\r\n\r\n// See index.js for documentation\r\nexport const TP = {\r\n  total: {\r\n    name: \"Total Tachyon Particles\",\r\n    displayOverride: () => {\r\n      const baseTPStr = format(new Decimal(Currency.tachyonParticles.value), 2, 2);\r\n      return PelleRifts.paradox.milestones[1].canBeApplied\r\n        ? `${baseTPStr}${formatPow(PelleRifts.paradox.milestones[1].effectValue, 1, 1)}`\r\n        : baseTPStr;\r\n    },\r\n    // This is treated as a multiplier and not a prestige currency, with an overridden display;\r\n    // therefore we need to return 1 \"by default\"\r\n    multValue: () => {\r\n      const baseTP = new Decimal(Currency.tachyonParticles.value)\r\n        .pow(PelleRifts.paradox.milestones[1].effectOrDefault(1));\r\n      return TimeStudy.dilation.isBought ? baseTP : 1;\r\n    },\r\n    isActive: () => PlayerProgress.realityUnlocked() || PlayerProgress.dilationUnlocked(),\r\n    icon: MultiplierTabIcons.TACHYON_PARTICLES,\r\n  },\r\n  base: {\r\n    name: \"Base Tachyon Particle Count\",\r\n    isBase: true,\r\n    multValue: () => new Decimal(Currency.tachyonParticles.value).div(tachyonGainMultiplier()),\r\n    isActive: () => new Decimal(Currency.tachyonParticles.value).gt(0),\r\n    icon: MultiplierTabIcons.TACHYON_PARTICLES,\r\n  },\r\n  achievementMult: {\r\n    name: \"Achievement Multiplier\",\r\n    multValue: () => RealityUpgrade(8).effectOrDefault(1),\r\n    isActive: () => RealityUpgrade(8).canBeApplied && !Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.ACHIEVEMENT,\r\n  },\r\n  achievement: {\r\n    name: \"Achievement 132\",\r\n    multValue: () => Achievement(132).effectOrDefault(1),\r\n    isActive: () => Achievement(132).canBeApplied,\r\n    icon: MultiplierTabIcons.ACHIEVEMENT,\r\n  },\r\n  dilation: {\r\n    name: () => `Dilation Upgrade - Repeatable ${formatX(3)} TP`,\r\n    multValue: () => DilationUpgrade.tachyonGain.effectOrDefault(1),\r\n    isActive: () => DilationUpgrade.tachyonGain.canBeApplied,\r\n    icon: MultiplierTabIcons.UPGRADE(\"dilation\"),\r\n  },\r\n  amplifierTP: {\r\n    name: \"Reality Upgrade - Superluminal Amplifier\",\r\n    multValue: () => DC.D1.timesEffectsOf(RealityUpgrade(4)),\r\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.UPGRADE(\"reality\"),\r\n  },\r\n  realityUpgrade: {\r\n    name: \"Reality Upgrade - The Paradoxical Forever\",\r\n    multValue: () => DC.D1.timesEffectsOf(RealityUpgrade(15)),\r\n    isActive: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\r\n    icon: MultiplierTabIcons.UPGRADE(\"reality\"),\r\n  },\r\n  dilationGlyphSacrifice: {\r\n    name: \"Dilation Glyph Sacrifice\",\r\n    multValue: () => GlyphSacrifice.dilation.effectValue,\r\n    isActive: () => GlyphSacrifice.dilation.effectValue > 1,\r\n    icon: MultiplierTabIcons.SACRIFICE(\"dilation\"),\r\n  },\r\n\r\n  nerfEnslaved: {\r\n    name: \"The Nameless Ones' Reality\",\r\n    powValue: () => Enslaved.tachyonNerf,\r\n    isActive: () => Enslaved.isRunning,\r\n    icon: MultiplierTabIcons.GENERIC_ENSLAVED,\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}