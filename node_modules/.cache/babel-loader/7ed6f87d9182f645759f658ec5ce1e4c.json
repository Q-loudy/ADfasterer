{"ast":null,"code":"import TachyonParticle from \"./TachyonParticle\";\nexport default {\n  name: \"TachyonParticles\",\n  components: {\n    TachyonParticle\n  },\n\n  data() {\n    return {\n      count: 0,\n      initialized: false,\n      bounds: {\n        x: 0,\n        y: 0\n      },\n      isBlob: false\n    };\n  },\n\n  mounted() {\n    this.$nextTick(this.updateSize);\n    window.addEventListener(\"resize\", this.updateSize);\n    this.initialized = true;\n  },\n\n  destroyed() {\n    window.removeEventListener(\"resize\", this.updateSize);\n  },\n\n  methods: {\n    update() {\n      this.count = Currency.tachyonParticles.gte(1) ? Math.clampMin(Math.floor(20 * Math.log10(Currency.tachyonParticles.exponent)), 1) : 0;\n      this.isBlob = Theme.currentName() === \"S11\";\n    },\n\n    updateSize() {\n      this.bounds.x = this.$el.clientWidth;\n      this.bounds.y = this.$el.clientHeight;\n    }\n\n  }\n};","map":{"version":3,"sources":["TachyonParticles.vue"],"names":[],"mappings":"AACA,OAAA,eAAA,MAAA,mBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,MAAA,EAAA;AACA,QAAA,CAAA,EAAA,CADA;AAEA,QAAA,CAAA,EAAA;AAFA,OAHA;AAOA,MAAA,MAAA,EAAA;AAPA,KAAA;AASA,GAfA;;AAgBA,EAAA,OAAA,GAAA;AACA,SAAA,SAAA,CAAA,KAAA,UAAA;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,UAAA;AACA,SAAA,WAAA,GAAA,IAAA;AACA,GApBA;;AAqBA,EAAA,SAAA,GAAA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,UAAA;AACA,GAvBA;;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,KAAA,GAAA,QAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,IACA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CADA,GAEA,CAFA;AAGA,WAAA,MAAA,GAAA,KAAA,CAAA,WAAA,OAAA,KAAA;AACA,KANA;;AAOA,IAAA,UAAA,GAAA;AACA,WAAA,MAAA,CAAA,CAAA,GAAA,KAAA,GAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,CAAA,GAAA,KAAA,GAAA,CAAA,YAAA;AACA;;AAVA;AAxBA,CAAA","sourcesContent":["<script>\r\nimport TachyonParticle from \"./TachyonParticle\";\r\n\r\nexport default {\r\n  name: \"TachyonParticles\",\r\n  components: {\r\n    TachyonParticle\r\n  },\r\n  data() {\r\n    return {\r\n      count: 0,\r\n      initialized: false,\r\n      bounds: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      isBlob: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$nextTick(this.updateSize);\r\n    window.addEventListener(\"resize\", this.updateSize);\r\n    this.initialized = true;\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.updateSize);\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.count = Currency.tachyonParticles.gte(1)\r\n        ? Math.clampMin(Math.floor(20 * Math.log10(Currency.tachyonParticles.exponent)), 1)\r\n        : 0;\r\n      this.isBlob = Theme.currentName() === \"S11\";\r\n    },\r\n    updateSize() {\r\n      this.bounds.x = this.$el.clientWidth;\r\n      this.bounds.y = this.$el.clientHeight;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <svg\r\n    v-if=\"initialized\"\r\n    class=\"c-tachyon-particle-container\"\r\n  >\r\n    <TachyonParticle\r\n      v-for=\"i in count\"\r\n      :key=\"i\"\r\n      :bounds=\"bounds\"\r\n      :is-blob=\"isBlob\"\r\n    />\r\n  </svg>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/time-dilation"},"metadata":{},"sourceType":"module"}