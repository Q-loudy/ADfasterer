{"ast":null,"code":"import ResetModal from \"@/components/modals/prestige/ResetModal\";\nexport default {\n  name: \"EternityModal\",\n  components: {\n    ResetModal\n  },\n\n  data() {\n    return {\n      exitingEC: false,\n      startingIP: new Decimal(),\n      gainedEternityPoints: new Decimal(),\n      gainedEternities: new Decimal()\n    };\n  },\n\n  computed: {\n    message() {\n      return PlayerProgress.eternityUnlocked() ? `Eternity will reset everything except Achievements, Challenge records, and anything under the General header\n          on the Statistics tab.` : `Eternity will reset everything except Achievements, Challenge records, and anything under the General header\n          on the Statistics tab. You will also gain an Eternity Point and unlock various upgrades.`;\n    },\n\n    gainedEPOnEternity() {\n      return `You will gain ${quantify(\"Eternity\", this.gainedEternities, 2)} \n      and ${quantify(\"Eternity Point\", this.gainedEternityPoints, 2)} on Eternity.`;\n    },\n\n    startWithIP() {\n      return this.startingIP.gt(0) ? `You will start your next Eternity with ${quantify(\"Infinity Point\", this.startingIP, 2)}.` : ``;\n    },\n\n    eternityChallenge() {\n      const ec = EternityChallenge.current;\n\n      if (ec.isFullyCompleted) {\n        return `Eternity Challenge ${ec.id} is already fully completed.`;\n      }\n\n      if (!Perk.studyECBulk.isBought) {\n        return `You will gain one completion of Eternity Challenge ${ec.id}.`;\n      }\n\n      const gainedCompletions = ec.gainedCompletionStatus.gainedCompletions;\n      return `You will gain ${quantifyInt(\"completion\", gainedCompletions)} for Eternity Challenge ${ec.id}.`;\n    }\n\n  },\n  methods: {\n    update() {\n      this.exitingEC = EternityChallenge.isRunning;\n      this.startingIP = Currency.infinityPoints.startingValue;\n      this.gainedEternityPoints = gainedEternityPoints();\n      this.gainedEternities = gainedEternities();\n    },\n\n    handleYesClick() {\n      animateAndEternity();\n      EventHub.ui.offAll(this);\n    }\n\n  }\n};","map":{"version":3,"sources":["EternityModal.vue"],"names":[],"mappings":"AACA,OAAA,UAAA,MAAA,yCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,IAAA,OAAA,EAFA;AAGA,MAAA,oBAAA,EAAA,IAAA,OAAA,EAHA;AAIA,MAAA,gBAAA,EAAA,IAAA,OAAA;AAJA,KAAA;AAMA,GAZA;;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,OAAA,GAAA;AACA,aAAA,cAAA,CAAA,gBAAA,KACA;AACA,iCAFA,GAGA;AACA,mGAJA;AAKA,KAPA;;AAQA,IAAA,kBAAA,GAAA;AACA,aAAA,iBAAA,QAAA,CAAA,UAAA,EAAA,KAAA,gBAAA,EAAA,CAAA,CAAA;AACA,YAAA,QAAA,CAAA,gBAAA,EAAA,KAAA,oBAAA,EAAA,CAAA,CAAA,eADA;AAEA,KAXA;;AAYA,IAAA,WAAA,GAAA;AACA,aAAA,KAAA,UAAA,CAAA,EAAA,CAAA,CAAA,IACA,0CAAA,QAAA,CAAA,gBAAA,EAAA,KAAA,UAAA,EAAA,CAAA,CAAA,GADA,GAEA,EAFA;AAGA,KAhBA;;AAiBA,IAAA,iBAAA,GAAA;AACA,YAAA,EAAA,GAAA,iBAAA,CAAA,OAAA;;AACA,UAAA,EAAA,CAAA,gBAAA,EAAA;AACA,eAAA,sBAAA,EAAA,CAAA,EAAA,8BAAA;AACA;;AACA,UAAA,CAAA,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA;AACA,eAAA,sDAAA,EAAA,CAAA,EAAA,GAAA;AACA;;AACA,YAAA,iBAAA,GAAA,EAAA,CAAA,sBAAA,CAAA,iBAAA;AACA,aAAA,iBAAA,WAAA,CAAA,YAAA,EAAA,iBAAA,CAAA,2BAAA,EAAA,CAAA,EAAA,GAAA;AACA;;AA3BA,GAbA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,SAAA,GAAA,iBAAA,CAAA,SAAA;AACA,WAAA,UAAA,GAAA,QAAA,CAAA,cAAA,CAAA,aAAA;AACA,WAAA,oBAAA,GAAA,oBAAA,EAAA;AACA,WAAA,gBAAA,GAAA,gBAAA,EAAA;AACA,KANA;;AAOA,IAAA,cAAA,GAAA;AACA,MAAA,kBAAA;AACA,MAAA,QAAA,CAAA,EAAA,CAAA,MAAA,CAAA,IAAA;AACA;;AAVA;AA1CA,CAAA","sourcesContent":["<script>\r\nimport ResetModal from \"@/components/modals/prestige/ResetModal\";\r\n\r\nexport default {\r\n  name: \"EternityModal\",\r\n  components: {\r\n    ResetModal\r\n  },\r\n  data() {\r\n    return {\r\n      exitingEC: false,\r\n      startingIP: new Decimal(),\r\n      gainedEternityPoints: new Decimal(),\r\n      gainedEternities: new Decimal()\r\n    };\r\n  },\r\n  computed: {\r\n    message() {\r\n      return PlayerProgress.eternityUnlocked()\r\n        ? `Eternity will reset everything except Achievements, Challenge records, and anything under the General header\r\n          on the Statistics tab.`\r\n        : `Eternity will reset everything except Achievements, Challenge records, and anything under the General header\r\n          on the Statistics tab. You will also gain an Eternity Point and unlock various upgrades.`;\r\n    },\r\n    gainedEPOnEternity() {\r\n      return `You will gain ${quantify(\"Eternity\", this.gainedEternities, 2)} \r\n      and ${quantify(\"Eternity Point\", this.gainedEternityPoints, 2)} on Eternity.`;\r\n    },\r\n    startWithIP() {\r\n      return this.startingIP.gt(0)\r\n        ? `You will start your next Eternity with ${quantify(\"Infinity Point\", this.startingIP, 2)}.`\r\n        : ``;\r\n    },\r\n    eternityChallenge() {\r\n      const ec = EternityChallenge.current;\r\n      if (ec.isFullyCompleted) {\r\n        return `Eternity Challenge ${ec.id} is already fully completed.`;\r\n      }\r\n      if (!Perk.studyECBulk.isBought) {\r\n        return `You will gain one completion of Eternity Challenge ${ec.id}.`;\r\n      }\r\n      const gainedCompletions = ec.gainedCompletionStatus.gainedCompletions;\r\n      return `You will gain ${quantifyInt(\"completion\", gainedCompletions)} for Eternity Challenge ${ec.id}.`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.exitingEC = EternityChallenge.isRunning;\r\n      this.startingIP = Currency.infinityPoints.startingValue;\r\n      this.gainedEternityPoints = gainedEternityPoints();\r\n      this.gainedEternities = gainedEternities();\r\n    },\r\n    handleYesClick() {\r\n      animateAndEternity();\r\n      EventHub.ui.offAll(this);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ResetModal\r\n    :header=\"exitingEC ? 'Complete Eternity Challenge' : 'You are about to Eternity'\"\r\n    :message=\"message\"\r\n    :gained-resources=\"gainedEPOnEternity\"\r\n    :starting-resources=\"startWithIP\"\r\n    :confirm-fn=\"handleYesClick\"\r\n    :alternate-condition=\"exitingEC\"\r\n    :alternate-text=\"exitingEC ? eternityChallenge : undefined\"\r\n    confirm-option=\"eternity\"\r\n  />\r\n</template>\r\n"],"sourceRoot":"src/components/modals/prestige"},"metadata":{},"sourceType":"module"}