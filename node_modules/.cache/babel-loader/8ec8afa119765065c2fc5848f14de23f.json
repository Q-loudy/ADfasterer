{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";\nimport AutomatorDefineSingleEntry from \"./AutomatorDefineSingleEntry\";\nimport PrimaryButton from \"@/components/PrimaryButton\";\nexport default {\n  name: \"AutomatorDefinePage\",\n  components: {\n    AutomatorDefineSingleEntry,\n    PrimaryButton\n  },\n\n  data() {\n    return {\n      constants: [],\n      count: 0,\n      refreshConstants: false\n    };\n  },\n\n  computed: {\n    maxConstantCount() {\n      return AutomatorData.MAX_ALLOWED_CONSTANT_COUNT;\n    },\n\n    maxNameLength() {\n      return AutomatorData.MAX_ALLOWED_CONSTANT_NAME_LENGTH;\n    },\n\n    maxValueLength() {\n      return AutomatorData.MAX_ALLOWED_CONSTANT_VALUE_LENGTH;\n    },\n\n    hasConstants() {\n      return this.constants.length > 1 || this.constants[0] !== \"\";\n    }\n\n  },\n\n  created() {\n    // This key-swaps the container for all the constants in order to force a re-render when externally changed\n    this.on$(GAME_EVENT.AUTOMATOR_CONSTANT_CHANGED, () => {\n      this.refreshConstants = true;\n      this.$nextTick(() => this.refreshConstants = false);\n    });\n  },\n\n  methods: {\n    update() {\n      const existingValues = player.reality.automator.constantSortOrder;\n      this.count = existingValues.length;\n      this.constants = this.count < this.maxConstantCount ? [...existingValues, \"\"] : [...existingValues];\n    },\n\n    deleteAllConstants() {\n      if (this.hasConstants) Modal.clearAutomatorConstants.show();\n    },\n\n    importPresets() {\n      Modal.importTSConstants.show();\n    }\n\n  }\n};","map":{"version":3,"sources":["AutomatorDefinePage.vue"],"names":[],"mappings":";AACA,OAAA,0BAAA,MAAA,8BAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,0BADA;AAEA,IAAA;AAFA,GAFA;;AAMA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,CAFA;AAGA,MAAA,gBAAA,EAAA;AAHA,KAAA;AAKA,GAZA;;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,gBAAA,GAAA;AACA,aAAA,aAAA,CAAA,0BAAA;AACA,KAHA;;AAIA,IAAA,aAAA,GAAA;AACA,aAAA,aAAA,CAAA,gCAAA;AACA,KANA;;AAOA,IAAA,cAAA,GAAA;AACA,aAAA,aAAA,CAAA,iCAAA;AACA,KATA;;AAUA,IAAA,YAAA,GAAA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,SAAA,CAAA,CAAA,MAAA,EAAA;AACA;;AAZA,GAbA;;AA2BA,EAAA,OAAA,GAAA;AACA;AACA,SAAA,GAAA,CAAA,UAAA,CAAA,0BAAA,EAAA,MAAA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,MAAA,KAAA,gBAAA,GAAA,KAAA;AACA,KAHA;AAIA,GAjCA;;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,YAAA,cAAA,GAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,iBAAA;AACA,WAAA,KAAA,GAAA,cAAA,CAAA,MAAA;AACA,WAAA,SAAA,GAAA,KAAA,KAAA,GAAA,KAAA,gBAAA,GAAA,CAAA,GAAA,cAAA,EAAA,EAAA,CAAA,GAAA,CAAA,GAAA,cAAA,CAAA;AACA,KALA;;AAMA,IAAA,kBAAA,GAAA;AACA,UAAA,KAAA,YAAA,EAAA,KAAA,CAAA,uBAAA,CAAA,IAAA;AACA,KARA;;AASA,IAAA,aAAA,GAAA;AACA,MAAA,KAAA,CAAA,iBAAA,CAAA,IAAA;AACA;;AAXA;AAlCA,CAAA","sourcesContent":["<script>\r\nimport AutomatorDefineSingleEntry from \"./AutomatorDefineSingleEntry\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\n\r\nexport default {\r\n  name: \"AutomatorDefinePage\",\r\n  components: {\r\n    AutomatorDefineSingleEntry,\r\n    PrimaryButton,\r\n  },\r\n  data() {\r\n    return {\r\n      constants: [],\r\n      count: 0,\r\n      refreshConstants: false,\r\n    };\r\n  },\r\n  computed: {\r\n    maxConstantCount() {\r\n      return AutomatorData.MAX_ALLOWED_CONSTANT_COUNT;\r\n    },\r\n    maxNameLength() {\r\n      return AutomatorData.MAX_ALLOWED_CONSTANT_NAME_LENGTH;\r\n    },\r\n    maxValueLength() {\r\n      return AutomatorData.MAX_ALLOWED_CONSTANT_VALUE_LENGTH;\r\n    },\r\n    hasConstants() {\r\n      return this.constants.length > 1 || this.constants[0] !== \"\";\r\n    }\r\n  },\r\n  created() {\r\n    // This key-swaps the container for all the constants in order to force a re-render when externally changed\r\n    this.on$(GAME_EVENT.AUTOMATOR_CONSTANT_CHANGED, () => {\r\n      this.refreshConstants = true;\r\n      this.$nextTick(() => this.refreshConstants = false);\r\n    });\r\n  },\r\n  methods: {\r\n    update() {\r\n      const existingValues = player.reality.automator.constantSortOrder;\r\n      this.count = existingValues.length;\r\n      this.constants = this.count < this.maxConstantCount ? [...existingValues, \"\"] : [...existingValues];\r\n    },\r\n    deleteAllConstants() {\r\n      if (this.hasConstants) Modal.clearAutomatorConstants.show();\r\n    },\r\n    importPresets() {\r\n      Modal.importTSConstants.show();\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-panel-padding\">\r\n    This panel allows you to define case-sensitive constant values which can be used in place of numbers or Time Study\r\n    import strings. These definitions are shared across all of your scripts and are limited to a maximum of\r\n    {{ maxConstantCount }} defined constants. Additionally, constant names and values are limited to lengths of\r\n    {{ maxNameLength }} and {{ maxValueLength }} characters respectively. Changes made to constants will not apply\r\n    until any currently running scripts are restarted.\r\n    <br>\r\n    <br>\r\n    As a usage example, defining\r\n    <b>first ðŸ ˆ 11,21,22,31,32,33</b>\r\n    allows you to use\r\n    <b>studies purchase first</b>\r\n    in order to purchase all of the studies in the first three rows.\r\n    <br>\r\n    <br>\r\n    <PrimaryButton\r\n      v-tooltip=\"hasConstants ? null : 'You have no valid constants to delete!'\"\r\n      class=\"c-delete-margin o-primary-btn--subtab-option\"\r\n      :class=\"{ 'o-primary-btn--disabled' : !hasConstants }\"\r\n      @click=\"deleteAllConstants\"\r\n    >\r\n      Delete all constants\r\n    </PrimaryButton>\r\n    <br>\r\n    <br>\r\n    <PrimaryButton\r\n      class=\"c-delete-margin o-primary-btn--subtab-option\"\r\n      @click=\"importPresets\"\r\n    >\r\n      Import Time Study Presets\r\n    </PrimaryButton>\r\n    <div\r\n      :key=\"count + refreshConstants\"\r\n      class=\"l-definition-container\"\r\n    >\r\n      <AutomatorDefineSingleEntry\r\n        v-for=\"(constant, i) in constants\"\r\n        :key=\"i\"\r\n        :constant=\"constant\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-delete-margin {\r\n  margin: 0;\r\n}\r\n\r\n.l-panel-padding {\r\n  padding: 0.5rem 2rem 0 0;\r\n}\r\n\r\n.l-definition-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: solid 0.1rem var(--color-automator-docs-font);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  padding: 0.5rem;\r\n  margin-top: 1rem;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/automator"},"metadata":{},"sourceType":"module"}