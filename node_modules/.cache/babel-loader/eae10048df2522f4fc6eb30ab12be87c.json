{"ast":null,"code":"export class Effect {\n  constructor(effect, cap, condition) {\n    if (effect === undefined || this.isCustomEffect) {\n      return;\n    }\n\n    const isFunction = v => typeof v === \"function\";\n\n    const isNumber = v => typeof v === \"number\";\n\n    const isDecimal = v => v instanceof Decimal;\n\n    const isConstant = v => isNumber(v) || isDecimal(v);\n\n    if (!isFunction(effect) && !isConstant(effect)) {\n      throw new Error(\"Unknown effect value type.\");\n    }\n\n    const createProperty = () => ({\n      configurable: false\n    });\n\n    const addGetter = (property, v) => {\n      if (isConstant(v)) {\n        property.writable = false;\n        property.value = v;\n      } else if (isFunction(v)) {\n        property.get = v;\n      } else {\n        throw new Error(\"Unknown getter type.\");\n      }\n    };\n\n    if (condition !== undefined) {\n      if (!isFunction(condition)) {\n        throw new Error(\"Effect condition must be a function.\");\n      }\n\n      const conditionProperty = createProperty();\n      conditionProperty.get = condition;\n      Object.defineProperty(this, \"isEffectConditionSatisfied\", conditionProperty);\n    }\n\n    const uncappedEffectValueProperty = createProperty();\n    addGetter(uncappedEffectValueProperty, effect);\n    Object.defineProperty(this, \"uncappedEffectValue\", uncappedEffectValueProperty);\n\n    if (cap !== undefined) {\n      const capProperty = createProperty();\n      addGetter(capProperty, cap);\n      Object.defineProperty(this, \"cap\", capProperty);\n    }\n\n    const effectValueProperty = createProperty();\n    addGetter(effectValueProperty, effect);\n\n    if (isConstant(cap)) {\n      if (isNumber(effect)) {\n        effectValueProperty.get = () => Math.min(effect, this.cap);\n      } else if (isDecimal(effect)) {\n        effectValueProperty.get = () => Decimal.min(effect, this.cap);\n      } else if (isFunction(effect)) {\n        // Postpone effectValue specialization until the first call\n        effectValueProperty.configurable = true;\n\n        effectValueProperty.get = () => {\n          const effectValue = effect();\n          const specializedProperty = createProperty();\n\n          if (isNumber(effectValue)) {\n            specializedProperty.get = () => Math.min(effect(), this.cap);\n          } else if (isDecimal(effectValue)) {\n            specializedProperty.get = () => Decimal.min(effect(), this.cap);\n          } else {\n            throw new Error(\"Unknown effect value type.\");\n          }\n\n          Object.defineProperty(this, \"effectValue\", specializedProperty);\n          return specializedProperty.get();\n        };\n      }\n    } else if (isFunction(cap)) {\n      if (isNumber(effect)) {\n        effectValueProperty.get = () => {\n          const capValue = this.cap;\n          return capValue === undefined ? effect : Math.min(effect, capValue);\n        };\n      } else if (isDecimal(effect)) {\n        effectValueProperty.get = () => {\n          const capValue = this.cap;\n          return capValue === undefined ? effect : Decimal.min(effect, capValue);\n        };\n      } else if (isFunction(effect)) {\n        // Postpone effectValue specialization until the first call\n        effectValueProperty.configurable = true;\n\n        effectValueProperty.get = () => {\n          const effectValue = effect();\n          const specializedProperty = createProperty();\n\n          if (isNumber(effectValue)) {\n            specializedProperty.get = () => {\n              const capValue = this.cap;\n              return capValue === undefined ? effect() : Math.min(effect(), capValue);\n            };\n          } else if (isDecimal(effectValue)) {\n            specializedProperty.get = () => {\n              const capValue = this.cap;\n              return capValue === undefined ? effect() : Decimal.min(effect(), capValue);\n            };\n          } else {\n            throw new Error(\"Unknown effect value type.\");\n          }\n\n          Object.defineProperty(this, \"effectValue\", specializedProperty);\n          return specializedProperty.get();\n        };\n      }\n    }\n\n    Object.defineProperty(this, \"effectValue\", effectValueProperty);\n  }\n  /**\r\n   * @returns {number|Decimal}\r\n   */\n\n\n  get effectValue() {\n    throw new Error(\"Effect is undefined.\");\n  }\n  /**\r\n   * @returns {number|Decimal}\r\n   */\n\n\n  get uncappedEffectValue() {\n    throw new Error(\"Effect is undefined.\");\n  }\n  /**\r\n   * @returns {number|Decimal|undefined}\r\n   */\n\n\n  get cap() {\n    throw new Error(\"Cap is undefined.\");\n  }\n\n  get isEffectConditionSatisfied() {\n    return true;\n  }\n\n  get isEffectActive() {\n    return true;\n  }\n\n  get canBeApplied() {\n    return this.isEffectActive && this.isEffectConditionSatisfied;\n  }\n  /**\r\n   * @param {number|Decimal} defaultValue\r\n   * @returns {number|Decimal}\r\n   */\n\n\n  effectOrDefault(defaultValue) {\n    return this.canBeApplied ? this.effectValue : defaultValue;\n  }\n\n  applyEffect(applyFn) {\n    if (this.canBeApplied) applyFn(this.effectValue);\n  }\n\n  get isCustomEffect() {\n    return false;\n  }\n\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/game-mechanics/effect.js"],"names":["Effect","constructor","effect","cap","condition","undefined","isCustomEffect","isFunction","v","isNumber","isDecimal","Decimal","isConstant","Error","createProperty","configurable","addGetter","property","writable","value","get","conditionProperty","Object","defineProperty","uncappedEffectValueProperty","capProperty","effectValueProperty","Math","min","effectValue","specializedProperty","capValue","uncappedEffectValue","isEffectConditionSatisfied","isEffectActive","canBeApplied","effectOrDefault","defaultValue","applyEffect","applyFn"],"mappings":"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","sourcesContent":["export class Effect {\r\n  constructor(effect, cap, condition) {\r\n    if (effect === undefined || this.isCustomEffect) {\r\n      return;\r\n    }\r\n    const isFunction = v => typeof v === \"function\";\r\n    const isNumber = v => typeof v === \"number\";\r\n    const isDecimal = v => v instanceof Decimal;\r\n    const isConstant = v => isNumber(v) || isDecimal(v);\r\n    if (!isFunction(effect) && !isConstant(effect)) {\r\n      throw new Error(\"Unknown effect value type.\");\r\n    }\r\n    const createProperty = () => ({\r\n      configurable: false\r\n    });\r\n    const addGetter = (property, v) => {\r\n      if (isConstant(v)) {\r\n        property.writable = false;\r\n        property.value = v;\r\n      } else if (isFunction(v)) {\r\n        property.get = v;\r\n      } else {\r\n        throw new Error(\"Unknown getter type.\");\r\n      }\r\n    };\r\n    if (condition !== undefined) {\r\n      if (!isFunction(condition)) {\r\n        throw new Error(\"Effect condition must be a function.\");\r\n      }\r\n      const conditionProperty = createProperty();\r\n      conditionProperty.get = condition;\r\n      Object.defineProperty(this, \"isEffectConditionSatisfied\", conditionProperty);\r\n    }\r\n    const uncappedEffectValueProperty = createProperty();\r\n    addGetter(uncappedEffectValueProperty, effect);\r\n    Object.defineProperty(this, \"uncappedEffectValue\", uncappedEffectValueProperty);\r\n    if (cap !== undefined) {\r\n      const capProperty = createProperty();\r\n      addGetter(capProperty, cap);\r\n      Object.defineProperty(this, \"cap\", capProperty);\r\n    }\r\n    const effectValueProperty = createProperty();\r\n    addGetter(effectValueProperty, effect);\r\n    if (isConstant(cap)) {\r\n      if (isNumber(effect)) {\r\n        effectValueProperty.get = () => Math.min(effect, this.cap);\r\n      } else if (isDecimal(effect)) {\r\n        effectValueProperty.get = () => Decimal.min(effect, this.cap);\r\n      } else if (isFunction(effect)) {\r\n        // Postpone effectValue specialization until the first call\r\n        effectValueProperty.configurable = true;\r\n        effectValueProperty.get = () => {\r\n          const effectValue = effect();\r\n          const specializedProperty = createProperty();\r\n          if (isNumber(effectValue)) {\r\n            specializedProperty.get = () => Math.min(effect(), this.cap);\r\n          } else if (isDecimal(effectValue)) {\r\n            specializedProperty.get = () => Decimal.min(effect(), this.cap);\r\n          } else {\r\n            throw new Error(\"Unknown effect value type.\");\r\n          }\r\n          Object.defineProperty(this, \"effectValue\", specializedProperty);\r\n          return specializedProperty.get();\r\n        };\r\n      }\r\n    } else if (isFunction(cap)) {\r\n      if (isNumber(effect)) {\r\n        effectValueProperty.get = () => {\r\n          const capValue = this.cap;\r\n          return capValue === undefined ? effect : Math.min(effect, capValue);\r\n        };\r\n      } else if (isDecimal(effect)) {\r\n        effectValueProperty.get = () => {\r\n          const capValue = this.cap;\r\n          return capValue === undefined ? effect : Decimal.min(effect, capValue);\r\n        };\r\n      } else if (isFunction(effect)) {\r\n        // Postpone effectValue specialization until the first call\r\n        effectValueProperty.configurable = true;\r\n        effectValueProperty.get = () => {\r\n          const effectValue = effect();\r\n          const specializedProperty = createProperty();\r\n          if (isNumber(effectValue)) {\r\n            specializedProperty.get = () => {\r\n              const capValue = this.cap;\r\n              return capValue === undefined ? effect() : Math.min(effect(), capValue);\r\n            };\r\n          } else if (isDecimal(effectValue)) {\r\n            specializedProperty.get = () => {\r\n              const capValue = this.cap;\r\n              return capValue === undefined ? effect() : Decimal.min(effect(), capValue);\r\n            };\r\n          } else {\r\n            throw new Error(\"Unknown effect value type.\");\r\n          }\r\n          Object.defineProperty(this, \"effectValue\", specializedProperty);\r\n          return specializedProperty.get();\r\n        };\r\n      }\r\n    }\r\n    Object.defineProperty(this, \"effectValue\", effectValueProperty);\r\n  }\r\n\r\n  /**\r\n   * @returns {number|Decimal}\r\n   */\r\n  get effectValue() {\r\n    throw new Error(\"Effect is undefined.\");\r\n  }\r\n\r\n  /**\r\n   * @returns {number|Decimal}\r\n   */\r\n  get uncappedEffectValue() {\r\n    throw new Error(\"Effect is undefined.\");\r\n  }\r\n\r\n  /**\r\n   * @returns {number|Decimal|undefined}\r\n   */\r\n  get cap() {\r\n    throw new Error(\"Cap is undefined.\");\r\n  }\r\n\r\n  get isEffectConditionSatisfied() {\r\n    return true;\r\n  }\r\n\r\n  get isEffectActive() {\r\n    return true;\r\n  }\r\n\r\n  get canBeApplied() {\r\n    return this.isEffectActive && this.isEffectConditionSatisfied;\r\n  }\r\n\r\n  /**\r\n   * @param {number|Decimal} defaultValue\r\n   * @returns {number|Decimal}\r\n   */\r\n  effectOrDefault(defaultValue) {\r\n    return this.canBeApplied ? this.effectValue : defaultValue;\r\n  }\r\n\r\n  applyEffect(applyFn) {\r\n    if (this.canBeApplied) applyFn(this.effectValue);\r\n  }\r\n\r\n  get isCustomEffect() {\r\n    return false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}