{"ast":null,"code":"import ModalWrapper from \"@/components/modals/ModalWrapper\";\nimport SingularityMilestoneComponent from \"@/components/tabs/celestial-laitela/SingularityMilestoneComponent\";\nexport default {\n  name: \"SingularityMilestonesModal\",\n  components: {\n    SingularityMilestoneComponent,\n    ModalWrapper\n  },\n\n  data() {\n    return {\n      milestones: [],\n      resourceVal: 0,\n      sortVal: 0,\n      completedVal: 0,\n      orderVal: 0,\n      milestoneGlow: false\n    };\n  },\n\n  computed: {\n    resourceStr() {\n      const states = [\"Singularity Count\", \"Condense Count\", \"Manual Time\", \"Auto Time\"];\n      return states[this.resourceVal];\n    },\n\n    sortStr() {\n      const states = [\"Singularities needed\", \"Current Completions\", \"Progress to full completion\", \"Final Singularities\", \"Most Recent\"];\n      return states[this.sortVal];\n    },\n\n    completedStr() {\n      const states = [\"First\", \"Last\", \"Don't move\"];\n      return states[this.completedVal];\n    },\n\n    orderStr() {\n      const states = [\"Ascending\", \"Descending\"];\n      return states[this.orderVal];\n    }\n\n  },\n  watch: {\n    resourceVal(newValue) {\n      player.celestials.laitela.singularitySorting.displayResource = newValue;\n    },\n\n    sortVal(newValue) {\n      player.celestials.laitela.singularitySorting.sortResource = newValue;\n    },\n\n    completedVal(newValue) {\n      player.celestials.laitela.singularitySorting.showCompleted = newValue;\n    },\n\n    orderVal(newValue) {\n      player.celestials.laitela.singularitySorting.sortOrder = newValue;\n    },\n\n    milestoneGlow(newValue) {\n      player.celestials.laitela.milestoneGlow = newValue;\n    }\n\n  },\n\n  beforeDestroy() {\n    player.celestials.laitela.lastCheckedMilestones = Currency.singularities.value;\n  },\n\n  methods: {\n    update() {\n      this.milestones = SingularityMilestones.sortedForCompletions(true);\n      const settings = player.celestials.laitela.singularitySorting;\n      this.resourceVal = settings.displayResource;\n      this.sortVal = settings.sortResource;\n      this.completedVal = settings.showCompleted;\n      this.orderVal = settings.sortOrder;\n      this.milestoneGlow = player.celestials.laitela.milestoneGlow;\n    },\n\n    cycleButton(id) {\n      const settings = player.celestials.laitela.singularitySorting;\n      let stateCount;\n\n      switch (id) {\n        case 0:\n          stateCount = Object.keys(SINGULARITY_MILESTONE_RESOURCE).length;\n          settings.displayResource = (settings.displayResource + 1) % stateCount;\n          break;\n\n        case 1:\n          stateCount = Object.keys(SINGULARITY_MILESTONE_SORT).length;\n          settings.sortResource = (settings.sortResource + 1) % stateCount;\n          break;\n\n        case 2:\n          stateCount = Object.keys(COMPLETED_MILESTONES).length;\n          settings.showCompleted = (settings.showCompleted + 1) % stateCount;\n          break;\n\n        case 3:\n          stateCount = Object.keys(SORT_ORDER).length;\n          settings.sortOrder = (settings.sortOrder + 1) % stateCount;\n          break;\n\n        default:\n          throw new Error(\"Unrecognized Singularity milestone sorting button\");\n      }\n    },\n\n    glowOptionClass() {\n      return {\n        \"c-modal__confirmation-toggle__checkbox\": true,\n        \"c-modal__confirmation-toggle__checkbox--active\": this.milestoneGlow\n      };\n    },\n\n    toggleGlow() {\n      this.milestoneGlow = !this.milestoneGlow;\n    }\n\n  }\n};","map":{"version":3,"sources":["SingularityMilestonesModal.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport ModalWrapper from \"@/components/modals/ModalWrapper\";\r\nimport SingularityMilestoneComponent from \"@/components/tabs/celestial-laitela/SingularityMilestoneComponent\";\r\n\r\nexport default {\r\n  name: \"SingularityMilestonesModal\",\r\n  components: {\r\n    SingularityMilestoneComponent,\r\n    ModalWrapper,\r\n  },\r\n  data() {\r\n    return {\r\n      milestones: [],\r\n      resourceVal: 0,\r\n      sortVal: 0,\r\n      completedVal: 0,\r\n      orderVal: 0,\r\n      milestoneGlow: false,\r\n    };\r\n  },\r\n  computed: {\r\n    resourceStr() {\r\n      const states = [\"Singularity Count\", \"Condense Count\", \"Manual Time\", \"Auto Time\"];\r\n      return states[this.resourceVal];\r\n    },\r\n    sortStr() {\r\n      const states = [\"Singularities needed\", \"Current Completions\", \"Progress to full completion\",\r\n        \"Final Singularities\", \"Most Recent\"];\r\n      return states[this.sortVal];\r\n    },\r\n    completedStr() {\r\n      const states = [\"First\", \"Last\", \"Don't move\"];\r\n      return states[this.completedVal];\r\n    },\r\n    orderStr() {\r\n      const states = [\"Ascending\", \"Descending\"];\r\n      return states[this.orderVal];\r\n    },\r\n  },\r\n  watch: {\r\n    resourceVal(newValue) {\r\n      player.celestials.laitela.singularitySorting.displayResource = newValue;\r\n    },\r\n    sortVal(newValue) {\r\n      player.celestials.laitela.singularitySorting.sortResource = newValue;\r\n    },\r\n    completedVal(newValue) {\r\n      player.celestials.laitela.singularitySorting.showCompleted = newValue;\r\n    },\r\n    orderVal(newValue) {\r\n      player.celestials.laitela.singularitySorting.sortOrder = newValue;\r\n    },\r\n    milestoneGlow(newValue) {\r\n      player.celestials.laitela.milestoneGlow = newValue;\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    player.celestials.laitela.lastCheckedMilestones = Currency.singularities.value;\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.milestones = SingularityMilestones.sortedForCompletions(true);\r\n      const settings = player.celestials.laitela.singularitySorting;\r\n      this.resourceVal = settings.displayResource;\r\n      this.sortVal = settings.sortResource;\r\n      this.completedVal = settings.showCompleted;\r\n      this.orderVal = settings.sortOrder;\r\n      this.milestoneGlow = player.celestials.laitela.milestoneGlow;\r\n    },\r\n    cycleButton(id) {\r\n      const settings = player.celestials.laitela.singularitySorting;\r\n      let stateCount;\r\n      switch (id) {\r\n        case 0:\r\n          stateCount = Object.keys(SINGULARITY_MILESTONE_RESOURCE).length;\r\n          settings.displayResource = (settings.displayResource + 1) % stateCount;\r\n          break;\r\n        case 1:\r\n          stateCount = Object.keys(SINGULARITY_MILESTONE_SORT).length;\r\n          settings.sortResource = (settings.sortResource + 1) % stateCount;\r\n          break;\r\n        case 2:\r\n          stateCount = Object.keys(COMPLETED_MILESTONES).length;\r\n          settings.showCompleted = (settings.showCompleted + 1) % stateCount;\r\n          break;\r\n        case 3:\r\n          stateCount = Object.keys(SORT_ORDER).length;\r\n          settings.sortOrder = (settings.sortOrder + 1) % stateCount;\r\n          break;\r\n        default:\r\n          throw new Error(\"Unrecognized Singularity milestone sorting button\");\r\n      }\r\n    },\r\n    glowOptionClass() {\r\n      return {\r\n        \"c-modal__confirmation-toggle__checkbox\": true,\r\n        \"c-modal__confirmation-toggle__checkbox--active\": this.milestoneGlow\r\n      };\r\n    },\r\n    toggleGlow() {\r\n      this.milestoneGlow = !this.milestoneGlow;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ModalWrapper>\r\n    <template #header>\r\n      Singularity Milestones\r\n    </template>\r\n    <div\r\n      class=\"c-modal__confirmation-toggle\"\r\n      @click=\"toggleGlow\"\r\n    >\r\n      <div :class=\"glowOptionClass()\">\r\n        <span\r\n          v-if=\"milestoneGlow\"\r\n          class=\"fas fa-check\"\r\n        />\r\n      </div>\r\n      <span class=\"c-modal__confirmation-toggle__text\">\r\n        Make button glow when new milestones have been reached\r\n      </span>\r\n    </div>\r\n    <div class=\"l-singularity-milestone-modal-container-outer\">\r\n      <div class=\"l-singularity-milestone-modal-container-inner\">\r\n        <SingularityMilestoneComponent\r\n          v-for=\"milestone in milestones\"\r\n          :key=\"milestone.id\"\r\n          :milestone=\"milestone\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"l-singularity-milestone-sort-container\">\r\n      <button\r\n        class=\"c-singularity-milestone-modal-sort-button\"\r\n        @click=\"cycleButton(0)\"\r\n      >\r\n        To Milestone:\r\n        <br>\r\n        {{ resourceStr }}\r\n      </button>\r\n      <button\r\n        class=\"c-singularity-milestone-modal-sort-button\"\r\n        @click=\"cycleButton(1)\"\r\n      >\r\n        Sort by:\r\n        <br>\r\n        {{ sortStr }}\r\n      </button>\r\n      <button\r\n        class=\"c-singularity-milestone-modal-sort-button\"\r\n        @click=\"cycleButton(2)\"\r\n      >\r\n        Completed Milestones:\r\n        <br>\r\n        {{ completedStr }}\r\n      </button>\r\n      <button\r\n        class=\"c-singularity-milestone-modal-sort-button\"\r\n        @click=\"cycleButton(3)\"\r\n      >\r\n        Sort Order:\r\n        <br>\r\n        {{ orderStr }}\r\n      </button>\r\n    </div>\r\n  </ModalWrapper>\r\n</template>\r\n"],"sourceRoot":"src/components/modals"},"metadata":{},"sourceType":"module"}