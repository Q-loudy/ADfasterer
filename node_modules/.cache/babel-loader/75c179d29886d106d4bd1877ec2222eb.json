{"ast":null,"code":"import { Laitela } from \"@/core/globals\";\nimport SliderComponent from \"@/components/SliderComponent\";\nexport default {\n  name: \"BlackHoleChargingSliders\",\n  components: {\n    SliderComponent\n  },\n\n  data() {\n    return {\n      isNegativeBHUnlocked: false,\n      isInverted: false,\n      isLaitela: false,\n      negativeSlider: 0,\n      negativeBHDivisor: 1,\n      maxNegativeBlackHole: 300,\n      isDisabled: false\n    };\n  },\n\n  computed: {\n    infoTooltip() {\n      return this.isLaitela ? \"The physics of this Reality do not allow Black Hole Inversion\" : \"Black Hole must be paused to activate Inversion\";\n    },\n\n    reqLockText() {\n      return `Inversion strength cannot be modified due to Lock for\n        \"${ImaginaryUpgrade(24).name}\"`;\n    }\n\n  },\n  methods: {\n    update() {\n      this.isNegativeBHUnlocked = V.isFlipped && BlackHoles.arePermanent;\n      this.isInverted = BlackHoles.areNegative;\n      this.isLaitela = Laitela.isRunning;\n      this.negativeSlider = -Math.log10(player.blackHoleNegative);\n      this.negativeBHDivisor = Math.pow(10, this.negativeSlider);\n      const maxInversion = player.requirementChecks.reality.slowestBH <= 1e-300;\n      this.isDisabled = ImaginaryUpgrade(24).isLockingMechanics && Ra.isRunning && maxInversion;\n    },\n\n    adjustSliderNegative(value) {\n      this.negativeSlider = value;\n      player.blackHoleNegative = Math.pow(10, -this.negativeSlider);\n      player.requirementChecks.reality.slowestBH = Math.max(player.requirementChecks.reality.slowestBH, player.blackHoleNegative);\n    },\n\n    sliderProps(negative) {\n      return {\n        min: 0,\n        max: negative ? this.maxNegativeBlackHole : 990,\n        interval: 1,\n        width: \"55rem\",\n        tooltip: false\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["BlackHoleChargingSliders.vue"],"names":[],"mappings":"AACA,SAAA,OAAA,QAAA,gBAAA;AAEA,OAAA,eAAA,MAAA,8BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,0BADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,oBAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,SAAA,EAAA,KAHA;AAIA,MAAA,cAAA,EAAA,CAJA;AAKA,MAAA,iBAAA,EAAA,CALA;AAMA,MAAA,oBAAA,EAAA,GANA;AAOA,MAAA,UAAA,EAAA;AAPA,KAAA;AASA,GAfA;;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,WAAA,GAAA;AACA,aAAA,KAAA,SAAA,GACA,+DADA,GAEA,iDAFA;AAGA,KALA;;AAMA,IAAA,WAAA,GAAA;AACA,aAAA;AACA,WAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,IAAA,GADA;AAEA;;AATA,GAhBA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,oBAAA,GAAA,CAAA,CAAA,SAAA,IAAA,UAAA,CAAA,YAAA;AACA,WAAA,UAAA,GAAA,UAAA,CAAA,WAAA;AACA,WAAA,SAAA,GAAA,OAAA,CAAA,SAAA;AACA,WAAA,cAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,iBAAA,CAAA;AACA,WAAA,iBAAA,GAAA,IAAA,CAAA,GAAA,CAAA,EAAA,EAAA,KAAA,cAAA,CAAA;AACA,YAAA,YAAA,GAAA,MAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,SAAA,IAAA,MAAA;AACA,WAAA,UAAA,GAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,kBAAA,IAAA,EAAA,CAAA,SAAA,IAAA,YAAA;AACA,KATA;;AAUA,IAAA,oBAAA,CAAA,KAAA,EAAA;AACA,WAAA,cAAA,GAAA,KAAA;AACA,MAAA,MAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,GAAA,CAAA,EAAA,EAAA,CAAA,KAAA,cAAA,CAAA;AACA,MAAA,MAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,SAAA,GAAA,IAAA,CAAA,GAAA,CACA,MAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,SADA,EAEA,MAAA,CAAA,iBAFA,CAAA;AAIA,KAjBA;;AAkBA,IAAA,WAAA,CAAA,QAAA,EAAA;AACA,aAAA;AACA,QAAA,GAAA,EAAA,CADA;AAEA,QAAA,GAAA,EAAA,QAAA,GAAA,KAAA,oBAAA,GAAA,GAFA;AAGA,QAAA,QAAA,EAAA,CAHA;AAIA,QAAA,KAAA,EAAA,OAJA;AAKA,QAAA,OAAA,EAAA;AALA,OAAA;AAOA;;AA1BA;AA3BA,CAAA","sourcesContent":["<script>\r\nimport { Laitela } from \"@/core/globals\";\r\n\r\nimport SliderComponent from \"@/components/SliderComponent\";\r\n\r\nexport default {\r\n  name: \"BlackHoleChargingSliders\",\r\n  components: {\r\n    SliderComponent\r\n  },\r\n  data() {\r\n    return {\r\n      isNegativeBHUnlocked: false,\r\n      isInverted: false,\r\n      isLaitela: false,\r\n      negativeSlider: 0,\r\n      negativeBHDivisor: 1,\r\n      maxNegativeBlackHole: 300,\r\n      isDisabled: false,\r\n    };\r\n  },\r\n  computed: {\r\n    infoTooltip() {\r\n      return this.isLaitela\r\n        ? \"The physics of this Reality do not allow Black Hole Inversion\"\r\n        : \"Black Hole must be paused to activate Inversion\";\r\n    },\r\n    reqLockText() {\r\n      return `Inversion strength cannot be modified due to Lock for\r\n        \"${ImaginaryUpgrade(24).name}\"`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isNegativeBHUnlocked = V.isFlipped && BlackHoles.arePermanent;\r\n      this.isInverted = BlackHoles.areNegative;\r\n      this.isLaitela = Laitela.isRunning;\r\n      this.negativeSlider = -Math.log10(player.blackHoleNegative);\r\n      this.negativeBHDivisor = Math.pow(10, this.negativeSlider);\r\n      const maxInversion = player.requirementChecks.reality.slowestBH <= 1e-300;\r\n      this.isDisabled = ImaginaryUpgrade(24).isLockingMechanics && Ra.isRunning && maxInversion;\r\n    },\r\n    adjustSliderNegative(value) {\r\n      this.negativeSlider = value;\r\n      player.blackHoleNegative = Math.pow(10, -this.negativeSlider);\r\n      player.requirementChecks.reality.slowestBH = Math.max(\r\n        player.requirementChecks.reality.slowestBH,\r\n        player.blackHoleNegative\r\n      );\r\n    },\r\n    sliderProps(negative) {\r\n      return {\r\n        min: 0,\r\n        max: negative ? this.maxNegativeBlackHole : 990,\r\n        interval: 1,\r\n        width: \"55rem\",\r\n        tooltip: false\r\n      };\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div\r\n      v-if=\"isNegativeBHUnlocked\"\r\n      class=\"l-black-hole-sliders\"\r\n    >\r\n      <b>\r\n        Inverted Black Hole divides game speed by {{ format(negativeBHDivisor, 2, 2) }}.\r\n        (Currently {{ isInverted ? \"active\" : \"inactive\" }}<span\r\n          v-if=\"negativeSlider !== 0 && !isInverted\"\r\n          :ach-tooltip=\"infoTooltip\"\r\n        >\r\n          <i class=\"fas fa-question-circle l-margin-left\" />\r\n        </span>)\r\n      </b>\r\n      <SliderComponent\r\n        v-if=\"!isDisabled\"\r\n        v-bind=\"sliderProps(true)\"\r\n        :value=\"negativeSlider\"\r\n        @input=\"adjustSliderNegative($event)\"\r\n      />\r\n      <div\r\n        v-else\r\n        class=\"l-lock-text\"\r\n      >\r\n        {{ reqLockText }}\r\n      </div>\r\n      <br>\r\n      Inverting the Black Hole only affects its own speedup, no other upgrades or effects, although\r\n      it will also indirectly affect the Effarig Game speed power effect.\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-black-hole-sliders {\r\n  width: 55rem;\r\n  color: var(--color-text);\r\n}\r\n\r\n.l-margin-left {\r\n  margin-left: 0.5rem;\r\n}\r\n\r\n.l-lock-text {\r\n  font-weight: bold;\r\n  color: var(--color-bad);\r\n  margin: 0.5rem 0 -0.5rem;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/black-hole"},"metadata":{},"sourceType":"module"}