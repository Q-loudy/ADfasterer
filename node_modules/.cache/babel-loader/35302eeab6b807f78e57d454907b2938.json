{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport Vue from \"vue\";\nimport { DC } from \"@/core/constants\";\nexport class BreakdownEntryInfo {\n  constructor(key) {\n    this.key = key;\n    const keyArgs = this.key.split(\"_\");\n    const dbEntry = GameDatabase.multiplierTabValues[keyArgs[0]][keyArgs[1]];\n    const args = keyArgs.length >= 3 ? keyArgs.slice(2).map(a => a.match(\"^\\\\d+$\") ? Number(a) : a) : [];\n    this._name = createGetter(dbEntry.name, args);\n    this._multValue = createGetter(dbEntry.multValue, args);\n    this._powValue = createGetter(dbEntry.powValue, args);\n    this._dilationEffect = createGetter(dbEntry.dilationEffect, args);\n    this._isActive = createGetter(dbEntry.isActive, args);\n    this._fakeValue = createGetter(dbEntry.fakeValue, args);\n    this._icon = createGetter(dbEntry.icon, args);\n    this._displayOverride = createGetter(dbEntry.displayOverride, args);\n    this._isDilated = createGetter(dbEntry.isDilated, args);\n    this._isBase = createGetter(dbEntry.isBase, args);\n    this._ignoresNerfPowers = createGetter(dbEntry.ignoresNerfPowers, args);\n    this.data = Vue.observable({\n      mult: new Decimal(0),\n      pow: 0,\n      isVisible: false,\n      lastVisibleAt: 0\n    });\n  }\n\n  update() {\n    const isVisible = this.isVisible;\n    this.data.mult.fromDecimal(isVisible ? this.mult : DC.D1);\n    this.data.pow = isVisible ? this.pow : 1;\n    this.data.isVisible = isVisible;\n\n    if (isVisible) {\n      this.data.lastVisibleAt = Date.now();\n    }\n  }\n\n  get name() {\n    return this._name();\n  }\n\n  get mult() {\n    var _this$_multValue;\n\n    return new Decimal((_this$_multValue = this._multValue()) !== null && _this$_multValue !== void 0 ? _this$_multValue : 1);\n  }\n\n  get pow() {\n    var _this$_powValue;\n\n    return (_this$_powValue = this._powValue()) !== null && _this$_powValue !== void 0 ? _this$_powValue : 1;\n  }\n\n  get dilationEffect() {\n    var _this$_dilationEffect;\n\n    return (_this$_dilationEffect = this._dilationEffect()) !== null && _this$_dilationEffect !== void 0 ? _this$_dilationEffect : 1;\n  }\n\n  get isActive() {\n    var _this$_isActive;\n\n    return (_this$_isActive = this._isActive()) !== null && _this$_isActive !== void 0 ? _this$_isActive : false;\n  }\n\n  get fakeValue() {\n    return this._fakeValue();\n  }\n\n  get icon() {\n    return this._icon();\n  }\n\n  get displayOverride() {\n    return this._displayOverride();\n  }\n\n  get isDilated() {\n    return this._isDilated();\n  }\n\n  get isBase() {\n    return this._isBase();\n  }\n\n  get ignoresNerfPowers() {\n    var _this$_ignoresNerfPow;\n\n    return (_this$_ignoresNerfPow = this._ignoresNerfPowers()) !== null && _this$_ignoresNerfPow !== void 0 ? _this$_ignoresNerfPow : false;\n  }\n\n  get isVisible() {\n    return this.isActive && (this.pow !== 1 || this.mult.neq(1));\n  }\n\n}\n\nfunction createGetter(property, args) {\n  if (typeof property === \"function\") {\n    return () => property(...args);\n  }\n\n  return () => property;\n}\n\nconst cache = new Map();\nexport function createEntryInfo(key) {\n  const cached = cache.get(key);\n\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  const entry = new BreakdownEntryInfo(key);\n  cache.set(key, entry);\n  return entry;\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/components/tabs/statistics/breakdown-entry-info.js"],"names":["Vue","DC","BreakdownEntryInfo","constructor","key","keyArgs","split","dbEntry","GameDatabase","multiplierTabValues","args","length","slice","map","a","match","Number","_name","createGetter","name","_multValue","multValue","_powValue","powValue","_dilationEffect","dilationEffect","_isActive","isActive","_fakeValue","fakeValue","_icon","icon","_displayOverride","displayOverride","_isDilated","isDilated","_isBase","isBase","_ignoresNerfPowers","ignoresNerfPowers","data","observable","mult","Decimal","pow","isVisible","lastVisibleAt","update","fromDecimal","D1","Date","now","neq","property","cache","Map","createEntryInfo","cached","get","undefined","entry","set"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,OAAO,MAAMC,kBAAN,CAAyB;AAC9BC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,SAAKA,GAAL,GAAWA,GAAX;AACA,UAAMC,OAAO,GAAG,KAAKD,GAAL,CAASE,KAAT,CAAe,GAAf,CAAhB;AACA,UAAMC,OAAO,GAAGC,YAAY,CAACC,mBAAb,CAAiCJ,OAAO,CAAC,CAAD,CAAxC,EAA6CA,OAAO,CAAC,CAAD,CAApD,CAAhB;AACA,UAAMK,IAAI,GAAGL,OAAO,CAACM,MAAR,IAAkB,CAAlB,GACTN,OAAO,CAACO,KAAR,CAAc,CAAd,EAAiBC,GAAjB,CAAqBC,CAAC,IAAKA,CAAC,CAACC,KAAF,CAAQ,QAAR,IAAoBC,MAAM,CAACF,CAAD,CAA1B,GAAgCA,CAA3D,CADS,GAET,EAFJ;AAGA,SAAKG,KAAL,GAAaC,YAAY,CAACX,OAAO,CAACY,IAAT,EAAeT,IAAf,CAAzB;AACA,SAAKU,UAAL,GAAkBF,YAAY,CAACX,OAAO,CAACc,SAAT,EAAoBX,IAApB,CAA9B;AACA,SAAKY,SAAL,GAAiBJ,YAAY,CAACX,OAAO,CAACgB,QAAT,EAAmBb,IAAnB,CAA7B;AACA,SAAKc,eAAL,GAAuBN,YAAY,CAACX,OAAO,CAACkB,cAAT,EAAyBf,IAAzB,CAAnC;AACA,SAAKgB,SAAL,GAAiBR,YAAY,CAACX,OAAO,CAACoB,QAAT,EAAmBjB,IAAnB,CAA7B;AACA,SAAKkB,UAAL,GAAkBV,YAAY,CAACX,OAAO,CAACsB,SAAT,EAAoBnB,IAApB,CAA9B;AACA,SAAKoB,KAAL,GAAaZ,YAAY,CAACX,OAAO,CAACwB,IAAT,EAAerB,IAAf,CAAzB;AACA,SAAKsB,gBAAL,GAAwBd,YAAY,CAACX,OAAO,CAAC0B,eAAT,EAA0BvB,IAA1B,CAApC;AACA,SAAKwB,UAAL,GAAkBhB,YAAY,CAACX,OAAO,CAAC4B,SAAT,EAAoBzB,IAApB,CAA9B;AACA,SAAK0B,OAAL,GAAelB,YAAY,CAACX,OAAO,CAAC8B,MAAT,EAAiB3B,IAAjB,CAA3B;AACA,SAAK4B,kBAAL,GAA0BpB,YAAY,CAACX,OAAO,CAACgC,iBAAT,EAA4B7B,IAA5B,CAAtC;AACA,SAAK8B,IAAL,GAAYxC,GAAG,CAACyC,UAAJ,CAAe;AACzBC,MAAAA,IAAI,EAAE,IAAIC,OAAJ,CAAY,CAAZ,CADmB;AAEzBC,MAAAA,GAAG,EAAE,CAFoB;AAGzBC,MAAAA,SAAS,EAAE,KAHc;AAIzBC,MAAAA,aAAa,EAAE;AAJU,KAAf,CAAZ;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMF,SAAS,GAAG,KAAKA,SAAvB;AACA,SAAKL,IAAL,CAAUE,IAAV,CAAeM,WAAf,CAA2BH,SAAS,GAAG,KAAKH,IAAR,GAAezC,EAAE,CAACgD,EAAtD;AACA,SAAKT,IAAL,CAAUI,GAAV,GAAgBC,SAAS,GAAG,KAAKD,GAAR,GAAc,CAAvC;AACA,SAAKJ,IAAL,CAAUK,SAAV,GAAsBA,SAAtB;;AACA,QAAIA,SAAJ,EAAe;AACb,WAAKL,IAAL,CAAUM,aAAV,GAA0BI,IAAI,CAACC,GAAL,EAA1B;AACD;AACF;;AAEO,MAAJhC,IAAI,GAAG;AACT,WAAO,KAAKF,KAAL,EAAP;AACD;;AAEO,MAAJyB,IAAI,GAAG;AAAA;;AACT,WAAO,IAAIC,OAAJ,qBAAY,KAAKvB,UAAL,EAAZ,+DAAiC,CAAjC,CAAP;AACD;;AAEM,MAAHwB,GAAG,GAAG;AAAA;;AACR,8BAAO,KAAKtB,SAAL,EAAP,6DAA2B,CAA3B;AACD;;AAEiB,MAAdG,cAAc,GAAG;AAAA;;AACnB,oCAAO,KAAKD,eAAL,EAAP,yEAAiC,CAAjC;AACD;;AAEW,MAARG,QAAQ,GAAG;AAAA;;AACb,8BAAO,KAAKD,SAAL,EAAP,6DAA2B,KAA3B;AACD;;AAEY,MAATG,SAAS,GAAG;AACd,WAAO,KAAKD,UAAL,EAAP;AACD;;AAEO,MAAJG,IAAI,GAAG;AACT,WAAO,KAAKD,KAAL,EAAP;AACD;;AAEkB,MAAfG,eAAe,GAAG;AACpB,WAAO,KAAKD,gBAAL,EAAP;AACD;;AAEY,MAATG,SAAS,GAAG;AACd,WAAO,KAAKD,UAAL,EAAP;AACD;;AAES,MAANG,MAAM,GAAG;AACX,WAAO,KAAKD,OAAL,EAAP;AACD;;AAEoB,MAAjBG,iBAAiB,GAAG;AAAA;;AACtB,oCAAO,KAAKD,kBAAL,EAAP,yEAAoC,KAApC;AACD;;AAEY,MAATO,SAAS,GAAG;AACd,WAAO,KAAKlB,QAAL,KAAkB,KAAKiB,GAAL,KAAa,CAAb,IAAkB,KAAKF,IAAL,CAAUU,GAAV,CAAc,CAAd,CAApC,CAAP;AACD;;AAnF6B;;AAsFhC,SAASlC,YAAT,CAAsBmC,QAAtB,EAAgC3C,IAAhC,EAAsC;AACpC,MAAI,OAAO2C,QAAP,KAAoB,UAAxB,EAAoC;AAClC,WAAO,MAAMA,QAAQ,CAAC,GAAG3C,IAAJ,CAArB;AACD;;AAED,SAAO,MAAM2C,QAAb;AACD;;AAED,MAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;AAEA,OAAO,SAASC,eAAT,CAAyBpD,GAAzB,EAA8B;AACnC,QAAMqD,MAAM,GAAGH,KAAK,CAACI,GAAN,CAAUtD,GAAV,CAAf;;AACA,MAAIqD,MAAM,KAAKE,SAAf,EAA0B;AACxB,WAAOF,MAAP;AACD;;AACD,QAAMG,KAAK,GAAG,IAAI1D,kBAAJ,CAAuBE,GAAvB,CAAd;AACAkD,EAAAA,KAAK,CAACO,GAAN,CAAUzD,GAAV,EAAewD,KAAf;AACA,SAAOA,KAAP;AACD","sourcesContent":["import Vue from \"vue\";\r\n\r\nimport { DC } from \"@/core/constants\";\r\n\r\nexport class BreakdownEntryInfo {\r\n  constructor(key) {\r\n    this.key = key;\r\n    const keyArgs = this.key.split(\"_\");\r\n    const dbEntry = GameDatabase.multiplierTabValues[keyArgs[0]][keyArgs[1]];\r\n    const args = keyArgs.length >= 3\r\n      ? keyArgs.slice(2).map(a => (a.match(\"^\\\\d+$\") ? Number(a) : a))\r\n      : [];\r\n    this._name = createGetter(dbEntry.name, args);\r\n    this._multValue = createGetter(dbEntry.multValue, args);\r\n    this._powValue = createGetter(dbEntry.powValue, args);\r\n    this._dilationEffect = createGetter(dbEntry.dilationEffect, args);\r\n    this._isActive = createGetter(dbEntry.isActive, args);\r\n    this._fakeValue = createGetter(dbEntry.fakeValue, args);\r\n    this._icon = createGetter(dbEntry.icon, args);\r\n    this._displayOverride = createGetter(dbEntry.displayOverride, args);\r\n    this._isDilated = createGetter(dbEntry.isDilated, args);\r\n    this._isBase = createGetter(dbEntry.isBase, args);\r\n    this._ignoresNerfPowers = createGetter(dbEntry.ignoresNerfPowers, args);\r\n    this.data = Vue.observable({\r\n      mult: new Decimal(0),\r\n      pow: 0,\r\n      isVisible: false,\r\n      lastVisibleAt: 0\r\n    });\r\n  }\r\n\r\n  update() {\r\n    const isVisible = this.isVisible;\r\n    this.data.mult.fromDecimal(isVisible ? this.mult : DC.D1);\r\n    this.data.pow = isVisible ? this.pow : 1;\r\n    this.data.isVisible = isVisible;\r\n    if (isVisible) {\r\n      this.data.lastVisibleAt = Date.now();\r\n    }\r\n  }\r\n\r\n  get name() {\r\n    return this._name();\r\n  }\r\n\r\n  get mult() {\r\n    return new Decimal(this._multValue() ?? 1);\r\n  }\r\n\r\n  get pow() {\r\n    return this._powValue() ?? 1;\r\n  }\r\n\r\n  get dilationEffect() {\r\n    return this._dilationEffect() ?? 1;\r\n  }\r\n\r\n  get isActive() {\r\n    return this._isActive() ?? false;\r\n  }\r\n\r\n  get fakeValue() {\r\n    return this._fakeValue();\r\n  }\r\n\r\n  get icon() {\r\n    return this._icon();\r\n  }\r\n\r\n  get displayOverride() {\r\n    return this._displayOverride();\r\n  }\r\n\r\n  get isDilated() {\r\n    return this._isDilated();\r\n  }\r\n\r\n  get isBase() {\r\n    return this._isBase();\r\n  }\r\n\r\n  get ignoresNerfPowers() {\r\n    return this._ignoresNerfPowers() ?? false;\r\n  }\r\n\r\n  get isVisible() {\r\n    return this.isActive && (this.pow !== 1 || this.mult.neq(1));\r\n  }\r\n}\r\n\r\nfunction createGetter(property, args) {\r\n  if (typeof property === \"function\") {\r\n    return () => property(...args);\r\n  }\r\n\r\n  return () => property;\r\n}\r\n\r\nconst cache = new Map();\r\n\r\nexport function createEntryInfo(key) {\r\n  const cached = cache.get(key);\r\n  if (cached !== undefined) {\r\n    return cached;\r\n  }\r\n  const entry = new BreakdownEntryInfo(key);\r\n  cache.set(key, entry);\r\n  return entry;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}