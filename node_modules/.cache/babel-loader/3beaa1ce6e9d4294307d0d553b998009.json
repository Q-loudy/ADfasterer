{"ast":null,"code":"export default {\n  name: \"ResetRealityButton\",\n\n  data() {\n    return {\n      canReality: false,\n      resetCelestial: false,\n      isInCelestialReality: false,\n      isDoomed: false\n    };\n  },\n\n  computed: {\n    resetText() {\n      if (this.isDoomed) return \"Start this Armageddon over\";\n      if (this.isInCelestialReality && !this.resetCelestial) return \"Exit this Celestial early\";\n      if (this.isInCelestialReality && this.resetCelestial) return \"Restart this Celestial\";\n      return \"Start this Reality over\";\n    }\n\n  },\n  methods: {\n    update() {\n      this.canReality = TimeStudy.reality.isBought && player.records.thisReality.maxEP.exponent >= 4000;\n      this.resetCelestial = player.options.retryCelestial;\n      this.isInCelestialReality = isInCelestialReality();\n      this.isDoomed = Pelle.isDoomed;\n    },\n\n    resetReality() {\n      const confirms = player.options.confirmations;\n      if (GameEnd.creditsClosed) return;\n\n      if (this.isInCelestialReality) {\n        if (confirms.exitChallenge) Modal.exitChallenge.show({\n          challengeName: \"a Celestial Reality\",\n          normalName: \"Reality\",\n          hasHigherLayers: false,\n          exitFn: () => beginProcessReality(getRealityProps(true))\n        });else beginProcessReality(getRealityProps(true));\n      } else if (confirms.resetReality) Modal.resetReality.show();else beginProcessReality(getRealityProps(true));\n    }\n\n  }\n};","map":{"version":3,"sources":["ResetRealityButton.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,cAAA,EAAA,KAFA;AAGA,MAAA,oBAAA,EAAA,KAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GATA;;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,GAAA;AACA,UAAA,KAAA,QAAA,EAAA,OAAA,4BAAA;AACA,UAAA,KAAA,oBAAA,IAAA,CAAA,KAAA,cAAA,EAAA,OAAA,2BAAA;AACA,UAAA,KAAA,oBAAA,IAAA,KAAA,cAAA,EAAA,OAAA,wBAAA;AACA,aAAA,yBAAA;AACA;;AANA,GAVA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,UAAA,GAAA,SAAA,CAAA,OAAA,CAAA,QAAA,IAAA,MAAA,CAAA,OAAA,CAAA,WAAA,CAAA,KAAA,CAAA,QAAA,IAAA,IAAA;AACA,WAAA,cAAA,GAAA,MAAA,CAAA,OAAA,CAAA,cAAA;AACA,WAAA,oBAAA,GAAA,oBAAA,EAAA;AACA,WAAA,QAAA,GAAA,KAAA,CAAA,QAAA;AACA,KANA;;AAOA,IAAA,YAAA,GAAA;AACA,YAAA,QAAA,GAAA,MAAA,CAAA,OAAA,CAAA,aAAA;AACA,UAAA,OAAA,CAAA,aAAA,EAAA;;AACA,UAAA,KAAA,oBAAA,EAAA;AACA,YAAA,QAAA,CAAA,aAAA,EAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA;AACA,UAAA,aAAA,EAAA,qBADA;AAEA,UAAA,UAAA,EAAA,SAFA;AAGA,UAAA,eAAA,EAAA,KAHA;AAIA,UAAA,MAAA,EAAA,MAAA,mBAAA,CAAA,eAAA,CAAA,IAAA,CAAA;AAJA,SAAA,EAAA,KAMA,mBAAA,CAAA,eAAA,CAAA,IAAA,CAAA,CAAA;AACA,OARA,MAQA,IAAA,QAAA,CAAA,YAAA,EAAA,KAAA,CAAA,YAAA,CAAA,IAAA,GAAA,KACA,mBAAA,CAAA,eAAA,CAAA,IAAA,CAAA,CAAA;AACA;;AApBA;AAlBA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"ResetRealityButton\",\r\n  data() {\r\n    return {\r\n      canReality: false,\r\n      resetCelestial: false,\r\n      isInCelestialReality: false,\r\n      isDoomed: false,\r\n    };\r\n  },\r\n  computed: {\r\n    resetText() {\r\n      if (this.isDoomed) return \"Start this Armageddon over\";\r\n      if (this.isInCelestialReality && !this.resetCelestial) return \"Exit this Celestial early\";\r\n      if (this.isInCelestialReality && this.resetCelestial) return \"Restart this Celestial\";\r\n      return \"Start this Reality over\";\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.canReality = TimeStudy.reality.isBought && player.records.thisReality.maxEP.exponent >= 4000;\r\n      this.resetCelestial = player.options.retryCelestial;\r\n      this.isInCelestialReality = isInCelestialReality();\r\n      this.isDoomed = Pelle.isDoomed;\r\n    },\r\n    resetReality() {\r\n      const confirms = player.options.confirmations;\r\n      if (GameEnd.creditsClosed) return;\r\n      if (this.isInCelestialReality) {\r\n        if (confirms.exitChallenge) Modal.exitChallenge.show({\r\n          challengeName: \"a Celestial Reality\",\r\n          normalName: \"Reality\",\r\n          hasHigherLayers: false,\r\n          exitFn: () => beginProcessReality(getRealityProps(true))\r\n        });\r\n        else beginProcessReality(getRealityProps(true));\r\n      } else if (confirms.resetReality) Modal.resetReality.show();\r\n      else beginProcessReality(getRealityProps(true));\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <button\r\n    :class=\"['l-reset-reality-button',\r\n             'c-reset-reality-button',\r\n             {'c-reset-reality-button-celestial': isInCelestialReality}]\"\r\n    @click=\"resetReality\"\r\n  >\r\n    <div class=\"l-reality-button__contents\">\r\n      {{ resetText }}\r\n    </div>\r\n  </button>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/glyphs"},"metadata":{},"sourceType":"module"}