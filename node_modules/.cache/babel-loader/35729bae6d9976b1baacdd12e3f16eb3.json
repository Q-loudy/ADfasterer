{"ast":null,"code":"import ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\nexport default {\n  name: \"SacrificeGlyphModal\",\n  components: {\n    ModalWrapperChoice\n  },\n  props: {\n    idx: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      currentGlyphSacrifice: 0,\n      gain: 0,\n      confirmedSacrifice: false\n    };\n  },\n\n  computed: {\n    glyph() {\n      return Glyphs.findByInventoryIndex(this.idx);\n    },\n\n    message() {\n      return `Do you really want to sacrifice this Glyph? Your total power of sacrificed ${this.glyph.type}\n      Glyphs will increase from ${format(this.currentGlyphSacrifice, 2, 2)} to\n      ${format(this.currentGlyphSacrifice + this.gain, 2, 2)}.`;\n    }\n\n  },\n  methods: {\n    update() {\n      this.currentGlyphSacrifice = player.reality.glyphs.sac[this.glyph.type];\n      this.gain = GlyphSacrificeHandler.glyphSacrificeGain(this.glyph);\n      const newGlyph = Glyphs.findByInventoryIndex(this.idx);\n\n      if (this.glyph !== newGlyph && !this.confirmedSacrifice) {\n        // ConfirmedSacrifice is here because when you sac a glyph with confirmation it\n        // Displays this modal message even though the glyph was sacced successfully.\n        // I have no idea how the eventHub thing works or if moving the UI update before\n        // the sac will break things so this is the best I could do. - Scar\n        this.emitClose();\n        Modal.message.show(\"The selected Glyph changed position or was otherwise changed!\");\n      }\n    },\n\n    handleYesClick() {\n      this.confirmedSacrifice = true;\n      GlyphSacrificeHandler.sacrificeGlyph(this.glyph, true);\n    }\n\n  }\n};","map":{"version":3,"sources":["SacrificeGlyphModal.vue"],"names":[],"mappings":"AACA,OAAA,kBAAA,MAAA,wCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GALA;;AAWA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,qBAAA,EAAA,CADA;AAEA,MAAA,IAAA,EAAA,CAFA;AAGA,MAAA,kBAAA,EAAA;AAHA,KAAA;AAKA,GAjBA;;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,GAAA;AACA,aAAA,MAAA,CAAA,oBAAA,CAAA,KAAA,GAAA,CAAA;AACA,KAHA;;AAIA,IAAA,OAAA,GAAA;AACA,aAAA,8EAAA,KAAA,KAAA,CAAA,IAAA;AACA,kCAAA,MAAA,CAAA,KAAA,qBAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AACA,QAAA,MAAA,CAAA,KAAA,qBAAA,GAAA,KAAA,IAAA,EAAA,CAAA,EAAA,CAAA,CAAA,GAFA;AAGA;;AARA,GAlBA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,qBAAA,GAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA;AACA,WAAA,IAAA,GAAA,qBAAA,CAAA,kBAAA,CAAA,KAAA,KAAA,CAAA;AAEA,YAAA,QAAA,GAAA,MAAA,CAAA,oBAAA,CAAA,KAAA,GAAA,CAAA;;AACA,UAAA,KAAA,KAAA,KAAA,QAAA,IAAA,CAAA,KAAA,kBAAA,EAAA;AAEA;AACA;AACA;AACA;AAEA,aAAA,SAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,+DAAA;AACA;AACA,KAhBA;;AAiBA,IAAA,cAAA,GAAA;AACA,WAAA,kBAAA,GAAA,IAAA;AACA,MAAA,qBAAA,CAAA,cAAA,CAAA,KAAA,KAAA,EAAA,IAAA;AACA;;AApBA;AA5BA,CAAA","sourcesContent":["<script>\r\nimport ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\r\n\r\nexport default {\r\n  name: \"SacrificeGlyphModal\",\r\n  components: {\r\n    ModalWrapperChoice\r\n  },\r\n  props: {\r\n    idx: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentGlyphSacrifice: 0,\r\n      gain: 0,\r\n      confirmedSacrifice: false\r\n    };\r\n  },\r\n  computed: {\r\n    glyph() {\r\n      return Glyphs.findByInventoryIndex(this.idx);\r\n    },\r\n    message() {\r\n      return `Do you really want to sacrifice this Glyph? Your total power of sacrificed ${this.glyph.type}\r\n      Glyphs will increase from ${format(this.currentGlyphSacrifice, 2, 2)} to\r\n      ${format(this.currentGlyphSacrifice + this.gain, 2, 2)}.`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.currentGlyphSacrifice = player.reality.glyphs.sac[this.glyph.type];\r\n      this.gain = GlyphSacrificeHandler.glyphSacrificeGain(this.glyph);\r\n\r\n      const newGlyph = Glyphs.findByInventoryIndex(this.idx);\r\n      if (this.glyph !== newGlyph && !this.confirmedSacrifice) {\r\n\r\n        // ConfirmedSacrifice is here because when you sac a glyph with confirmation it\r\n        // Displays this modal message even though the glyph was sacced successfully.\r\n        // I have no idea how the eventHub thing works or if moving the UI update before\r\n        // the sac will break things so this is the best I could do. - Scar\r\n\r\n        this.emitClose();\r\n        Modal.message.show(\"The selected Glyph changed position or was otherwise changed!\");\r\n      }\r\n    },\r\n    handleYesClick() {\r\n      this.confirmedSacrifice = true;\r\n      GlyphSacrificeHandler.sacrificeGlyph(this.glyph, true);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ModalWrapperChoice\r\n    option=\"glyphSacrifice\"\r\n    @confirm=\"handleYesClick\"\r\n  >\r\n    <template #header>\r\n      You are about to sacrifice a Glyph\r\n    </template>\r\n    <div class=\"c-modal-message__text\">\r\n      {{ message }}\r\n    </div>\r\n  </ModalWrapperChoice>\r\n</template>\r\n"],"sourceRoot":"src/components/modals/glyph-management"},"metadata":{},"sourceType":"module"}