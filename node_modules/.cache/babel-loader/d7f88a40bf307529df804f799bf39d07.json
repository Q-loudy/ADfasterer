{"ast":null,"code":"import ArmageddonButton from \"./ArmageddonButton\";\nimport PelleUpgradeVue from \"./PelleUpgrade\";\nimport RemnantGainFactor from \"./RemnantGainFactor\";\nexport default {\n  name: \"PelleUpgradePanel\",\n  components: {\n    ArmageddonButton,\n    PelleUpgradeVue,\n    RemnantGainFactor\n  },\n\n  data() {\n    return {\n      showBought: false,\n      isCollapsed: false,\n      isHovering: false,\n      remnants: 0,\n      realityShards: new Decimal(0),\n      shardRate: new Decimal(0),\n      upgrades: [],\n      boughtUpgrades: []\n    };\n  },\n\n  computed: {\n    collapseIcon() {\n      return this.isCollapsed ? \"fas fa-expand-arrows-alt\" : \"fas fa-compress-arrows-alt\";\n    },\n\n    rebuyables: () => PelleUpgrade.rebuyables,\n\n    visibleUpgrades() {\n      return this.upgrades.slice(0, 5);\n    },\n\n    fadedUpgrades() {\n      return this.upgrades.slice(5, 10);\n    },\n\n    allUpgrades() {\n      let upgrades = [];\n      if (this.showBought) upgrades = this.boughtUpgrades;\n      upgrades = upgrades.concat(this.visibleUpgrades);\n      return upgrades;\n    },\n\n    showImprovedEstimate() {\n      return this.isHovering && !this.shardRate.eq(0);\n    }\n\n  },\n  methods: {\n    update() {\n      this.showBought = Pelle.cel.showBought;\n      this.isCollapsed = player.celestials.pelle.collapsed.upgrades;\n      this.remnants = Pelle.cel.remnants;\n      this.realityShards.copyFrom(Pelle.cel.realityShards);\n      this.shardRate.copyFrom(Pelle.realityShardGainPerSecond);\n      this.upgrades = PelleUpgrade.singles.filter(u => !u.isBought);\n      this.boughtUpgrades = PelleUpgrade.singles.filter(u => u.isBought);\n    },\n\n    toggleBought() {\n      Pelle.cel.showBought = !Pelle.cel.showBought;\n      this.$recompute(\"upgrades\");\n    },\n\n    toggleCollapse() {\n      player.celestials.pelle.collapsed.upgrades = !this.isCollapsed;\n    }\n\n  }\n};","map":{"version":3,"sources":["PelleUpgradePanel.vue"],"names":[],"mappings":"AACA,OAAA,gBAAA,MAAA,oBAAA;AACA,OAAA,eAAA,MAAA,gBAAA;AACA,OAAA,iBAAA,MAAA,qBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,gBADA;AAEA,IAAA,eAFA;AAGA,IAAA;AAHA,GAFA;;AAOA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA,KAHA;AAIA,MAAA,QAAA,EAAA,CAJA;AAKA,MAAA,aAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CALA;AAMA,MAAA,SAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,cAAA,EAAA;AARA,KAAA;AAUA,GAlBA;;AAmBA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,GAAA;AACA,aAAA,KAAA,WAAA,GACA,0BADA,GAEA,4BAFA;AAGA,KALA;;AAMA,IAAA,UAAA,EAAA,MAAA,YAAA,CAAA,UANA;;AAOA,IAAA,eAAA,GAAA;AAAA,aAAA,KAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,KAPA;;AAQA,IAAA,aAAA,GAAA;AAAA,aAAA,KAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AAAA,KARA;;AASA,IAAA,WAAA,GAAA;AACA,UAAA,QAAA,GAAA,EAAA;AACA,UAAA,KAAA,UAAA,EAAA,QAAA,GAAA,KAAA,cAAA;AACA,MAAA,QAAA,GAAA,QAAA,CAAA,MAAA,CAAA,KAAA,eAAA,CAAA;AACA,aAAA,QAAA;AACA,KAdA;;AAeA,IAAA,oBAAA,GAAA;AACA,aAAA,KAAA,UAAA,IAAA,CAAA,KAAA,SAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA;;AAjBA,GAnBA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,UAAA,GAAA,KAAA,CAAA,GAAA,CAAA,UAAA;AACA,WAAA,WAAA,GAAA,MAAA,CAAA,UAAA,CAAA,KAAA,CAAA,SAAA,CAAA,QAAA;AACA,WAAA,QAAA,GAAA,KAAA,CAAA,GAAA,CAAA,QAAA;AACA,WAAA,aAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,aAAA;AACA,WAAA,SAAA,CAAA,QAAA,CAAA,KAAA,CAAA,yBAAA;AACA,WAAA,QAAA,GAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAAA;AACA,WAAA,cAAA,GAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA;AACA,KATA;;AAUA,IAAA,YAAA,GAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,UAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA;AACA,WAAA,UAAA,CAAA,UAAA;AACA,KAbA;;AAcA,IAAA,cAAA,GAAA;AACA,MAAA,MAAA,CAAA,UAAA,CAAA,KAAA,CAAA,SAAA,CAAA,QAAA,GAAA,CAAA,KAAA,WAAA;AACA;;AAhBA;AAtCA,CAAA","sourcesContent":["<script>\r\nimport ArmageddonButton from \"./ArmageddonButton\";\r\nimport PelleUpgradeVue from \"./PelleUpgrade\";\r\nimport RemnantGainFactor from \"./RemnantGainFactor\";\r\n\r\nexport default {\r\n  name: \"PelleUpgradePanel\",\r\n  components: {\r\n    ArmageddonButton,\r\n    PelleUpgradeVue,\r\n    RemnantGainFactor,\r\n  },\r\n  data() {\r\n    return {\r\n      showBought: false,\r\n      isCollapsed: false,\r\n      isHovering: false,\r\n      remnants: 0,\r\n      realityShards: new Decimal(0),\r\n      shardRate: new Decimal(0),\r\n      upgrades: [],\r\n      boughtUpgrades: []\r\n    };\r\n  },\r\n  computed: {\r\n    collapseIcon() {\r\n      return this.isCollapsed\r\n        ? \"fas fa-expand-arrows-alt\"\r\n        : \"fas fa-compress-arrows-alt\";\r\n    },\r\n    rebuyables: () => PelleUpgrade.rebuyables,\r\n    visibleUpgrades() { return this.upgrades.slice(0, 5); },\r\n    fadedUpgrades() { return this.upgrades.slice(5, 10); },\r\n    allUpgrades() {\r\n      let upgrades = [];\r\n      if (this.showBought) upgrades = this.boughtUpgrades;\r\n      upgrades = upgrades.concat(this.visibleUpgrades);\r\n      return upgrades;\r\n    },\r\n    showImprovedEstimate() {\r\n      return this.isHovering && !this.shardRate.eq(0);\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.showBought = Pelle.cel.showBought;\r\n      this.isCollapsed = player.celestials.pelle.collapsed.upgrades;\r\n      this.remnants = Pelle.cel.remnants;\r\n      this.realityShards.copyFrom(Pelle.cel.realityShards);\r\n      this.shardRate.copyFrom(Pelle.realityShardGainPerSecond);\r\n      this.upgrades = PelleUpgrade.singles.filter(u => !u.isBought);\r\n      this.boughtUpgrades = PelleUpgrade.singles.filter(u => u.isBought);\r\n    },\r\n    toggleBought() {\r\n      Pelle.cel.showBought = !Pelle.cel.showBought;\r\n      this.$recompute(\"upgrades\");\r\n    },\r\n    toggleCollapse() {\r\n      player.celestials.pelle.collapsed.upgrades = !this.isCollapsed;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-pelle-panel-container\">\r\n    <div class=\"c-pelle-panel-title\">\r\n      <i\r\n        :class=\"collapseIcon\"\r\n        class=\"c-collapse-icon-clickable\"\r\n        @click=\"toggleCollapse\"\r\n      />\r\n      Pelle Upgrades\r\n    </div>\r\n    <div\r\n      v-if=\"!isCollapsed\"\r\n      class=\"l-pelle-content-container\"\r\n    >\r\n      <div class=\"c-armageddon-container\">\r\n        <div>\r\n          <div\r\n            class=\"c-armageddon-button-container\"\r\n            @mouseover=\"isHovering = true\"\r\n            @mouseleave=\"isHovering = false\"\r\n          >\r\n            <ArmageddonButton />\r\n          </div>\r\n          <RemnantGainFactor :hide=\"showImprovedEstimate\" />\r\n        </div>\r\n        <div class=\"c-armageddon-resources-container\">\r\n          <div>\r\n            You have <span class=\"c-remnants-amount\">{{ format(remnants, 2) }}</span> Remnants.\r\n          </div>\r\n          <div>\r\n            You have <span class=\"c-remnants-amount\">{{ format(realityShards, 2) }}</span> Reality Shards.\r\n            <span class=\"c-remnants-amount\">+{{ format(shardRate, 2, 2) }}/s</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"c-pelle-upgrade-container\">\r\n        <PelleUpgradeVue\r\n          v-for=\"upgrade in rebuyables\"\r\n          :key=\"upgrade.config.id\"\r\n          :upgrade=\"upgrade\"\r\n          :show-improved-estimate=\"showImprovedEstimate\"\r\n        />\r\n      </div>\r\n      <button\r\n        class=\"o-pelle-button\"\r\n        @click=\"toggleBought\"\r\n      >\r\n        {{ showBought ? \"Showing bought upgrades\" : \"Bought upgrades hidden\" }}\r\n      </button>\r\n      <div\r\n        v-if=\"allUpgrades.length\"\r\n        class=\"c-pelle-upgrade-container\"\r\n      >\r\n        <PelleUpgradeVue\r\n          v-for=\"upgrade in allUpgrades\"\r\n          :key=\"upgrade.config.id\"\r\n          :upgrade=\"upgrade\"\r\n          :show-improved-estimate=\"showImprovedEstimate\"\r\n        />\r\n        <PelleUpgradeVue\r\n          v-for=\"upgrade in fadedUpgrades\"\r\n          :key=\"upgrade.config.id\"\r\n          :upgrade=\"upgrade\"\r\n          faded\r\n        />\r\n      </div>\r\n      <div v-else>\r\n        No upgrades to show!\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-collapse-icon-clickable {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 1.5rem;\r\n  width: 3rem;\r\n  align-content: center;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n}\r\n\r\n.o-pelle-button {\r\n  font-family: Typewriter;\r\n  color: var(--color-text);\r\n  background: var(--color-text-inverted);\r\n  border: 0.1rem solid var(--color-pelle--base);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  margin: 1rem 0 0.5rem;\r\n  padding: 1rem;\r\n  transition-duration: 0.12s;\r\n  cursor: pointer;\r\n}\r\n\r\n.o-pelle-button:hover {\r\n  box-shadow: 0.1rem 0.1rem 0.3rem var(--color-pelle--base);\r\n}\r\n\r\n.c-pelle-upgrade-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 110rem;\r\n  justify-content: center;\r\n}\r\n\r\n.c-armageddon-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  align-self: center;\r\n  border: var(--var-border-width, 0.2rem) solid var(--color-pelle--base);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  padding: 1rem;\r\n}\r\n\r\n.c-armageddon-button-container {\r\n  width: 32rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.c-armageddon-resources-container {\r\n  width: 41.5rem;\r\n}\r\n\r\n.c-remnants-amount {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: var(--color-pelle--base);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/celestial-pelle"},"metadata":{},"sourceType":"module"}