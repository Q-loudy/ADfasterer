{"ast":null,"code":"import { AutobuyerState } from \"./autobuyer\";\nexport class SacrificeAutobuyerState extends AutobuyerState {\n  get data() {\n    return player.auto.sacrifice;\n  }\n\n  get name() {\n    return `Dimensional Sacrifice`;\n  }\n\n  get isUnlocked() {\n    return EternityMilestone.autoIC.isReached || InfinityChallenge(2).isCompleted;\n  }\n\n  get multiplier() {\n    return this.data.multiplier;\n  }\n\n  set multiplier(value) {\n    this.data.multiplier = value;\n  }\n\n  get bulk() {\n    return 0;\n  }\n\n  get hasInput() {\n    return true;\n  }\n\n  get inputType() {\n    return \"decimal\";\n  }\n\n  get inputEntry() {\n    return \"multiplier\";\n  }\n\n  tick() {\n    if (Achievement(118).canBeApplied || Sacrifice.nextBoost.gte(Decimal.max(this.multiplier, 1.01))) sacrificeReset();\n  }\n\n}","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/autobuyers/sacrifice-autobuyer.js"],"names":["AutobuyerState","SacrificeAutobuyerState","data","player","auto","sacrifice","name","isUnlocked","EternityMilestone","autoIC","isReached","InfinityChallenge","isCompleted","multiplier","value","bulk","hasInput","inputType","inputEntry","tick","Achievement","canBeApplied","Sacrifice","nextBoost","gte","Decimal","max","sacrificeReset"],"mappings":"AAAA,SAASA,cAAT,QAA+B,aAA/B;AAEA,OAAO,MAAMC,uBAAN,SAAsCD,cAAtC,CAAqD;AAClD,MAAJE,IAAI,GAAG;AACT,WAAOC,MAAM,CAACC,IAAP,CAAYC,SAAnB;AACD;;AAEO,MAAJC,IAAI,GAAG;AACT,WAAQ,uBAAR;AACD;;AAEa,MAAVC,UAAU,GAAG;AACf,WAAOC,iBAAiB,CAACC,MAAlB,CAAyBC,SAAzB,IAAsCC,iBAAiB,CAAC,CAAD,CAAjB,CAAqBC,WAAlE;AACD;;AAEa,MAAVC,UAAU,GAAG;AACf,WAAO,KAAKX,IAAL,CAAUW,UAAjB;AACD;;AAEa,MAAVA,UAAU,CAACC,KAAD,EAAQ;AACpB,SAAKZ,IAAL,CAAUW,UAAV,GAAuBC,KAAvB;AACD;;AAEO,MAAJC,IAAI,GAAG;AACT,WAAO,CAAP;AACD;;AAEW,MAARC,QAAQ,GAAG;AACb,WAAO,IAAP;AACD;;AAEY,MAATC,SAAS,GAAG;AACd,WAAO,SAAP;AACD;;AAEa,MAAVC,UAAU,GAAG;AACf,WAAO,YAAP;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,QAAIC,WAAW,CAAC,GAAD,CAAX,CAAiBC,YAAjB,IAAiCC,SAAS,CAACC,SAAV,CAAoBC,GAApB,CAAwBC,OAAO,CAACC,GAAR,CAAY,KAAKb,UAAjB,EAA6B,IAA7B,CAAxB,CAArC,EAAkGc,cAAc;AACjH;;AAvCyD","sourcesContent":["import { AutobuyerState } from \"./autobuyer\";\r\n\r\nexport class SacrificeAutobuyerState extends AutobuyerState {\r\n  get data() {\r\n    return player.auto.sacrifice;\r\n  }\r\n\r\n  get name() {\r\n    return `Dimensional Sacrifice`;\r\n  }\r\n\r\n  get isUnlocked() {\r\n    return EternityMilestone.autoIC.isReached || InfinityChallenge(2).isCompleted;\r\n  }\r\n\r\n  get multiplier() {\r\n    return this.data.multiplier;\r\n  }\r\n\r\n  set multiplier(value) {\r\n    this.data.multiplier = value;\r\n  }\r\n\r\n  get bulk() {\r\n    return 0;\r\n  }\r\n\r\n  get hasInput() {\r\n    return true;\r\n  }\r\n\r\n  get inputType() {\r\n    return \"decimal\";\r\n  }\r\n\r\n  get inputEntry() {\r\n    return \"multiplier\";\r\n  }\r\n\r\n  tick() {\r\n    if (Achievement(118).canBeApplied || Sacrifice.nextBoost.gte(Decimal.max(this.multiplier, 1.01))) sacrificeReset();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}