{"ast":null,"code":"import CreditsDisplay from \"@/components/CreditsDisplay\";\nexport default {\n  name: \"CreditsContainer\",\n  components: {\n    CreditsDisplay\n  },\n\n  data() {\n    return {\n      rolling: false,\n      scroll: 0,\n      audio: null,\n      isMuted: false\n    };\n  },\n\n  computed: {\n    creditStyles() {\n      return {\n        bottom: `${this.scroll}px`,\n        display: this.rolling ? \"block\" : \"none\"\n      };\n    },\n\n    muteStyle() {\n      return {\n        top: `calc(${this.scroll + 20}px - 100vh)`,\n        display: this.rolling ? \"block\" : \"none\"\n      };\n    },\n\n    muteIconClass() {\n      return this.isMuted ? \"fa-volume-xmark\" : \"fa-volume-high\";\n    },\n\n    celestialDisplays() {\n      return {\n        teresa: Teresa.symbol,\n        effarig: Effarig.symbol,\n        enslaved: Enslaved.symbol,\n        v: V.symbol,\n        ra: Ra.symbol,\n        laitela: Laitela.symbol,\n        pelle: Pelle.symbol\n      };\n    }\n\n  },\n  watch: {\n    rolling(newVal, oldVal) {\n      if (GameEnd.creditsEverClosed) return;\n\n      if (!oldVal && newVal && this.audio === null) {\n        this.audio = new Audio(`audio/credits.mp3`);\n        this.audio.play();\n      }\n    }\n\n  },\n\n  created() {\n    // Use a hardcoded 33ms in order to make the end credits scroll smoothly; if the player normally plays\n    // at a much slower rate, this causes the credits to have a jumpy-looking scroll. Since this is a setting\n    // which persists across new games, we want to make sure we still preserve the old value too\n    const oldRate = player.options.updateRate;\n    player.options.updateRate = 33;\n    GameOptions.refreshUpdateRate();\n    player.options.updateRate = oldRate;\n  },\n\n  methods: {\n    update() {\n      var _this$$refs$creditsDi;\n\n      const height = (((_this$$refs$creditsDi = this.$refs.creditsDisplay) === null || _this$$refs$creditsDi === void 0 ? void 0 : _this$$refs$creditsDi.offsetHeight) || 0) + innerHeight;\n      this.rolling = GameEnd.endState > END_STATE_MARKERS.CREDITS_START;\n      this.scroll = (Math.clampMax(GameEnd.endState, END_STATE_MARKERS.CREDITS_END) - END_STATE_MARKERS.CREDITS_START) / (END_STATE_MARKERS.SONG_END - END_STATE_MARKERS.CREDITS_START) * height;\n      if (this.audio) this.audio.volume = this.isMuted ? 0 : Math.clamp(GameEnd.endState - END_STATE_MARKERS.CREDITS_START, 0, 0.3);\n    }\n\n  }\n};","map":{"version":3,"sources":["CreditsContainer.vue"],"names":[],"mappings":"AACA,OAAA,cAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,MAAA,EAAA,CAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GAZA;;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,GAAA;AACA,aAAA;AACA,QAAA,MAAA,EAAA,GAAA,KAAA,MAAA,IADA;AAEA,QAAA,OAAA,EAAA,KAAA,OAAA,GAAA,OAAA,GAAA;AAFA,OAAA;AAIA,KANA;;AAOA,IAAA,SAAA,GAAA;AACA,aAAA;AACA,QAAA,GAAA,EAAA,QAAA,KAAA,MAAA,GAAA,EAAA,aADA;AAEA,QAAA,OAAA,EAAA,KAAA,OAAA,GAAA,OAAA,GAAA;AAFA,OAAA;AAIA,KAZA;;AAaA,IAAA,aAAA,GAAA;AACA,aAAA,KAAA,OAAA,GAAA,iBAAA,GAAA,gBAAA;AACA,KAfA;;AAgBA,IAAA,iBAAA,GAAA;AACA,aAAA;AACA,QAAA,MAAA,EAAA,MAAA,CAAA,MADA;AAEA,QAAA,OAAA,EAAA,OAAA,CAAA,MAFA;AAGA,QAAA,QAAA,EAAA,QAAA,CAAA,MAHA;AAIA,QAAA,CAAA,EAAA,CAAA,CAAA,MAJA;AAKA,QAAA,EAAA,EAAA,EAAA,CAAA,MALA;AAMA,QAAA,OAAA,EAAA,OAAA,CAAA,MANA;AAOA,QAAA,KAAA,EAAA,KAAA,CAAA;AAPA,OAAA;AASA;;AA1BA,GAbA;AAyCA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,CAAA,MAAA,EAAA,MAAA,EAAA;AACA,UAAA,OAAA,CAAA,iBAAA,EAAA;;AACA,UAAA,CAAA,MAAA,IAAA,MAAA,IAAA,KAAA,KAAA,KAAA,IAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA,KAAA,CAAA,mBAAA,CAAA;AACA,aAAA,KAAA,CAAA,IAAA;AACA;AACA;;AAPA,GAzCA;;AAkDA,EAAA,OAAA,GAAA;AACA;AACA;AACA;AACA,UAAA,OAAA,GAAA,MAAA,CAAA,OAAA,CAAA,UAAA;AACA,IAAA,MAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,IAAA,WAAA,CAAA,iBAAA;AACA,IAAA,MAAA,CAAA,OAAA,CAAA,UAAA,GAAA,OAAA;AACA,GA1DA;;AA2DA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AAAA;;AACA,YAAA,MAAA,GAAA,CAAA,+BAAA,KAAA,CAAA,cAAA,gFAAA,YAAA,KAAA,CAAA,IAAA,WAAA;AACA,WAAA,OAAA,GAAA,OAAA,CAAA,QAAA,GAAA,iBAAA,CAAA,aAAA;AACA,WAAA,MAAA,GAAA,CACA,IAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,EAAA,iBAAA,CAAA,WAAA,IAAA,iBAAA,CAAA,aADA,KAEA,iBAAA,CAAA,QAAA,GAAA,iBAAA,CAAA,aAFA,IAEA,MAFA;AAGA,UAAA,KAAA,KAAA,EAAA,KAAA,KAAA,CAAA,MAAA,GAAA,KAAA,OAAA,GACA,CADA,GAEA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,QAAA,GAAA,iBAAA,CAAA,aAAA,EAAA,CAAA,EAAA,GAAA,CAFA;AAGA;;AAVA;AA3DA,CAAA","sourcesContent":["<script>\r\nimport CreditsDisplay from \"@/components/CreditsDisplay\";\r\n\r\nexport default {\r\n  name: \"CreditsContainer\",\r\n  components: {\r\n    CreditsDisplay\r\n  },\r\n  data() {\r\n    return {\r\n      rolling: false,\r\n      scroll: 0,\r\n      audio: null,\r\n      isMuted: false,\r\n    };\r\n  },\r\n  computed: {\r\n    creditStyles() {\r\n      return {\r\n        bottom: `${this.scroll}px`,\r\n        display: this.rolling ? \"block\" : \"none\"\r\n      };\r\n    },\r\n    muteStyle() {\r\n      return {\r\n        top: `calc(${this.scroll + 20}px - 100vh)`,\r\n        display: this.rolling ? \"block\" : \"none\"\r\n      };\r\n    },\r\n    muteIconClass() {\r\n      return this.isMuted ? \"fa-volume-xmark\" : \"fa-volume-high\";\r\n    },\r\n    celestialDisplays() {\r\n      return {\r\n        teresa: Teresa.symbol,\r\n        effarig: Effarig.symbol,\r\n        enslaved: Enslaved.symbol,\r\n        v: V.symbol,\r\n        ra: Ra.symbol,\r\n        laitela: Laitela.symbol,\r\n        pelle: Pelle.symbol\r\n      };\r\n    }\r\n  },\r\n  watch: {\r\n    rolling(newVal, oldVal) {\r\n      if (GameEnd.creditsEverClosed) return;\r\n      if (!oldVal && newVal && this.audio === null) {\r\n        this.audio = new Audio(`audio/credits.mp3`);\r\n        this.audio.play();\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // Use a hardcoded 33ms in order to make the end credits scroll smoothly; if the player normally plays\r\n    // at a much slower rate, this causes the credits to have a jumpy-looking scroll. Since this is a setting\r\n    // which persists across new games, we want to make sure we still preserve the old value too\r\n    const oldRate = player.options.updateRate;\r\n    player.options.updateRate = 33;\r\n    GameOptions.refreshUpdateRate();\r\n    player.options.updateRate = oldRate;\r\n  },\r\n  methods: {\r\n    update() {\r\n      const height = (this.$refs.creditsDisplay?.offsetHeight || 0) + innerHeight;\r\n      this.rolling = GameEnd.endState > END_STATE_MARKERS.CREDITS_START;\r\n      this.scroll = (\r\n        Math.clampMax(GameEnd.endState, END_STATE_MARKERS.CREDITS_END) - END_STATE_MARKERS.CREDITS_START\r\n      ) / (END_STATE_MARKERS.SONG_END - END_STATE_MARKERS.CREDITS_START) * height;\r\n      if (this.audio) this.audio.volume = this.isMuted\r\n        ? 0\r\n        : Math.clamp((GameEnd.endState - END_STATE_MARKERS.CREDITS_START), 0, 0.3);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"c-credits-container\"\r\n    :style=\"creditStyles\"\r\n  >\r\n    <i\r\n      class=\"c-mute-button fa-solid\"\r\n      :class=\"muteIconClass\"\r\n      :style=\"muteStyle\"\r\n      @click=\"isMuted = !isMuted\"\r\n    />\r\n    <div\r\n      v-for=\"(celSymbol, celIndex) in celestialDisplays\"\r\n      :key=\"celIndex + '-end-credit-symbol-disp'\"\r\n      class=\"c-credits-cel-symbol\"\r\n      :class=\"`c-${celIndex}-credits`\"\r\n      v-html=\"celSymbol\"\r\n    />\r\n    <span ref=\"creditsDisplay\">\r\n      <CreditsDisplay />\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n@keyframes a-teresa-credits {\r\n  0% { transform: rotate(61deg); }\r\n  10% { transform: rotate(322deg); }\r\n  20% { transform: rotate(235deg); }\r\n  30% { transform: rotate(222deg); }\r\n  40% { transform: rotate(105deg); }\r\n  50% { transform: rotate(33deg); }\r\n  60% { transform: rotate(103deg); }\r\n  70% { transform: rotate(158deg); }\r\n  80% { transform: rotate(41deg); }\r\n  90% { transform: rotate(73deg); }\r\n  100% { transform: rotate(61deg); }\r\n}\r\n\r\n@keyframes a-effarig-credits {\r\n  0% {\r\n    opacity: 0.8;\r\n    text-shadow: 0 0 3rem;\r\n  }\r\n\r\n  50% {\r\n    opacity: 1;\r\n    text-shadow: 0 0 4rem, 0 0 4rem;\r\n  }\r\n\r\n  100% {\r\n    opacity: 0.8;\r\n    text-shadow: 0 0 3rem;\r\n  }\r\n}\r\n\r\n@keyframes a-enslaved-credits {\r\n  0% { transform: translateX(-50%) rotate(0); }\r\n  100% { transform: translateX(-50%) rotate(360deg); }\r\n}\r\n\r\n/* We unfortunately have to do it this way, because due to how the benzene unicode symbol works, 0 and 120deg aren't\r\nperfectly the same. */\r\n@keyframes a-v-credits {\r\n  0% { transform: translateX(-50%) rotate(0) scale(0.8); }\r\n  16.67% { transform: translateX(-50%) rotate(60deg) scale(1.2); }\r\n  33.33% { transform: translateX(-50%) rotate(120deg) scale(0.8); }\r\n  50% { transform: translateX(-50%) rotate(180deg) scale(1.2); }\r\n  66.67% { transform: translateX(-50%) rotate(240deg) scale(0.8); }\r\n  83.33% { transform: translateX(-50%) rotate(300deg) scale(1.2); }\r\n  100% { transform: translateX(-50%) rotate(360deg) scale(0.8); }\r\n}\r\n\r\n@keyframes a-ra-credits {\r\n  0% {\r\n    opacity: 0.3;\r\n    transform: translateX(-50%) scale(0.2);\r\n  }\r\n\r\n  50% {\r\n    opacity: 0.7;\r\n    transform: translateX(-50%) scale(0.9);\r\n  }\r\n\r\n  100% {\r\n    opacity: 0.3;\r\n    transform: translateX(-50%) scale(0.2);\r\n  }\r\n}\r\n\r\n@keyframes a-ra-credits--dark {\r\n  0% {\r\n    opacity: 0.1;\r\n    transform: translateX(-50%) scale(0.2);\r\n  }\r\n\r\n  50% {\r\n    opacity: 0.4;\r\n    transform: translateX(-50%) scale(0.9);\r\n  }\r\n\r\n  100% {\r\n    opacity: 0.1;\r\n    transform: translateX(-50%) scale(0.2);\r\n  }\r\n}\r\n\r\n@keyframes a-laitela-credits {\r\n  0% { transform: translate(-50%, 30%); }\r\n  25% { transform: translate(-50%, -20%); }\r\n  50% { transform: translate(-50%, 30%); }\r\n  75% { transform: translate(0%, 30%); }\r\n  100% { transform: translate(-50%, 30%); }\r\n}\r\n\r\n@keyframes a-pelle-credits {\r\n  0% { transform: translateX(-50%) rotate3d(0, 1, 0, 0) scaleY(1); }\r\n  25% { transform: translateX(-50%) rotate3d(0, 1, 0, 90deg) scaleY(1.3); }\r\n  50% { transform: translateX(-50%) rotate3d(0, 1, 0, 180deg) scaleY(1); }\r\n  75% { transform: translateX(-50%) rotate3d(0, 1, 0, 270deg) scaleY(1.3); }\r\n  100% { transform: translateX(-50%) rotate3d(0, 1, 0, 360deg) scaleY(1); }\r\n}\r\n\r\n.c-mute-button {\r\n  position: fixed;\r\n  left: 2rem;\r\n  font-size: 2rem;\r\n  opacity: 0.5;\r\n  pointer-events: auto;\r\n  cursor: pointer;\r\n}\r\n\r\n.t-s12 .c-mute-button {\r\n  color: white;\r\n}\r\n\r\n.c-credits-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 0;\r\n  z-index: 9;\r\n  transform: translateY(100%);\r\n  pointer-events: none;\r\n}\r\n\r\n.c-credits-cel-symbol {\r\n  display: flex;\r\n  width: 14rem;\r\n  height: 14rem;\r\n  position: absolute;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 14rem;\r\n  text-shadow: 0 0 3rem;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.c-teresa-credits {\r\n  top: 145rem;\r\n  left: 65%;\r\n  color: var(--color-teresa--base);\r\n  animation: a-teresa-credits 10s ease-in-out infinite;\r\n}\r\n\r\n.c-effarig-credits {\r\n  top: 50rem;\r\n  left: 80%;\r\n  color: #ff4400;\r\n  animation: a-effarig-credits 4s ease-in-out infinite;\r\n}\r\n\r\n.c-enslaved-credits {\r\n  top: 240rem;\r\n  left: 80%;\r\n  color: var(--color-enslaved--base);\r\n  animation: a-enslaved-credits 10s linear infinite;\r\n}\r\n\r\n.c-v-credits {\r\n  top: 185rem;\r\n  left: 20%;\r\n  color: var(--color-v--base);\r\n  animation: a-v-credits 15s ease-in-out infinite;\r\n}\r\n\r\n.c-ra-credits {\r\n  top: 480rem;\r\n  left: 60%;\r\n  color: var(--color-ra--base);\r\n  animation: a-ra-credits 10s ease-in-out infinite;\r\n}\r\n\r\n.s-base--dark .c-ra-credits {\r\n  animation: a-ra-credits--dark 10s ease-in-out infinite;\r\n}\r\n\r\n.c-laitela-credits {\r\n  top: 105rem;\r\n  left: 13%;\r\n  color: #ffffff;\r\n  animation: a-laitela-credits 5s ease-in-out infinite;\r\n}\r\n\r\n.c-pelle-credits {\r\n  top: 8rem;\r\n  left: 30%;\r\n  color: var(--color-pelle--base);\r\n  animation: a-pelle-credits 5s linear infinite;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/celestial-pelle"},"metadata":{},"sourceType":"module"}