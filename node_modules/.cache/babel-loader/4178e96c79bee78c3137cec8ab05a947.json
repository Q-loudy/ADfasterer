{"ast":null,"code":"import ModalOptionsToggleButton from \"@/components/ModalOptionsToggleButton\";\nimport ModalWrapperOptions from \"@/components/modals/options/ModalWrapperOptions\";\nexport default {\n  name: \"InfoDisplayOptionsModal\",\n  components: {\n    ModalOptionsToggleButton,\n    ModalWrapperOptions\n  },\n\n  data() {\n    return {\n      infinityUnlocked: false,\n      eternityUnlocked: false,\n      realityUnlocked: false,\n      alchemyUnlocked: false,\n      showPercentage: false,\n      achievements: false,\n      achievementUnlockStates: false,\n      challenges: false,\n      studies: false,\n      glyphEffectDots: false,\n      realityUpgrades: false,\n      perks: false,\n      alchemy: false\n    };\n  },\n\n  computed: {\n    fullCompletion() {\n      return player.records.fullGameCompletions > 0;\n    }\n\n  },\n  watch: {\n    showPercentage(newValue) {\n      player.options.showHintText.showPercentage = newValue;\n    },\n\n    achievements(newValue) {\n      player.options.showHintText.achievements = newValue;\n    },\n\n    achievementUnlockStates(newValue) {\n      player.options.showHintText.achievementUnlockStates = newValue;\n    },\n\n    challenges(newValue) {\n      player.options.showHintText.challenges = newValue;\n    },\n\n    studies(newValue) {\n      player.options.showHintText.studies = newValue;\n    },\n\n    glyphEffectDots(newValue) {\n      player.options.showHintText.glyphEffectDots = newValue;\n    },\n\n    realityUpgrades(newValue) {\n      player.options.showHintText.realityUpgrades = newValue;\n    },\n\n    perks(newValue) {\n      player.options.showHintText.perks = newValue;\n    },\n\n    alchemy(newValue) {\n      player.options.showHintText.alchemy = newValue;\n    }\n\n  },\n  methods: {\n    update() {\n      const progress = PlayerProgress.current;\n      this.infinityUnlocked = this.fullCompletion || progress.isInfinityUnlocked;\n      this.eternityUnlocked = this.fullCompletion || progress.isEternityUnlocked;\n      this.realityUnlocked = this.fullCompletion || progress.isRealityUnlocked;\n      this.alchemyUnlocked = this.fullCompletion || Ra.unlocks.effarigUnlock.canBeApplied;\n      const options = player.options.showHintText;\n      this.showPercentage = options.showPercentage;\n      this.achievements = options.achievements;\n      this.achievementUnlockStates = options.achievementUnlockStates;\n      this.challenges = options.challenges;\n      this.studies = options.studies;\n      this.glyphEffectDots = options.glyphEffectDots;\n      this.realityUpgrades = options.realityUpgrades;\n      this.perks = options.perks;\n      this.alchemy = options.alchemy;\n    }\n\n  }\n};","map":{"version":3,"sources":["InfoDisplayOptionsModal.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport ModalOptionsToggleButton from \"@/components/ModalOptionsToggleButton\";\r\nimport ModalWrapperOptions from \"@/components/modals/options/ModalWrapperOptions\";\r\n\r\nexport default {\r\n  name: \"InfoDisplayOptionsModal\",\r\n  components: {\r\n    ModalOptionsToggleButton,\r\n    ModalWrapperOptions,\r\n  },\r\n  data() {\r\n    return {\r\n      infinityUnlocked: false,\r\n      eternityUnlocked: false,\r\n      realityUnlocked: false,\r\n      alchemyUnlocked: false,\r\n\r\n      showPercentage: false,\r\n      achievements: false,\r\n      achievementUnlockStates: false,\r\n      challenges: false,\r\n      studies: false,\r\n      glyphEffectDots: false,\r\n      realityUpgrades: false,\r\n      perks: false,\r\n      alchemy: false,\r\n    };\r\n  },\r\n  computed: {\r\n    fullCompletion() {\r\n      return player.records.fullGameCompletions > 0;\r\n    }\r\n  },\r\n  watch: {\r\n    showPercentage(newValue) {\r\n      player.options.showHintText.showPercentage = newValue;\r\n    },\r\n    achievements(newValue) {\r\n      player.options.showHintText.achievements = newValue;\r\n    },\r\n    achievementUnlockStates(newValue) {\r\n      player.options.showHintText.achievementUnlockStates = newValue;\r\n    },\r\n    challenges(newValue) {\r\n      player.options.showHintText.challenges = newValue;\r\n    },\r\n    studies(newValue) {\r\n      player.options.showHintText.studies = newValue;\r\n    },\r\n    glyphEffectDots(newValue) {\r\n      player.options.showHintText.glyphEffectDots = newValue;\r\n    },\r\n    realityUpgrades(newValue) {\r\n      player.options.showHintText.realityUpgrades = newValue;\r\n    },\r\n    perks(newValue) {\r\n      player.options.showHintText.perks = newValue;\r\n    },\r\n    alchemy(newValue) {\r\n      player.options.showHintText.alchemy = newValue;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      const progress = PlayerProgress.current;\r\n      this.infinityUnlocked = this.fullCompletion || progress.isInfinityUnlocked;\r\n      this.eternityUnlocked = this.fullCompletion || progress.isEternityUnlocked;\r\n      this.realityUnlocked = this.fullCompletion || progress.isRealityUnlocked;\r\n      this.alchemyUnlocked = this.fullCompletion || Ra.unlocks.effarigUnlock.canBeApplied;\r\n\r\n      const options = player.options.showHintText;\r\n      this.showPercentage = options.showPercentage;\r\n      this.achievements = options.achievements;\r\n      this.achievementUnlockStates = options.achievementUnlockStates;\r\n      this.challenges = options.challenges;\r\n      this.studies = options.studies;\r\n      this.glyphEffectDots = options.glyphEffectDots;\r\n      this.realityUpgrades = options.realityUpgrades;\r\n      this.perks = options.perks;\r\n      this.alchemy = options.alchemy;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ModalWrapperOptions class=\"c-modal-options__large\">\r\n    <template #header>\r\n      Info Display Options\r\n    </template>\r\n    <div class=\"c-modal-options__button-container\">\r\n      <ModalOptionsToggleButton\r\n        v-model=\"showPercentage\"\r\n        text=\"Show % gain:\"\r\n      />\r\n      <ModalOptionsToggleButton\r\n        v-model=\"achievements\"\r\n        text=\"Achievement IDs:\"\r\n      />\r\n      <ModalOptionsToggleButton\r\n        v-model=\"achievementUnlockStates\"\r\n        text=\"Achievement unlock state indicators:\"\r\n      />\r\n      <ModalOptionsToggleButton\r\n        v-if=\"infinityUnlocked\"\r\n        v-model=\"challenges\"\r\n        text=\"Challenge IDs:\"\r\n      />\r\n      <ModalOptionsToggleButton\r\n        v-if=\"eternityUnlocked\"\r\n        v-model=\"studies\"\r\n        text=\"Time Study IDs:\"\r\n      />\r\n      <ModalOptionsToggleButton\r\n        v-if=\"realityUnlocked\"\r\n        v-model=\"glyphEffectDots\"\r\n        text=\"Glyph effect dots:\"\r\n      />\r\n      <ModalOptionsToggleButton\r\n        v-if=\"realityUnlocked\"\r\n        v-model=\"realityUpgrades\"\r\n        text=\"Reality Upgrade names:\"\r\n      />\r\n      <ModalOptionsToggleButton\r\n        v-if=\"realityUnlocked\"\r\n        v-model=\"perks\"\r\n        text=\"Perk IDs:\"\r\n      />\r\n      <ModalOptionsToggleButton\r\n        v-if=\"alchemyUnlocked\"\r\n        v-model=\"alchemy\"\r\n        text=\"Alchemy resource amounts:\"\r\n      />\r\n    </div>\r\n    Note: All types of additional info above will always display when holding shift.\r\n  </ModalWrapperOptions>\r\n</template>\r\n"],"sourceRoot":"src/components/modals/options"},"metadata":{},"sourceType":"module"}