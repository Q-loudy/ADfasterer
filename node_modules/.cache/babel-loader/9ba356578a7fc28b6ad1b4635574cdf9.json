{"ast":null,"code":"import CelestialQuoteLine from \"@/components/modals/celestial-quotes/CelestialQuoteLine\";\nexport default {\n  name: \"CelestialQuoteBasicInteractable\",\n  components: {\n    CelestialQuoteLine\n  },\n  props: {\n    quote: {\n      type: Object,\n      required: true\n    },\n    isFocused: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    primary: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    leftVisible: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    rightVisible: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    closeVisible: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      index: 0\n    };\n  },\n\n  computed: {\n    totalLines() {\n      return this.quote.totalLines;\n    },\n\n    currentLine: {\n      get() {\n        return this.index;\n      },\n\n      set(x) {\n        this.index = Math.clamp(x, 0, this.totalLines - 1);\n      }\n\n    },\n\n    isQuoteStart() {\n      return this.currentLine === 0;\n    },\n\n    isQuoteEnd() {\n      return this.currentLine === this.totalLines - 1;\n    }\n\n  },\n\n  created() {\n    this.$nextTick(() => {\n      this.on$(GAME_EVENT.ARROW_KEY_PRESSED, arrow => this.progressIn(arrow[0]));\n      this.on$(GAME_EVENT.ENTER_PRESSED, () => {\n        if (this.isQuoteEnd) this.close();\n      });\n    });\n  },\n\n  methods: {\n    progressIn(direction) {\n      if (!this.isFocused) return false;\n\n      switch (direction) {\n        case \"left\":\n          return this.currentLine--;\n\n        case \"right\":\n          return this.currentLine++;\n\n        default:\n          return false;\n      }\n    },\n\n    close() {\n      if (!this.isFocused) return;\n      this.index = 0;\n      Quote.advanceQueue();\n    }\n\n  }\n};","map":{"version":3,"sources":["CelestialQuoteLineBasicInteractable.vue"],"names":[],"mappings":"AACA,OAAA,kBAAA,MAAA,yDAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iCADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KALA;AAUA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAVA;AAeA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAfA;AAoBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KApBA;AAyBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AAzBA,GALA;;AAoCA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GAxCA;;AAyCA,EAAA,QAAA,EAAA;AACA,IAAA,UAAA,GAAA;AACA,aAAA,KAAA,KAAA,CAAA,UAAA;AACA,KAHA;;AAIA,IAAA,WAAA,EAAA;AACA,MAAA,GAAA,GAAA;AACA,eAAA,KAAA,KAAA;AACA,OAHA;;AAIA,MAAA,GAAA,CAAA,CAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,UAAA,GAAA,CAAA,CAAA;AACA;;AANA,KAJA;;AAYA,IAAA,YAAA,GAAA;AACA,aAAA,KAAA,WAAA,KAAA,CAAA;AACA,KAdA;;AAeA,IAAA,UAAA,GAAA;AACA,aAAA,KAAA,WAAA,KAAA,KAAA,UAAA,GAAA,CAAA;AACA;;AAjBA,GAzCA;;AA4DA,EAAA,OAAA,GAAA;AACA,SAAA,SAAA,CAAA,MAAA;AACA,WAAA,GAAA,CAAA,UAAA,CAAA,iBAAA,EAAA,KAAA,IAAA,KAAA,UAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAAA,GAAA,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA;AACA,YAAA,KAAA,UAAA,EAAA,KAAA,KAAA;AACA,OAFA;AAGA,KALA;AAMA,GAnEA;;AAoEA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,CAAA,SAAA,EAAA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA,OAAA,KAAA;;AACA,cAAA,SAAA;AACA,aAAA,MAAA;AAAA,iBAAA,KAAA,WAAA,EAAA;;AACA,aAAA,OAAA;AAAA,iBAAA,KAAA,WAAA,EAAA;;AACA;AAAA,iBAAA,KAAA;AAHA;AAKA,KARA;;AASA,IAAA,KAAA,GAAA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA,WAAA,KAAA,GAAA,CAAA;AACA,MAAA,KAAA,CAAA,YAAA;AACA;;AAbA;AApEA,CAAA","sourcesContent":["<script>\r\nimport CelestialQuoteLine from \"@/components/modals/celestial-quotes/CelestialQuoteLine\";\r\n\r\nexport default {\r\n  name: \"CelestialQuoteBasicInteractable\",\r\n  components: {\r\n    CelestialQuoteLine\r\n  },\r\n  props: {\r\n    quote: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    isFocused: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    primary: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false,\r\n    },\r\n    leftVisible: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    rightVisible: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    closeVisible: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      index: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    totalLines() {\r\n      return this.quote.totalLines;\r\n    },\r\n    currentLine: {\r\n      get() {\r\n        return this.index;\r\n      },\r\n      set(x) {\r\n        this.index = Math.clamp(x, 0, this.totalLines - 1);\r\n      }\r\n    },\r\n    isQuoteStart() {\r\n      return this.currentLine === 0;\r\n    },\r\n    isQuoteEnd() {\r\n      return this.currentLine === this.totalLines - 1;\r\n    },\r\n  },\r\n  created() {\r\n    this.$nextTick(() => {\r\n      this.on$(GAME_EVENT.ARROW_KEY_PRESSED, arrow => this.progressIn(arrow[0]));\r\n      this.on$(GAME_EVENT.ENTER_PRESSED, () => {\r\n        if (this.isQuoteEnd) this.close();\r\n      });\r\n    });\r\n  },\r\n  methods: {\r\n    progressIn(direction) {\r\n      if (!this.isFocused) return false;\r\n      switch (direction) {\r\n        case \"left\": return this.currentLine--;\r\n        case \"right\": return this.currentLine++;\r\n        default: return false;\r\n      }\r\n    },\r\n    close() {\r\n      if (!this.isFocused) return;\r\n      this.index = 0;\r\n      Quote.advanceQueue();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <CelestialQuoteLine\r\n    :quote=\"quote\"\r\n    :current-line=\"currentLine\"\r\n    :left-visible=\"!isQuoteStart && leftVisible\"\r\n    :right-visible=\"!isQuoteEnd && rightVisible\"\r\n    :close-visible=\"isQuoteEnd && closeVisible\"\r\n    primary\r\n    @close=\"close\"\r\n    @progress-in=\"progressIn\"\r\n  />\r\n</template>"],"sourceRoot":"src/components/modals/celestial-quotes/templates"},"metadata":{},"sourceType":"module"}