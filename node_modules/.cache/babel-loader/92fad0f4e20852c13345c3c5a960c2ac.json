{"ast":null,"code":"import HintText from \"@/components/HintText\";\nexport default {\n  name: \"SecretAchievement\",\n  components: {\n    HintText\n  },\n  props: {\n    achievement: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      isUnlocked: false,\n      isMouseOver: false,\n      showUnlockState: false\n    };\n  },\n\n  computed: {\n    id() {\n      return this.achievement.id;\n    },\n\n    config() {\n      return this.achievement.config;\n    },\n\n    styleObject() {\n      if (!this.isUnlocked) return undefined;\n      return {\n        \"background-position\": `-${(this.achievement.column - 1) * 104}px -${(this.achievement.row - 1) * 104}px`\n      };\n    },\n\n    classObject() {\n      return {\n        \"o-achievement\": true,\n        \"o-achievement--hidden\": !this.isUnlocked,\n        \"o-achievement--unlocked\": this.isUnlocked,\n        \"o-achievement--secret\": true\n      };\n    },\n\n    indicatorIconClass() {\n      return this.isUnlocked ? \"fas fa-check\" : \"fas fa-times\";\n    },\n\n    indicatorClassObject() {\n      return {\n        \"o-achievement__indicator\": true,\n        \"o-achievement__indicator--locked\": !this.isUnlocked\n      };\n    }\n\n  },\n\n  beforeDestroy() {\n    clearTimeout(this.mouseOverInterval);\n  },\n\n  methods: {\n    update() {\n      this.isUnlocked = this.achievement.isUnlocked;\n      this.showUnlockState = player.options.showHintText.achievementUnlockStates;\n    },\n\n    onMouseEnter() {\n      clearTimeout(this.mouseOverInterval);\n      this.isMouseOver = true;\n    },\n\n    onMouseLeave() {\n      this.mouseOverInterval = setTimeout(() => this.isMouseOver = false, 300);\n    },\n\n    onClick() {\n      if (this.id === 11) {\n        SecretAchievement(11).unlock();\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["SecretAchievement.vue"],"names":[],"mappings":"AACA,OAAA,QAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GALA;;AAWA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,eAAA,EAAA;AAHA,KAAA;AAKA,GAjBA;;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,EAAA,GAAA;AACA,aAAA,KAAA,WAAA,CAAA,EAAA;AACA,KAHA;;AAIA,IAAA,MAAA,GAAA;AACA,aAAA,KAAA,WAAA,CAAA,MAAA;AACA,KANA;;AAOA,IAAA,WAAA,GAAA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA,OAAA,SAAA;AACA,aAAA;AACA,+BAAA,IAAA,CAAA,KAAA,WAAA,CAAA,MAAA,GAAA,CAAA,IAAA,GAAA,OAAA,CAAA,KAAA,WAAA,CAAA,GAAA,GAAA,CAAA,IAAA,GAAA;AADA,OAAA;AAGA,KAZA;;AAaA,IAAA,WAAA,GAAA;AACA,aAAA;AACA,yBAAA,IADA;AAEA,iCAAA,CAAA,KAAA,UAFA;AAGA,mCAAA,KAAA,UAHA;AAIA,iCAAA;AAJA,OAAA;AAMA,KApBA;;AAqBA,IAAA,kBAAA,GAAA;AACA,aAAA,KAAA,UAAA,GAAA,cAAA,GAAA,cAAA;AACA,KAvBA;;AAwBA,IAAA,oBAAA,GAAA;AACA,aAAA;AACA,oCAAA,IADA;AAEA,4CAAA,CAAA,KAAA;AAFA,OAAA;AAIA;;AA7BA,GAlBA;;AAiDA,EAAA,aAAA,GAAA;AACA,IAAA,YAAA,CAAA,KAAA,iBAAA,CAAA;AACA,GAnDA;;AAoDA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,UAAA,GAAA,KAAA,WAAA,CAAA,UAAA;AACA,WAAA,eAAA,GAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,uBAAA;AACA,KAJA;;AAKA,IAAA,YAAA,GAAA;AACA,MAAA,YAAA,CAAA,KAAA,iBAAA,CAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,KARA;;AASA,IAAA,YAAA,GAAA;AACA,WAAA,iBAAA,GAAA,UAAA,CAAA,MAAA,KAAA,WAAA,GAAA,KAAA,EAAA,GAAA,CAAA;AACA,KAXA;;AAYA,IAAA,OAAA,GAAA;AACA,UAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AACA,QAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,MAAA;AACA;AACA;;AAhBA;AApDA,CAAA","sourcesContent":["<script>\r\nimport HintText from \"@/components/HintText\";\r\n\r\nexport default {\r\n  name: \"SecretAchievement\",\r\n  components: {\r\n    HintText\r\n  },\r\n  props: {\r\n    achievement: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isUnlocked: false,\r\n      isMouseOver: false,\r\n      showUnlockState: false\r\n    };\r\n  },\r\n  computed: {\r\n    id() {\r\n      return this.achievement.id;\r\n    },\r\n    config() {\r\n      return this.achievement.config;\r\n    },\r\n    styleObject() {\r\n      if (!this.isUnlocked) return undefined;\r\n      return {\r\n        \"background-position\": `-${(this.achievement.column - 1) * 104}px -${(this.achievement.row - 1) * 104}px`\r\n      };\r\n    },\r\n    classObject() {\r\n      return {\r\n        \"o-achievement\": true,\r\n        \"o-achievement--hidden\": !this.isUnlocked,\r\n        \"o-achievement--unlocked\": this.isUnlocked,\r\n        \"o-achievement--secret\": true\r\n      };\r\n    },\r\n    indicatorIconClass() {\r\n      return this.isUnlocked ? \"fas fa-check\" : \"fas fa-times\";\r\n    },\r\n    indicatorClassObject() {\r\n      return {\r\n        \"o-achievement__indicator\": true,\r\n        \"o-achievement__indicator--locked\": !this.isUnlocked\r\n      };\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    clearTimeout(this.mouseOverInterval);\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isUnlocked = this.achievement.isUnlocked;\r\n      this.showUnlockState = player.options.showHintText.achievementUnlockStates;\r\n    },\r\n    onMouseEnter() {\r\n      clearTimeout(this.mouseOverInterval);\r\n      this.isMouseOver = true;\r\n    },\r\n    onMouseLeave() {\r\n      this.mouseOverInterval = setTimeout(() => this.isMouseOver = false, 300);\r\n    },\r\n    onClick() {\r\n      if (this.id === 11) {\r\n        SecretAchievement(11).unlock();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    :class=\"classObject\"\r\n    :style=\"styleObject\"\r\n    @click=\"onClick\"\r\n    @mouseenter=\"onMouseEnter\"\r\n    @mouseleave=\"onMouseLeave\"\r\n  >\r\n    <HintText\r\n      type=\"achievements\"\r\n      class=\"l-hint-text--achievement\"\r\n    >\r\n      S{{ id }}\r\n    </HintText>\r\n    <div class=\"o-achievement__tooltip\">\r\n      <template v-if=\"isMouseOver\">\r\n        <div class=\"o-achievement__tooltip__name\">\r\n          {{ config.name }} (S{{ id }})\r\n        </div>\r\n        <div\r\n          v-if=\"isUnlocked\"\r\n          class=\"o-achievement__tooltip__description\"\r\n        >\r\n          {{ config.description }}\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <div\r\n      v-if=\"showUnlockState\"\r\n      :class=\"indicatorClassObject\"\r\n    >\r\n      <i :class=\"indicatorIconClass\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"sourceRoot":"src/components/tabs/secret-achievements"},"metadata":{},"sourceType":"module"}