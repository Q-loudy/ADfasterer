{"ast":null,"code":"import ArmageddonButton from \"../../tabs/celestial-pelle/ArmageddonButton\";\nimport RealityCurrencyHeader from \"../../RealityCurrencyHeader\";\nimport HeaderTickspeedInfo from \"../HeaderTickspeedInfo\";\nimport RealityButton from \"./RealityButton\"; // This component contains antimatter and antimatter rate at the start of the game, as well as some additional\n// information depending on the UI (tickspeed for Classic, game speed for Modern). Everything but antimatter is\n// removed once Reality is unlocked, to make room for the reality button\n\nexport default {\n  name: \"HeaderCenterContainer\",\n  components: {\n    HeaderTickspeedInfo,\n    RealityCurrencyHeader,\n    RealityButton,\n    ArmageddonButton\n  },\n\n  data() {\n    return {\n      shouldDisplay: true,\n      isModern: false,\n      hasRealityButton: false,\n      isDoomed: false,\n      antimatter: new Decimal(0),\n      antimatterPerSec: new Decimal(0)\n    };\n  },\n\n  methods: {\n    update() {\n      this.shouldDisplay = player.break || !Player.canCrunch;\n      if (!this.shouldDisplay) return;\n      this.isModern = player.options.newUI;\n      this.isDoomed = Pelle.isDoomed;\n      this.antimatter.copyFrom(Currency.antimatter);\n      this.hasRealityButton = PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought;\n      if (!this.hasRealityButton) this.antimatterPerSec.copyFrom(Currency.antimatter.productionPerSecond);\n    }\n\n  }\n};","map":{"version":3,"sources":["HeaderCenterContainer.vue"],"names":[],"mappings":"AACA,OAAA,gBAAA,MAAA,6CAAA;AACA,OAAA,qBAAA,MAAA,6BAAA;AAEA,OAAA,mBAAA,MAAA,wBAAA;AAEA,OAAA,aAAA,MAAA,iBAAA,C,CAEA;AACA;AACA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,uBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,mBADA;AAEA,IAAA,qBAFA;AAGA,IAAA,aAHA;AAIA,IAAA;AAJA,GAFA;;AAQA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,gBAAA,EAAA,KAHA;AAIA,MAAA,QAAA,EAAA,KAJA;AAKA,MAAA,UAAA,EAAA,IAAA,OAAA,CAAA,CAAA,CALA;AAMA,MAAA,gBAAA,EAAA,IAAA,OAAA,CAAA,CAAA;AANA,KAAA;AAQA,GAjBA;;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,aAAA,GAAA,MAAA,CAAA,KAAA,IAAA,CAAA,MAAA,CAAA,SAAA;AACA,UAAA,CAAA,KAAA,aAAA,EAAA;AAEA,WAAA,QAAA,GAAA,MAAA,CAAA,OAAA,CAAA,KAAA;AACA,WAAA,QAAA,GAAA,KAAA,CAAA,QAAA;AACA,WAAA,UAAA,CAAA,QAAA,CAAA,QAAA,CAAA,UAAA;AACA,WAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,MAAA,SAAA,CAAA,OAAA,CAAA,QAAA;AACA,UAAA,CAAA,KAAA,gBAAA,EAAA,KAAA,gBAAA,CAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA,mBAAA;AACA;;AAVA;AAlBA,CAAA","sourcesContent":["<script>\r\nimport ArmageddonButton from \"../../tabs/celestial-pelle/ArmageddonButton\";\r\nimport RealityCurrencyHeader from \"../../RealityCurrencyHeader\";\r\n\r\nimport HeaderTickspeedInfo from \"../HeaderTickspeedInfo\";\r\n\r\nimport RealityButton from \"./RealityButton\";\r\n\r\n// This component contains antimatter and antimatter rate at the start of the game, as well as some additional\r\n// information depending on the UI (tickspeed for Classic, game speed for Modern). Everything but antimatter is\r\n// removed once Reality is unlocked, to make room for the reality button\r\nexport default {\r\n  name: \"HeaderCenterContainer\",\r\n  components: {\r\n    HeaderTickspeedInfo,\r\n    RealityCurrencyHeader,\r\n    RealityButton,\r\n    ArmageddonButton,\r\n  },\r\n  data() {\r\n    return {\r\n      shouldDisplay: true,\r\n      isModern: false,\r\n      hasRealityButton: false,\r\n      isDoomed: false,\r\n      antimatter: new Decimal(0),\r\n      antimatterPerSec: new Decimal(0),\r\n    };\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.shouldDisplay = player.break || !Player.canCrunch;\r\n      if (!this.shouldDisplay) return;\r\n\r\n      this.isModern = player.options.newUI;\r\n      this.isDoomed = Pelle.isDoomed;\r\n      this.antimatter.copyFrom(Currency.antimatter);\r\n      this.hasRealityButton = PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought;\r\n      if (!this.hasRealityButton) this.antimatterPerSec.copyFrom(Currency.antimatter.productionPerSecond);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-if=\"shouldDisplay\"\r\n    class=\"c-prestige-button-container\"\r\n  >\r\n    <span>You have <span class=\"c-game-header__antimatter\">{{ format(antimatter, 2, 1) }}</span> antimatter.</span>\r\n    <div\r\n      v-if=\"hasRealityButton\"\r\n      class=\"c-reality-container\"\r\n    >\r\n      <RealityCurrencyHeader />\r\n      <ArmageddonButton\r\n        v-if=\"isDoomed\"\r\n        :is-header=\"true\"\r\n      />\r\n      <RealityButton v-else />\r\n    </div>\r\n    <div v-else>\r\n      You are getting {{ format(antimatterPerSec, 2) }} antimatter per second.\r\n      <br>\r\n      <HeaderTickspeedInfo />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-reality-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/ui-modes/prestige-header"},"metadata":{},"sourceType":"module"}