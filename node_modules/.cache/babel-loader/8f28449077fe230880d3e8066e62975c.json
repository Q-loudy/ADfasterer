{"ast":null,"code":"import PseudoTimeStudyButton from \"./PseudoTimeStudyButton\";\nimport PseudoTimeStudyConnection from \"./PseudoTimeStudyConnection\";\nimport { STUDY_TREE_LAYOUT_TYPE, TimeStudyTreeLayout } from \"@/components/tabs/time-studies/time-study-tree-layout\";\nexport const ForceBoughtState = {\n  notBought: 0,\n  unspecified: 1,\n  bought: 2,\n\n  getState(forceState, currentState) {\n    switch (forceState) {\n      case this.notBought:\n        return false;\n\n      case this.unspecified:\n        return currentState;\n\n      case this.bought:\n        return true;\n    }\n\n    return currentState;\n  }\n\n};\nexport default {\n  name: \"TimeStudiesTab\",\n  components: {\n    PseudoTimeStudyButton,\n    PseudoTimeStudyConnection\n  },\n  props: {\n    disregardCurrentStudies: {\n      type: Boolean,\n      default: false\n    },\n    newStudies: {\n      required: true,\n      validator: newStudies => Array.isArray(newStudies) || newStudies === undefined\n    },\n    showPreview: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      layoutType: STUDY_TREE_LAYOUT_TYPE.NORMAL,\n      vLevel: 0,\n      renderedStudyCount: 0,\n      isEnslaved: false,\n      delayTimer: 0\n    };\n  },\n\n  computed: {\n    layout() {\n      return TimeStudyTreeLayout.create(this.layoutType, 0.15);\n    },\n\n    studies() {\n      return this.layout.studies;\n    },\n\n    connections() {\n      return this.layout.connections;\n    },\n\n    treeStyleObject() {\n      return {\n        width: `${this.layout.width}rem`,\n        height: `${this.layout.height}rem`\n      };\n    },\n\n    respecClassObject() {\n      return {\n        \"o-primary-btn--subtab-option\": true,\n        \"o-primary-btn--respec-active\": this.respec\n      };\n    }\n\n  },\n  watch: {\n    vLevel() {\n      // When vLevel changes, we recompute the study tree because of triad studies\n      this.$recompute(\"layout\");\n    }\n\n  },\n  methods: {\n    update() {\n      this.layoutType = STUDY_TREE_LAYOUT_TYPE.current;\n      this.vLevel = Ra.pets.v.level;\n      this.isEnslaved = Enslaved.isRunning || Date.now() - this.delayTimer < 1000;\n    },\n\n    studyComponent(study) {\n      switch (study.type) {\n        case TIME_STUDY_TYPE.NORMAL:\n          return NormalTimeStudy;\n\n        case TIME_STUDY_TYPE.ETERNITY_CHALLENGE:\n          return ECTimeStudy;\n\n        case TIME_STUDY_TYPE.DILATION:\n          return DilationTimeStudy;\n\n        case TIME_STUDY_TYPE.TRIAD:\n          return TriadTimeStudy;\n      }\n\n      throw \"Unknown Time Study type\";\n    },\n\n    studyString(study) {\n      switch (study.type) {\n        case TIME_STUDY_TYPE.NORMAL:\n        case TIME_STUDY_TYPE.TRIAD:\n          return `${study.id}`;\n\n        case TIME_STUDY_TYPE.ETERNITY_CHALLENGE:\n          return `EC${study.id}`;\n      }\n\n      return \"Dilation Study\";\n    },\n\n    getStudyForceBoughtState(studyStr) {\n      if (!this.disregardCurrentStudies) return ForceBoughtState.unspecified;\n      return this.newStudies.includes(studyStr) ? ForceBoughtState.bought : ForceBoughtState.notBought;\n    },\n\n    getConnectionForceBoughtState(setup) {\n      if (!this.disregardCurrentStudies) return ForceBoughtState.unspecified;\n      return this.newStudies.includes(this.studyString(setup.connection.to)) && this.newStudies.includes(this.studyString(setup.connection.from)) ? ForceBoughtState.bought : ForceBoughtState.notBought;\n    }\n\n  }\n};","map":{"version":3,"sources":["StudyStringPreview.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport PseudoTimeStudyButton from \"./PseudoTimeStudyButton\";\r\nimport PseudoTimeStudyConnection from \"./PseudoTimeStudyConnection\";\r\n\r\nimport { STUDY_TREE_LAYOUT_TYPE, TimeStudyTreeLayout } from \"@/components/tabs/time-studies/time-study-tree-layout\";\r\n\r\nexport const ForceBoughtState = {\r\n  notBought: 0,\r\n  unspecified: 1,\r\n  bought: 2,\r\n\r\n  getState(forceState, currentState) {\r\n    switch (forceState) {\r\n      case this.notBought:\r\n        return false;\r\n      case this.unspecified:\r\n        return currentState;\r\n      case this.bought:\r\n        return true;\r\n    }\r\n    return currentState;\r\n  }\r\n};\r\n\r\nexport default {\r\n  name: \"TimeStudiesTab\",\r\n  components: {\r\n    PseudoTimeStudyButton,\r\n    PseudoTimeStudyConnection,\r\n  },\r\n  props: {\r\n    disregardCurrentStudies: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    newStudies: {\r\n      required: true,\r\n      validator: newStudies => Array.isArray(newStudies) || newStudies === undefined,\r\n    },\r\n    showPreview: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      layoutType: STUDY_TREE_LAYOUT_TYPE.NORMAL,\r\n      vLevel: 0,\r\n      renderedStudyCount: 0,\r\n      isEnslaved: false,\r\n      delayTimer: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    layout() {\r\n      return TimeStudyTreeLayout.create(this.layoutType, 0.15);\r\n    },\r\n    studies() {\r\n      return this.layout.studies;\r\n    },\r\n    connections() {\r\n      return this.layout.connections;\r\n    },\r\n    treeStyleObject() {\r\n      return {\r\n        width: `${this.layout.width}rem`,\r\n        height: `${this.layout.height}rem`\r\n      };\r\n    },\r\n    respecClassObject() {\r\n      return {\r\n        \"o-primary-btn--subtab-option\": true,\r\n        \"o-primary-btn--respec-active\": this.respec\r\n      };\r\n    }\r\n  },\r\n  watch: {\r\n    vLevel() {\r\n      // When vLevel changes, we recompute the study tree because of triad studies\r\n      this.$recompute(\"layout\");\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.layoutType = STUDY_TREE_LAYOUT_TYPE.current;\r\n      this.vLevel = Ra.pets.v.level;\r\n      this.isEnslaved = Enslaved.isRunning || Date.now() - this.delayTimer < 1000;\r\n    },\r\n    studyComponent(study) {\r\n      switch (study.type) {\r\n        case TIME_STUDY_TYPE.NORMAL: return NormalTimeStudy;\r\n        case TIME_STUDY_TYPE.ETERNITY_CHALLENGE: return ECTimeStudy;\r\n        case TIME_STUDY_TYPE.DILATION: return DilationTimeStudy;\r\n        case TIME_STUDY_TYPE.TRIAD: return TriadTimeStudy;\r\n      }\r\n      throw \"Unknown Time Study type\";\r\n    },\r\n    studyString(study) {\r\n      switch (study.type) {\r\n        case TIME_STUDY_TYPE.NORMAL: case TIME_STUDY_TYPE.TRIAD: return `${study.id}`;\r\n        case TIME_STUDY_TYPE.ETERNITY_CHALLENGE: return `EC${study.id}`;\r\n      }\r\n      return \"Dilation Study\";\r\n    },\r\n    getStudyForceBoughtState(studyStr) {\r\n      if (!this.disregardCurrentStudies) return ForceBoughtState.unspecified;\r\n      return this.newStudies.includes(studyStr) ? ForceBoughtState.bought : ForceBoughtState.notBought;\r\n    },\r\n    getConnectionForceBoughtState(setup) {\r\n      if (!this.disregardCurrentStudies) return ForceBoughtState.unspecified;\r\n      return (this.newStudies.includes(this.studyString(setup.connection.to)) &&\r\n        this.newStudies.includes(this.studyString(setup.connection.from)))\r\n        ? ForceBoughtState.bought\r\n        : ForceBoughtState.notBought;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-study-string-preview__tree--wrapper\">\r\n    <div\r\n      v-if=\"showPreview\"\r\n      class=\"l-time-study-tree l-study-string-preview__tree\"\r\n      :style=\"treeStyleObject\"\r\n    >\r\n      <PseudoTimeStudyButton\r\n        v-for=\"setup in studies\"\r\n        :key=\"setup.study.type.toString() + setup.study.id.toString()\"\r\n        :setup=\"setup\"\r\n        :force-is-bought=\"getStudyForceBoughtState(studyString(setup.study))\"\r\n        :is-new-from-import=\"!disregardCurrentStudies && newStudies.includes(studyString(setup.study))\"\r\n      />\r\n      <svg\r\n        :style=\"treeStyleObject\"\r\n        class=\"l-time-study-connection\"\r\n      >\r\n        <PseudoTimeStudyConnection\r\n          v-for=\"(setup, index) in connections\"\r\n          :key=\"'connection' + index\"\r\n          :force-is-bought=\"getConnectionForceBoughtState(setup)\"\r\n          :setup=\"setup\"\r\n        />\r\n      </svg>\r\n    </div>\r\n    <span\r\n      v-else\r\n      class=\"c-unavailable-warning\"\r\n    >\r\n      Preview Unavailable\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-study-string-preview__tree--wrapper {\r\n  display: flex;\r\n  overflow-y: auto;\r\n  width: 20rem;\r\n  height: 44.5rem;\r\n  position: relative;\r\n  justify-content: center;\r\n  border: var(--color-text) solid var(--var-border-width, 0.3rem);\r\n  border-radius: var(--var-border-radius, 0.3rem);\r\n  margin: auto;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.c-unavailable-warning {\r\n  align-self: center;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/modals/time-study-modal-preview"},"metadata":{},"sourceType":"module"}