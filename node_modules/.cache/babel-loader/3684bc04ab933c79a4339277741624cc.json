{"ast":null,"code":"import { ForceBoughtState } from \"./StudyStringPreview\";\nexport default {\n  name: \"PseudoTimeStudyConnection\",\n  props: {\n    setup: {\n      type: Object,\n      required: true\n    },\n    forceIsBought: {\n      type: Number,\n      default: 1\n    }\n  },\n\n  data() {\n    return {\n      isOverridden: false,\n      isBought: false\n    };\n  },\n\n  computed: {\n    classObject() {\n      const classObject = {\n        \"o-time-study-connection\": true,\n        \"o-time-study-connection--bought\": this.isBought\n      };\n      let pathClass;\n      const connection = this.setup.connection;\n      const from = connection.from;\n      const to = connection.to;\n\n      function pathClassOf(study) {\n        switch (study.path) {\n          case TIME_STUDY_PATH.ANTIMATTER_DIM:\n            return \"o-time-study-connection--antimatter-dim\";\n\n          case TIME_STUDY_PATH.INFINITY_DIM:\n            return \"o-time-study-connection--infinity-dim\";\n\n          case TIME_STUDY_PATH.TIME_DIM:\n            return \"o-time-study-connection--time-dim\";\n\n          case TIME_STUDY_PATH.ACTIVE:\n            return \"o-time-study-connection--active\";\n\n          case TIME_STUDY_PATH.PASSIVE:\n            return \"o-time-study-connection--passive\";\n\n          case TIME_STUDY_PATH.IDLE:\n            return \"o-time-study-connection--idle\";\n\n          default:\n            return undefined;\n        }\n      }\n\n      switch (to.type) {\n        case TIME_STUDY_TYPE.NORMAL:\n          pathClass = pathClassOf(to) || pathClassOf(from);\n          break;\n\n        case TIME_STUDY_TYPE.ETERNITY_CHALLENGE:\n          pathClass = \"o-time-study-connection--eternity-challenge\";\n          break;\n\n        case TIME_STUDY_TYPE.DILATION:\n          pathClass = \"o-time-study-connection--dilation\";\n          break;\n      }\n\n      if (pathClass !== undefined) {\n        classObject[pathClass] = true;\n      }\n\n      return classObject;\n    }\n\n  },\n  methods: {\n    update() {\n      this.isOverridden = this.setup.connection.isOverridden;\n      this.isBought = ForceBoughtState.getState(this.forceIsBought, this.setup.isBought);\n    },\n\n    percents(value) {\n      return `${value * 100}%`;\n    }\n\n  }\n};","map":{"version":3,"sources":["PseudoTimeStudyConnection.vue"],"names":[],"mappings":"AACA,SAAA,gBAAA,QAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,2BADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAFA;;AAYA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAAA;AAIA,GAjBA;;AAkBA,EAAA,QAAA,EAAA;AACA,IAAA,WAAA,GAAA;AACA,YAAA,WAAA,GAAA;AACA,mCAAA,IADA;AAEA,2CAAA,KAAA;AAFA,OAAA;AAIA,UAAA,SAAA;AACA,YAAA,UAAA,GAAA,KAAA,KAAA,CAAA,UAAA;AACA,YAAA,IAAA,GAAA,UAAA,CAAA,IAAA;AACA,YAAA,EAAA,GAAA,UAAA,CAAA,EAAA;;AACA,eAAA,WAAA,CAAA,KAAA,EAAA;AACA,gBAAA,KAAA,CAAA,IAAA;AACA,eAAA,eAAA,CAAA,cAAA;AAAA,mBAAA,yCAAA;;AACA,eAAA,eAAA,CAAA,YAAA;AAAA,mBAAA,uCAAA;;AACA,eAAA,eAAA,CAAA,QAAA;AAAA,mBAAA,mCAAA;;AACA,eAAA,eAAA,CAAA,MAAA;AAAA,mBAAA,iCAAA;;AACA,eAAA,eAAA,CAAA,OAAA;AAAA,mBAAA,kCAAA;;AACA,eAAA,eAAA,CAAA,IAAA;AAAA,mBAAA,+BAAA;;AACA;AAAA,mBAAA,SAAA;AAPA;AASA;;AACA,cAAA,EAAA,CAAA,IAAA;AACA,aAAA,eAAA,CAAA,MAAA;AACA,UAAA,SAAA,GAAA,WAAA,CAAA,EAAA,CAAA,IAAA,WAAA,CAAA,IAAA,CAAA;AACA;;AACA,aAAA,eAAA,CAAA,kBAAA;AACA,UAAA,SAAA,GAAA,6CAAA;AACA;;AACA,aAAA,eAAA,CAAA,QAAA;AACA,UAAA,SAAA,GAAA,mCAAA;AACA;AATA;;AAYA,UAAA,SAAA,KAAA,SAAA,EAAA;AACA,QAAA,WAAA,CAAA,SAAA,CAAA,GAAA,IAAA;AACA;;AACA,aAAA,WAAA;AACA;;AArCA,GAlBA;AAyDA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,YAAA,GAAA,KAAA,KAAA,CAAA,UAAA,CAAA,YAAA;AACA,WAAA,QAAA,GAAA,gBAAA,CAAA,QAAA,CAAA,KAAA,aAAA,EAAA,KAAA,KAAA,CAAA,QAAA,CAAA;AACA,KAJA;;AAKA,IAAA,QAAA,CAAA,KAAA,EAAA;AACA,aAAA,GAAA,KAAA,GAAA,GAAA,GAAA;AACA;;AAPA;AAzDA,CAAA","sourcesContent":["<script>\r\nimport { ForceBoughtState } from \"./StudyStringPreview\";\r\n\r\nexport default {\r\n  name: \"PseudoTimeStudyConnection\",\r\n  props: {\r\n    setup: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    forceIsBought: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isOverridden: false,\r\n      isBought: false\r\n    };\r\n  },\r\n  computed: {\r\n    classObject() {\r\n      const classObject = {\r\n        \"o-time-study-connection\": true,\r\n        \"o-time-study-connection--bought\": this.isBought,\r\n      };\r\n      let pathClass;\r\n      const connection = this.setup.connection;\r\n      const from = connection.from;\r\n      const to = connection.to;\r\n      function pathClassOf(study) {\r\n        switch (study.path) {\r\n          case TIME_STUDY_PATH.ANTIMATTER_DIM: return \"o-time-study-connection--antimatter-dim\";\r\n          case TIME_STUDY_PATH.INFINITY_DIM: return \"o-time-study-connection--infinity-dim\";\r\n          case TIME_STUDY_PATH.TIME_DIM: return \"o-time-study-connection--time-dim\";\r\n          case TIME_STUDY_PATH.ACTIVE: return \"o-time-study-connection--active\";\r\n          case TIME_STUDY_PATH.PASSIVE: return \"o-time-study-connection--passive\";\r\n          case TIME_STUDY_PATH.IDLE: return \"o-time-study-connection--idle\";\r\n          default: return undefined;\r\n        }\r\n      }\r\n      switch (to.type) {\r\n        case TIME_STUDY_TYPE.NORMAL:\r\n          pathClass = pathClassOf(to) || pathClassOf(from);\r\n          break;\r\n        case TIME_STUDY_TYPE.ETERNITY_CHALLENGE:\r\n          pathClass = \"o-time-study-connection--eternity-challenge\";\r\n          break;\r\n        case TIME_STUDY_TYPE.DILATION:\r\n          pathClass = \"o-time-study-connection--dilation\";\r\n          break;\r\n      }\r\n\r\n      if (pathClass !== undefined) {\r\n        classObject[pathClass] = true;\r\n      }\r\n      return classObject;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isOverridden = this.setup.connection.isOverridden;\r\n      this.isBought = ForceBoughtState.getState(this.forceIsBought, this.setup.isBought);\r\n    },\r\n    percents(value) {\r\n      return `${value * 100}%`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <line\r\n    v-if=\"!isOverridden\"\r\n    :x1=\"percents(setup.x1)\"\r\n    :y1=\"percents(setup.y1)\"\r\n    :x2=\"percents(setup.x2)\"\r\n    :y2=\"percents(setup.y2)\"\r\n    :class=\"classObject\"\r\n  />\r\n</template>\r\n\r\n<style scoped>\r\n.o-time-study-connection {\r\n  /* This one should be px, because it rem svg behaves weirdly under scale */\r\n  stroke-width: 2px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/modals/time-study-modal-preview"},"metadata":{},"sourceType":"module"}