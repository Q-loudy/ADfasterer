{"ast":null,"code":"import CostDisplay from \"@/components/CostDisplay\";\nimport DescriptionDisplay from \"@/components/DescriptionDisplay\";\nimport EffectDisplay from \"@/components/EffectDisplay\";\nimport HintText from \"@/components/HintText\";\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\nexport default {\n  name: \"ImaginaryUpgradeButton\",\n  components: {\n    PrimaryToggleButton,\n    DescriptionDisplay,\n    EffectDisplay,\n    CostDisplay,\n    HintText\n  },\n  props: {\n    upgrade: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      isAvailableForPurchase: false,\n      canBeBought: false,\n      isRebuyable: false,\n      isBought: false,\n      isPossible: false,\n      isAutoUnlocked: false,\n      isAutobuyerOn: false,\n      etaText: \"\",\n      canBeLocked: false,\n      hasRequirementLock: false\n    };\n  },\n\n  computed: {\n    config() {\n      return this.upgrade.config;\n    },\n\n    classObject() {\n      return {\n        \"c-reality-upgrade-btn--useless\": this.upgrade.pelleDisabled,\n        \"c-reality-upgrade-btn--bought\": this.isBought && !this.upgrade.pelleDisabled,\n        \"c-reality-upgrade-btn--unavailable\": !this.isBought && !this.canBeBought && this.isAvailableForPurchase,\n        \"c-reality-upgrade-btn--possible\": !this.isAvailableForPurchase && this.isPossible,\n        \"c-reality-upgrade-btn--locked\": !this.isAvailableForPurchase && !this.isPossible\n      };\n    },\n\n    requirementConfig() {\n      return {\n        description: this.config.requirement\n      };\n    },\n\n    canLock() {\n      return this.config.canLock && !(this.isAvailableForPurchase || this.isBought);\n    },\n\n    isDoomed: () => Pelle.isDoomed\n  },\n  watch: {\n    isAutobuyerOn(newValue) {\n      Autobuyer.imaginaryUpgrade(this.upgrade.id).isActive = newValue;\n    }\n\n  },\n  methods: {\n    update() {\n      const upgrade = this.upgrade;\n      this.isAvailableForPurchase = upgrade.isAvailableForPurchase;\n      this.canBeBought = upgrade.canBeBought;\n      this.isRebuyable = upgrade.isRebuyable;\n      this.isBought = !upgrade.isRebuyable && upgrade.isBought;\n      this.isPossible = upgrade.isPossible;\n      this.isAutoUnlocked = ImaginaryUpgrade(20).canBeApplied;\n      this.canBeLocked = upgrade.config.canLock && !this.isAvailableForPurchase;\n      this.hasRequirementLock = upgrade.hasPlayerLock;\n      if (this.isRebuyable) this.isAutobuyerOn = Autobuyer.imaginaryUpgrade(upgrade.id).isActive;\n      this.etaText = this.getETAText();\n    },\n\n    getETAText() {\n      if (this.canBeBought || !this.isAvailableForPurchase || this.isBought || Pelle.isDoomed) return \"\";\n      const time = MachineHandler.estimateIMTimer(this.upgrade.cost);\n      if (isFinite(time)) return TimeSpan.fromSeconds(time).toString();\n      return \"Never affordable\";\n    },\n\n    toggleLock(upgrade) {\n      if (this.isRebuyable) return;\n      upgrade.toggleMechanicLock();\n    }\n\n  }\n};","map":{"version":3,"sources":["ImaginaryUpgradeButton.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport CostDisplay from \"@/components/CostDisplay\";\r\nimport DescriptionDisplay from \"@/components/DescriptionDisplay\";\r\nimport EffectDisplay from \"@/components/EffectDisplay\";\r\nimport HintText from \"@/components/HintText\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\n\r\nexport default {\r\n  name: \"ImaginaryUpgradeButton\",\r\n  components: {\r\n    PrimaryToggleButton,\r\n    DescriptionDisplay,\r\n    EffectDisplay,\r\n    CostDisplay,\r\n    HintText\r\n  },\r\n  props: {\r\n    upgrade: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isAvailableForPurchase: false,\r\n      canBeBought: false,\r\n      isRebuyable: false,\r\n      isBought: false,\r\n      isPossible: false,\r\n      isAutoUnlocked: false,\r\n      isAutobuyerOn: false,\r\n      etaText: \"\",\r\n      canBeLocked: false,\r\n      hasRequirementLock: false,\r\n    };\r\n  },\r\n  computed: {\r\n    config() {\r\n      return this.upgrade.config;\r\n    },\r\n    classObject() {\r\n      return {\r\n        \"c-reality-upgrade-btn--useless\": this.upgrade.pelleDisabled,\r\n        \"c-reality-upgrade-btn--bought\": this.isBought && !this.upgrade.pelleDisabled,\r\n        \"c-reality-upgrade-btn--unavailable\": !this.isBought && !this.canBeBought && this.isAvailableForPurchase,\r\n        \"c-reality-upgrade-btn--possible\": !this.isAvailableForPurchase && this.isPossible,\r\n        \"c-reality-upgrade-btn--locked\": !this.isAvailableForPurchase && !this.isPossible,\r\n      };\r\n    },\r\n    requirementConfig() {\r\n      return {\r\n        description: this.config.requirement\r\n      };\r\n    },\r\n    canLock() {\r\n      return this.config.canLock && !(this.isAvailableForPurchase || this.isBought);\r\n    },\r\n    isDoomed: () => Pelle.isDoomed,\r\n  },\r\n  watch: {\r\n    isAutobuyerOn(newValue) {\r\n      Autobuyer.imaginaryUpgrade(this.upgrade.id).isActive = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const upgrade = this.upgrade;\r\n      this.isAvailableForPurchase = upgrade.isAvailableForPurchase;\r\n      this.canBeBought = upgrade.canBeBought;\r\n      this.isRebuyable = upgrade.isRebuyable;\r\n      this.isBought = !upgrade.isRebuyable && upgrade.isBought;\r\n      this.isPossible = upgrade.isPossible;\r\n      this.isAutoUnlocked = ImaginaryUpgrade(20).canBeApplied;\r\n      this.canBeLocked = upgrade.config.canLock && !this.isAvailableForPurchase;\r\n      this.hasRequirementLock = upgrade.hasPlayerLock;\r\n      if (this.isRebuyable) this.isAutobuyerOn = Autobuyer.imaginaryUpgrade(upgrade.id).isActive;\r\n      this.etaText = this.getETAText();\r\n    },\r\n    getETAText() {\r\n      if (this.canBeBought || !this.isAvailableForPurchase || this.isBought || Pelle.isDoomed) return \"\";\r\n      const time = MachineHandler.estimateIMTimer(this.upgrade.cost);\r\n      if (isFinite(time)) return TimeSpan.fromSeconds(time).toString();\r\n      return \"Never affordable\";\r\n    },\r\n    toggleLock(upgrade) {\r\n      if (this.isRebuyable) return;\r\n      upgrade.toggleMechanicLock();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-tooltip=\"etaText\"\r\n    class=\"l-spoon-btn-group\"\r\n  >\r\n    <button\r\n      :class=\"classObject\"\r\n      class=\"l-reality-upgrade-btn c-reality-upgrade-btn\"\r\n      @click.shift.exact=\"toggleLock(upgrade)\"\r\n      @click.exact=\"upgrade.purchase()\"\r\n    >\r\n      <HintText\r\n        type=\"realityUpgrades\"\r\n        class=\"l-hint-text--reality-upgrade c-hint-text--reality-upgrade\"\r\n      >\r\n        {{ config.name }}\r\n      </HintText>\r\n      <span :class=\"{ 'o-pelle-disabled': upgrade.pelleDisabled }\">\r\n        <DescriptionDisplay :config=\"config\" />\r\n        <template v-if=\"($viewModel.shiftDown === isAvailableForPurchase) && !isRebuyable\">\r\n          <br>\r\n          <DescriptionDisplay\r\n            :config=\"requirementConfig\"\r\n            label=\"Requirement:\"\r\n            class=\"c-reality-upgrade-btn__requirement\"\r\n          />\r\n        </template>\r\n        <template v-else>\r\n          <EffectDisplay\r\n            :config=\"config\"\r\n            br\r\n          />\r\n          <CostDisplay\r\n            v-if=\"!isBought\"\r\n            :config=\"config\"\r\n            br\r\n            name=\"Imaginary Machine\"\r\n          />\r\n        </template>\r\n      </span>\r\n    </button>\r\n    <div\r\n      v-if=\"canBeLocked\"\r\n      class=\"o-requirement-lock\"\r\n    >\r\n      <i\r\n        v-if=\"hasRequirementLock\"\r\n        class=\"fas fa-lock\"\r\n      />\r\n      <i\r\n        v-else-if=\"canLock\"\r\n        class=\"fas fa-lock-open\"\r\n      />\r\n    </div>\r\n    <PrimaryToggleButton\r\n      v-if=\"isRebuyable && isAutoUnlocked\"\r\n      v-model=\"isAutobuyerOn\"\r\n      label=\"Auto:\"\r\n      class=\"l--spoon-btn-group__little-spoon-reality-btn o-primary-btn--reality-upgrade-toggle\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/imaginary-upgrades"},"metadata":{},"sourceType":"module"}