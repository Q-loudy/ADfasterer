{"ast":null,"code":"export default {\n  name: \"AutomatorDataTransferSingleEntry\",\n  props: {\n    script: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      presets: [],\n      constants: [],\n      hidePresets: true,\n      hideConstants: true\n    };\n  },\n\n  computed: {\n    presetData: () => player.timestudy.presets,\n    constantData: () => player.reality.automator.constants,\n\n    hasPresets() {\n      var _this$presets$length, _this$presets;\n\n      return ((_this$presets$length = (_this$presets = this.presets) === null || _this$presets === void 0 ? void 0 : _this$presets.length) !== null && _this$presets$length !== void 0 ? _this$presets$length : 0) !== 0;\n    },\n\n    hasConstants() {\n      var _this$constants$lengt, _this$constants;\n\n      return ((_this$constants$lengt = (_this$constants = this.constants) === null || _this$constants === void 0 ? void 0 : _this$constants.length) !== null && _this$constants$lengt !== void 0 ? _this$constants$lengt : 0) !== 0;\n    }\n\n  },\n  methods: {\n    update() {\n      this.presets = AutomatorBackend.getUsedPresets(this.script.id);\n      this.constants = AutomatorBackend.getUsedConstants(this.script.id);\n    },\n\n    iconClass(state) {\n      return state ? \"far fa-plus-square\" : \"far fa-minus-square\";\n    },\n\n    exportData(id) {\n      const toExport = AutomatorBackend.exportFullScriptData(id);\n\n      if (toExport) {\n        copyToClipboard(toExport);\n        GameUI.notify.automator(`Exported all data associated with \"${this.script.name}\" to your clipboard`, 6000);\n      } else {\n        GameUI.notify.error(\"Could not export data from blank Automator script!\");\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["AutomatorDataTransferSingleEntry.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,kCADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;;AAQA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA,IAHA;AAIA,MAAA,aAAA,EAAA;AAJA,KAAA;AAMA,GAfA;;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,UAAA,EAAA,MAAA,MAAA,CAAA,SAAA,CAAA,OADA;AAEA,IAAA,YAAA,EAAA,MAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,SAFA;;AAGA,IAAA,UAAA,GAAA;AAAA;;AACA,aAAA,0CAAA,KAAA,OAAA,kDAAA,cAAA,MAAA,uEAAA,CAAA,MAAA,CAAA;AACA,KALA;;AAMA,IAAA,YAAA,GAAA;AAAA;;AACA,aAAA,6CAAA,KAAA,SAAA,oDAAA,gBAAA,MAAA,yEAAA,CAAA,MAAA,CAAA;AACA;;AARA,GAhBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,OAAA,GAAA,gBAAA,CAAA,cAAA,CAAA,KAAA,MAAA,CAAA,EAAA,CAAA;AACA,WAAA,SAAA,GAAA,gBAAA,CAAA,gBAAA,CAAA,KAAA,MAAA,CAAA,EAAA,CAAA;AACA,KAJA;;AAKA,IAAA,SAAA,CAAA,KAAA,EAAA;AACA,aAAA,KAAA,GAAA,oBAAA,GAAA,qBAAA;AACA,KAPA;;AAQA,IAAA,UAAA,CAAA,EAAA,EAAA;AACA,YAAA,QAAA,GAAA,gBAAA,CAAA,oBAAA,CAAA,EAAA,CAAA;;AACA,UAAA,QAAA,EAAA;AACA,QAAA,eAAA,CAAA,QAAA,CAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,sCAAA,KAAA,MAAA,CAAA,IAAA,qBAAA,EAAA,IAAA;AACA,OAHA,MAGA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,oDAAA;AACA;AACA;;AAhBA;AA1BA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"AutomatorDataTransferSingleEntry\",\r\n  props: {\r\n    script: {\r\n      type: Object,\r\n      required: true,\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      presets: [],\r\n      constants: [],\r\n      hidePresets: true,\r\n      hideConstants: true,\r\n    };\r\n  },\r\n  computed: {\r\n    presetData: () => player.timestudy.presets,\r\n    constantData: () => player.reality.automator.constants,\r\n    hasPresets() {\r\n      return (this.presets?.length ?? 0) !== 0;\r\n    },\r\n    hasConstants() {\r\n      return (this.constants?.length ?? 0) !== 0;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.presets = AutomatorBackend.getUsedPresets(this.script.id);\r\n      this.constants = AutomatorBackend.getUsedConstants(this.script.id);\r\n    },\r\n    iconClass(state) {\r\n      return state ? \"far fa-plus-square\" : \"far fa-minus-square\";\r\n    },\r\n    exportData(id) {\r\n      const toExport = AutomatorBackend.exportFullScriptData(id);\r\n      if (toExport) {\r\n        copyToClipboard(toExport);\r\n        GameUI.notify.automator(`Exported all data associated with \"${this.script.name}\" to your clipboard`, 6000);\r\n      } else {\r\n        GameUI.notify.error(\"Could not export data from blank Automator script!\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-entry-padding\">\r\n    <button\r\n      v-tooltip=\"'Export Full Script Data'\"\r\n      class=\"l-button-margin fas fa-file-export\"\r\n      @click=\"exportData(script.id)\"\r\n    />\r\n    <b>Script name: {{ script.name }}</b>\r\n    <br>\r\n    <span v-if=\"hasPresets\">\r\n      <span\r\n        :class=\"iconClass(hidePresets)\"\r\n        @click=\"hidePresets = !hidePresets\"\r\n      />\r\n      References {{ quantifyInt(\"recognized study preset\", presets.length) }}\r\n      <span v-if=\"!hidePresets\">\r\n        <div\r\n          v-for=\"id in presets\"\r\n          :key=\"id\"\r\n        >\r\n          <span v-if=\"presetData[id].name\">\"{{ presetData[id].name }}\" (slot {{ id + 1 }}):</span>\r\n          <span v-else>Preset slot {{ id + 1 }}:</span>\r\n          <br>\r\n          <div class=\"l-value-padding\">\r\n            <span v-if=\"presetData[id].studies\">{{ presetData[id].studies }}</span>\r\n            <i v-else>Empty Study Preset</i>\r\n          </div>\r\n        </div>\r\n      </span>\r\n    </span>\r\n    <span v-else>\r\n      Does not reference any study presets.\r\n    </span>\r\n    <br>\r\n    <span v-if=\"hasConstants\">\r\n      <span\r\n        :class=\"iconClass(hideConstants)\"\r\n        @click=\"hideConstants = !hideConstants\"\r\n      />\r\n      References {{ quantifyInt(\"defined constant\", constants.length) }}\r\n      <span v-if=\"!hideConstants\">\r\n        <div\r\n          v-for=\"name in constants\"\r\n          :key=\"name\"\r\n        >\r\n          \"{{ name }}\":\r\n          <br>\r\n          <div class=\"l-value-padding\">\r\n            {{ constantData[name] }}\r\n          </div>\r\n        </div>\r\n      </span>\r\n    </span>\r\n    <span v-else>\r\n      Does not reference any defined constants.\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-entry-padding {\r\n  border: solid 0.1rem var(--color-automator-docs-font);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  overflow-wrap: break-word;\r\n  padding: 1rem 1.5rem;\r\n}\r\n\r\n.l-value-padding {\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n.l-button-margin {\r\n  margin-right: 1rem;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/automator"},"metadata":{},"sourceType":"module"}