{"ast":null,"code":"import \"core-js/modules/es.symbol.description.js\";\nimport PrimaryButton from \"@/components/PrimaryButton\";\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\nexport default {\n  name: \"ReplicantiUpgradeButton\",\n  components: {\n    PrimaryButton,\n    PrimaryToggleButton\n  },\n  props: {\n    setup: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      description: \"\",\n      canBeBought: false,\n      costDescription: \"\",\n      isCapped: false,\n      isAutoUnlocked: false,\n      isAutobuyerOn: false,\n      isEC8Running: false\n    };\n  },\n\n  computed: {\n    upgrade() {\n      return this.setup.upgrade;\n    }\n\n  },\n  watch: {\n    isAutobuyerOn(newValue) {\n      Autobuyer.replicantiUpgrade(this.upgrade.id).isActive = newValue;\n    }\n\n  },\n  methods: {\n    update() {\n      const setup = this.setup;\n      const upgrade = setup.upgrade;\n      this.description = setup.formatDescription(upgrade.value);\n      this.canBeBought = upgrade.canBeBought;\n      this.isCapped = upgrade.isCapped;\n\n      if (!this.isCapped) {\n        this.costDescription = setup.formatCost(upgrade.cost);\n      }\n\n      const autobuyer = Autobuyer.replicantiUpgrade(upgrade.id);\n      this.isAutoUnlocked = autobuyer.isUnlocked;\n      this.isAutobuyerOn = autobuyer.isActive;\n      this.isEC8Running = EternityChallenge(8).isRunning;\n    }\n\n  }\n};\nexport class ReplicantiUpgradeButtonSetup {\n  constructor(upgrade, formatDescription, formatCost) {\n    this.upgrade = upgrade;\n    this.formatDescription = formatDescription;\n    this.formatCost = formatCost;\n  }\n\n}","map":{"version":3,"sources":["ReplicantiUpgradeButton.vue"],"names":[],"mappings":";AACA,OAAA,aAAA,MAAA,4BAAA;AACA,OAAA,mBAAA,MAAA,kCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,yBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aADA;AAEA,IAAA;AAFA,GAFA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GANA;;AAYA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,eAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,KAJA;AAKA,MAAA,cAAA,EAAA,KALA;AAMA,MAAA,aAAA,EAAA,KANA;AAOA,MAAA,YAAA,EAAA;AAPA,KAAA;AASA,GAtBA;;AAuBA,EAAA,QAAA,EAAA;AACA,IAAA,OAAA,GAAA;AACA,aAAA,KAAA,KAAA,CAAA,OAAA;AACA;;AAHA,GAvBA;AA4BA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,CAAA,QAAA,EAAA;AACA,MAAA,SAAA,CAAA,iBAAA,CAAA,KAAA,OAAA,CAAA,EAAA,EAAA,QAAA,GAAA,QAAA;AACA;;AAHA,GA5BA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,YAAA,KAAA,GAAA,KAAA,KAAA;AACA,YAAA,OAAA,GAAA,KAAA,CAAA,OAAA;AACA,WAAA,WAAA,GAAA,KAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,WAAA,WAAA,GAAA,OAAA,CAAA,WAAA;AACA,WAAA,QAAA,GAAA,OAAA,CAAA,QAAA;;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,eAAA,GAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA;;AACA,YAAA,SAAA,GAAA,SAAA,CAAA,iBAAA,CAAA,OAAA,CAAA,EAAA,CAAA;AACA,WAAA,cAAA,GAAA,SAAA,CAAA,UAAA;AACA,WAAA,aAAA,GAAA,SAAA,CAAA,QAAA;AACA,WAAA,YAAA,GAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,SAAA;AACA;;AAdA;AAjCA,CAAA;AAmDA,OAAA,MAAA,4BAAA,CAAA;AACA,EAAA,WAAA,CAAA,OAAA,EAAA,iBAAA,EAAA,UAAA,EAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,UAAA,GAAA,UAAA;AACA;;AALA","sourcesContent":["<script>\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\n\r\nexport default {\r\n  name: \"ReplicantiUpgradeButton\",\r\n  components: {\r\n    PrimaryButton,\r\n    PrimaryToggleButton\r\n  },\r\n  props: {\r\n    setup: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      description: \"\",\r\n      canBeBought: false,\r\n      costDescription: \"\",\r\n      isCapped: false,\r\n      isAutoUnlocked: false,\r\n      isAutobuyerOn: false,\r\n      isEC8Running: false\r\n    };\r\n  },\r\n  computed: {\r\n    upgrade() {\r\n      return this.setup.upgrade;\r\n    }\r\n  },\r\n  watch: {\r\n    isAutobuyerOn(newValue) {\r\n      Autobuyer.replicantiUpgrade(this.upgrade.id).isActive = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const setup = this.setup;\r\n      const upgrade = setup.upgrade;\r\n      this.description = setup.formatDescription(upgrade.value);\r\n      this.canBeBought = upgrade.canBeBought;\r\n      this.isCapped = upgrade.isCapped;\r\n      if (!this.isCapped) {\r\n        this.costDescription = setup.formatCost(upgrade.cost);\r\n      }\r\n      const autobuyer = Autobuyer.replicantiUpgrade(upgrade.id);\r\n      this.isAutoUnlocked = autobuyer.isUnlocked;\r\n      this.isAutobuyerOn = autobuyer.isActive;\r\n      this.isEC8Running = EternityChallenge(8).isRunning;\r\n    }\r\n  }\r\n};\r\n\r\nexport class ReplicantiUpgradeButtonSetup {\r\n  constructor(upgrade, formatDescription, formatCost) {\r\n    this.upgrade = upgrade;\r\n    this.formatDescription = formatDescription;\r\n    this.formatCost = formatCost;\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-spoon-btn-group l-replicanti-upgrade-button\">\r\n    <PrimaryButton\r\n      :enabled=\"canBeBought\"\r\n      class=\"o-primary-btn--replicanti-upgrade\"\r\n      @click=\"upgrade.purchase()\"\r\n    >\r\n      <span v-html=\"description\" />\r\n      <template v-if=\"!isCapped\">\r\n        <br>\r\n        <span>{{ costDescription }}</span>\r\n      </template>\r\n    </PrimaryButton>\r\n    <PrimaryToggleButton\r\n      v-if=\"isAutoUnlocked && !isEC8Running\"\r\n      v-model=\"isAutobuyerOn\"\r\n      label=\"Auto:\"\r\n      class=\"l--spoon-btn-group__little-spoon o-primary-btn--replicanti-upgrade-toggle\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/replicanti"},"metadata":{},"sourceType":"module"}