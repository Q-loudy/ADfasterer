{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { openExternalLink } from \"@/utility/open-external-link\";\nimport { STEAM } from \"@/env\";\nexport default {\n  name: \"NewsTicker\",\n\n  data() {\n    return {\n      enableAnimation: false\n    };\n  },\n\n  computed: {\n    lineClass() {\n      return this.enableAnimation ? undefined : \"c-disable-ticker-animation\";\n    }\n\n  },\n\n  beforeCreate() {\n    this.recentTickers = [];\n  },\n\n  mounted() {\n    document.addEventListener(\"visibilitychange\", () => this.restart.bind(this));\n    this.restart();\n  },\n\n  beforeDestroy() {\n    this.clearTimeouts();\n  },\n\n  methods: {\n    update() {\n      var _this$currentNews;\n\n      if ((_this$currentNews = this.currentNews) !== null && _this$currentNews !== void 0 && _this$currentNews.dynamic) {\n        this.$refs.line.innerHTML = this.currentNews.text;\n      }\n\n      this.enableAnimation = player.options.news.includeAnimated;\n    },\n\n    restart() {\n      if (!GameUI.initialized) {\n        setTimeout(this.restart.bind(this), 100);\n        return;\n      }\n\n      this.clearTimeouts();\n\n      if (document.hidden) {\n        return;\n      }\n\n      this.prepareNextMessage();\n    },\n\n    clearTimeouts() {\n      clearTimeout(this.delayTimeout);\n      clearTimeout(this.scrollTimeout);\n    },\n\n    prepareNextMessage() {\n      var _this$currentNews2, _this$currentNews3;\n\n      const line = this.$refs.line;\n      if (line === undefined) return; // Prevent tickers from repeating if they aren't unlocked or were seen recently\n\n      const canShow = news => {\n        var _news$unlocked;\n\n        return ((_news$unlocked = news.unlocked) !== null && _news$unlocked !== void 0 ? _news$unlocked : true) && !this.recentTickers.includes(news.id);\n      };\n\n      if (nextNewsMessageId && GameDatabase.news.find(message => message.id === nextNewsMessageId)) {\n        this.currentNews = GameDatabase.news.find(message => message.id === nextNewsMessageId);\n        nextNewsMessageId = undefined;\n      } else if (this.currentNews && this.currentNews.id === \"a236\") {\n        this.currentNews = GameDatabase.news.filter(message => message.isAdvertising && canShow(message)).randomElement();\n      } else {\n        const isAI = Math.random() < player.options.news.AIChance;\n        this.currentNews = GameDatabase.news.filter(message => message.id.includes(\"ai\") === isAI).filter(message => canShow(message)).randomElement();\n      }\n\n      this.recentTickers.push(this.currentNews.id);\n\n      while (this.recentTickers.length > player.options.news.repeatBuffer) this.recentTickers.shift();\n\n      if (this.currentNews.reset) {\n        this.currentNews.reset();\n      }\n\n      let text = this.currentNews.text;\n\n      if (STEAM) {\n        window.openNewsLink = openExternalLink;\n        text = text.replace(/href=[\"']((?:(?![\"'])[\\s\\S])+)[\"']/g, \"href onClick='window.openNewsLink(\\\"$1\\\"); return false;'\");\n      }\n\n      line.innerHTML = text;\n      line.style[\"transition-duration\"] = \"0ms\";\n\n      if (((_this$currentNews2 = this.currentNews) === null || _this$currentNews2 === void 0 ? void 0 : _this$currentNews2.id) === \"a244\" || ((_this$currentNews3 = this.currentNews) === null || _this$currentNews3 === void 0 ? void 0 : _this$currentNews3.id) === \"ai63\") {\n        line.style.transform = \"translateX(-100%)\";\n      } else {\n        line.style.transform = \"translateX(0)\";\n      }\n\n      const DELAY = 1000;\n      this.delayTimeout = setTimeout(this.scrollMessage.bind(this), DELAY);\n    },\n\n    scrollMessage() {\n      const line = this.$refs.line; // SCROLL_SPEED is in pixels per second\n\n      const SCROLL_SPEED = player.options.news.speed * 100;\n      const scrollDuration = (this.$refs.ticker.clientWidth + line.clientWidth) / SCROLL_SPEED;\n      line.style[\"transition-duration\"] = `${scrollDuration}s`;\n\n      if (this.currentNews && this.currentNews.id === \"a244\") {\n        line.style.transform = \"translateX(0)\";\n      } else {\n        line.style.transform = \"translateX(-100%)\";\n      }\n\n      NewsHandler.addSeenNews(this.currentNews.id);\n      if (NewsHandler.uniqueTickersSeen >= 50) Achievement(22).unlock();\n      this.scrollTimeout = setTimeout(this.prepareNextMessage.bind(this), scrollDuration * 1000);\n    },\n\n    onLineClick() {\n      if (this.currentNews.onClick === undefined) {\n        return;\n      }\n\n      SecretAchievement(24).unlock();\n      const updatedText = this.currentNews.onClick();\n\n      if (updatedText !== undefined) {\n        this.$refs.line.innerHTML = updatedText;\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["NewsTicker.vue"],"names":[],"mappings":";;AACA,SAAA,gBAAA,QAAA,8BAAA;AACA,SAAA,KAAA,QAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,eAAA,EAAA;AADA,KAAA;AAGA,GANA;;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,GAAA;AACA,aAAA,KAAA,eAAA,GAAA,SAAA,GAAA,4BAAA;AACA;;AAHA,GAPA;;AAYA,EAAA,YAAA,GAAA;AACA,SAAA,aAAA,GAAA,EAAA;AACA,GAdA;;AAeA,EAAA,OAAA,GAAA;AACA,IAAA,QAAA,CAAA,gBAAA,CAAA,kBAAA,EAAA,MAAA,KAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,SAAA,OAAA;AACA,GAlBA;;AAmBA,EAAA,aAAA,GAAA;AACA,SAAA,aAAA;AACA,GArBA;;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AAAA;;AACA,+BAAA,KAAA,WAAA,8CAAA,kBAAA,OAAA,EAAA;AACA,aAAA,KAAA,CAAA,IAAA,CAAA,SAAA,GAAA,KAAA,WAAA,CAAA,IAAA;AACA;;AACA,WAAA,eAAA,GAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,eAAA;AACA,KANA;;AAOA,IAAA,OAAA,GAAA;AACA,UAAA,CAAA,MAAA,CAAA,WAAA,EAAA;AACA,QAAA,UAAA,CAAA,KAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,GAAA,CAAA;AACA;AACA;;AACA,WAAA,aAAA;;AACA,UAAA,QAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,WAAA,kBAAA;AACA,KAjBA;;AAkBA,IAAA,aAAA,GAAA;AACA,MAAA,YAAA,CAAA,KAAA,YAAA,CAAA;AACA,MAAA,YAAA,CAAA,KAAA,aAAA,CAAA;AACA,KArBA;;AAsBA,IAAA,kBAAA,GAAA;AAAA;;AACA,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA;AACA,UAAA,IAAA,KAAA,SAAA,EAAA,OAFA,CAIA;;AACA,YAAA,OAAA,GAAA,IAAA;AAAA;;AAAA,eAAA,mBAAA,IAAA,CAAA,QAAA,2DAAA,IAAA,KAAA,CAAA,KAAA,aAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AAAA,OAAA;;AAEA,UAAA,iBAAA,IAAA,YAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,IAAA,OAAA,CAAA,EAAA,KAAA,iBAAA,CAAA,EAAA;AACA,aAAA,WAAA,GAAA,YAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,IAAA,OAAA,CAAA,EAAA,KAAA,iBAAA,CAAA;AACA,QAAA,iBAAA,GAAA,SAAA;AACA,OAHA,MAGA,IAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA,EAAA,KAAA,MAAA,EAAA;AACA,aAAA,WAAA,GAAA,YAAA,CAAA,IAAA,CACA,MADA,CACA,OAAA,IAAA,OAAA,CAAA,aAAA,IAAA,OAAA,CAAA,OAAA,CADA,EAEA,aAFA,EAAA;AAGA,OAJA,MAIA;AACA,cAAA,IAAA,GAAA,IAAA,CAAA,MAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,aAAA,WAAA,GAAA,YAAA,CAAA,IAAA,CACA,MADA,CACA,OAAA,IAAA,OAAA,CAAA,EAAA,CAAA,QAAA,CAAA,IAAA,MAAA,IADA,EAEA,MAFA,CAEA,OAAA,IAAA,OAAA,CAAA,OAAA,CAFA,EAGA,aAHA,EAAA;AAIA;;AAEA,WAAA,aAAA,CAAA,IAAA,CAAA,KAAA,WAAA,CAAA,EAAA;;AACA,aAAA,KAAA,aAAA,CAAA,MAAA,GAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,YAAA,EAAA,KAAA,aAAA,CAAA,KAAA;;AAEA,UAAA,KAAA,WAAA,CAAA,KAAA,EAAA;AACA,aAAA,WAAA,CAAA,KAAA;AACA;;AAEA,UAAA,IAAA,GAAA,KAAA,WAAA,CAAA,IAAA;;AACA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,YAAA,GAAA,gBAAA;AACA,QAAA,IAAA,GAAA,IAAA,CAAA,OAAA,CACA,qCADA,EAEA,2DAFA,CAAA;AAIA;;AACA,MAAA,IAAA,CAAA,SAAA,GAAA,IAAA;AAEA,MAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,IAAA,KAAA;;AACA,UAAA,4BAAA,WAAA,0EAAA,EAAA,MAAA,MAAA,IAAA,4BAAA,WAAA,0EAAA,EAAA,MAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,SAAA,GAAA,mBAAA;AACA,OAFA,MAEA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,SAAA,GAAA,eAAA;AACA;;AAEA,YAAA,KAAA,GAAA,IAAA;AACA,WAAA,YAAA,GAAA,UAAA,CAAA,KAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,KAAA,CAAA;AACA,KAtEA;;AAuEA,IAAA,aAAA,GAAA;AACA,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CADA,CAGA;;AACA,YAAA,YAAA,GAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA;AACA,YAAA,cAAA,GAAA,CAAA,KAAA,KAAA,CAAA,MAAA,CAAA,WAAA,GAAA,IAAA,CAAA,WAAA,IAAA,YAAA;AAEA,MAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,IAAA,GAAA,cAAA,GAAA;;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA,EAAA,KAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,SAAA,GAAA,eAAA;AACA,OAFA,MAEA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,SAAA,GAAA,mBAAA;AACA;;AAEA,MAAA,WAAA,CAAA,WAAA,CAAA,KAAA,WAAA,CAAA,EAAA;AACA,UAAA,WAAA,CAAA,iBAAA,IAAA,EAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,MAAA;AAEA,WAAA,aAAA,GAAA,UAAA,CAAA,KAAA,kBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,cAAA,GAAA,IAAA,CAAA;AACA,KAzFA;;AA0FA,IAAA,WAAA,GAAA;AACA,UAAA,KAAA,WAAA,CAAA,OAAA,KAAA,SAAA,EAAA;AACA;AACA;;AACA,MAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,MAAA;AACA,YAAA,WAAA,GAAA,KAAA,WAAA,CAAA,OAAA,EAAA;;AACA,UAAA,WAAA,KAAA,SAAA,EAAA;AACA,aAAA,KAAA,CAAA,IAAA,CAAA,SAAA,GAAA,WAAA;AACA;AACA;;AAnGA;AAtBA,CAAA","sourcesContent":["<script>\r\nimport { openExternalLink } from \"@/utility/open-external-link\";\r\nimport { STEAM } from \"@/env\";\r\n\r\nexport default {\r\n  name: \"NewsTicker\",\r\n  data() {\r\n    return {\r\n      enableAnimation: false,\r\n    };\r\n  },\r\n  computed: {\r\n    lineClass() {\r\n      return this.enableAnimation ? undefined : \"c-disable-ticker-animation\";\r\n    }\r\n  },\r\n  beforeCreate() {\r\n    this.recentTickers = [];\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"visibilitychange\", () => this.restart.bind(this));\r\n    this.restart();\r\n  },\r\n  beforeDestroy() {\r\n    this.clearTimeouts();\r\n  },\r\n  methods: {\r\n    update() {\r\n      if (this.currentNews?.dynamic) {\r\n        this.$refs.line.innerHTML = this.currentNews.text;\r\n      }\r\n      this.enableAnimation = player.options.news.includeAnimated;\r\n    },\r\n    restart() {\r\n      if (!GameUI.initialized) {\r\n        setTimeout(this.restart.bind(this), 100);\r\n        return;\r\n      }\r\n      this.clearTimeouts();\r\n      if (document.hidden) {\r\n        return;\r\n      }\r\n      this.prepareNextMessage();\r\n    },\r\n    clearTimeouts() {\r\n      clearTimeout(this.delayTimeout);\r\n      clearTimeout(this.scrollTimeout);\r\n    },\r\n    prepareNextMessage() {\r\n      const line = this.$refs.line;\r\n      if (line === undefined) return;\r\n\r\n      // Prevent tickers from repeating if they aren't unlocked or were seen recently\r\n      const canShow = news => (news.unlocked ?? true) && !this.recentTickers.includes(news.id);\r\n\r\n      if (nextNewsMessageId && GameDatabase.news.find(message => message.id === nextNewsMessageId)) {\r\n        this.currentNews = GameDatabase.news.find(message => message.id === nextNewsMessageId);\r\n        nextNewsMessageId = undefined;\r\n      } else if (this.currentNews && this.currentNews.id === \"a236\") {\r\n        this.currentNews = GameDatabase.news\r\n          .filter(message => message.isAdvertising && canShow(message))\r\n          .randomElement();\r\n      } else {\r\n        const isAI = Math.random() < player.options.news.AIChance;\r\n        this.currentNews = GameDatabase.news\r\n          .filter(message => message.id.includes(\"ai\") === isAI)\r\n          .filter(message => canShow(message))\r\n          .randomElement();\r\n      }\r\n\r\n      this.recentTickers.push(this.currentNews.id);\r\n      while (this.recentTickers.length > player.options.news.repeatBuffer) this.recentTickers.shift();\r\n\r\n      if (this.currentNews.reset) {\r\n        this.currentNews.reset();\r\n      }\r\n\r\n      let text = this.currentNews.text;\r\n      if (STEAM) {\r\n        window.openNewsLink = openExternalLink;\r\n        text = text.replace(\r\n          /href=['\"]([^\"']+)['\"]/gu,\r\n          \"href onClick='window.openNewsLink(\\\"$1\\\"); return false;'\"\r\n        );\r\n      }\r\n      line.innerHTML = text;\r\n\r\n      line.style[\"transition-duration\"] = \"0ms\";\r\n      if (this.currentNews?.id === \"a244\" || this.currentNews?.id === \"ai63\") {\r\n        line.style.transform = \"translateX(-100%)\";\r\n      } else {\r\n        line.style.transform = \"translateX(0)\";\r\n      }\r\n\r\n      const DELAY = 1000;\r\n      this.delayTimeout = setTimeout(this.scrollMessage.bind(this), DELAY);\r\n    },\r\n    scrollMessage() {\r\n      const line = this.$refs.line;\r\n\r\n      // SCROLL_SPEED is in pixels per second\r\n      const SCROLL_SPEED = player.options.news.speed * 100;\r\n      const scrollDuration = (this.$refs.ticker.clientWidth + line.clientWidth) / SCROLL_SPEED;\r\n\r\n      line.style[\"transition-duration\"] = `${scrollDuration}s`;\r\n      if (this.currentNews && this.currentNews.id === \"a244\") {\r\n        line.style.transform = \"translateX(0)\";\r\n      } else {\r\n        line.style.transform = \"translateX(-100%)\";\r\n      }\r\n\r\n      NewsHandler.addSeenNews(this.currentNews.id);\r\n      if (NewsHandler.uniqueTickersSeen >= 50) Achievement(22).unlock();\r\n\r\n      this.scrollTimeout = setTimeout(this.prepareNextMessage.bind(this), scrollDuration * 1000);\r\n    },\r\n    onLineClick() {\r\n      if (this.currentNews.onClick === undefined) {\r\n        return;\r\n      }\r\n      SecretAchievement(24).unlock();\r\n      const updatedText = this.currentNews.onClick();\r\n      if (updatedText !== undefined) {\r\n        this.$refs.line.innerHTML = updatedText;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    ref=\"ticker\"\r\n    class=\"c-news-ticker\"\r\n  >\r\n    <span\r\n      ref=\"line\"\r\n      class=\"c-news-line c-news-ticker__line\"\r\n      :class=\"lineClass\"\r\n      @click=\"onLineClick\"\r\n    />\r\n  </div>\r\n</template>\r\n"],"sourceRoot":"src/components/ui-modes"},"metadata":{},"sourceType":"module"}