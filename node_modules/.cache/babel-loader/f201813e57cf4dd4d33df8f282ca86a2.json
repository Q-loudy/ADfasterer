{"ast":null,"code":"export default {\n  name: \"ClassicTabButton\",\n  props: {\n    tab: {\n      type: Object,\n      required: true\n    },\n    tabPosition: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      isAvailable: false,\n      hasNotification: false,\n      tabName: \"\"\n    };\n  },\n\n  computed: {\n    isCurrentTab() {\n      return this.tab.isOpen && Theme.currentName() !== \"S9\";\n    }\n\n  },\n  methods: {\n    update() {\n      this.isAvailable = this.tab.isAvailable;\n      this.hasNotification = this.tab.hasNotification;\n\n      if (this.tabPosition < Pelle.endTabNames.length) {\n        this.tabName = Pelle.transitionText(this.tab.name, Pelle.endTabNames[this.tabPosition], Math.max(Math.min(GameEnd.endState - this.tab.id % 4 / 10, 1), 0));\n      } else {\n        this.tabName = this.tab.name;\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["ClassicTabButton.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AALA,GAFA;;AAYA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA;AAEA,MAAA,eAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GAlBA;;AAmBA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,GAAA;AACA,aAAA,KAAA,GAAA,CAAA,MAAA,IAAA,KAAA,CAAA,WAAA,OAAA,IAAA;AACA;;AAHA,GAnBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,WAAA,GAAA,KAAA,GAAA,CAAA,WAAA;AACA,WAAA,eAAA,GAAA,KAAA,GAAA,CAAA,eAAA;;AACA,UAAA,KAAA,WAAA,GAAA,KAAA,CAAA,WAAA,CAAA,MAAA,EAAA;AACA,aAAA,OAAA,GAAA,KAAA,CAAA,cAAA,CACA,KAAA,GAAA,CAAA,IADA,EAEA,KAAA,CAAA,WAAA,CAAA,KAAA,WAAA,CAFA,EAGA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,OAAA,CAAA,QAAA,GAAA,KAAA,GAAA,CAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAHA,CAAA;AAKA,OANA,MAMA;AACA,aAAA,OAAA,GAAA,KAAA,GAAA,CAAA,IAAA;AACA;AACA;;AAbA;AAxBA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"ClassicTabButton\",\r\n  props: {\r\n    tab: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    tabPosition: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isAvailable: false,\r\n      hasNotification: false,\r\n      tabName: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    isCurrentTab() {\r\n      return this.tab.isOpen && Theme.currentName() !== \"S9\";\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isAvailable = this.tab.isAvailable;\r\n      this.hasNotification = this.tab.hasNotification;\r\n      if (this.tabPosition < Pelle.endTabNames.length) {\r\n        this.tabName = Pelle.transitionText(\r\n          this.tab.name,\r\n          Pelle.endTabNames[this.tabPosition],\r\n          Math.max(Math.min(GameEnd.endState - (this.tab.id) % 4 / 10, 1), 0)\r\n        );\r\n      } else {\r\n        this.tabName = this.tab.name;\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <button\r\n    v-if=\"isAvailable\"\r\n    :class=\"\r\n      [tab.config.UIClass,\r\n       { 'o-tab-btn--active': isCurrentTab }]\r\n    \"\r\n    class=\"o-tab-btn\"\r\n    @click=\"tab.show(true)\"\r\n  >\r\n    {{ tabName }}\r\n    <div\r\n      v-if=\"hasNotification\"\r\n      class=\"fas fa-circle-exclamation l-notification-icon\"\r\n    />\r\n  </button>\r\n</template>\r\n\r\n<style scoped>\r\n.o-tab-btn {\r\n  position: relative;\r\n  height: 3.1rem;\r\n  vertical-align: middle;\r\n  margin: 0.2rem;\r\n  margin-bottom: 0.7rem;\r\n}\r\n\r\n.o-tab-btn--active {\r\n  height: 3.1rem;\r\n  border-bottom-width: 0.5rem;\r\n}\r\n\r\n.s-base--metro .o-tab-btn--active {\r\n  border-bottom-width: 0.5rem;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/ui-modes/classic"},"metadata":{},"sourceType":"module"}