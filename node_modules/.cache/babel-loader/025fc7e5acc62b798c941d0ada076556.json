{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";\nimport HiddenSubtabsButton from \"@/components/modals/options/hidden-tabs/HiddenSubtabsButton\";\nexport default {\n  name: \"HiddenTabGroup\",\n  components: {\n    HiddenSubtabsButton\n  },\n  props: {\n    tab: {\n      type: Object,\n      required: true\n    },\n    changeEnabled: {\n      type: Boolean,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      isVisible: false,\n      isHidable: false,\n      isHidden: false,\n      unlockedSubtabs: []\n    };\n  },\n\n  computed: {\n    tabName() {\n      return this.tab.name;\n    },\n\n    subtabs() {\n      return this.tab.subtabs;\n    },\n\n    isCurrentTab() {\n      return this.tab.id === Tabs.current.id;\n    },\n\n    alwaysVisible() {\n      return !this.isHidable || this.isCurrentTab;\n    },\n\n    rowClass() {\n      return {\n        \"c-hide-modal-all-subtab-container\": true,\n        \"l-hide-modal-subtab-container\": true,\n        \"c-hidden-tabs-background__visible\": !this.isHidden,\n        \"c-hidden-tabs-background__hidden\": this.isHidden,\n        \"c-hidden-tabs-background__always-visible\": this.alwaysVisible\n      };\n    },\n\n    rowVisibleIndicatorClass() {\n      return {\n        \"c-indicator-icon\": true,\n        \"fas\": true,\n        \"fa-check\": !this.isHidden,\n        \"fa-times\": this.isHidden,\n        \"fa-exclamation\": this.alwaysVisible\n      };\n    },\n\n    rowVisibleIndicatorTooltip() {\n      if (this.isHidden) return \"Click to unhide tab\";\n      if (!this.alwaysVisible) return \"Click to hide tab\";\n      return \"This tab cannot be hidden\";\n    }\n\n  },\n  methods: {\n    update() {\n      const tab = this.tab;\n      this.isVisible = tab.isUnlocked;\n      this.isHidable = tab.hidable;\n      this.isHidden = tab.isHidden && this.isHidable;\n      this.unlockedSubtabs = this.subtabs.filter(sub => sub.isUnlocked);\n    },\n\n    toggleVisibility() {\n      if (!this.changeEnabled) return; // If this tab and all unlocked subtabs are hidden, unhide all subtabs in addition to the tab\n\n      if (this.tab.isHidden && this.unlockedSubtabs.every(t => t.isHidden)) {\n        for (const subtab of this.unlockedSubtabs) {\n          subtab.toggleVisibility();\n        }\n\n        this.tab.unhideTab();\n      } else {\n        this.tab.toggleVisibility();\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["HiddenTabGroup.vue"],"names":[],"mappings":";AACA,OAAA,mBAAA,MAAA,6DAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA;AALA,GALA;;AAeA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,QAAA,EAAA,KAHA;AAIA,MAAA,eAAA,EAAA;AAJA,KAAA;AAMA,GAtBA;;AAuBA,EAAA,QAAA,EAAA;AACA,IAAA,OAAA,GAAA;AACA,aAAA,KAAA,GAAA,CAAA,IAAA;AACA,KAHA;;AAIA,IAAA,OAAA,GAAA;AACA,aAAA,KAAA,GAAA,CAAA,OAAA;AACA,KANA;;AAOA,IAAA,YAAA,GAAA;AACA,aAAA,KAAA,GAAA,CAAA,EAAA,KAAA,IAAA,CAAA,OAAA,CAAA,EAAA;AACA,KATA;;AAUA,IAAA,aAAA,GAAA;AACA,aAAA,CAAA,KAAA,SAAA,IAAA,KAAA,YAAA;AACA,KAZA;;AAaA,IAAA,QAAA,GAAA;AACA,aAAA;AACA,6CAAA,IADA;AAEA,yCAAA,IAFA;AAGA,6CAAA,CAAA,KAAA,QAHA;AAIA,4CAAA,KAAA,QAJA;AAKA,oDAAA,KAAA;AALA,OAAA;AAOA,KArBA;;AAsBA,IAAA,wBAAA,GAAA;AACA,aAAA;AACA,4BAAA,IADA;AAEA,eAAA,IAFA;AAGA,oBAAA,CAAA,KAAA,QAHA;AAIA,oBAAA,KAAA,QAJA;AAKA,0BAAA,KAAA;AALA,OAAA;AAOA,KA9BA;;AA+BA,IAAA,0BAAA,GAAA;AACA,UAAA,KAAA,QAAA,EAAA,OAAA,qBAAA;AACA,UAAA,CAAA,KAAA,aAAA,EAAA,OAAA,mBAAA;AACA,aAAA,2BAAA;AACA;;AAnCA,GAvBA;AA4DA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,YAAA,GAAA,GAAA,KAAA,GAAA;AACA,WAAA,SAAA,GAAA,GAAA,CAAA,UAAA;AACA,WAAA,SAAA,GAAA,GAAA,CAAA,OAAA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,QAAA,IAAA,KAAA,SAAA;AACA,WAAA,eAAA,GAAA,KAAA,OAAA,CAAA,MAAA,CAAA,GAAA,IAAA,GAAA,CAAA,UAAA,CAAA;AACA,KAPA;;AAQA,IAAA,gBAAA,GAAA;AACA,UAAA,CAAA,KAAA,aAAA,EAAA,OADA,CAEA;;AACA,UAAA,KAAA,GAAA,CAAA,QAAA,IAAA,KAAA,eAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,EAAA;AACA,aAAA,MAAA,MAAA,IAAA,KAAA,eAAA,EAAA;AACA,UAAA,MAAA,CAAA,gBAAA;AACA;;AACA,aAAA,GAAA,CAAA,SAAA;AACA,OALA,MAKA;AACA,aAAA,GAAA,CAAA,gBAAA;AACA;AACA;;AAnBA;AA5DA,CAAA","sourcesContent":["<script>\r\nimport HiddenSubtabsButton from \"@/components/modals/options/hidden-tabs/HiddenSubtabsButton\";\r\n\r\nexport default {\r\n  name: \"HiddenTabGroup\",\r\n  components: {\r\n    HiddenSubtabsButton,\r\n  },\r\n  props: {\r\n    tab: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    changeEnabled: {\r\n      type: Boolean,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isVisible: false,\r\n      isHidable: false,\r\n      isHidden: false,\r\n      unlockedSubtabs: [],\r\n    };\r\n  },\r\n  computed: {\r\n    tabName() {\r\n      return this.tab.name;\r\n    },\r\n    subtabs() {\r\n      return this.tab.subtabs;\r\n    },\r\n    isCurrentTab() {\r\n      return this.tab.id === Tabs.current.id;\r\n    },\r\n    alwaysVisible() {\r\n      return !this.isHidable || this.isCurrentTab;\r\n    },\r\n    rowClass() {\r\n      return {\r\n        \"c-hide-modal-all-subtab-container\": true,\r\n        \"l-hide-modal-subtab-container\": true,\r\n        \"c-hidden-tabs-background__visible\": !this.isHidden,\r\n        \"c-hidden-tabs-background__hidden\": this.isHidden,\r\n        \"c-hidden-tabs-background__always-visible\": this.alwaysVisible\r\n      };\r\n    },\r\n    rowVisibleIndicatorClass() {\r\n      return {\r\n        \"c-indicator-icon\": true,\r\n        \"fas\": true,\r\n        \"fa-check\": !this.isHidden,\r\n        \"fa-times\": this.isHidden,\r\n        \"fa-exclamation\": this.alwaysVisible,\r\n      };\r\n    },\r\n    rowVisibleIndicatorTooltip() {\r\n      if (this.isHidden) return \"Click to unhide tab\";\r\n      if (!this.alwaysVisible) return \"Click to hide tab\";\r\n      return \"This tab cannot be hidden\";\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      const tab = this.tab;\r\n      this.isVisible = tab.isUnlocked;\r\n      this.isHidable = tab.hidable;\r\n      this.isHidden = tab.isHidden && this.isHidable;\r\n      this.unlockedSubtabs = this.subtabs.filter(sub => sub.isUnlocked);\r\n    },\r\n    toggleVisibility() {\r\n      if (!this.changeEnabled) return;\r\n      // If this tab and all unlocked subtabs are hidden, unhide all subtabs in addition to the tab\r\n      if (this.tab.isHidden && this.unlockedSubtabs.every(t => t.isHidden)) {\r\n        for (const subtab of this.unlockedSubtabs) {\r\n          subtab.toggleVisibility();\r\n        }\r\n        this.tab.unhideTab();\r\n      } else {\r\n        this.tab.toggleVisibility();\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-if=\"isVisible\"\r\n    :class=\"rowClass\"\r\n    @click.self=\"toggleVisibility\"\r\n  >\r\n    <HiddenSubtabsButton\r\n      v-for=\"(subtab, i) in unlockedSubtabs\"\r\n      :key=\"i\"\r\n      :subtab=\"subtab\"\r\n      :tab=\"tab\"\r\n      :change-enabled=\"changeEnabled\"\r\n    />\r\n    <div\r\n      v-tooltip=\"rowVisibleIndicatorTooltip\"\r\n      :class=\"rowVisibleIndicatorClass\"\r\n      @click=\"toggleVisibility\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-indicator-icon {\r\n  width: 2rem;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  color: black;\r\n  text-shadow: none;\r\n  padding: 0.2rem;\r\n}\r\n\r\n.c-hidden-tabs-background__visible {\r\n  background-color: var(--color-good);\r\n}\r\n\r\n.c-hidden-tabs-background__hidden {\r\n  background-color: var(--color-gh-purple);\r\n}\r\n\r\n.c-hidden-tabs-background__always-visible {\r\n  background-color: var(--color-disabled);\r\n  cursor: default;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/modals/options/hidden-tabs"},"metadata":{},"sourceType":"module"}