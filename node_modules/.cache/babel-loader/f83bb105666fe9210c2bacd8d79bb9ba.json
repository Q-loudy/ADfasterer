{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport { sha512_256 } from \"js-sha512\";\nimport { DC } from \"./constants\";\nimport FullScreenAnimationHandler from \"./full-screen-animation-handler\";\n/* eslint-disable no-console */\n// Disabling no-console here seems\n// reasonable, since these are the devtools after all\n\nexport const dev = {};\n\ndev.hardReset = function () {\n  GameStorage.hardReset();\n};\n\ndev.giveAllAchievements = function () {\n  const allAchievements = Achievements.all.concat(SecretAchievements.all);\n\n  for (const achievement of allAchievements) achievement.unlock();\n}; // Know that both dev.doubleEverything and dev.tripleEverything are both broken\n// with this error https://i.imgur.com/ZMEBNTv.png\n\n\ndev.doubleEverything = function () {\n  Object.keys(player).forEach(key => {\n    if (typeof player[key] === \"number\") player[key] *= 2;\n    if (typeof player[key] === \"object\" && player[key].constructor !== Object) player[key] = player[key].times(2);\n\n    if (typeof player[key] === \"object\" && !isFinite(player[key])) {\n      Object.keys(player[key]).forEach(key2 => {\n        if (typeof player[key][key2] === \"number\") player[key][key2] *= 2;\n        if (typeof player[key][key2] === \"object\" && player[key][key2].constructor !== Object) player[key][key2] = player[key][key2].times(2);\n      });\n    }\n  });\n};\n\ndev.tripleEverything = function () {\n  Object.keys(player).forEach(key => {\n    if (typeof player[key] === \"number\") player[key] *= 3;\n    if (typeof player[key] === \"object\" && player[key].constructor !== Object) player[key] = player[key].times(3);\n\n    if (typeof player[key] === \"object\" && !isFinite(player[key])) {\n      Object.keys(player[key]).forEach(key3 => {\n        if (typeof player[key][key3] === \"number\") player[key][key3] *= 3;\n        if (typeof player[key][key3] === \"object\" && player[key][key3].constructor !== Object) player[key][key3] = player[key][key3].times(3);\n      });\n    }\n  });\n};\n\ndev.barrelRoll = function () {\n  FullScreenAnimationHandler.display(\"a-barrel-roll\", 5);\n};\n\ndev.spin3d = function () {\n  if (document.body.style.animation === \"\") document.body.style.animation = \"a-spin3d 3s infinite\";else document.body.style.animation = \"\";\n};\n\ndev.spin4d = function () {\n  if (document.body.style.animation === \"\") document.body.style.animation = \"a-spin4d 3s infinite\";else document.body.style.animation = \"\";\n};\n\ndev.cancerize = function () {\n  Theme.tryUnlock(\"Design\");\n  Notation.emoji.setAsCurrent();\n};\n\ndev.fixSave = function () {\n  const save = JSON.stringify(player, GameSaveSerializer.jsonConverter);\n  const fixed = save.replace(/NaN/gi, \"10\");\n  const saveData = JSON.parse(fixed);\n\n  if (!saveData || GameStorage.checkPlayerObject(saveData) !== \"\") {\n    Modal.message.show(\"Could not fix the save.\");\n    return;\n  }\n\n  GameStorage.loadPlayerObject(saveData);\n  GameStorage.save();\n};\n\ndev.updateTDCosts = function () {\n  for (let tier = 1; tier < 9; tier++) {\n    const dim = TimeDimension(tier);\n    dim.cost = dim.nextCost(dim.bought);\n  }\n};\n\ndev.refundTimeDims = function () {\n  for (const dimension of TimeDimensions.all) {\n    dimension.bought = 0;\n  }\n\n  dev.updateTDCosts();\n};\n\ndev.refundEPMult = function () {\n  player.epmultUpgrades = 0;\n};\n\ndev.refundDilStudies = function () {\n  for (const study of GameDatabase.eternity.timeStudies.dilation) {\n    if (player.dilation.studies.includes(study.id)) {\n      player.dilation.studies.splice(player.dilation.studies.indexOf(study.id), 1);\n      console.log(document.getElementById(`removed dilstudy${study.id}`));\n      Currency.timeTheorems.add(study.cost);\n    }\n  }\n};\n\ndev.resetDilation = function () {\n  player.dilation.dilatedTime = DC.D0;\n  player.dilation.tachyonParticles = DC.D0;\n  player.dilation.rebuyables[1] = 0;\n  player.dilation.rebuyables[2] = 0;\n  player.dilation.rebuyables[3] = 0;\n  player.dilation.baseTachyonGalaxies = 0;\n  player.dilation.totalTachyonGalaxies = 0;\n}; // We want to give a large degree of options\n// when making a special glyph, so no max-params\n// eslint-disable-next-line max-params\n\n\ndev.giveSpecialGlyph = function (color, symbol, level, rawLevel = level) {\n  if (GameCache.glyphInventorySpace.value === 0) return;\n  const glyph = GlyphGenerator.randomGlyph({\n    actualLevel: level,\n    rawLevel\n  });\n  glyph.symbol = symbol;\n  glyph.color = color;\n  Glyphs.addToInventory(glyph);\n};\n\ndev.giveGlyph = function (level, rawLevel = level) {\n  if (GameCache.glyphInventorySpace.value === 0) return;\n  Glyphs.addToInventory(GlyphGenerator.randomGlyph({\n    actualLevel: level,\n    rawLevel\n  }));\n};\n\ndev.giveRealityGlyph = function (level) {\n  if (GameCache.glyphInventorySpace.value === 0) return;\n  Glyphs.addToInventory(GlyphGenerator.realityGlyph(level));\n};\n\ndev.setCompanionGlyphEP = function (eternityPoints) {\n  const glyph = player.reality.glyphs.active.concat(player.reality.glyphs.inventory).filter(g => g.type === \"companion\")[0];\n  glyph.strength = rarityToStrength(eternityPoints.log10() / 1e6);\n};\n\ndev.decriminalize = function () {\n  SecretAchievement(23).lock();\n  EventHub.dispatch(GAME_EVENT.ACHIEVEMENT_UNLOCKED);\n};\n\ndev.removeAch = function (name) {\n  if (name === \"all\") {\n    const allAchievements = Achievements.all.concat(SecretAchievements.all);\n\n    for (const achievement of allAchievements) achievement.lock();\n\n    return \"removed all achievements\";\n  }\n\n  if (typeof name === \"number\") return Achievement(name).lock();\n  if (name.startsWith(\"r\")) return Achievement(parseInt(name.slice(1), 10)).lock();\n  if (name.startsWith(\"s\")) return SecretAchievement(parseInt(name.slice(1), 10)).lock();\n  return \"failed to delete achievement\";\n};\n\nwindow.nextNewsMessageId = undefined;\n\ndev.setNextNewsMessage = function (id) {\n  nextNewsMessageId = id;\n};\n\ndev.implode = function () {\n  bigCrunchAnimation();\n};\n\ndev.eternify = function () {\n  eternityAnimation();\n};\n\ndev.dilate = function () {\n  animateAndDilate();\n};\n\ndev.undilate = function () {\n  animateAndUndilate();\n};\n\ndev.realize = function () {\n  runRealityAnimation();\n};\n\ndev.respecPerks = function () {\n  player.reality.perkPoints += player.reality.perks.size;\n  player.reality.perks = new Set();\n  GameCache.achievementPeriod.invalidate();\n  GameCache.buyablePerks.invalidate();\n};\n\nexport function isDevEnvironment() {\n  const href = window.location.href;\n  return href.split(\"//\")[1].length > 20 || isLocalEnvironment();\n}\nexport function isLocalEnvironment() {\n  const href = window.location.href;\n  return href.includes(\"file\") || href.includes(\"127.0.0.1\") || href.includes(\"localhost\");\n}\n\ndev.togglePerformanceStats = function () {\n  PerformanceStats.toggle();\n}; // Buys all perks, will end up buying semi-randomly if not enough pp\n\n\ndev.buyAllPerks = function () {\n  const visited = [];\n  const toVisit = [Perk.firstPerk];\n\n  while (toVisit.length > 0) {\n    if (player.reality.perkPoints < 1) break;\n    const perk = toVisit.shift();\n    visited.push(perk);\n    toVisit.push(...perk.connectedPerks.filter(p => !visited.includes(p)));\n    perk.purchase();\n  }\n}; // This should help for balancing different glyph types, strong rounding of values is intentional\n\n\ndev.printResourceTotals = function () {\n  console.log(`Antimatter: e${Currency.antimatter.exponent.toPrecision(3)}`);\n  console.log(`RM: e${Math.round(MachineHandler.gainedRealityMachines.log10())}`);\n  console.log(`Glyph level: ${100 * Math.floor(gainedGlyphLevel().actualLevel / 100 + 0.5)}`);\n  console.log(`Tickspeed: e${-Tickspeed.current.exponent.toPrecision(3)}`);\n  console.log(`Gamespeed: ${Math.pow(getGameSpeedupFactor(), 1.2).toPrecision(1)}`);\n  const aGalaxy = 100 * Math.floor(player.galaxies / 100 + 0.5);\n  const rGalaxy = 100 * Math.floor(Replicanti.galaxies.total / 100 + 0.5);\n  const dGalaxy = 100 * Math.floor(player.dilation.totalTachyonGalaxies / 100 + 0.5);\n  console.log(`Galaxies: ${aGalaxy}+${rGalaxy}+${dGalaxy} (${aGalaxy + rGalaxy + dGalaxy})`);\n  console.log(`Tick reduction: e${-Math.round(getTickSpeedMultiplier().log10())}`);\n  let ADmults = DC.D1;\n\n  for (let i = 1; i <= 8; i++) {\n    ADmults = ADmults.times(AntimatterDimension(i).multiplier);\n  }\n\n  console.log(`AD mults: e${ADmults.log10().toPrecision(3)}`);\n  let IDmults = DC.D1;\n\n  for (let i = 1; i <= 8; i++) {\n    IDmults = IDmults.times(InfinityDimension(i).multiplier);\n  }\n\n  console.log(`ID mults: e${IDmults.log10().toPrecision(3)}`);\n  let TDmults = DC.D1;\n\n  for (let i = 1; i <= 8; i++) {\n    TDmults = TDmults.times(TimeDimension(i).multiplier);\n  }\n\n  console.log(`TD mults: e${TDmults.log10().toPrecision(3)}`);\n  console.log(`Tickspeed from TD: ${formatWithCommas(1000 * Math.floor(player.totalTickGained / 1000 + 0.5))}`);\n  console.log(`Infinities: e${Math.round(player.infinities.log10())}`);\n  console.log(`Eternities: e${Math.round(player.eternities.log10())}`);\n  console.log(`Replicanti: e${formatWithCommas(1e5 * Math.floor(Replicanti.amount.log10() / 1e5 + 0.5))}`);\n  console.log(`TT: e${Math.round(player.timestudy.theorem.log10())}`);\n  console.log(`DT: e${Math.round(player.dilation.dilatedTime.log10())}`);\n  console.log(`TP: e${Math.round(player.dilation.tachyonParticles.log10())}`);\n};\n\ndev.unlockCelestialQuotes = function (celestial) {\n  Quotes[celestial].all.forEach(x => x.show());\n};\n\ndev.presentCelestialQuotes = function (celestial) {\n  Quotes[celestial].all.forEach(x => x.present());\n}; // This doesn't check everything but hopefully it gets some of the more obvious ones.\n\n\ndev.testReplicantiCode = function (singleId, useDebugger = false) {\n  const situationLists = [[function () {\n    player.infinities = DC.E12;\n    player.celestials.effarig.unlockBits = 64;\n  }], [function () {\n    player.replicanti.interval = 1;\n  }], [function () {\n    player.timestudy.studies.push(33);\n  }], [function () {\n    player.timestudy.studies.push(62);\n  }], [function () {\n    player.timestudy.studies.push(131);\n  }, function () {\n    player.timestudy.studies.push(132);\n  }, function () {\n    player.timestudy.studies.push(133);\n  }, function () {\n    player.timestudy.studies.push(131, 132, 133);\n  }], [function () {\n    player.timestudy.studies.push(192);\n  }], [function () {\n    player.timestudy.studies.push(213);\n  }], [function () {\n    player.timestudy.studies.push(225);\n  }], [function () {\n    player.timestudy.studies.push(226);\n  }], [function () {\n    player.achievementBits[8] |= 16;\n  }], [function () {\n    player.achievementBits[12] |= 8;\n  }], [function () {\n    player.achievementBits[12] |= 128;\n  }], [function () {\n    player.reality.perks = new Set([32]);\n  }], [function () {\n    Autobuyer.replicantiGalaxy.isActive = true;\n  }], [function () {\n    Replicanti.galaxies.isPlayerHoldingR = true;\n  }], [function () {\n    player.replicanti.boughtGalaxyCap = 100;\n  }, function () {\n    player.replicanti.boughtGalaxyCap = 100;\n    player.replicanti.galaxies = 50;\n  }], [function () {\n    player.reality.upgReqs = 1 << 6;\n    player.reality.upgradeBits = 64;\n  }]];\n  const situationCount = situationLists.map(x => x.length + 1).reduce((x, y) => x * y);\n  const resultList = [];\n\n  const runSituation = function (id) {\n    Replicanti.galaxies.isPlayerHoldingR = false;\n    GameStorage.loadPlayerObject(Player.defaultStart);\n    player.infinities = DC.D1;\n    player.infinityPoints = DC.E150;\n    Replicanti.unlock();\n    player.replicanti.chance = 1;\n\n    for (let i = 0; i < situationLists.length; i++) {\n      const div = situationLists.slice(0, i).map(x => x.length + 1).reduce((x, y) => x * y, 1); // eslint-disable-next-line no-empty-function\n\n      const situation = [() => {}].concat(situationLists[i])[Math.floor(id / div) % (situationLists[i].length + 1)];\n      situation();\n    }\n\n    function doReplicantiTicks() {\n      for (let j = 0; j <= 5; j++) {\n        replicantiLoop(Math.pow(10, j));\n        resultList.push(Notation.scientific.formatDecimal(Replicanti.amount, 5, 5));\n        resultList.push(player.replicanti.galaxies);\n        resultList.push(Replicanti.galaxies.total);\n      }\n    }\n\n    doReplicantiTicks();\n    player.antimatter = DC.E309;\n    player.records.thisInfinity.maxAM = DC.E309;\n    bigCrunchReset();\n    doReplicantiTicks();\n  };\n\n  if (singleId === undefined) {\n    const total = 4000;\n    const p = 10007;\n\n    if (total * p < situationCount) {\n      throw new Error(\"Prime p is not large enough to go through all situations.\");\n    }\n\n    for (let i = 0; i < total; i++) {\n      const actual = i * p % situationCount;\n\n      if (i % 100 === 0) {\n        console.log(`Considering situation #${i}/${total} (${actual})`);\n      }\n\n      runSituation(actual);\n    }\n  } else {\n    runSituation(singleId);\n  }\n\n  const hash = sha512_256(resultList.toString());\n  console.log(hash);\n\n  if (useDebugger) {\n    // eslint-disable-next-line no-debugger\n    debugger;\n  }\n\n  return hash;\n};\n\ndev.testGlyphs = function (config) {\n  const glyphLevel = config.glyphLevel || 6500;\n  const duration = config.duration || 4000;\n  let glyphId = Date.now();\n  const save = GameSaveSerializer.serialize(player);\n\n  const makeGlyph = (type, effects) => ({\n    type,\n    level: glyphLevel,\n    strength: 3.5,\n    rawLevel: glyphLevel,\n    idx: null,\n    id: glyphId++,\n    effects: makeGlyphEffectBitmask(effects)\n  });\n\n  const makeAllEffectGlyph = type => makeGlyph(type, GlyphTypes[type].effects.map(e => e.id));\n\n  const effarigGlyphs = [makeGlyph(\"effarig\", [\"effarigantimatter\", \"effarigdimensions\", \"effarigforgotten\", \"effarigblackhole\"]), makeGlyph(\"effarig\", [\"effarigantimatter\", \"effarigdimensions\", \"effarigforgotten\", \"effarigachievement\"])];\n\n  function makeCombinationsWithRepeats(count, elements) {\n    if (elements.length === 0) return [];\n    if (count === 0) return [[]];\n    const withoutFirst = makeCombinationsWithRepeats(count, elements.slice(1));\n    const withFirst = makeCombinationsWithRepeats(count - 1, elements);\n    withFirst.forEach(e => e.push(elements[0]));\n    return withFirst.concat(withoutFirst);\n  }\n\n  const sets5 = makeCombinationsWithRepeats(5, BASIC_GLYPH_TYPES).map(s => s.map(t => makeAllEffectGlyph(t)));\n  const sets4 = makeCombinationsWithRepeats(4, BASIC_GLYPH_TYPES).map(s => s.map(t => makeAllEffectGlyph(t)));\n  const effarigSets = effarigGlyphs.map(g => sets4.map(s => [g].concat(s)));\n  const glyphSets = sets5.concat(...effarigSets);\n\n  function equipSet(index) {\n    player.reality.glyphs.active = glyphSets[index].map((g, idx) => {\n      g.idx = idx;\n      return g;\n    });\n    Glyphs.active = Array.from(player.reality.glyphs.active);\n    EventHub.dispatch(GAME_EVENT.GLYPHS_CHANGED);\n  }\n\n  function glyphToShortString(glyph) {\n    if (glyph.type === \"effarig\") {\n      return effarigGlyphs.findIndex(e => e.id === glyph.id).toString();\n    }\n\n    return GLYPH_SYMBOLS[glyph.type];\n  }\n\n  function padString(s, length, before = false) {\n    if (s.length >= length) return s;\n    return before ? \" \".repeat(length - s.length) + s : s + \" \".repeat(length - s.length);\n  }\n\n  function finishTrial(index) {\n    const done = padString(`${Math.floor(100 * (index + 1) / glyphSets.length)}%`, 4, true);\n    const rm = padString(MachineHandler.gainedRealityMachines.toPrecision(2), 9);\n    const gl = padString(gainedGlyphLevel().actualLevel, 4);\n    const ep = padString(player.eternityPoints.exponent.toString(), 6);\n    const ip = padString(player.infinityPoints.exponent.toString(), 8);\n    const am = padString(Currency.antimatter.exponent.toString(), 12);\n    const dimboosts = DimBoost.purchasedBoosts;\n    const galaxies = Replicanti.galaxies.total + player.galaxies + player.dilation.totalTachyonGalaxies;\n    const glyphData = glyphSets[index].map(glyphToShortString).sum();\n    console.log(`${done} ${glyphData} rm=${rm} gl=${gl} ep=${ep} ip=${ip} am=${am} ` + `dimboosts=${dimboosts} galaxies=${galaxies}`);\n    GameStorage.offlineEnabled = false;\n    GameStorage.import(save);\n\n    if (index < glyphSets.length - 1) {\n      setTimeout(runTrial, 100, index + 1);\n    }\n  }\n\n  function runTrial(index) {\n    equipSet(index);\n    AutomatorBackend.start();\n    setTimeout(finishTrial, duration, index);\n  }\n\n  runTrial(0);\n}; // May want to make this command in particular publicly known if automator gating is a common complaint post-release\n\n\ndev.unlockAutomator = function () {\n  player.reality.automator.forceUnlock = true;\n}; // This bypasses any conflict checking and forces the current save to overwrite the cloud save. This largely exists\n// because normal cloud saving checks for a conflict and then always shows a modal if a conflict is found, only actually\n// saving if the player says to in the modal. The check can fail if the cloud save is somehow malformed and missing\n// props. This can lead to the check always failing, the modal never showing up, and cloud saving never occurring. That\n// should in principle only show up in dev, as migrations aren't run on cloud saves, but this allows fixing in case.\n\n\ndev.forceCloudSave = async function () {\n  const save = await Cloud.load();\n  const root = GameSaveSerializer.deserialize(save);\n  const saveId = GameStorage.currentSlot;\n  if (!root.saves) root.saves = [];\n  root.saves[saveId] = GameStorage.saves[saveId];\n  Cloud.save(saveId);\n}; // TODO Figure out if we want to remove this before release\n\n\ndev.unlockAllCosmeticSets = function () {\n  player.reality.glyphs.cosmetics.unlockedFromNG = Object.keys(GameDatabase.reality.glyphCosmeticSets);\n};","map":{"version":3,"sources":["C:/Games/ADFasterer/ADfasterer/src/core/devtools.js"],"names":["sha512_256","DC","FullScreenAnimationHandler","dev","hardReset","GameStorage","giveAllAchievements","allAchievements","Achievements","all","concat","SecretAchievements","achievement","unlock","doubleEverything","Object","keys","player","forEach","key","constructor","times","isFinite","key2","tripleEverything","key3","barrelRoll","display","spin3d","document","body","style","animation","spin4d","cancerize","Theme","tryUnlock","Notation","emoji","setAsCurrent","fixSave","save","JSON","stringify","GameSaveSerializer","jsonConverter","fixed","replace","saveData","parse","checkPlayerObject","Modal","message","show","loadPlayerObject","updateTDCosts","tier","dim","TimeDimension","cost","nextCost","bought","refundTimeDims","dimension","TimeDimensions","refundEPMult","epmultUpgrades","refundDilStudies","study","GameDatabase","eternity","timeStudies","dilation","studies","includes","id","splice","indexOf","console","log","getElementById","Currency","timeTheorems","add","resetDilation","dilatedTime","D0","tachyonParticles","rebuyables","baseTachyonGalaxies","totalTachyonGalaxies","giveSpecialGlyph","color","symbol","level","rawLevel","GameCache","glyphInventorySpace","value","glyph","GlyphGenerator","randomGlyph","actualLevel","Glyphs","addToInventory","giveGlyph","giveRealityGlyph","realityGlyph","setCompanionGlyphEP","eternityPoints","reality","glyphs","active","inventory","filter","g","type","strength","rarityToStrength","log10","decriminalize","SecretAchievement","lock","EventHub","dispatch","GAME_EVENT","ACHIEVEMENT_UNLOCKED","removeAch","name","Achievement","startsWith","parseInt","slice","window","nextNewsMessageId","undefined","setNextNewsMessage","implode","bigCrunchAnimation","eternify","eternityAnimation","dilate","animateAndDilate","undilate","animateAndUndilate","realize","runRealityAnimation","respecPerks","perkPoints","perks","size","Set","achievementPeriod","invalidate","buyablePerks","isDevEnvironment","href","location","split","length","isLocalEnvironment","togglePerformanceStats","PerformanceStats","toggle","buyAllPerks","visited","toVisit","Perk","firstPerk","perk","shift","push","connectedPerks","p","purchase","printResourceTotals","antimatter","exponent","toPrecision","Math","round","MachineHandler","gainedRealityMachines","floor","gainedGlyphLevel","Tickspeed","current","pow","getGameSpeedupFactor","aGalaxy","galaxies","rGalaxy","Replicanti","total","dGalaxy","getTickSpeedMultiplier","ADmults","D1","i","AntimatterDimension","multiplier","IDmults","InfinityDimension","TDmults","formatWithCommas","totalTickGained","infinities","eternities","amount","timestudy","theorem","unlockCelestialQuotes","celestial","Quotes","x","presentCelestialQuotes","present","testReplicantiCode","singleId","useDebugger","situationLists","E12","celestials","effarig","unlockBits","replicanti","interval","achievementBits","Autobuyer","replicantiGalaxy","isActive","isPlayerHoldingR","boughtGalaxyCap","upgReqs","upgradeBits","situationCount","map","reduce","y","resultList","runSituation","Player","defaultStart","infinityPoints","E150","chance","div","situation","doReplicantiTicks","j","replicantiLoop","scientific","formatDecimal","E309","records","thisInfinity","maxAM","bigCrunchReset","Error","actual","hash","toString","testGlyphs","config","glyphLevel","duration","glyphId","Date","now","serialize","makeGlyph","effects","idx","makeGlyphEffectBitmask","makeAllEffectGlyph","GlyphTypes","e","effarigGlyphs","makeCombinationsWithRepeats","count","elements","withoutFirst","withFirst","sets5","BASIC_GLYPH_TYPES","s","t","sets4","effarigSets","glyphSets","equipSet","index","Array","from","GLYPHS_CHANGED","glyphToShortString","findIndex","GLYPH_SYMBOLS","padString","before","repeat","finishTrial","done","rm","gl","ep","ip","am","dimboosts","DimBoost","purchasedBoosts","glyphData","sum","offlineEnabled","import","setTimeout","runTrial","AutomatorBackend","start","unlockAutomator","automator","forceUnlock","forceCloudSave","Cloud","load","root","deserialize","saveId","currentSlot","saves","unlockAllCosmeticSets","cosmetics","unlockedFromNG","glyphCosmeticSets"],"mappings":"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","sourcesContent":["import { sha512_256 } from \"js-sha512\";\r\n\r\nimport { DC } from \"./constants\";\r\nimport FullScreenAnimationHandler from \"./full-screen-animation-handler\";\r\n\r\n/* eslint-disable no-console */\r\n// Disabling no-console here seems\r\n// reasonable, since these are the devtools after all\r\nexport const dev = {};\r\n\r\ndev.hardReset = function() {\r\n  GameStorage.hardReset();\r\n};\r\n\r\ndev.giveAllAchievements = function() {\r\n  const allAchievements = Achievements.all.concat(SecretAchievements.all);\r\n  for (const achievement of allAchievements) achievement.unlock();\r\n};\r\n\r\n// Know that both dev.doubleEverything and dev.tripleEverything are both broken\r\n// with this error https://i.imgur.com/ZMEBNTv.png\r\n\r\ndev.doubleEverything = function() {\r\n  Object.keys(player).forEach(key => {\r\n    if (typeof player[key] === \"number\") player[key] *= 2;\r\n    if (typeof player[key] === \"object\" && player[key].constructor !== Object) player[key] = player[key].times(2);\r\n    if (typeof player[key] === \"object\" && !isFinite(player[key])) {\r\n      Object.keys(player[key]).forEach(key2 => {\r\n        if (typeof player[key][key2] === \"number\") player[key][key2] *= 2;\r\n        if (typeof player[key][key2] === \"object\" && player[key][key2].constructor !== Object)\r\n          player[key][key2] = player[key][key2].times(2);\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\ndev.tripleEverything = function() {\r\n  Object.keys(player).forEach(key => {\r\n    if (typeof player[key] === \"number\") player[key] *= 3;\r\n    if (typeof player[key] === \"object\" && player[key].constructor !== Object) player[key] = player[key].times(3);\r\n    if (typeof player[key] === \"object\" && !isFinite(player[key])) {\r\n      Object.keys(player[key]).forEach(key3 => {\r\n        if (typeof player[key][key3] === \"number\") player[key][key3] *= 3;\r\n        if (typeof player[key][key3] === \"object\" && player[key][key3].constructor !== Object)\r\n          player[key][key3] = player[key][key3].times(3);\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\ndev.barrelRoll = function() {\r\n  FullScreenAnimationHandler.display(\"a-barrel-roll\", 5);\r\n};\r\n\r\ndev.spin3d = function() {\r\n  if (document.body.style.animation === \"\") document.body.style.animation = \"a-spin3d 3s infinite\";\r\n  else document.body.style.animation = \"\";\r\n};\r\n\r\ndev.spin4d = function() {\r\n  if (document.body.style.animation === \"\") document.body.style.animation = \"a-spin4d 3s infinite\";\r\n  else document.body.style.animation = \"\";\r\n};\r\n\r\ndev.cancerize = function() {\r\n  Theme.tryUnlock(\"Design\");\r\n  Notation.emoji.setAsCurrent();\r\n};\r\n\r\ndev.fixSave = function() {\r\n  const save = JSON.stringify(player, GameSaveSerializer.jsonConverter);\r\n  const fixed = save.replace(/NaN/gui, \"10\");\r\n  const saveData = JSON.parse(fixed);\r\n  if (!saveData || GameStorage.checkPlayerObject(saveData) !== \"\") {\r\n    Modal.message.show(\"Could not fix the save.\");\r\n    return;\r\n  }\r\n  GameStorage.loadPlayerObject(saveData);\r\n  GameStorage.save();\r\n};\r\n\r\ndev.updateTDCosts = function() {\r\n  for (let tier = 1; tier < 9; tier++) {\r\n    const dim = TimeDimension(tier);\r\n    dim.cost = dim.nextCost(dim.bought);\r\n  }\r\n};\r\n\r\ndev.refundTimeDims = function() {\r\n  for (const dimension of TimeDimensions.all) {\r\n    dimension.bought = 0;\r\n  }\r\n  dev.updateTDCosts();\r\n};\r\n\r\ndev.refundEPMult = function() {\r\n  player.epmultUpgrades = 0;\r\n};\r\n\r\ndev.refundDilStudies = function() {\r\n  for (const study of GameDatabase.eternity.timeStudies.dilation) {\r\n    if (player.dilation.studies.includes(study.id)) {\r\n      player.dilation.studies.splice(player.dilation.studies.indexOf(study.id), 1);\r\n      console.log(document.getElementById(`removed dilstudy${study.id}`));\r\n      Currency.timeTheorems.add(study.cost);\r\n    }\r\n  }\r\n};\r\n\r\ndev.resetDilation = function() {\r\n  player.dilation.dilatedTime = DC.D0;\r\n  player.dilation.tachyonParticles = DC.D0;\r\n  player.dilation.rebuyables[1] = 0;\r\n  player.dilation.rebuyables[2] = 0;\r\n  player.dilation.rebuyables[3] = 0;\r\n  player.dilation.baseTachyonGalaxies = 0;\r\n  player.dilation.totalTachyonGalaxies = 0;\r\n};\r\n\r\n// We want to give a large degree of options\r\n// when making a special glyph, so no max-params\r\n// eslint-disable-next-line max-params\r\ndev.giveSpecialGlyph = function(color, symbol, level, rawLevel = level) {\r\n  if (GameCache.glyphInventorySpace.value === 0) return;\r\n  const glyph = GlyphGenerator.randomGlyph({ actualLevel: level, rawLevel });\r\n  glyph.symbol = symbol;\r\n  glyph.color = color;\r\n  Glyphs.addToInventory(glyph);\r\n};\r\n\r\ndev.giveGlyph = function(level, rawLevel = level) {\r\n  if (GameCache.glyphInventorySpace.value === 0) return;\r\n  Glyphs.addToInventory(GlyphGenerator.randomGlyph({ actualLevel: level, rawLevel }));\r\n};\r\n\r\ndev.giveRealityGlyph = function(level) {\r\n  if (GameCache.glyphInventorySpace.value === 0) return;\r\n  Glyphs.addToInventory(GlyphGenerator.realityGlyph(level));\r\n};\r\n\r\ndev.setCompanionGlyphEP = function(eternityPoints) {\r\n  const glyph = player.reality.glyphs.active\r\n    .concat(player.reality.glyphs.inventory)\r\n    .filter(g => g.type === \"companion\")[0];\r\n  glyph.strength = rarityToStrength(eternityPoints.log10() / 1e6);\r\n};\r\n\r\ndev.decriminalize = function() {\r\n  SecretAchievement(23).lock();\r\n  EventHub.dispatch(GAME_EVENT.ACHIEVEMENT_UNLOCKED);\r\n};\r\n\r\ndev.removeAch = function(name) {\r\n  if (name === \"all\") {\r\n    const allAchievements = Achievements.all.concat(SecretAchievements.all);\r\n    for (const achievement of allAchievements) achievement.lock();\r\n    return \"removed all achievements\";\r\n  }\r\n  if (typeof (name) === \"number\") return Achievement(name).lock();\r\n  if (name.startsWith(\"r\")) return Achievement(parseInt(name.slice(1), 10)).lock();\r\n  if (name.startsWith(\"s\")) return SecretAchievement(parseInt(name.slice(1), 10)).lock();\r\n  return \"failed to delete achievement\";\r\n};\r\n\r\nwindow.nextNewsMessageId = undefined;\r\n\r\ndev.setNextNewsMessage = function(id) {\r\n  nextNewsMessageId = id;\r\n};\r\n\r\ndev.implode = function() {\r\n  bigCrunchAnimation();\r\n};\r\n\r\ndev.eternify = function() {\r\n  eternityAnimation();\r\n};\r\n\r\ndev.dilate = function() {\r\n  animateAndDilate();\r\n};\r\n\r\ndev.undilate = function() {\r\n  animateAndUndilate();\r\n};\r\n\r\ndev.realize = function() {\r\n  runRealityAnimation();\r\n};\r\n\r\ndev.respecPerks = function() {\r\n  player.reality.perkPoints += player.reality.perks.size;\r\n  player.reality.perks = new Set();\r\n  GameCache.achievementPeriod.invalidate();\r\n  GameCache.buyablePerks.invalidate();\r\n};\r\n\r\nexport function isDevEnvironment() {\r\n  const href = window.location.href;\r\n  return href.split(\"//\")[1].length > 20 || isLocalEnvironment();\r\n}\r\n\r\nexport function isLocalEnvironment() {\r\n  const href = window.location.href;\r\n  return href.includes(\"file\") || href.includes(\"127.0.0.1\") || href.includes(\"localhost\");\r\n}\r\n\r\ndev.togglePerformanceStats = function() {\r\n  PerformanceStats.toggle();\r\n};\r\n\r\n// Buys all perks, will end up buying semi-randomly if not enough pp\r\ndev.buyAllPerks = function() {\r\n  const visited = [];\r\n  const toVisit = [Perk.firstPerk];\r\n  while (toVisit.length > 0) {\r\n    if (player.reality.perkPoints < 1) break;\r\n    const perk = toVisit.shift();\r\n    visited.push(perk);\r\n    toVisit.push(...perk.connectedPerks.filter(p => !visited.includes(p)));\r\n    perk.purchase();\r\n  }\r\n};\r\n\r\n// This should help for balancing different glyph types, strong rounding of values is intentional\r\ndev.printResourceTotals = function() {\r\n  console.log(`Antimatter: e${Currency.antimatter.exponent.toPrecision(3)}`);\r\n  console.log(`RM: e${Math.round(MachineHandler.gainedRealityMachines.log10())}`);\r\n  console.log(`Glyph level: ${100 * Math.floor(gainedGlyphLevel().actualLevel / 100 + 0.5)}`);\r\n\r\n  console.log(`Tickspeed: e${-Tickspeed.current.exponent.toPrecision(3)}`);\r\n  console.log(`Gamespeed: ${Math.pow(getGameSpeedupFactor(), 1.2).toPrecision(1)}`);\r\n  const aGalaxy = 100 * Math.floor(player.galaxies / 100 + 0.5);\r\n  const rGalaxy = 100 * Math.floor(Replicanti.galaxies.total / 100 + 0.5);\r\n  const dGalaxy = 100 * Math.floor(player.dilation.totalTachyonGalaxies / 100 + 0.5);\r\n  console.log(`Galaxies: ${aGalaxy}+${rGalaxy}+${dGalaxy} (${aGalaxy + rGalaxy + dGalaxy})`);\r\n  console.log(`Tick reduction: e${-Math.round(getTickSpeedMultiplier().log10())}`);\r\n\r\n  let ADmults = DC.D1;\r\n  for (let i = 1; i <= 8; i++) {\r\n    ADmults = ADmults.times(AntimatterDimension(i).multiplier);\r\n  }\r\n  console.log(`AD mults: e${ADmults.log10().toPrecision(3)}`);\r\n  let IDmults = DC.D1;\r\n  for (let i = 1; i <= 8; i++) {\r\n    IDmults = IDmults.times(InfinityDimension(i).multiplier);\r\n  }\r\n  console.log(`ID mults: e${IDmults.log10().toPrecision(3)}`);\r\n  let TDmults = DC.D1;\r\n  for (let i = 1; i <= 8; i++) {\r\n    TDmults = TDmults.times(TimeDimension(i).multiplier);\r\n  }\r\n  console.log(`TD mults: e${TDmults.log10().toPrecision(3)}`);\r\n  console.log(`Tickspeed from TD: ${formatWithCommas(1000 * Math.floor(player.totalTickGained / 1000 + 0.5))}`);\r\n\r\n  console.log(`Infinities: e${Math.round(player.infinities.log10())}`);\r\n  console.log(`Eternities: e${Math.round(player.eternities.log10())}`);\r\n  console.log(`Replicanti: e${formatWithCommas(1e5 * Math.floor(Replicanti.amount.log10() / 1e5 + 0.5))}`);\r\n\r\n  console.log(`TT: e${Math.round(player.timestudy.theorem.log10())}`);\r\n  console.log(`DT: e${Math.round(player.dilation.dilatedTime.log10())}`);\r\n  console.log(`TP: e${Math.round(player.dilation.tachyonParticles.log10())}`);\r\n};\r\n\r\ndev.unlockCelestialQuotes = function(celestial) {\r\n  Quotes[celestial].all.forEach(x => x.show());\r\n};\r\n\r\ndev.presentCelestialQuotes = function(celestial) {\r\n  Quotes[celestial].all.forEach(x => x.present());\r\n};\r\n\r\n// This doesn't check everything but hopefully it gets some of the more obvious ones.\r\ndev.testReplicantiCode = function(singleId, useDebugger = false) {\r\n  const situationLists = [\r\n    [\r\n      function() {\r\n        player.infinities = DC.E12;\r\n        player.celestials.effarig.unlockBits = 64;\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.replicanti.interval = 1;\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.timestudy.studies.push(33);\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.timestudy.studies.push(62);\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.timestudy.studies.push(131);\r\n      },\r\n      function() {\r\n        player.timestudy.studies.push(132);\r\n      },\r\n      function() {\r\n        player.timestudy.studies.push(133);\r\n      },\r\n      function() {\r\n        player.timestudy.studies.push(131, 132, 133);\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.timestudy.studies.push(192);\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.timestudy.studies.push(213);\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.timestudy.studies.push(225);\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.timestudy.studies.push(226);\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.achievementBits[8] |= 16;\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.achievementBits[12] |= 8;\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.achievementBits[12] |= 128;\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.reality.perks = new Set([32]);\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        Autobuyer.replicantiGalaxy.isActive = true;\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        Replicanti.galaxies.isPlayerHoldingR = true;\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.replicanti.boughtGalaxyCap = 100;\r\n      },\r\n      function() {\r\n        player.replicanti.boughtGalaxyCap = 100;\r\n        player.replicanti.galaxies = 50;\r\n      }\r\n    ],\r\n    [\r\n      function() {\r\n        player.reality.upgReqs = (1 << 6);\r\n        player.reality.upgradeBits = 64;\r\n      }\r\n    ]\r\n  ];\r\n  const situationCount = situationLists.map(x => x.length + 1).reduce((x, y) => x * y);\r\n  const resultList = [];\r\n  const runSituation = function(id) {\r\n    Replicanti.galaxies.isPlayerHoldingR = false;\r\n    GameStorage.loadPlayerObject(Player.defaultStart);\r\n    player.infinities = DC.D1;\r\n    player.infinityPoints = DC.E150;\r\n    Replicanti.unlock();\r\n    player.replicanti.chance = 1;\r\n    for (let i = 0; i < situationLists.length; i++) {\r\n      const div = situationLists.slice(0, i).map(x => x.length + 1).reduce((x, y) => x * y, 1);\r\n      // eslint-disable-next-line no-empty-function\r\n      const situation = [() => {}].concat(situationLists[i])[Math.floor(id / div) % (situationLists[i].length + 1)];\r\n      situation();\r\n    }\r\n    function doReplicantiTicks() {\r\n      for (let j = 0; j <= 5; j++) {\r\n        replicantiLoop(Math.pow(10, j));\r\n        resultList.push(Notation.scientific.formatDecimal(Replicanti.amount, 5, 5));\r\n        resultList.push(player.replicanti.galaxies);\r\n        resultList.push(Replicanti.galaxies.total);\r\n      }\r\n    }\r\n    doReplicantiTicks();\r\n    player.antimatter = DC.E309;\r\n    player.records.thisInfinity.maxAM = DC.E309;\r\n    bigCrunchReset();\r\n    doReplicantiTicks();\r\n  };\r\n  if (singleId === undefined) {\r\n    const total = 4000;\r\n    const p = 10007;\r\n    if (total * p < situationCount) {\r\n      throw new Error(\"Prime p is not large enough to go through all situations.\");\r\n    }\r\n    for (let i = 0; i < total; i++) {\r\n      const actual = i * p % situationCount;\r\n      if (i % 100 === 0) {\r\n        console.log(`Considering situation #${i}/${total} (${actual})`);\r\n      }\r\n      runSituation(actual);\r\n    }\r\n  } else {\r\n    runSituation(singleId);\r\n  }\r\n  const hash = sha512_256(resultList.toString());\r\n  console.log(hash);\r\n  if (useDebugger) {\r\n    // eslint-disable-next-line no-debugger\r\n    debugger;\r\n  }\r\n  return hash;\r\n};\r\n\r\ndev.testGlyphs = function(config) {\r\n  const glyphLevel = config.glyphLevel || 6500;\r\n  const duration = config.duration || 4000;\r\n  let glyphId = Date.now();\r\n  const save = GameSaveSerializer.serialize(player);\r\n  const makeGlyph = (type, effects) => ({\r\n    type,\r\n    level: glyphLevel,\r\n    strength: 3.5,\r\n    rawLevel: glyphLevel,\r\n    idx: null,\r\n    id: glyphId++,\r\n    effects: makeGlyphEffectBitmask(effects),\r\n  });\r\n  const makeAllEffectGlyph = type => makeGlyph(type, GlyphTypes[type].effects.map(e => e.id));\r\n  const effarigGlyphs = [\r\n    makeGlyph(\"effarig\", [\"effarigantimatter\", \"effarigdimensions\", \"effarigforgotten\", \"effarigblackhole\"]),\r\n    makeGlyph(\"effarig\", [\"effarigantimatter\", \"effarigdimensions\", \"effarigforgotten\", \"effarigachievement\"]),\r\n  ];\r\n  function makeCombinationsWithRepeats(count, elements) {\r\n    if (elements.length === 0) return [];\r\n    if (count === 0) return [[]];\r\n    const withoutFirst = makeCombinationsWithRepeats(count, elements.slice(1));\r\n    const withFirst = makeCombinationsWithRepeats(count - 1, elements);\r\n    withFirst.forEach(e => e.push(elements[0]));\r\n    return withFirst.concat(withoutFirst);\r\n  }\r\n  const sets5 = makeCombinationsWithRepeats(5, BASIC_GLYPH_TYPES)\r\n    .map(s => s.map(t => makeAllEffectGlyph(t)));\r\n  const sets4 = makeCombinationsWithRepeats(4, BASIC_GLYPH_TYPES)\r\n    .map(s => s.map(t => makeAllEffectGlyph(t)));\r\n  const effarigSets = effarigGlyphs.map(g => sets4.map(s => [g].concat(s)));\r\n  const glyphSets = sets5.concat(...effarigSets);\r\n  function equipSet(index) {\r\n    player.reality.glyphs.active = glyphSets[index].map((g, idx) => {\r\n      g.idx = idx;\r\n      return g;\r\n    });\r\n    Glyphs.active = Array.from(player.reality.glyphs.active);\r\n    EventHub.dispatch(GAME_EVENT.GLYPHS_CHANGED);\r\n  }\r\n  function glyphToShortString(glyph) {\r\n    if (glyph.type === \"effarig\") {\r\n      return effarigGlyphs.findIndex(e => e.id === glyph.id).toString();\r\n    }\r\n    return GLYPH_SYMBOLS[glyph.type];\r\n  }\r\n  function padString(s, length, before = false) {\r\n    if (s.length >= length) return s;\r\n    return before ? (\" \").repeat(length - s.length) + s : s + (\" \").repeat(length - s.length);\r\n  }\r\n  function finishTrial(index) {\r\n    const done = padString(`${Math.floor(100 * (index + 1) / glyphSets.length)}%`, 4, true);\r\n    const rm = padString(MachineHandler.gainedRealityMachines.toPrecision(2), 9);\r\n    const gl = padString(gainedGlyphLevel().actualLevel, 4);\r\n    const ep = padString(player.eternityPoints.exponent.toString(), 6);\r\n    const ip = padString(player.infinityPoints.exponent.toString(), 8);\r\n    const am = padString(Currency.antimatter.exponent.toString(), 12);\r\n    const dimboosts = DimBoost.purchasedBoosts;\r\n    const galaxies = Replicanti.galaxies.total + player.galaxies + player.dilation.totalTachyonGalaxies;\r\n    const glyphData = glyphSets[index].map(glyphToShortString).sum();\r\n    console.log(`${done} ${glyphData} rm=${rm} gl=${gl} ep=${ep} ip=${ip} am=${am} ` +\r\n      `dimboosts=${dimboosts} galaxies=${galaxies}`);\r\n    GameStorage.offlineEnabled = false;\r\n    GameStorage.import(save);\r\n    if (index < glyphSets.length - 1) {\r\n      setTimeout(runTrial, 100, index + 1);\r\n    }\r\n  }\r\n  function runTrial(index) {\r\n    equipSet(index);\r\n    AutomatorBackend.start();\r\n    setTimeout(finishTrial, duration, index);\r\n  }\r\n  runTrial(0);\r\n};\r\n\r\n// May want to make this command in particular publicly known if automator gating is a common complaint post-release\r\ndev.unlockAutomator = function() {\r\n  player.reality.automator.forceUnlock = true;\r\n};\r\n\r\n// This bypasses any conflict checking and forces the current save to overwrite the cloud save. This largely exists\r\n// because normal cloud saving checks for a conflict and then always shows a modal if a conflict is found, only actually\r\n// saving if the player says to in the modal. The check can fail if the cloud save is somehow malformed and missing\r\n// props. This can lead to the check always failing, the modal never showing up, and cloud saving never occurring. That\r\n// should in principle only show up in dev, as migrations aren't run on cloud saves, but this allows fixing in case.\r\ndev.forceCloudSave = async function() {\r\n  const save = await Cloud.load();\r\n  const root = GameSaveSerializer.deserialize(save);\r\n  const saveId = GameStorage.currentSlot;\r\n  if (!root.saves) root.saves = [];\r\n  root.saves[saveId] = GameStorage.saves[saveId];\r\n  Cloud.save(saveId);\r\n};\r\n\r\n// TODO Figure out if we want to remove this before release\r\ndev.unlockAllCosmeticSets = function() {\r\n  player.reality.glyphs.cosmetics.unlockedFromNG = Object.keys(GameDatabase.reality.glyphCosmeticSets);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}