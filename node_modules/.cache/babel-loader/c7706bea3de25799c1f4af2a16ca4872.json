{"ast":null,"code":"import HintText from \"@/components/HintText\";\nexport default {\n  name: \"ChallengeBox\",\n  components: {\n    HintText\n  },\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    isUnlocked: {\n      type: Boolean,\n      required: true\n    },\n    isRunning: {\n      type: Boolean,\n      required: true\n    },\n    isCompleted: {\n      type: Boolean,\n      required: true\n    },\n    lockedAt: {\n      type: Decimal,\n      required: false,\n      default: undefined\n    },\n    overrideLabel: {\n      type: String,\n      required: false,\n      default: \"\"\n    }\n  },\n\n  data() {\n    return {\n      inC1: Boolean,\n      infinities: new Decimal(0)\n    };\n  },\n\n  computed: {\n    buttonClassObject() {\n      const challengeLocked = !(this.isCompleted || this.isRunning || this.inC1 || this.isUnlocked); // It's important to disable the cursor for Normal Challenge 1, challenges that are running, or\n      // for challenges unable to be unlocked and not unlocked.\n\n      const challengeNotEnterable = !this.isUnlocked || this.isRunning || this.name === \"C1\";\n      return {\n        \"o-challenge-btn\": true,\n        \"o-challenge-btn--broken\": this.overrideLabel.length > 0 && this.name !== \"C10\",\n        \"o-challenge-btn--broken-alt\": this.overrideLabel.length > 0 && this.name === \"C10\",\n        \"o-challenge-btn--running\": this.isRunning || this.inC1,\n        \"o-challenge-btn--completed\": this.isCompleted && this.isUnlocked,\n        \"o-challenge-btn--unlocked\": !this.isCompleted && this.isUnlocked,\n        \"o-challenge-btn--locked\": challengeLocked,\n        \"o-challenge-btn--unenterable\": challengeNotEnterable\n      };\n    },\n\n    buttonText() {\n      if (this.overrideLabel.length > 0) return this.overrideLabel;\n      if (this.isRunning || this.inC1) return \"Running\";\n      if (this.isCompleted) return \"Completed\";\n      if (this.isUnlocked) return \"Start\";\n      const lockedText = this.lockedAt === undefined ? \"\" : ` (${formatInt(this.infinities)}/${formatInt(this.lockedAt)})`;\n      return `Locked${lockedText}`;\n    }\n\n  },\n  methods: {\n    update() {\n      this.inC1 = this.name === \"C1\" && !this.isCompleted && !Player.isInAntimatterChallenge;\n      this.infinities.copyFrom(Currency.infinities);\n    }\n\n  }\n};","map":{"version":3,"sources":["ChallengeBox.vue"],"names":[],"mappings":"AACA,OAAA,QAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KALA;AASA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KATA;AAaA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAjBA;AAsBA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AAtBA,GALA;;AAiCA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,UAAA,EAAA,IAAA,OAAA,CAAA,CAAA;AAFA,KAAA;AAIA,GAtCA;;AAuCA,EAAA,QAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACA,YAAA,eAAA,GAAA,EAAA,KAAA,WAAA,IAAA,KAAA,SAAA,IAAA,KAAA,IAAA,IAAA,KAAA,UAAA,CAAA,CADA,CAEA;AACA;;AACA,YAAA,qBAAA,GAAA,CAAA,KAAA,UAAA,IAAA,KAAA,SAAA,IAAA,KAAA,IAAA,KAAA,IAAA;AACA,aAAA;AACA,2BAAA,IADA;AAEA,mCAAA,KAAA,aAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,IAAA,KAAA,KAFA;AAGA,uCAAA,KAAA,aAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,IAAA,KAAA,KAHA;AAIA,oCAAA,KAAA,SAAA,IAAA,KAAA,IAJA;AAKA,sCAAA,KAAA,WAAA,IAAA,KAAA,UALA;AAMA,qCAAA,CAAA,KAAA,WAAA,IAAA,KAAA,UANA;AAOA,mCAAA,eAPA;AAQA,wCAAA;AARA,OAAA;AAUA,KAhBA;;AAiBA,IAAA,UAAA,GAAA;AACA,UAAA,KAAA,aAAA,CAAA,MAAA,GAAA,CAAA,EAAA,OAAA,KAAA,aAAA;AACA,UAAA,KAAA,SAAA,IAAA,KAAA,IAAA,EAAA,OAAA,SAAA;AACA,UAAA,KAAA,WAAA,EAAA,OAAA,WAAA;AACA,UAAA,KAAA,UAAA,EAAA,OAAA,OAAA;AACA,YAAA,UAAA,GAAA,KAAA,QAAA,KAAA,SAAA,GACA,EADA,GAEA,KAAA,SAAA,CAAA,KAAA,UAAA,CAAA,IAAA,SAAA,CAAA,KAAA,QAAA,CAAA,GAFA;AAGA,aAAA,SAAA,UAAA,EAAA;AACA;;AA1BA,GAvCA;AAmEA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,IAAA,GAAA,KAAA,IAAA,KAAA,IAAA,IAAA,CAAA,KAAA,WAAA,IAAA,CAAA,MAAA,CAAA,uBAAA;AACA,WAAA,UAAA,CAAA,QAAA,CAAA,QAAA,CAAA,UAAA;AACA;;AAJA;AAnEA,CAAA","sourcesContent":["<script>\r\nimport HintText from \"@/components/HintText\";\r\n\r\nexport default {\r\n  name: \"ChallengeBox\",\r\n  components: {\r\n    HintText\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    isUnlocked: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    isRunning: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    isCompleted: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    lockedAt: {\r\n      type: Decimal,\r\n      required: false,\r\n      default: undefined\r\n    },\r\n    overrideLabel: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      inC1: Boolean,\r\n      infinities: new Decimal(0),\r\n    };\r\n  },\r\n  computed: {\r\n    buttonClassObject() {\r\n      const challengeLocked = !(this.isCompleted || this.isRunning || this.inC1 || this.isUnlocked);\r\n      // It's important to disable the cursor for Normal Challenge 1, challenges that are running, or\r\n      // for challenges unable to be unlocked and not unlocked.\r\n      const challengeNotEnterable = !this.isUnlocked || this.isRunning || this.name === \"C1\";\r\n      return {\r\n        \"o-challenge-btn\": true,\r\n        \"o-challenge-btn--broken\": this.overrideLabel.length > 0 && this.name !== \"C10\",\r\n        \"o-challenge-btn--broken-alt\": this.overrideLabel.length > 0 && this.name === \"C10\",\r\n        \"o-challenge-btn--running\": this.isRunning || this.inC1,\r\n        \"o-challenge-btn--completed\": this.isCompleted && this.isUnlocked,\r\n        \"o-challenge-btn--unlocked\": !this.isCompleted && this.isUnlocked,\r\n        \"o-challenge-btn--locked\": challengeLocked,\r\n        \"o-challenge-btn--unenterable\": challengeNotEnterable,\r\n      };\r\n    },\r\n    buttonText() {\r\n      if (this.overrideLabel.length > 0) return this.overrideLabel;\r\n      if (this.isRunning || this.inC1) return \"Running\";\r\n      if (this.isCompleted) return \"Completed\";\r\n      if (this.isUnlocked) return \"Start\";\r\n      const lockedText = this.lockedAt === undefined\r\n        ? \"\"\r\n        : ` (${formatInt(this.infinities)}/${formatInt(this.lockedAt)})`;\r\n      return `Locked${lockedText}`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.inC1 = this.name === \"C1\" && !this.isCompleted && !Player.isInAntimatterChallenge;\r\n      this.infinities.copyFrom(Currency.infinities);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"c-challenge-box l-challenge-box\">\r\n    <HintText\r\n      type=\"challenges\"\r\n      class=\"l-hint-text--challenge\"\r\n    >\r\n      {{ name }}\r\n    </HintText>\r\n    <slot name=\"top\" />\r\n    <div class=\"l-challenge-box__fill\" />\r\n    <button\r\n      :class=\"buttonClassObject\"\r\n      @click=\"$emit('start')\"\r\n    >\r\n      {{ buttonText }}\r\n    </button>\r\n    <slot name=\"bottom\" />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.o-challenge-btn--broken {\r\n  background: var(--color-enslaved--base);\r\n  clip-path: polygon(0% 0%, 25% 20%, 95% 0%, 100% 25%, 80% 70%, 95% 50%, 100% 100%, 45% 95%,\r\n    65% 70%, 15% 95%, 0% 45%, 10% 50%);\r\n}\r\n\r\n.o-challenge-btn--broken-alt {\r\n  background: var(--color-enslaved--base);\r\n  clip-path: polygon(0% 0%, 15% 0%, 25% 40%, 30% 0%, 55% 0%, 85% 30%, 75% 0%, 100% 0%,\r\n    90% 40%, 100% 65%, 90% 95%, 45% 45%, 70% 100%, 25% 100%, 5% 90%, 10% 60%);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"},"metadata":{},"sourceType":"module"}