{"ast":null,"code":"import HeaderBlackHoleStatusText from \"./HeaderBlackHoleStatusText\";\nimport PrimaryButton from \"@/components/PrimaryButton\";\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\nexport default {\n  name: \"HeaderBlackHole\",\n  components: {\n    PrimaryButton,\n    PrimaryToggleButton,\n    HeaderBlackHoleStatusText\n  },\n\n  data() {\n    return {\n      canModifyBlackHoles: false,\n      displaySingle: false,\n      singleState: \"\",\n      pauseText: \"\",\n      canCharge: false,\n      isCharging: false,\n      storedTime: 0,\n      canAutoRelease: false,\n      isAutoReleasing: false\n    };\n  },\n\n  computed: {\n    blackHoles: () => BlackHoles.list,\n\n    id() {\n      return this.blackHole.id;\n    },\n\n    dischargeText() {\n      return `Discharge: ${timeDisplayShort(this.storedTime)}`;\n    },\n\n    hasLongText() {\n      return this.dischargeText.length > 15;\n    }\n\n  },\n  watch: {\n    isAutoReleasing(newValue) {\n      player.celestials.enslaved.isAutoReleasing = newValue;\n    }\n\n  },\n  methods: {\n    update() {\n      // Technically not entirely accurate (you can still invert within Laitela), but it's cleaner to just hide it all\n      // because Laitela disables everything else and it technically still displays as pulsing even if it isn't\n      this.canModifyBlackHoles = BlackHoles.areUnlocked && !Laitela.isRunning;\n      this.displaySingle = BlackHoles.arePermanent;\n      if (this.displaySingle) this.singleState = BlackHole(1).displayState;\n      this.pauseText = this.pauseButtonText();\n      this.canCharge = Enslaved.isUnlocked;\n      this.isCharging = Enslaved.isStoringGameTime;\n      this.storedTime = player.celestials.enslaved.stored;\n      this.canAutoRelease = Ra.unlocks.autoPulseTime.canBeApplied;\n      this.isAutoReleasing = player.celestials.enslaved.isAutoReleasing;\n    },\n\n    pauseButtonText() {\n      if (BlackHoles.arePaused && player.blackHoleNegative < 1) return \"Uninvert BH\";\n      if (BlackHoles.arePaused) return \"Unpause BH\";\n      const accel = BlackHoles.unpauseAccelerationFactor;\n      if (accel !== 1) return `${formatPercents(accel, 1)} speed`;\n      if (player.blackHoleNegative < 1) return \"Invert BH\";\n      return \"Pause BH\";\n    },\n\n    timeDisplayShort(ms) {\n      return timeDisplayShort(ms);\n    },\n\n    chargingClassObject() {\n      return {\n        \"o-primary-btn--buy-max c-primary-btn--black-hole-header\": true,\n        \"o-bh-charge-disabled\": this.isAutoReleasing\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["HeaderBlackHole.vue"],"names":[],"mappings":"AACA,OAAA,yBAAA,MAAA,6BAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AACA,OAAA,mBAAA,MAAA,kCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aADA;AAEA,IAAA,mBAFA;AAGA,IAAA;AAHA,GAFA;;AAOA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,mBAAA,EAAA,KADA;AAEA,MAAA,aAAA,EAAA,KAFA;AAGA,MAAA,WAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA,EAJA;AAKA,MAAA,SAAA,EAAA,KALA;AAMA,MAAA,UAAA,EAAA,KANA;AAOA,MAAA,UAAA,EAAA,CAPA;AAQA,MAAA,cAAA,EAAA,KARA;AASA,MAAA,eAAA,EAAA;AATA,KAAA;AAWA,GAnBA;;AAoBA,EAAA,QAAA,EAAA;AACA,IAAA,UAAA,EAAA,MAAA,UAAA,CAAA,IADA;;AAEA,IAAA,EAAA,GAAA;AACA,aAAA,KAAA,SAAA,CAAA,EAAA;AACA,KAJA;;AAKA,IAAA,aAAA,GAAA;AACA,aAAA,cAAA,gBAAA,CAAA,KAAA,UAAA,CAAA,EAAA;AACA,KAPA;;AAQA,IAAA,WAAA,GAAA;AACA,aAAA,KAAA,aAAA,CAAA,MAAA,GAAA,EAAA;AACA;;AAVA,GApBA;AAgCA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,CAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,eAAA,GAAA,QAAA;AACA;;AAHA,GAhCA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA;AACA;AACA,WAAA,mBAAA,GAAA,UAAA,CAAA,WAAA,IAAA,CAAA,OAAA,CAAA,SAAA;AACA,WAAA,aAAA,GAAA,UAAA,CAAA,YAAA;AACA,UAAA,KAAA,aAAA,EAAA,KAAA,WAAA,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA,YAAA;AACA,WAAA,SAAA,GAAA,KAAA,eAAA,EAAA;AACA,WAAA,SAAA,GAAA,QAAA,CAAA,UAAA;AACA,WAAA,UAAA,GAAA,QAAA,CAAA,iBAAA;AACA,WAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,MAAA;AACA,WAAA,cAAA,GAAA,EAAA,CAAA,OAAA,CAAA,aAAA,CAAA,YAAA;AACA,WAAA,eAAA,GAAA,MAAA,CAAA,UAAA,CAAA,QAAA,CAAA,eAAA;AACA,KAbA;;AAcA,IAAA,eAAA,GAAA;AACA,UAAA,UAAA,CAAA,SAAA,IAAA,MAAA,CAAA,iBAAA,GAAA,CAAA,EAAA,OAAA,aAAA;AACA,UAAA,UAAA,CAAA,SAAA,EAAA,OAAA,YAAA;AACA,YAAA,KAAA,GAAA,UAAA,CAAA,yBAAA;AACA,UAAA,KAAA,KAAA,CAAA,EAAA,OAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA,QAAA;AACA,UAAA,MAAA,CAAA,iBAAA,GAAA,CAAA,EAAA,OAAA,WAAA;AACA,aAAA,UAAA;AACA,KArBA;;AAsBA,IAAA,gBAAA,CAAA,EAAA,EAAA;AACA,aAAA,gBAAA,CAAA,EAAA,CAAA;AACA,KAxBA;;AAyBA,IAAA,mBAAA,GAAA;AACA,aAAA;AACA,mEAAA,IADA;AAEA,gCAAA,KAAA;AAFA,OAAA;AAIA;;AA9BA;AArCA,CAAA","sourcesContent":["<script>\r\nimport HeaderBlackHoleStatusText from \"./HeaderBlackHoleStatusText\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\n\r\nexport default {\r\n  name: \"HeaderBlackHole\",\r\n  components: {\r\n    PrimaryButton,\r\n    PrimaryToggleButton,\r\n    HeaderBlackHoleStatusText\r\n  },\r\n  data() {\r\n    return {\r\n      canModifyBlackHoles: false,\r\n      displaySingle: false,\r\n      singleState: \"\",\r\n      pauseText: \"\",\r\n      canCharge: false,\r\n      isCharging: false,\r\n      storedTime: 0,\r\n      canAutoRelease: false,\r\n      isAutoReleasing: false,\r\n    };\r\n  },\r\n  computed: {\r\n    blackHoles: () => BlackHoles.list,\r\n    id() {\r\n      return this.blackHole.id;\r\n    },\r\n    dischargeText() {\r\n      return `Discharge: ${timeDisplayShort(this.storedTime)}`;\r\n    },\r\n    hasLongText() {\r\n      return this.dischargeText.length > 15;\r\n    },\r\n  },\r\n  watch: {\r\n    isAutoReleasing(newValue) {\r\n      player.celestials.enslaved.isAutoReleasing = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      // Technically not entirely accurate (you can still invert within Laitela), but it's cleaner to just hide it all\r\n      // because Laitela disables everything else and it technically still displays as pulsing even if it isn't\r\n      this.canModifyBlackHoles = BlackHoles.areUnlocked && !Laitela.isRunning;\r\n      this.displaySingle = BlackHoles.arePermanent;\r\n      if (this.displaySingle) this.singleState = BlackHole(1).displayState;\r\n      this.pauseText = this.pauseButtonText();\r\n      this.canCharge = Enslaved.isUnlocked;\r\n      this.isCharging = Enslaved.isStoringGameTime;\r\n      this.storedTime = player.celestials.enslaved.stored;\r\n      this.canAutoRelease = Ra.unlocks.autoPulseTime.canBeApplied;\r\n      this.isAutoReleasing = player.celestials.enslaved.isAutoReleasing;\r\n    },\r\n    pauseButtonText() {\r\n      if (BlackHoles.arePaused && player.blackHoleNegative < 1) return \"Uninvert BH\";\r\n      if (BlackHoles.arePaused) return \"Unpause BH\";\r\n      const accel = BlackHoles.unpauseAccelerationFactor;\r\n      if (accel !== 1) return `${formatPercents(accel, 1)} speed`;\r\n      if (player.blackHoleNegative < 1) return \"Invert BH\";\r\n      return \"Pause BH\";\r\n    },\r\n    timeDisplayShort(ms) {\r\n      return timeDisplayShort(ms);\r\n    },\r\n    chargingClassObject() {\r\n      return {\r\n        \"o-primary-btn--buy-max c-primary-btn--black-hole-header\": true,\r\n        \"o-bh-charge-disabled\": this.isAutoReleasing\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <span\r\n    v-if=\"canModifyBlackHoles\"\r\n    class=\"c-black-hole-header\"\r\n  >\r\n    <PrimaryButton\r\n      class=\"o-primary-btn--buy-max c-primary-btn--black-hole-header\"\r\n      onclick=\"BlackHoles.togglePause()\"\r\n    >\r\n      {{ pauseText }}\r\n    </PrimaryButton>\r\n    <span v-if=\"canCharge\">\r\n      <PrimaryButton\r\n        :class=\"chargingClassObject()\"\r\n        onclick=\"Enslaved.toggleStoreBlackHole()\"\r\n      >\r\n        <span v-if=\"isCharging\">\r\n          Stop Charging\r\n        </span>\r\n        <span v-else>\r\n          Charge\r\n        </span>\r\n      </PrimaryButton>\r\n    </span>\r\n    <span\r\n      v-if=\"displaySingle\"\r\n      class=\"c-black-hole-status-text\"\r\n      v-html=\"'ðŸŒ€:' + singleState\"\r\n    />\r\n    <span v-else>\r\n      <HeaderBlackHoleStatusText\r\n        v-for=\"(blackHole, i) in blackHoles\"\r\n        :key=\"'state' + i\"\r\n        :black-hole=\"blackHole\"\r\n      />\r\n    </span>\r\n    <span v-if=\"canCharge\">\r\n      <PrimaryButton\r\n        class=\"o-discharge-btn c-primary-btn--black-hole-header\"\r\n        :class=\"{ 'o-small-discharge-text': hasLongText }\"\r\n        onclick=\"Enslaved.useStoredTime(false)\"\r\n      >\r\n        {{ dischargeText }}\r\n      </PrimaryButton>\r\n    </span>\r\n    <span v-if=\"canAutoRelease\">\r\n      <PrimaryToggleButton\r\n        v-model=\"isAutoReleasing\"\r\n        class=\"o-primary-btn--buy-max c-primary-btn--black-hole-header\"\r\n        label=\"Pulse:\"\r\n      />\r\n    </span>\r\n  </span>\r\n</template>\r\n\r\n<style scoped>\r\n.c-black-hole-header {\r\n  font-weight: bold;\r\n  color: var(--color-text);\r\n}\r\n\r\n.c-primary-btn--black-hole-header {\r\n  vertical-align: middle;\r\n  margin: 0.2rem;\r\n}\r\n\r\n.c-black-hole-status-text {\r\n  margin: 0 0.8rem;\r\n}\r\n\r\n.o-discharge-btn {\r\n  width: 20rem;\r\n  font-size: 1rem;\r\n}\r\n\r\n.o-small-discharge-text {\r\n  font-size: 1rem;\r\n  line-height: 1rem;\r\n}\r\n\r\n.o-bh-charge-disabled {\r\n  background-color: var(--color-disabled);\r\n  user-select: none;\r\n  cursor: not-allowed;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/ui-modes"},"metadata":{},"sourceType":"module"}