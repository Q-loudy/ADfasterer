{"ast":null,"code":"export default {\n  name: \"BreakInfinityButton\",\n\n  data() {\n    return {\n      isBroken: false,\n      isUnlocked: false,\n      isEnslaved: false\n    };\n  },\n\n  computed: {\n    classObject() {\n      return {\n        \"o-infinity-upgrade-btn\": true,\n        \"o-infinity-upgrade-btn--color-2\": true,\n        \"o-infinity-upgrade-btn--available\": this.isUnlocked,\n        \"o-infinity-upgrade-btn--unavailable\": !this.isUnlocked,\n        \"o-infinity-upgrade-btn--feel-eternity\": this.isEnslaved,\n        \"o-infinity-upgrade-btn--unclickable\": this.isBroken && !this.isEnslaved\n      };\n    },\n\n    tooltip() {\n      if (this.isEnslaved) return \"...eons stacked on eons stacked on eons stacked on eons stacked on ...\";\n      return undefined;\n    },\n\n    text() {\n      if (this.isEnslaved) return \"FEEL ETERNITY\";\n      return this.isBroken ? \"INFINITY IS BROKEN\" : \"BREAK INFINITY\";\n    }\n\n  },\n  methods: {\n    update() {\n      this.isBroken = player.break;\n      this.isUnlocked = Autobuyer.bigCrunch.hasMaxedInterval;\n      this.isEnslaved = Enslaved.isRunning;\n    },\n\n    clicked() {\n      if (this.isEnslaved) Enslaved.feelEternity();else if (!this.isBroken && this.isUnlocked) Modal.breakInfinity.show();\n    }\n\n  }\n};","map":{"version":3,"sources":["BreakInfinityButton.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAKA,GARA;;AASA,EAAA,QAAA,EAAA;AACA,IAAA,WAAA,GAAA;AACA,aAAA;AACA,kCAAA,IADA;AAEA,2CAAA,IAFA;AAGA,6CAAA,KAAA,UAHA;AAIA,+CAAA,CAAA,KAAA,UAJA;AAKA,iDAAA,KAAA,UALA;AAMA,+CAAA,KAAA,QAAA,IAAA,CAAA,KAAA;AANA,OAAA;AAQA,KAVA;;AAWA,IAAA,OAAA,GAAA;AACA,UAAA,KAAA,UAAA,EAAA,OAAA,wEAAA;AACA,aAAA,SAAA;AACA,KAdA;;AAeA,IAAA,IAAA,GAAA;AACA,UAAA,KAAA,UAAA,EAAA,OAAA,eAAA;AACA,aAAA,KAAA,QAAA,GAAA,oBAAA,GAAA,gBAAA;AACA;;AAlBA,GATA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,QAAA,GAAA,MAAA,CAAA,KAAA;AACA,WAAA,UAAA,GAAA,SAAA,CAAA,SAAA,CAAA,gBAAA;AACA,WAAA,UAAA,GAAA,QAAA,CAAA,SAAA;AACA,KALA;;AAMA,IAAA,OAAA,GAAA;AACA,UAAA,KAAA,UAAA,EAAA,QAAA,CAAA,YAAA,GAAA,KACA,IAAA,CAAA,KAAA,QAAA,IAAA,KAAA,UAAA,EAAA,KAAA,CAAA,aAAA,CAAA,IAAA;AACA;;AATA;AA7BA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"BreakInfinityButton\",\r\n  data() {\r\n    return {\r\n      isBroken: false,\r\n      isUnlocked: false,\r\n      isEnslaved: false,\r\n    };\r\n  },\r\n  computed: {\r\n    classObject() {\r\n      return {\r\n        \"o-infinity-upgrade-btn\": true,\r\n        \"o-infinity-upgrade-btn--color-2\": true,\r\n        \"o-infinity-upgrade-btn--available\": this.isUnlocked,\r\n        \"o-infinity-upgrade-btn--unavailable\": !this.isUnlocked,\r\n        \"o-infinity-upgrade-btn--feel-eternity\": this.isEnslaved,\r\n        \"o-infinity-upgrade-btn--unclickable\": this.isBroken && !this.isEnslaved,\r\n      };\r\n    },\r\n    tooltip() {\r\n      if (this.isEnslaved) return \"...eons stacked on eons stacked on eons stacked on eons stacked on ...\";\r\n      return undefined;\r\n    },\r\n    text() {\r\n      if (this.isEnslaved) return \"FEEL ETERNITY\";\r\n      return this.isBroken ? \"INFINITY IS BROKEN\" : \"BREAK INFINITY\";\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isBroken = player.break;\r\n      this.isUnlocked = Autobuyer.bigCrunch.hasMaxedInterval;\r\n      this.isEnslaved = Enslaved.isRunning;\r\n    },\r\n    clicked() {\r\n      if (this.isEnslaved) Enslaved.feelEternity();\r\n      else if (!this.isBroken && this.isUnlocked) Modal.breakInfinity.show();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <button\r\n    v-tooltip=\"tooltip\"\r\n    :class=\"classObject\"\r\n    @click=\"clicked\"\r\n  >\r\n    {{ text }}\r\n  </button>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/break-infinity"},"metadata":{},"sourceType":"module"}