{"ast":null,"code":"import \"core-js/modules/es.symbol.description.js\";\nimport { LAITELA_UPGRADE_DIRECTION } from \"@/core/secret-formula\";\nexport default {\n  name: \"SingularityMilestoneComponent\",\n  props: {\n    milestone: {\n      type: Object,\n      required: true\n    },\n    suppressGlow: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    isMaxed: false,\n    progressToNext: \"\",\n    remainingSingularities: 0,\n    description: \"\",\n    effectDisplay: \"\",\n    isUnique: false,\n    nextEffectDisplay: \"\",\n    start: 0,\n    completions: 0,\n    limit: 0,\n    milestoneMode: false,\n    singularitiesPerCondense: 0,\n    baseCondenseTime: 0,\n    currentCondenseTime: 0,\n    autoCondenseDelay: 0,\n    lastCheckedMilestones: 0,\n    autoSingActive: false\n  }),\n  computed: {\n    // The bar is a mask that inverts colors for any element with a lower z-index (including text).\n    // When maxed, the visual appearance is instead determined by a class with its own explicit width\n    barStyle() {\n      return {\n        width: this.isMaxed ? undefined : this.progressToNext\n      };\n    },\n\n    barClass() {\n      return {\n        \"c-laitela-milestone__progress\": true,\n        \"c-laitela-milestone-mask\": true,\n        \"c-laitela-milestone--completed\": this.isMaxed\n      };\n    },\n\n    containerClass() {\n      return {\n        \"c-laitela-milestone\": true,\n        \"o-laitela-milestone--glow\": !this.suppressGlow && this.milestone.previousGoal > this.lastCheckedMilestones\n      };\n    },\n\n    upgradeDirectionIcon() {\n      switch (this.milestone.config.upgradeDirection) {\n        case LAITELA_UPGRADE_DIRECTION.SELF_BOOST:\n          return `<b>ᛝ</b>`;\n\n        case LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN:\n          return `<i class=\"fas fa-arrows-alt\"></i>`;\n\n        case LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA:\n          return `<i class=\"fas fa-compress-arrows-alt\"></i>`;\n\n        default:\n          throw new Error(\"Unspecified Lai'tela upgrade direction in singularity milestone\");\n      }\n    },\n\n    maxCompletions() {\n      return this.isUnique ? 1 : this.limit;\n    },\n\n    completionsDisplay() {\n      const maxStr = Number.isFinite(this.limit) ? formatInt(this.maxCompletions) : \"∞\";\n      return `${formatInt(this.completions)}/${maxStr} ${pluralize(\"completion\", this.completions)}`;\n    },\n\n    progressDisplay() {\n      const condenseCount = this.remainingSingularities / this.singularitiesPerCondense;\n      let thisSingularityTime, extraTime, timeText;\n\n      switch (this.milestoneMode) {\n        case SINGULARITY_MILESTONE_RESOURCE.SINGULARITIES:\n          return `In ${quantify(\"Singularity\", this.remainingSingularities, 2)}`;\n\n        case SINGULARITY_MILESTONE_RESOURCE.CONDENSE_COUNT:\n          return `Condense ${quantify(\"time\", condenseCount, 2, 2)}`;\n\n        case SINGULARITY_MILESTONE_RESOURCE.MANUAL_TIME:\n          thisSingularityTime = Math.clampMin(0, this.currentCondenseTime);\n          extraTime = Math.ceil(condenseCount - 1) * this.baseCondenseTime;\n          return `In ${TimeSpan.fromSeconds(thisSingularityTime + extraTime).toStringShort()} (manual)`;\n\n        case SINGULARITY_MILESTONE_RESOURCE.AUTO_TIME:\n          thisSingularityTime = Math.clampMin(0, this.currentCondenseTime + this.autoCondenseDelay);\n          extraTime = Math.ceil(condenseCount - 1) * (this.baseCondenseTime + this.autoCondenseDelay);\n          timeText = `In ${TimeSpan.fromSeconds(thisSingularityTime + extraTime).toStringShort()}`;\n          return this.autoSingActive ? timeText : `Auto-Singularity is OFF`;\n\n        default:\n          throw new Error(\"Unrecognized Singularity Milestone mode\");\n      }\n    },\n\n    isDoomed: () => Pelle.isDoomed\n  },\n  methods: {\n    update() {\n      this.autoSingActive = player.auto.singularity.isActive;\n      this.isMaxed = this.milestone.isMaxed;\n      this.progressToNext = this.milestone.progressToNext;\n      this.remainingSingularities = this.milestone.remainingSingularities;\n      this.description = this.milestone.description;\n      this.effectDisplay = this.milestone.effectDisplay;\n      this.isUnique = this.milestone.isUnique;\n      if (!this.isUnique && !this.isMaxed) this.nextEffectDisplay = this.milestone.nextEffectDisplay;\n      this.completions = this.milestone.completions;\n      this.limit = this.milestone.limit;\n      this.milestoneMode = player.celestials.laitela.singularitySorting.displayResource;\n      this.singularitiesPerCondense = Singularity.singularitiesGained;\n      this.baseCondenseTime = Singularity.timePerCondense;\n      this.currentCondenseTime = Singularity.timeUntilCap;\n      this.autoCondenseDelay = Singularity.timeDelayFromAuto;\n      this.lastCheckedMilestones = player.celestials.laitela.lastCheckedMilestones;\n      this.isMetro = Theme.current().isMetro;\n    }\n\n  }\n};","map":{"version":3,"sources":["SingularityMilestoneComponent.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport { LAITELA_UPGRADE_DIRECTION } from \"@/core/secret-formula\";\r\n\r\nexport default {\r\n  name: \"SingularityMilestoneComponent\",\r\n  props: {\r\n    milestone: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    suppressGlow: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data: () => ({\r\n    isMaxed: false,\r\n    progressToNext: \"\",\r\n    remainingSingularities: 0,\r\n    description: \"\",\r\n    effectDisplay: \"\",\r\n    isUnique: false,\r\n    nextEffectDisplay: \"\",\r\n    start: 0,\r\n    completions: 0,\r\n    limit: 0,\r\n    milestoneMode: false,\r\n    singularitiesPerCondense: 0,\r\n    baseCondenseTime: 0,\r\n    currentCondenseTime: 0,\r\n    autoCondenseDelay: 0,\r\n    lastCheckedMilestones: 0,\r\n    autoSingActive: false,\r\n  }),\r\n  computed: {\r\n    // The bar is a mask that inverts colors for any element with a lower z-index (including text).\r\n    // When maxed, the visual appearance is instead determined by a class with its own explicit width\r\n    barStyle() {\r\n      return {\r\n        width: this.isMaxed ? undefined : this.progressToNext,\r\n      };\r\n    },\r\n    barClass() {\r\n      return {\r\n        \"c-laitela-milestone__progress\": true,\r\n        \"c-laitela-milestone-mask\": true,\r\n        \"c-laitela-milestone--completed\": this.isMaxed\r\n      };\r\n    },\r\n    containerClass() {\r\n      return {\r\n        \"c-laitela-milestone\": true,\r\n        \"o-laitela-milestone--glow\": !this.suppressGlow &&\r\n          this.milestone.previousGoal > this.lastCheckedMilestones\r\n      };\r\n    },\r\n    upgradeDirectionIcon() {\r\n      switch (this.milestone.config.upgradeDirection) {\r\n        case LAITELA_UPGRADE_DIRECTION.SELF_BOOST: return `<b>ᛝ</b>`;\r\n        case LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN: return `<i class=\"fas fa-arrows-alt\"></i>`;\r\n        case LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA: return `<i class=\"fas fa-compress-arrows-alt\"></i>`;\r\n        default: throw new Error(\"Unspecified Lai'tela upgrade direction in singularity milestone\");\r\n      }\r\n    },\r\n    maxCompletions() {\r\n      return this.isUnique ? 1 : this.limit;\r\n    },\r\n    completionsDisplay() {\r\n      const maxStr = Number.isFinite(this.limit) ? formatInt(this.maxCompletions) : \"∞\";\r\n      return `${formatInt(this.completions)}/${maxStr} ${pluralize(\"completion\", this.completions)}`;\r\n    },\r\n    progressDisplay() {\r\n      const condenseCount = this.remainingSingularities / this.singularitiesPerCondense;\r\n      let thisSingularityTime, extraTime, timeText;\r\n      switch (this.milestoneMode) {\r\n        case SINGULARITY_MILESTONE_RESOURCE.SINGULARITIES:\r\n          return `In ${quantify(\"Singularity\", this.remainingSingularities, 2)}`;\r\n        case SINGULARITY_MILESTONE_RESOURCE.CONDENSE_COUNT:\r\n          return `Condense ${quantify(\"time\", condenseCount, 2, 2)}`;\r\n        case SINGULARITY_MILESTONE_RESOURCE.MANUAL_TIME:\r\n          thisSingularityTime = Math.clampMin(0, this.currentCondenseTime);\r\n          extraTime = Math.ceil(condenseCount - 1) * this.baseCondenseTime;\r\n          return `In ${TimeSpan.fromSeconds(thisSingularityTime + extraTime).toStringShort()} (manual)`;\r\n        case SINGULARITY_MILESTONE_RESOURCE.AUTO_TIME:\r\n          thisSingularityTime = Math.clampMin(0, this.currentCondenseTime + this.autoCondenseDelay);\r\n          extraTime = Math.ceil(condenseCount - 1) * (this.baseCondenseTime + this.autoCondenseDelay);\r\n          timeText = `In ${TimeSpan.fromSeconds(thisSingularityTime + extraTime).toStringShort()}`;\r\n          return this.autoSingActive ? timeText : `Auto-Singularity is OFF`;\r\n        default:\r\n          throw new Error(\"Unrecognized Singularity Milestone mode\");\r\n      }\r\n    },\r\n    isDoomed: () => Pelle.isDoomed,\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.autoSingActive = player.auto.singularity.isActive;\r\n      this.isMaxed = this.milestone.isMaxed;\r\n      this.progressToNext = this.milestone.progressToNext;\r\n      this.remainingSingularities = this.milestone.remainingSingularities;\r\n      this.description = this.milestone.description;\r\n      this.effectDisplay = this.milestone.effectDisplay;\r\n      this.isUnique = this.milestone.isUnique;\r\n      if (!this.isUnique && !this.isMaxed) this.nextEffectDisplay = this.milestone.nextEffectDisplay;\r\n      this.completions = this.milestone.completions;\r\n      this.limit = this.milestone.limit;\r\n      this.milestoneMode = player.celestials.laitela.singularitySorting.displayResource;\r\n      this.singularitiesPerCondense = Singularity.singularitiesGained;\r\n      this.baseCondenseTime = Singularity.timePerCondense;\r\n      this.currentCondenseTime = Singularity.timeUntilCap;\r\n      this.autoCondenseDelay = Singularity.timeDelayFromAuto;\r\n      this.lastCheckedMilestones = player.celestials.laitela.lastCheckedMilestones;\r\n      this.isMetro = Theme.current().isMetro;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div :class=\"containerClass\">\r\n    <div\r\n      v-if=\"!isMetro && !isMaxed\"\r\n      class=\"c-laitela-milestone--bar-border-fix\"\r\n    />\r\n    <div\r\n      :class=\"barClass\"\r\n      :style=\"barStyle\"\r\n    />\r\n    <span :class=\"{ 'o-pelle-disabled': isDoomed }\">\r\n      <b v-if=\"!isMaxed\">\r\n        {{ progressDisplay }}\r\n      </b>\r\n      <p>\r\n        <span v-html=\"upgradeDirectionIcon\" /> {{ description }}\r\n      </p>\r\n      <b>\r\n        {{ effectDisplay }}\r\n        <span v-if=\"!isUnique && !isMaxed\">➜ {{ nextEffectDisplay }}</span>\r\n      </b>\r\n      <div class=\"c-laitela-milestone__completions\">\r\n        {{ completionsDisplay }}\r\n      </div>\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.o-laitela-milestone--glow {\r\n  font-weight: bold;\r\n  color: var(--color-laitela--base);\r\n  background: var(--color-laitela--accent);\r\n  border-color: var(--color-laitela--accent);\r\n  box-shadow: 0 0 0.5rem 0.1rem inset, 0 0 0.3rem 0;\r\n  animation: 3s a-laitela-flash infinite;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/celestial-laitela"},"metadata":{},"sourceType":"module"}