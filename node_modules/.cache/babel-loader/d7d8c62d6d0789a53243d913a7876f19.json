{"ast":null,"code":"import \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\nimport InfinityUpgradeButton from \"@/components/InfinityUpgradeButton\";\nimport IpMultiplierButton from \"./IpMultiplierButton\";\nimport PrimaryButton from \"@/components/PrimaryButton\";\nexport default {\n  name: \"InfinityUpgradesTab\",\n  components: {\n    PrimaryButton,\n    InfinityUpgradeButton,\n    IpMultiplierButton\n  },\n\n  data() {\n    return {\n      isUseless: false,\n      chargeUnlocked: false,\n      totalCharges: 0,\n      chargesUsed: 0,\n      disCharge: false,\n      ipMultSoftCap: 0,\n      ipMultHardCap: 0,\n      eternityUnlocked: false,\n      bottomRowUnlocked: false,\n      styleOfColumnBg: undefined\n    };\n  },\n\n  computed: {\n    grid() {\n      return [[InfinityUpgrade.totalTimeMult, InfinityUpgrade.dim18mult, InfinityUpgrade.dim36mult, InfinityUpgrade.resetBoost], [InfinityUpgrade.buy10Mult, InfinityUpgrade.dim27mult, InfinityUpgrade.dim45mult, InfinityUpgrade.galaxyBoost], [InfinityUpgrade.thisInfinityTimeMult, InfinityUpgrade.unspentIPMult, InfinityUpgrade.dimboostMult, InfinityUpgrade.ipGen], [InfinityUpgrade.skipReset1, InfinityUpgrade.skipReset2, InfinityUpgrade.skipReset3, InfinityUpgrade.skipResetGalaxy]];\n    },\n\n    allColumnUpgrades() {\n      return this.grid.flat();\n    },\n\n    disChargeClassObject() {\n      return {\n        \"o-primary-btn--subtab-option\": true,\n        \"o-primary-btn--charged-respec-active\": this.disCharge\n      };\n    },\n\n    offlineIpUpgrade: () => InfinityUpgrade.ipOffline\n  },\n  watch: {\n    disCharge(newValue) {\n      player.celestials.ra.disCharge = newValue;\n    }\n\n  },\n\n  created() {\n    this.on$(GAME_EVENT.INFINITY_UPGRADE_BOUGHT, () => this.setStyleOfColumnBg());\n    this.on$(GAME_EVENT.INFINITY_UPGRADE_CHARGED, () => this.setStyleOfColumnBg());\n    this.on$(GAME_EVENT.INFINITY_UPGRADES_DISCHARGED, () => this.setStyleOfColumnBg());\n    this.setStyleOfColumnBg();\n  },\n\n  methods: {\n    update() {\n      this.isUseless = Pelle.isDoomed;\n      this.chargeUnlocked = Ra.unlocks.chargedInfinityUpgrades.canBeApplied && !Pelle.isDoomed;\n      this.totalCharges = Ra.totalCharges;\n      this.chargesUsed = Ra.totalCharges - Ra.chargesLeft;\n      this.disCharge = player.celestials.ra.disCharge;\n      this.ipMultSoftCap = GameDatabase.infinity.upgrades.ipMult.costIncreaseThreshold;\n      this.ipMultHardCap = GameDatabase.infinity.upgrades.ipMult.costCap;\n      this.eternityUnlocked = PlayerProgress.current.isEternityUnlocked;\n      this.bottomRowUnlocked = Achievement(41).isUnlocked;\n    },\n\n    btnClassObject(column) {\n      const classObject = {\n        \"l-infinity-upgrade-grid__cell\": true\n      };\n\n      if (column > 0) {\n        // Indexing starts from 0, while css classes start from 2 (and first column has default css class)\n        classObject[`o-infinity-upgrade-btn--color-${column + 1}`] = true;\n      }\n\n      return classObject;\n    },\n\n    getColumnColor(location) {\n      if (location.isCharged) return \"var(--color-teresa--base)\";\n      if (location.isBought) return \"var(--color-infinity)\";\n      return \"transparent\";\n    },\n\n    setStyleOfColumnBg() {\n      this.styleOfColumnBg = this.grid.map(col => ({\n        background: `linear-gradient(to bottom,\n          ${this.getColumnColor(col[0])} 15%,\n          ${this.getColumnColor(col[1])} 35% 40%,\n          ${this.getColumnColor(col[2])} 60% 65%,\n          ${this.getColumnColor(col[3])} 85% 100%`\n      }));\n    }\n\n  }\n};","map":{"version":3,"sources":["InfinityUpgradesTab.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport InfinityUpgradeButton from \"@/components/InfinityUpgradeButton\";\r\nimport IpMultiplierButton from \"./IpMultiplierButton\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\n\r\nexport default {\r\n  name: \"InfinityUpgradesTab\",\r\n  components: {\r\n    PrimaryButton,\r\n    InfinityUpgradeButton,\r\n    IpMultiplierButton\r\n  },\r\n  data() {\r\n    return {\r\n      isUseless: false,\r\n      chargeUnlocked: false,\r\n      totalCharges: 0,\r\n      chargesUsed: 0,\r\n      disCharge: false,\r\n      ipMultSoftCap: 0,\r\n      ipMultHardCap: 0,\r\n      eternityUnlocked: false,\r\n      bottomRowUnlocked: false,\r\n      styleOfColumnBg: undefined\r\n    };\r\n  },\r\n  computed: {\r\n    grid() {\r\n      return [\r\n        [\r\n          InfinityUpgrade.totalTimeMult,\r\n          InfinityUpgrade.dim18mult,\r\n          InfinityUpgrade.dim36mult,\r\n          InfinityUpgrade.resetBoost\r\n        ],\r\n        [\r\n          InfinityUpgrade.buy10Mult,\r\n          InfinityUpgrade.dim27mult,\r\n          InfinityUpgrade.dim45mult,\r\n          InfinityUpgrade.galaxyBoost\r\n        ],\r\n        [\r\n          InfinityUpgrade.thisInfinityTimeMult,\r\n          InfinityUpgrade.unspentIPMult,\r\n          InfinityUpgrade.dimboostMult,\r\n          InfinityUpgrade.ipGen\r\n        ],\r\n        [\r\n          InfinityUpgrade.skipReset1,\r\n          InfinityUpgrade.skipReset2,\r\n          InfinityUpgrade.skipReset3,\r\n          InfinityUpgrade.skipResetGalaxy\r\n        ]\r\n      ];\r\n    },\r\n    allColumnUpgrades() {\r\n      return this.grid.flat();\r\n    },\r\n    disChargeClassObject() {\r\n      return {\r\n        \"o-primary-btn--subtab-option\": true,\r\n        \"o-primary-btn--charged-respec-active\": this.disCharge\r\n      };\r\n    },\r\n    offlineIpUpgrade: () => InfinityUpgrade.ipOffline\r\n  },\r\n  watch: {\r\n    disCharge(newValue) {\r\n      player.celestials.ra.disCharge = newValue;\r\n    }\r\n  },\r\n  created() {\r\n    this.on$(GAME_EVENT.INFINITY_UPGRADE_BOUGHT, () => this.setStyleOfColumnBg());\r\n    this.on$(GAME_EVENT.INFINITY_UPGRADE_CHARGED, () => this.setStyleOfColumnBg());\r\n    this.on$(GAME_EVENT.INFINITY_UPGRADES_DISCHARGED, () => this.setStyleOfColumnBg());\r\n\r\n    this.setStyleOfColumnBg();\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isUseless = Pelle.isDoomed;\r\n      this.chargeUnlocked = Ra.unlocks.chargedInfinityUpgrades.canBeApplied && !Pelle.isDoomed;\r\n      this.totalCharges = Ra.totalCharges;\r\n      this.chargesUsed = Ra.totalCharges - Ra.chargesLeft;\r\n      this.disCharge = player.celestials.ra.disCharge;\r\n      this.ipMultSoftCap = GameDatabase.infinity.upgrades.ipMult.costIncreaseThreshold;\r\n      this.ipMultHardCap = GameDatabase.infinity.upgrades.ipMult.costCap;\r\n      this.eternityUnlocked = PlayerProgress.current.isEternityUnlocked;\r\n      this.bottomRowUnlocked = Achievement(41).isUnlocked;\r\n    },\r\n    btnClassObject(column) {\r\n      const classObject = {\r\n        \"l-infinity-upgrade-grid__cell\": true\r\n      };\r\n      if (column > 0) {\r\n        // Indexing starts from 0, while css classes start from 2 (and first column has default css class)\r\n        classObject[`o-infinity-upgrade-btn--color-${column + 1}`] = true;\r\n      }\r\n      return classObject;\r\n    },\r\n    getColumnColor(location) {\r\n      if (location.isCharged) return \"var(--color-teresa--base)\";\r\n      if (location.isBought) return \"var(--color-infinity)\";\r\n      return \"transparent\";\r\n    },\r\n    setStyleOfColumnBg() {\r\n      this.styleOfColumnBg = this.grid.map(col => ({\r\n        background:\r\n          `linear-gradient(to bottom,\r\n          ${this.getColumnColor(col[0])} 15%,\r\n          ${this.getColumnColor(col[1])} 35% 40%,\r\n          ${this.getColumnColor(col[2])} 60% 65%,\r\n          ${this.getColumnColor(col[3])} 85% 100%`\r\n      }));\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-infinity-upgrades-tab\">\r\n    <div\r\n      v-if=\"chargeUnlocked\"\r\n      class=\"c-subtab-option-container\"\r\n    >\r\n      <PrimaryButton\r\n        :class=\"disChargeClassObject\"\r\n        @click=\"disCharge = !disCharge\"\r\n      >\r\n        Respec Charged Infinity Upgrades on next Reality\r\n      </PrimaryButton>\r\n    </div>\r\n    <div v-if=\"chargeUnlocked\">\r\n      You have charged {{ formatInt(chargesUsed) }}/{{ formatInt(totalCharges) }} Infinity Upgrades.\r\n      Charged Infinity Upgrades have their effect altered.\r\n      <br>\r\n      Hold shift to show Charged Infinity Upgrades. You can freely respec your choices on Reality.\r\n    </div>\r\n    <div v-if=\"isUseless\">\r\n      You cannot Charge Infinity Upgrades while Doomed.\r\n    </div>\r\n    <br>\r\n    Within each column, the upgrades must be purchased from top to bottom.\r\n    <br>\r\n    <div class=\"l-infinity-upgrade-grid l-infinity-upgrades-tab__grid\">\r\n      <div\r\n        v-for=\"(column, columnId) in grid\"\r\n        :key=\"columnId\"\r\n        class=\"c-infinity-upgrade-grid__column\"\r\n      >\r\n        <InfinityUpgradeButton\r\n          v-for=\"upgrade in column\"\r\n          :key=\"upgrade.id\"\r\n          :upgrade=\"upgrade\"\r\n          :class=\"btnClassObject(columnId)\"\r\n        />\r\n        <div\r\n          class=\"c-infinity-upgrade-grid__column--background\"\r\n          :style=\"styleOfColumnBg[columnId]\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div\r\n      v-if=\"bottomRowUnlocked\"\r\n      class=\"l-infinity-upgrades-bottom-row\"\r\n    >\r\n      <IpMultiplierButton class=\"l-infinity-upgrades-tab__mult-btn\" />\r\n      <InfinityUpgradeButton\r\n        :upgrade=\"offlineIpUpgrade\"\r\n        :class=\"btnClassObject(1)\"\r\n      />\r\n    </div>\r\n    <div v-if=\"eternityUnlocked && bottomRowUnlocked\">\r\n      The Infinity Point multiplier becomes more expensive\r\n      <br>\r\n      above {{ formatPostBreak(ipMultSoftCap) }} Infinity Points, and cannot be purchased past\r\n      {{ formatPostBreak(ipMultHardCap) }} Infinity Points.\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-infinity-upgrade-grid__column {\r\n  display: flex;\r\n  overflow: hidden;\r\n  flex-direction: column;\r\n  position: relative;\r\n  border-radius: var(--var-border-radius, 0.3rem);\r\n  margin: 0 0.3rem;\r\n}\r\n\r\n.c-infinity-upgrade-grid__column--background {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n  opacity: 0.7;\r\n}\r\n\r\n.s-base--dark .c-infinity-upgrade-grid__column--background {\r\n  opacity: 0.5;\r\n}\r\n\r\n.l-infinity-upgrades-bottom-row .l-infinity-upgrade-grid__cell,\r\n.l-infinity-upgrades-bottom-row .l-infinity-upgrades-tab__mult-btn {\r\n  margin: 0.5rem 1.1rem;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/infinity-upgrades"},"metadata":{},"sourceType":"module"}