{"ast":null,"code":"import GlyphFilterPanel from \"./GlyphFilterPanel\";\nimport GlyphInventoryManagementPanel from \"./GlyphInventoryManagementPanel\";\nimport GlyphRejectionPanel from \"./GlyphRejectionPanel\";\nimport GlyphSetSavePanel from \"./GlyphSetSavePanel\";\nexport default {\n  name: \"GlyphTabSidebar\",\n  components: {\n    GlyphInventoryManagementPanel,\n    GlyphFilterPanel,\n    GlyphSetSavePanel,\n    GlyphRejectionPanel\n  },\n\n  data() {\n    return {\n      type: 0,\n      sidebarEnum: {},\n      unlockedFilter: false,\n      unlockedSets: false,\n      unlockedAlchemy: false,\n      hasMoreOptions: false,\n      hasRefined: false\n    };\n  },\n\n  computed: {\n    isDoomed() {\n      return Pelle.isDoomed;\n    }\n\n  },\n  methods: {\n    update() {\n      this.type = player.reality.showSidebarPanel;\n      this.sidebarEnum = GLYPH_SIDEBAR_MODE;\n      this.unlockedFilter = EffarigUnlock.glyphFilter.isUnlocked;\n      this.unlockedSets = EffarigUnlock.setSaves.isUnlocked;\n      this.unlockedAlchemy = Ra.unlocks.unlockGlyphAlchemy.canBeApplied; // We always have inventory management available, but there's no point in showing options if it's the only one\n\n      this.hasMoreOptions = this.unlockedFilter || this.unlockedSets || this.unlockedAlchemy;\n      this.hasRefined = AlchemyResources.all.map(res => res.amount).some(a => a > 0);\n    },\n\n    setSidebarState(state) {\n      player.reality.showSidebarPanel = state;\n    },\n\n    sidebarClass(index) {\n      return {\n        \"l-glyph-sidebar-button\": true,\n        \"c-glyph-sidebar-button\": true,\n        \"c-glyph-sidebar-button--active\": index === player.reality.showSidebarPanel,\n        \"l-glyph-sidebar-button--attention\": index === this.sidebarEnum.SACRIFICE_TYPE && !this.hasRefined && !this.isDoomed\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["GlyphTabSidebar.vue"],"names":[],"mappings":"AACA,OAAA,gBAAA,MAAA,oBAAA;AACA,OAAA,6BAAA,MAAA,iCAAA;AACA,OAAA,mBAAA,MAAA,uBAAA;AACA,OAAA,iBAAA,MAAA,qBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,6BADA;AAEA,IAAA,gBAFA;AAGA,IAAA,iBAHA;AAIA,IAAA;AAJA,GAFA;;AAQA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,cAAA,EAAA,KAHA;AAIA,MAAA,YAAA,EAAA,KAJA;AAKA,MAAA,eAAA,EAAA,KALA;AAMA,MAAA,cAAA,EAAA,KANA;AAOA,MAAA,UAAA,EAAA;AAPA,KAAA;AASA,GAlBA;;AAmBA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,GAAA;AACA,aAAA,KAAA,CAAA,QAAA;AACA;;AAHA,GAnBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,IAAA,GAAA,MAAA,CAAA,OAAA,CAAA,gBAAA;AACA,WAAA,WAAA,GAAA,kBAAA;AACA,WAAA,cAAA,GAAA,aAAA,CAAA,WAAA,CAAA,UAAA;AACA,WAAA,YAAA,GAAA,aAAA,CAAA,QAAA,CAAA,UAAA;AACA,WAAA,eAAA,GAAA,EAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,YAAA,CALA,CAMA;;AACA,WAAA,cAAA,GAAA,KAAA,cAAA,IAAA,KAAA,YAAA,IAAA,KAAA,eAAA;AACA,WAAA,UAAA,GAAA,gBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;AACA,KAVA;;AAWA,IAAA,eAAA,CAAA,KAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,gBAAA,GAAA,KAAA;AACA,KAbA;;AAcA,IAAA,YAAA,CAAA,KAAA,EAAA;AACA,aAAA;AACA,kCAAA,IADA;AAEA,kCAAA,IAFA;AAGA,0CAAA,KAAA,KAAA,MAAA,CAAA,OAAA,CAAA,gBAHA;AAIA,6CAAA,KAAA,KAAA,KAAA,WAAA,CAAA,cAAA,IACA,CAAA,KAAA,UADA,IACA,CAAA,KAAA;AALA,OAAA;AAOA;;AAtBA;AAxBA,CAAA","sourcesContent":["<script>\r\nimport GlyphFilterPanel from \"./GlyphFilterPanel\";\r\nimport GlyphInventoryManagementPanel from \"./GlyphInventoryManagementPanel\";\r\nimport GlyphRejectionPanel from \"./GlyphRejectionPanel\";\r\nimport GlyphSetSavePanel from \"./GlyphSetSavePanel\";\r\n\r\nexport default {\r\n  name: \"GlyphTabSidebar\",\r\n  components: {\r\n    GlyphInventoryManagementPanel,\r\n    GlyphFilterPanel,\r\n    GlyphSetSavePanel,\r\n    GlyphRejectionPanel,\r\n  },\r\n  data() {\r\n    return {\r\n      type: 0,\r\n      sidebarEnum: {},\r\n      unlockedFilter: false,\r\n      unlockedSets: false,\r\n      unlockedAlchemy: false,\r\n      hasMoreOptions: false,\r\n      hasRefined: false,\r\n    };\r\n  },\r\n  computed: {\r\n    isDoomed() {\r\n      return Pelle.isDoomed;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.type = player.reality.showSidebarPanel;\r\n      this.sidebarEnum = GLYPH_SIDEBAR_MODE;\r\n      this.unlockedFilter = EffarigUnlock.glyphFilter.isUnlocked;\r\n      this.unlockedSets = EffarigUnlock.setSaves.isUnlocked;\r\n      this.unlockedAlchemy = Ra.unlocks.unlockGlyphAlchemy.canBeApplied;\r\n      // We always have inventory management available, but there's no point in showing options if it's the only one\r\n      this.hasMoreOptions = this.unlockedFilter || this.unlockedSets || this.unlockedAlchemy;\r\n      this.hasRefined = AlchemyResources.all.map(res => res.amount).some(a => a > 0);\r\n    },\r\n    setSidebarState(state) {\r\n      player.reality.showSidebarPanel = state;\r\n    },\r\n    sidebarClass(index) {\r\n      return {\r\n        \"l-glyph-sidebar-button\": true,\r\n        \"c-glyph-sidebar-button\": true,\r\n        \"c-glyph-sidebar-button--active\": index === player.reality.showSidebarPanel,\r\n        \"l-glyph-sidebar-button--attention\": index === this.sidebarEnum.SACRIFICE_TYPE &&\r\n          !this.hasRefined && !this.isDoomed\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-glyph-sidebar-option-container\">\r\n    <div\r\n      v-if=\"hasMoreOptions\"\r\n      class=\"l-glyph-sidebar-tab-container\"\r\n    >\r\n      <button\r\n        :class=\"sidebarClass(sidebarEnum.INVENTORY_MANAGEMENT)\"\r\n        @click=\"setSidebarState(sidebarEnum.INVENTORY_MANAGEMENT)\"\r\n      >\r\n        Manage Inventory\r\n      </button>\r\n      <button\r\n        v-if=\"unlockedFilter\"\r\n        :class=\"sidebarClass(sidebarEnum.FILTER_SETTINGS)\"\r\n        @click=\"setSidebarState(sidebarEnum.FILTER_SETTINGS)\"\r\n      >\r\n        Glyph Filter\r\n      </button>\r\n      <button\r\n        v-if=\"unlockedSets\"\r\n        :class=\"sidebarClass(sidebarEnum.SAVED_SETS)\"\r\n        @click=\"setSidebarState(sidebarEnum.SAVED_SETS)\"\r\n      >\r\n        Glyph Presets\r\n      </button>\r\n      <button\r\n        v-if=\"unlockedAlchemy\"\r\n        :class=\"sidebarClass(sidebarEnum.SACRIFICE_TYPE)\"\r\n        @click=\"setSidebarState(sidebarEnum.SACRIFICE_TYPE)\"\r\n      >\r\n        Sacrifice Type\r\n      </button>\r\n    </div>\r\n    <GlyphInventoryManagementPanel\r\n      v-if=\"type === sidebarEnum.INVENTORY_MANAGEMENT\"\r\n      :has-more-options=\"hasMoreOptions\"\r\n    />\r\n    <GlyphFilterPanel v-else-if=\"type === sidebarEnum.FILTER_SETTINGS && unlockedFilter\" />\r\n    <GlyphSetSavePanel v-else-if=\"type === sidebarEnum.SAVED_SETS && unlockedSets\" />\r\n    <GlyphRejectionPanel v-else-if=\"type === sidebarEnum.SACRIFICE_TYPE && unlockedAlchemy\" />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/glyphs/sidebar"},"metadata":{},"sourceType":"module"}