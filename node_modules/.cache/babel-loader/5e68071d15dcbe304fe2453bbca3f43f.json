{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport wordShift from \"@/core/word-shift\";\nimport PelleUpgrade from \"./PelleUpgrade\";\nexport default {\n  name: \"GalaxyGeneratorPanel\",\n  components: {\n    PelleUpgrade\n  },\n\n  data() {\n    return {\n      isUnlocked: false,\n      galaxies: 0,\n      generatedGalaxies: 0,\n      galaxiesPerSecond: 0,\n      cap: 0,\n      isCapped: false,\n      capRift: null,\n      sacrificeActive: false,\n      isCollapsed: false,\n      barWidth: 0,\n      capRiftName: \"\"\n    };\n  },\n\n  computed: {\n    collapseIcon() {\n      return this.isCollapsed ? \"fas fa-expand-arrows-alt\" : \"fas fa-compress-arrows-alt\";\n    },\n\n    upgrades() {\n      return GalaxyGeneratorUpgrades.all;\n    },\n\n    galaxyText() {\n      let text = format(Math.max(this.galaxies, 0), 2);\n      if (this.galaxies < 0) text += ` [${format(this.galaxies, 2)}]`;\n      return text;\n    },\n\n    sacrificeText() {\n      return this.capRift.galaxyGeneratorText.replace(\"$value\", this.capRiftName);\n    },\n\n    emphasisedStart() {\n      return Math.pow(this.generatedGalaxies / this.cap, 0.45);\n    }\n\n  },\n  methods: {\n    update() {\n      this.isUnlocked = Pelle.hasGalaxyGenerator;\n      this.isCapped = GalaxyGenerator.isCapped;\n      this.isCollapsed = player.celestials.pelle.collapsed.galaxies && !this.isCapped;\n      if (this.isCollapsed || !this.isUnlocked) return;\n      this.galaxies = player.galaxies + GalaxyGenerator.galaxies;\n      this.generatedGalaxies = GalaxyGenerator.generatedGalaxies;\n      this.galaxiesPerSecond = GalaxyGenerator.gainPerSecond;\n      this.cap = GalaxyGenerator.generationCap;\n      this.capRift = GalaxyGenerator.capRift;\n      this.sacrificeActive = GalaxyGenerator.sacrificeActive;\n      this.barWidth = this.isCapped ? this.capRift.reducedTo : this.emphasisedStart;\n      if (this.capRift) this.capRiftName = wordShift.wordCycle(this.capRift.name);\n    },\n\n    increaseCap() {\n      if (GalaxyGenerator.isCapped) GalaxyGenerator.startSacrifice();\n    },\n\n    toggleCollapse() {\n      player.celestials.pelle.collapsed.galaxies = !this.isCollapsed;\n    },\n\n    unlock() {\n      player.celestials.pelle.galaxyGenerator.unlocked = true;\n      Pelle.quotes.galaxyGeneratorUnlock.show();\n    }\n\n  }\n};","map":{"version":3,"sources":["PelleGalaxyGeneratorPanel.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport wordShift from \"@/core/word-shift\";\r\n\r\nimport PelleUpgrade from \"./PelleUpgrade\";\r\n\r\nexport default {\r\n  name: \"GalaxyGeneratorPanel\",\r\n  components: {\r\n    PelleUpgrade\r\n  },\r\n  data() {\r\n    return {\r\n      isUnlocked: false,\r\n      galaxies: 0,\r\n      generatedGalaxies: 0,\r\n      galaxiesPerSecond: 0,\r\n      cap: 0,\r\n      isCapped: false,\r\n      capRift: null,\r\n      sacrificeActive: false,\r\n      isCollapsed: false,\r\n      barWidth: 0,\r\n      capRiftName: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    collapseIcon() {\r\n      return this.isCollapsed\r\n        ? \"fas fa-expand-arrows-alt\"\r\n        : \"fas fa-compress-arrows-alt\";\r\n    },\r\n    upgrades() {\r\n      return GalaxyGeneratorUpgrades.all;\r\n    },\r\n    galaxyText() {\r\n      let text = format(Math.max(this.galaxies, 0), 2);\r\n      if (this.galaxies < 0) text += ` [${format(this.galaxies, 2)}]`;\r\n      return text;\r\n    },\r\n    sacrificeText() {\r\n      return this.capRift.galaxyGeneratorText.replace(\"$value\", this.capRiftName);\r\n    },\r\n    emphasisedStart() {\r\n      return Math.pow(this.generatedGalaxies / this.cap, 0.45);\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isUnlocked = Pelle.hasGalaxyGenerator;\r\n      this.isCapped = GalaxyGenerator.isCapped;\r\n      this.isCollapsed = player.celestials.pelle.collapsed.galaxies && !this.isCapped;\r\n      if (this.isCollapsed || !this.isUnlocked) return;\r\n      this.galaxies = player.galaxies + GalaxyGenerator.galaxies;\r\n      this.generatedGalaxies = GalaxyGenerator.generatedGalaxies;\r\n      this.galaxiesPerSecond = GalaxyGenerator.gainPerSecond;\r\n      this.cap = GalaxyGenerator.generationCap;\r\n      this.capRift = GalaxyGenerator.capRift;\r\n      this.sacrificeActive = GalaxyGenerator.sacrificeActive;\r\n      this.barWidth = (this.isCapped ? this.capRift.reducedTo : this.emphasisedStart);\r\n      if (this.capRift) this.capRiftName = wordShift.wordCycle(this.capRift.name);\r\n    },\r\n    increaseCap() {\r\n      if (GalaxyGenerator.isCapped) GalaxyGenerator.startSacrifice();\r\n    },\r\n    toggleCollapse() {\r\n      player.celestials.pelle.collapsed.galaxies = !this.isCollapsed;\r\n    },\r\n    unlock() {\r\n      player.celestials.pelle.galaxyGenerator.unlocked = true;\r\n      Pelle.quotes.galaxyGeneratorUnlock.show();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-pelle-panel-container\">\r\n    <div class=\"c-pelle-panel-title\">\r\n      <i\r\n        v-if=\"!isCapped\"\r\n        :class=\"collapseIcon\"\r\n        class=\"c-collapse-icon-clickable\"\r\n        @click=\"toggleCollapse\"\r\n      />\r\n      Galaxy Generator\r\n    </div>\r\n    <div\r\n      v-if=\"!isCollapsed\"\r\n      class=\"l-pelle-content-container\"\r\n    >\r\n      <div v-if=\"isUnlocked\">\r\n        <div>\r\n          You have a total of\r\n          <span class=\"c-galaxies-amount\">{{ galaxyText }}</span>\r\n          Galaxies.\r\n          <span class=\"c-galaxies-amount\">+{{ format(galaxiesPerSecond, 2, 1) }}/s</span>\r\n        </div>\r\n        <div>\r\n          <button\r\n            class=\"c-increase-cap\"\r\n            :class=\"{\r\n              'c-increase-cap-available': isCapped && capRift && !sacrificeActive,\r\n              'tutorial--glow': cap === Infinity\r\n            }\"\r\n            @click=\"increaseCap\"\r\n          >\r\n            <div\r\n              class=\"c-increase-cap-background\"\r\n              :style=\"{ 'width': `${barWidth * 100}%` }\"\r\n            />\r\n            <div\r\n              v-if=\"isCapped && capRift\"\r\n              class=\"c-increase-cap-text\"\r\n            >\r\n              {{ sacrificeText }}. <br><br>\r\n              <span\r\n                v-if=\"!sacrificeActive\"\r\n                class=\"c-big-text\"\r\n              >\r\n                Sacrifice your {{ capRiftName }}\r\n              </span>\r\n              <span\r\n                v-else\r\n                class=\"c-big-text\"\r\n              >\r\n                Getting rid of all that {{ capRiftName }}...\r\n              </span>\r\n            </div>\r\n            <div\r\n              v-else\r\n              class=\"c-increase-cap-text c-medium-text\"\r\n            >\r\n              {{ format(generatedGalaxies, 2) }} / {{ format(cap, 2) }} Galaxies generated\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div class=\"l-galaxy-generator-upgrades-container\">\r\n          <PelleUpgrade\r\n            v-for=\"upgrade in upgrades\"\r\n            :key=\"upgrade.config.id\"\r\n            :upgrade=\"upgrade\"\r\n            :galaxy-generator=\"true\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <button\r\n        v-else\r\n        class=\"c-generator-unlock-button\"\r\n        @click=\"unlock\"\r\n      >\r\n        Unlock the Galaxy Generator\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-collapse-icon-clickable {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 1.5rem;\r\n  width: 3rem;\r\n  align-content: center;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n}\r\n\r\n.c-generator-unlock-button {\r\n  width: 25rem;\r\n  height: 10rem;\r\n  font-family: Typewriter;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: black;\r\n  background: linear-gradient(var(--color-pelle--secondary), var(--color-pelle--base));\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  padding: 2rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.l-galaxy-generator-upgrades-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n.c-galaxies-amount {\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n  background: linear-gradient(var(--color-pelle--secondary), var(--color-pelle--base));\r\n  background-clip: text;\r\n\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.highlight {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: var(--color-pelle--base);\r\n}\r\n\r\n.c-increase-cap {\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 11.4rem;\r\n  max-width: 70rem;\r\n  position: relative;\r\n  font-family: Typewriter;\r\n  font-size: 1.1rem;\r\n  color: var(--color-text);\r\n  background-color: #c1eaf0;\r\n  border: var(--var-border-width, 0.1rem) solid var(--color-pelle--base);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  /* box-shadow is here to prevent a weird grey border forming around the background */\r\n  box-shadow: inset 0 0 0.1rem 0.1rem var(--color-pelle--base);\r\n  margin: 1rem;\r\n  padding: 2rem;\r\n}\r\n\r\n.s-base--dark .c-increase-cap {\r\n  background-color: #004b55;\r\n}\r\n\r\n.c-increase-cap:hover {\r\n  box-shadow: inset 0 0 0.1rem 0.1rem var(--color-pelle--base), 0.1rem 0.1rem 0.5rem var(--color-pelle--base);\r\n  transition-duration: 0.12s;\r\n}\r\n\r\n.c-increase-cap-available {\r\n  cursor: pointer;\r\n}\r\n\r\n.c-increase-cap-text {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.c-increase-cap-background {\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 0;\r\n  background: linear-gradient(var(--color-text-inverted), var(--color-pelle--base));\r\n  transition: width 0.1s;\r\n}\r\n\r\n.c-big-text {\r\n  font-size: 2.5rem;\r\n  text-shadow: 0.2rem 0.2rem 0.2rem #888888;\r\n}\r\n\r\n.s-base--dark .c-big-text {\r\n  text-shadow: 0.2rem 0.2rem 0.2rem black;\r\n}\r\n\r\n.c-medium-text {\r\n  font-size: 2rem;\r\n  text-shadow: 0.2rem 0.2rem 0.2rem #888888;\r\n}\r\n\r\n.s-base--dark .c-medium-text {\r\n  text-shadow: 0.2rem 0.2rem 0.2rem black;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/tabs/celestial-pelle"},"metadata":{},"sourceType":"module"}