{"ast":null,"code":"export default {\n  name: \"GameSpeedDisplay\",\n  props: {},\n\n  data() {\n    return {\n      baseSpeed: 0,\n      pulsedSpeed: 0,\n      hasSeenAlteredSpeed: false,\n      isStopped: false,\n      isEC12: false,\n      isPulsing: false,\n      isPaused: false\n    };\n  },\n\n  computed: {\n    baseSpeedText() {\n      if (this.isStopped) {\n        return \"Stopped (storing real time)\";\n      }\n\n      const speed = this.formatNumber(this.baseSpeed);\n\n      if (this.isEC12) {\n        return `${speed} (fixed)`;\n      }\n\n      return `${speed}`;\n    },\n\n    pulseSpeedText() {\n      return `${this.formatNumber(this.pulsedSpeed)}`;\n    },\n\n    baseText() {\n      if (this.isPaused) return \"The game is completely paused.\";\n      if (!this.hasSeenAlteredSpeed) return null;\n      return this.baseSpeed === 1 ? \"The game is running at normal speed.\" : `Game speed is altered: ${this.baseSpeedText}`;\n    }\n\n  },\n  methods: {\n    update() {\n      this.baseSpeed = getGameSpeedupFactor();\n      this.pulsedSpeed = getGameSpeedupForDisplay();\n      this.hasSeenAlteredSpeed = PlayerProgress.seenAlteredSpeed();\n      this.isStopped = Enslaved.isStoringRealTime;\n      this.isEC12 = EternityChallenge(12).isRunning;\n      this.isPaused = player.options.gamePaused;\n      this.isPulsing = this.baseSpeed !== this.pulsedSpeed && Enslaved.canRelease(true) && !this.isPaused;\n    },\n\n    formatNumber(num) {\n      if (num >= 0.001 && num < 10000 && num !== 1) {\n        return format(num, 3, 3);\n      }\n\n      if (num < 0.001) {\n        return `${formatInt(1)} / ${format(1 / num, 2)}`;\n      }\n\n      return `${format(num, 2)}`;\n    }\n\n  }\n};","map":{"version":3,"sources":["GameSpeedDisplay.vue"],"names":[],"mappings":"AACA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA,EAFA;;AAIA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,CADA;AAEA,MAAA,WAAA,EAAA,CAFA;AAGA,MAAA,mBAAA,EAAA,KAHA;AAIA,MAAA,SAAA,EAAA,KAJA;AAKA,MAAA,MAAA,EAAA,KALA;AAMA,MAAA,SAAA,EAAA,KANA;AAOA,MAAA,QAAA,EAAA;AAPA,KAAA;AASA,GAdA;;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,aAAA,GAAA;AACA,UAAA,KAAA,SAAA,EAAA;AACA,eAAA,6BAAA;AACA;;AACA,YAAA,KAAA,GAAA,KAAA,YAAA,CAAA,KAAA,SAAA,CAAA;;AACA,UAAA,KAAA,MAAA,EAAA;AACA,eAAA,GAAA,KAAA,UAAA;AACA;;AACA,aAAA,GAAA,KAAA,EAAA;AACA,KAVA;;AAWA,IAAA,cAAA,GAAA;AACA,aAAA,GAAA,KAAA,YAAA,CAAA,KAAA,WAAA,CAAA,EAAA;AACA,KAbA;;AAcA,IAAA,QAAA,GAAA;AACA,UAAA,KAAA,QAAA,EAAA,OAAA,gCAAA;AACA,UAAA,CAAA,KAAA,mBAAA,EAAA,OAAA,IAAA;AACA,aAAA,KAAA,SAAA,KAAA,CAAA,GACA,sCADA,GAEA,0BAAA,KAAA,aAAA,EAFA;AAGA;;AApBA,GAfA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,GAAA;AACA,WAAA,SAAA,GAAA,oBAAA,EAAA;AACA,WAAA,WAAA,GAAA,wBAAA,EAAA;AACA,WAAA,mBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA;AACA,WAAA,SAAA,GAAA,QAAA,CAAA,iBAAA;AACA,WAAA,MAAA,GAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,SAAA;AACA,WAAA,QAAA,GAAA,MAAA,CAAA,OAAA,CAAA,UAAA;AACA,WAAA,SAAA,GAAA,KAAA,SAAA,KAAA,KAAA,WAAA,IAAA,QAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,QAAA;AACA,KATA;;AAUA,IAAA,YAAA,CAAA,GAAA,EAAA;AACA,UAAA,GAAA,IAAA,KAAA,IAAA,GAAA,GAAA,KAAA,IAAA,GAAA,KAAA,CAAA,EAAA;AACA,eAAA,MAAA,CAAA,GAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AACA;;AACA,UAAA,GAAA,GAAA,KAAA,EAAA;AACA,eAAA,GAAA,SAAA,CAAA,CAAA,CAAA,MAAA,MAAA,CAAA,IAAA,GAAA,EAAA,CAAA,CAAA,EAAA;AACA;;AACA,aAAA,GAAA,MAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA;AACA;;AAlBA;AArCA,CAAA","sourcesContent":["<script>\r\nexport default {\r\n  name: \"GameSpeedDisplay\",\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n      baseSpeed: 0,\r\n      pulsedSpeed: 0,\r\n      hasSeenAlteredSpeed: false,\r\n      isStopped: false,\r\n      isEC12: false,\r\n      isPulsing: false,\r\n      isPaused: false,\r\n    };\r\n  },\r\n  computed: {\r\n    baseSpeedText() {\r\n      if (this.isStopped) {\r\n        return \"Stopped (storing real time)\";\r\n      }\r\n      const speed = this.formatNumber(this.baseSpeed);\r\n      if (this.isEC12) {\r\n        return `${speed} (fixed)`;\r\n      }\r\n      return `${speed}`;\r\n    },\r\n    pulseSpeedText() {\r\n      return `${this.formatNumber(this.pulsedSpeed)}`;\r\n    },\r\n    baseText() {\r\n      if (this.isPaused) return \"The game is completely paused.\";\r\n      if (!this.hasSeenAlteredSpeed) return null;\r\n      return this.baseSpeed === 1\r\n        ? \"The game is running at normal speed.\"\r\n        : `Game speed is altered: ${this.baseSpeedText}`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.baseSpeed = getGameSpeedupFactor();\r\n      this.pulsedSpeed = getGameSpeedupForDisplay();\r\n      this.hasSeenAlteredSpeed = PlayerProgress.seenAlteredSpeed();\r\n      this.isStopped = Enslaved.isStoringRealTime;\r\n      this.isEC12 = EternityChallenge(12).isRunning;\r\n      this.isPaused = player.options.gamePaused;\r\n      this.isPulsing = (this.baseSpeed !== this.pulsedSpeed) && Enslaved.canRelease(true) && !this.isPaused;\r\n    },\r\n    formatNumber(num) {\r\n      if (num >= 0.001 && num < 10000 && num !== 1) {\r\n        return format(num, 3, 3);\r\n      }\r\n      if (num < 0.001) {\r\n        return `${formatInt(1)} / ${format(1 / num, 2)}`;\r\n      }\r\n      return `${format(num, 2)}`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <span class=\"c-gamespeed\">\r\n    <span>\r\n      {{ baseText }}\r\n    </span>\r\n    <span v-if=\"isPulsing\">(<i class=\"fas fa-expand-arrows-alt u-fa-padding\" /> {{ pulseSpeedText }})</span>\r\n  </span>\r\n</template>\r\n\r\n<style scoped>\r\n.c-gamespeed {\r\n  font-weight: bold;\r\n  color: var(--color-text);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"},"metadata":{},"sourceType":"module"}