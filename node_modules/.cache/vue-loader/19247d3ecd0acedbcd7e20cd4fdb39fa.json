{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-laitela\\SingularityMilestoneComponent.vue?vue&type=style&index=0&id=08db30ce&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-laitela\\SingularityMilestoneComponent.vue","mtime":1745241597131},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5vLWxhaXRlbGEtbWlsZXN0b25lLS1nbG93IHsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogIGNvbG9yOiB2YXIoLS1jb2xvci1sYWl0ZWxhLS1iYXNlKTsNCiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3ItbGFpdGVsYS0tYWNjZW50KTsNCiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jb2xvci1sYWl0ZWxhLS1hY2NlbnQpOw0KICBib3gtc2hhZG93OiAwIDAgMC41cmVtIDAuMXJlbSBpbnNldCwgMCAwIDAuM3JlbSAwOw0KICBhbmltYXRpb246IDNzIGEtbGFpdGVsYS1mbGFzaCBpbmZpbml0ZTsNCn0NCg=="},{"version":3,"sources":["SingularityMilestoneComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SingularityMilestoneComponent.vue","sourceRoot":"src/components/tabs/celestial-laitela","sourcesContent":["<script>\r\nimport { LAITELA_UPGRADE_DIRECTION } from \"@/core/secret-formula\";\r\n\r\nexport default {\r\n  name: \"SingularityMilestoneComponent\",\r\n  props: {\r\n    milestone: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    suppressGlow: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data: () => ({\r\n    isMaxed: false,\r\n    progressToNext: \"\",\r\n    remainingSingularities: 0,\r\n    description: \"\",\r\n    effectDisplay: \"\",\r\n    isUnique: false,\r\n    nextEffectDisplay: \"\",\r\n    start: 0,\r\n    completions: 0,\r\n    limit: 0,\r\n    milestoneMode: false,\r\n    singularitiesPerCondense: 0,\r\n    baseCondenseTime: 0,\r\n    currentCondenseTime: 0,\r\n    autoCondenseDelay: 0,\r\n    lastCheckedMilestones: 0,\r\n    autoSingActive: false,\r\n  }),\r\n  computed: {\r\n    // The bar is a mask that inverts colors for any element with a lower z-index (including text).\r\n    // When maxed, the visual appearance is instead determined by a class with its own explicit width\r\n    barStyle() {\r\n      return {\r\n        width: this.isMaxed ? undefined : this.progressToNext,\r\n      };\r\n    },\r\n    barClass() {\r\n      return {\r\n        \"c-laitela-milestone__progress\": true,\r\n        \"c-laitela-milestone-mask\": true,\r\n        \"c-laitela-milestone--completed\": this.isMaxed\r\n      };\r\n    },\r\n    containerClass() {\r\n      return {\r\n        \"c-laitela-milestone\": true,\r\n        \"o-laitela-milestone--glow\": !this.suppressGlow &&\r\n          this.milestone.previousGoal > this.lastCheckedMilestones\r\n      };\r\n    },\r\n    upgradeDirectionIcon() {\r\n      switch (this.milestone.config.upgradeDirection) {\r\n        case LAITELA_UPGRADE_DIRECTION.SELF_BOOST: return `<b>ᛝ</b>`;\r\n        case LAITELA_UPGRADE_DIRECTION.BOOSTS_MAIN: return `<i class=\"fas fa-arrows-alt\"></i>`;\r\n        case LAITELA_UPGRADE_DIRECTION.BOOSTS_LAITELA: return `<i class=\"fas fa-compress-arrows-alt\"></i>`;\r\n        default: throw new Error(\"Unspecified Lai'tela upgrade direction in singularity milestone\");\r\n      }\r\n    },\r\n    maxCompletions() {\r\n      return this.isUnique ? 1 : this.limit;\r\n    },\r\n    completionsDisplay() {\r\n      const maxStr = Number.isFinite(this.limit) ? formatInt(this.maxCompletions) : \"∞\";\r\n      return `${formatInt(this.completions)}/${maxStr} ${pluralize(\"completion\", this.completions)}`;\r\n    },\r\n    progressDisplay() {\r\n      const condenseCount = this.remainingSingularities / this.singularitiesPerCondense;\r\n      let thisSingularityTime, extraTime, timeText;\r\n      switch (this.milestoneMode) {\r\n        case SINGULARITY_MILESTONE_RESOURCE.SINGULARITIES:\r\n          return `In ${quantify(\"Singularity\", this.remainingSingularities, 2)}`;\r\n        case SINGULARITY_MILESTONE_RESOURCE.CONDENSE_COUNT:\r\n          return `Condense ${quantify(\"time\", condenseCount, 2, 2)}`;\r\n        case SINGULARITY_MILESTONE_RESOURCE.MANUAL_TIME:\r\n          thisSingularityTime = Math.clampMin(0, this.currentCondenseTime);\r\n          extraTime = Math.ceil(condenseCount - 1) * this.baseCondenseTime;\r\n          return `In ${TimeSpan.fromSeconds(thisSingularityTime + extraTime).toStringShort()} (manual)`;\r\n        case SINGULARITY_MILESTONE_RESOURCE.AUTO_TIME:\r\n          thisSingularityTime = Math.clampMin(0, this.currentCondenseTime + this.autoCondenseDelay);\r\n          extraTime = Math.ceil(condenseCount - 1) * (this.baseCondenseTime + this.autoCondenseDelay);\r\n          timeText = `In ${TimeSpan.fromSeconds(thisSingularityTime + extraTime).toStringShort()}`;\r\n          return this.autoSingActive ? timeText : `Auto-Singularity is OFF`;\r\n        default:\r\n          throw new Error(\"Unrecognized Singularity Milestone mode\");\r\n      }\r\n    },\r\n    isDoomed: () => Pelle.isDoomed,\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.autoSingActive = player.auto.singularity.isActive;\r\n      this.isMaxed = this.milestone.isMaxed;\r\n      this.progressToNext = this.milestone.progressToNext;\r\n      this.remainingSingularities = this.milestone.remainingSingularities;\r\n      this.description = this.milestone.description;\r\n      this.effectDisplay = this.milestone.effectDisplay;\r\n      this.isUnique = this.milestone.isUnique;\r\n      if (!this.isUnique && !this.isMaxed) this.nextEffectDisplay = this.milestone.nextEffectDisplay;\r\n      this.completions = this.milestone.completions;\r\n      this.limit = this.milestone.limit;\r\n      this.milestoneMode = player.celestials.laitela.singularitySorting.displayResource;\r\n      this.singularitiesPerCondense = Singularity.singularitiesGained;\r\n      this.baseCondenseTime = Singularity.timePerCondense;\r\n      this.currentCondenseTime = Singularity.timeUntilCap;\r\n      this.autoCondenseDelay = Singularity.timeDelayFromAuto;\r\n      this.lastCheckedMilestones = player.celestials.laitela.lastCheckedMilestones;\r\n      this.isMetro = Theme.current().isMetro;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div :class=\"containerClass\">\r\n    <div\r\n      v-if=\"!isMetro && !isMaxed\"\r\n      class=\"c-laitela-milestone--bar-border-fix\"\r\n    />\r\n    <div\r\n      :class=\"barClass\"\r\n      :style=\"barStyle\"\r\n    />\r\n    <span :class=\"{ 'o-pelle-disabled': isDoomed }\">\r\n      <b v-if=\"!isMaxed\">\r\n        {{ progressDisplay }}\r\n      </b>\r\n      <p>\r\n        <span v-html=\"upgradeDirectionIcon\" /> {{ description }}\r\n      </p>\r\n      <b>\r\n        {{ effectDisplay }}\r\n        <span v-if=\"!isUnique && !isMaxed\">➜ {{ nextEffectDisplay }}</span>\r\n      </b>\r\n      <div class=\"c-laitela-milestone__completions\">\r\n        {{ completionsDisplay }}\r\n      </div>\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.o-laitela-milestone--glow {\r\n  font-weight: bold;\r\n  color: var(--color-laitela--base);\r\n  background: var(--color-laitela--accent);\r\n  border-color: var(--color-laitela--accent);\r\n  box-shadow: 0 0 0.5rem 0.1rem inset, 0 0 0.3rem 0;\r\n  animation: 3s a-laitela-flash infinite;\r\n}\r\n</style>\r\n"]}]}