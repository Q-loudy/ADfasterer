{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\normal-achievements\\NormalAchievement.vue?vue&type=style&index=0&id=2af6c262&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\normal-achievements\\NormalAchievement.vue","mtime":1745241597379},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5vLWFjaGlldmVtZW50LXRpbWUgew0KICBmb250LXdlaWdodDogYm9sZDsNCiAgY29sb3I6IHZhcigtLWNvbG9yLWFjY2VudCk7DQp9DQoNCi5vLWFjaGlldmVtZW50LS1kaXNhYmxlZCB7DQogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXBlbGxlLS1iYXNlKTsNCiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jb2xvci1iYWQpOw0KfQ0KDQouby1hY2hpZXZlbWVudC0tbG9ja2VkIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2EzYTNhMzsNCiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jb2xvci1iYWQpOw0KfQ0KDQoudC1kYXJrLW1ldHJvIC5vLWFjaGlldmVtZW50LS1sb2NrZWQgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWU5ZTllOw0KfQ0KDQoudC1tZXRybyAuby1hY2hpZXZlbWVudC0tbG9ja2VkLA0KLnQtaW52ZXJ0ZWQtbWV0cm8gLm8tYWNoaWV2ZW1lbnQtLWxvY2tlZCwNCi50LXM4IC5vLWFjaGlldmVtZW50LS1sb2NrZWQgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWU5ZTllOw0KICBib3JkZXItY29sb3I6IHZhcigtLWNvbG9yLWJhZCk7DQp9DQoNCi50LXMyIC5vLWFjaGlldmVtZW50LS1sb2NrZWQgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAlKTsNCn0NCg0KLnQtczUgLm8tYWNoaWV2ZW1lbnQtLWxvY2tlZCB7DQogIGJhY2tncm91bmQtY29sb3I6ICMyMjIyMjI7DQogIGJvcmRlci1jb2xvcjogIzAwMDAwMDsNCn0NCg0KLnQtczcgLm8tYWNoaWV2ZW1lbnQtLWxvY2tlZCB7DQogIGJhY2tncm91bmQtY29sb3I6ICM1NTU1NTU7DQogIGJvcmRlci1jb2xvcjogIzExMTExMTsNCn0NCg0KLm8tYWNoaWV2ZW1lbnQtLXdhaXRpbmcgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDFkMTYxOw0KICBib3JkZXItY29sb3I6ICNhY2FjMzk7DQp9DQoNCi50LWRhcmstbWV0cm8gLm8tYWNoaWV2ZW1lbnQtLXdhaXRpbmcgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjliOTQ2Ow0KICBib3JkZXItY29sb3I6ICM3ZDdkMzY7DQp9DQoNCi50LW1ldHJvIC5vLWFjaGlldmVtZW50LS13YWl0aW5nLA0KLnQtaW52ZXJ0ZWQtbWV0cm8gLm8tYWNoaWV2ZW1lbnQtLXdhaXRpbmcsDQoudC1zOCAuby1hY2hpZXZlbWVudC0td2FpdGluZyB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmVlNTg7DQogIGJvcmRlci1jb2xvcjogIzc1NzU3NTsNCn0NCg0KLm8tYWNoaWV2ZW1lbnQtLWJsaW5rIHsNCiAgYW5pbWF0aW9uOiBhLWFjaGlldmVtZW50LS1ibGluayAycyBzdGVwLXN0YXJ0IDBzIGluZmluaXRlOw0KfQ0KDQpAa2V5ZnJhbWVzIGEtYWNoaWV2ZW1lbnQtLWJsaW5rIHsNCiAgNTAlIHsNCiAgICB2aXNpYmlsaXR5OiBoaWRkZW47DQogIH0NCn0NCg0KLm8tYWNoaWV2ZW1lbnRfX3Jld2FyZCB7DQogIHdpZHRoOiAxLjVyZW07DQogIGhlaWdodDogMS41cmVtOw0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGxlZnQ6IDA7DQogIGJvdHRvbTogMDsNCiAgZm9udC1zaXplOiAxcmVtOw0KICBjb2xvcjogYmxhY2s7DQogIGJhY2tncm91bmQ6ICM1YWM0Njc7DQogIGJvcmRlci10b3A6IHZhcigtLXZhci1ib3JkZXItd2lkdGgsIDAuMnJlbSkgc29saWQgIzEyN2EyMDsNCiAgYm9yZGVyLXJpZ2h0OiB2YXIoLS12YXItYm9yZGVyLXdpZHRoLCAwLjJyZW0pIHNvbGlkICMxMjdhMjA7DQogIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiB2YXIoLS12YXItYm9yZGVyLXJhZGl1cywgMC44cmVtKTsNCiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogdmFyKC0tdmFyLWJvcmRlci1yYWRpdXMsIDAuNnJlbSk7DQp9DQoNCi5vLWFjaGlldmVtZW50X19yZXdhcmQtLWxvY2tlZCB7DQogIGJhY2tncm91bmQ6ICNhM2EzYTM7DQogIGJvcmRlci1jb2xvcjogdmFyKC0tY29sb3ItYmFkKTsNCn0NCg0KLm8tYWNoaWV2ZW1lbnRfX3Jld2FyZC0td2FpdGluZyB7DQogIGJhY2tncm91bmQ6ICNkMWQxNjE7DQogIGJvcmRlci1jb2xvcjogI2FjYWMzOTsNCn0NCg0KLm8tYWNoaWV2ZW1lbnRfX3Jld2FyZC0tZGlzYWJsZWQgew0KICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1wZWxsZS0tYmFzZSk7DQogIGJvcmRlci1jb2xvcjogdmFyKC0tY29sb3ItYmFkKTsNCn0NCg=="},{"version":3,"sources":["NormalAchievement.vue"],"names":[],"mappingsfile":"NormalAchievement.vue","sourceRoot":"src/components/tabs/normal-achievements","sourcesContent":["<script>\r\nimport wordShift from \"@/core/word-shift\";\r\n\r\nimport EffectDisplay from \"@/components/EffectDisplay\";\r\nimport HintText from \"@/components/HintText\";\r\n\r\nexport default {\r\n  name: \"NormalAchievement\",\r\n  components: {\r\n    EffectDisplay,\r\n    HintText\r\n  },\r\n  props: {\r\n    achievement: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    isObscured: {\r\n      type: Boolean,\r\n      required: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isDisabled: false,\r\n      isUnlocked: false,\r\n      isMouseOver: false,\r\n      isCancer: false,\r\n      showUnlockState: false,\r\n      realityUnlocked: false,\r\n      garbleTimer: 0,\r\n      garbleKey: 0,\r\n      achievementTime: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    id() {\r\n      return this.achievement.id;\r\n    },\r\n    displayId() {\r\n      return this.config.displayId ?? this.id;\r\n    },\r\n    config() {\r\n      return this.achievement.config;\r\n    },\r\n    styleObject() {\r\n      return {\r\n        \"background-position\": `-${(this.achievement.column - 1) * 104}px -${(this.achievement.row - 1) * 104}px`\r\n      };\r\n    },\r\n    classObject() {\r\n      return {\r\n        \"o-achievement\": true,\r\n        \"o-achievement--disabled\": this.isDisabled,\r\n        \"o-achievement--locked\": !this.isUnlocked && !this.isDisabled && !this.isObscured,\r\n        \"o-achievement--unlocked\": this.isUnlocked,\r\n        \"o-achievement--waiting\": !this.isUnlocked && this.isPreRealityAchievement && !this.isDisabled,\r\n        \"o-achievement--blink\": !this.isUnlocked && this.id === 78 && !this.isDisabled,\r\n        \"o-achievement--normal\": !this.isCancer && !this.isObscured,\r\n        \"o-achievement--cancer\": this.isCancer && !this.isObscured,\r\n        \"o-achievement--hidden\": this.isObscured,\r\n      };\r\n    },\r\n    indicatorIconClass() {\r\n      if (this.isUnlocked) return \"fas fa-check\";\r\n      if (this.isPreRealityAchievement && !this.isDisabled) return \"far fa-clock\";\r\n      return \"fas fa-times\";\r\n    },\r\n    indicatorClassObject() {\r\n      return {\r\n        \"o-achievement__indicator\": true,\r\n        \"o-achievement__indicator--disabled\": this.isDisabled,\r\n        \"o-achievement__indicator--locked\": !this.isUnlocked && !this.isPreRealityAchievement && !this.isDisabled,\r\n        \"o-achievement__indicator--waiting\": !this.isUnlocked && this.isPreRealityAchievement && !this.isDisabled,\r\n      };\r\n    },\r\n    rewardClassObject() {\r\n      return {\r\n        \"o-achievement__reward\": true,\r\n        \"o-achievement__reward--disabled\": this.isDisabled,\r\n        \"o-achievement__reward--locked\": !this.isUnlocked && !this.isPreRealityAchievement && !this.isDisabled,\r\n        \"o-achievement__reward--waiting\": !this.isUnlocked && this.isPreRealityAchievement && !this.isDisabled,\r\n      };\r\n    },\r\n    isPreRealityAchievement() {\r\n      return this.realityUnlocked && this.achievement.row <= 13;\r\n    },\r\n    hasReward() {\r\n      return this.config.reward !== undefined && !this.isObscured;\r\n    },\r\n    // The garble templates themselves can be static, and shouldn't be recreated every render tick\r\n    garbledNameTemplate() {\r\n      return this.makeGarbledTemplate(this.config.name);\r\n    },\r\n    garbledIDTemplate() {\r\n      return this.makeGarbledTemplate(this.displayId);\r\n    },\r\n    garbledDescriptionTemplate() {\r\n      return this.makeGarbledTemplate(this.config.description);\r\n    },\r\n    achievedTime() {\r\n      if (!player.speedrun.isActive) return null;\r\n      if (this.achievementTime === undefined) return \"Not Achieved yet\";\r\n      return this.achievementTime === 0\r\n        ? \"Given at Speedrun start\"\r\n        : `Achieved after ${TimeSpan.fromMilliseconds(this.achievementTime).toStringShort()}`;\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    clearTimeout(this.mouseOverInterval);\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isDisabled = Pelle.disabledAchievements.includes(this.id) && Pelle.isDoomed;\r\n      this.isUnlocked = this.achievement.isUnlocked && !this.isDisabled;\r\n      this.isCancer = Theme.current().name === \"S4\" || player.secretUnlocks.cancerAchievements;\r\n      this.showUnlockState = player.options.showHintText.achievementUnlockStates;\r\n      this.realityUnlocked = PlayerProgress.realityUnlocked();\r\n\r\n      this.processedName = this.processText(this.config.name, this.garbledNameTemplate);\r\n      this.processedId = this.processText(this.displayId, this.garbledIDTemplate);\r\n      this.processedDescription = this.processText(this.config.description, this.garbledDescriptionTemplate);\r\n\r\n      // This uses key-swapping to force the garbled achievements to re-render their text, because otherwise they\r\n      // would remain static. Keys for non-garbled achievements won't change, and all keys remain unique.\r\n      this.garbleTimer++;\r\n      if (this.isObscured) {\r\n        this.garbleKey = 10 * this.id + Math.floor(this.garbleTimer / 3);\r\n      } else {\r\n        this.garbleKey = this.id;\r\n      }\r\n      if (player.speedrun.isActive) this.achievementTime = player.speedrun.achievementTimes[this.id];\r\n    },\r\n    onMouseEnter() {\r\n      clearTimeout(this.mouseOverInterval);\r\n      this.isMouseOver = true;\r\n    },\r\n    onMouseLeave() {\r\n      this.mouseOverInterval = setTimeout(() => this.isMouseOver = false, 300);\r\n    },\r\n    // We don't want to expose the original text for Pelle achievements, so we generate a random string with the same\r\n    // length of the original text in order to make something that fits reasonably within their respective places\r\n    makeGarbledTemplate(input) {\r\n      // Input might be either text or number\r\n      const text = `${input}`;\r\n      let garbled = \"\";\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (text[i] === \" \") garbled += \" \";\r\n        else {\r\n          const n = text[i].charCodeAt();\r\n          // Essentially seeded randomness so that the static parts of the randomized text are deterministic\r\n          garbled += String.fromCharCode(33 + ((n * n + i * i) % 93));\r\n        }\r\n      }\r\n      return garbled;\r\n    },\r\n    // When appropriate, garbles input text for achievements on the last row. Otherwise leaves it unchanged\r\n    processText(unmodified, garbledTemplate) {\r\n      if (!this.isObscured) return unmodified;\r\n\r\n      // The garbling effect often replaces spaces with non-spaces, which affects line length and can cause individual\r\n      // lines to become long enough that they can't word-wrap. To address that, we take the template as a reference\r\n      // and put spaces back into the same spots, ensuring that text can't overflow any worse than the original text\r\n      const raw = wordShift.randomCrossWords(garbledTemplate);\r\n      let modified = \"\";\r\n      for (let i = 0; i < raw.length; i++) {\r\n        if (garbledTemplate[i] === \" \") modified += \" \";\r\n        else modified += raw[i];\r\n      }\r\n      return modified;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    :class=\"classObject\"\r\n    :style=\"styleObject\"\r\n    @mouseenter=\"onMouseEnter\"\r\n    @mouseleave=\"onMouseLeave\"\r\n  >\r\n    <HintText\r\n      :key=\"garbleKey\"\r\n      type=\"achievements\"\r\n      class=\"l-hint-text--achievement\"\r\n    >\r\n      {{ processedId }}\r\n    </HintText>\r\n    <div class=\"o-achievement__tooltip\">\r\n      <template v-if=\"isMouseOver\">\r\n        <div class=\"o-achievement__tooltip__name\">\r\n          {{ processedName }} ({{ processedId }})\r\n        </div>\r\n        <div class=\"o-achievement__tooltip__description\">\r\n          {{ processedDescription }}\r\n        </div>\r\n        <div\r\n          v-if=\"config.reward\"\r\n          class=\"o-achievement__tooltip__reward\"\r\n        >\r\n          <span\r\n            v-if=\"!isObscured\"\r\n            :class=\"{ 'o-pelle-disabled': isDisabled }\"\r\n          >\r\n            Reward: {{ config.reward }}\r\n            <EffectDisplay\r\n              v-if=\"config.formatEffect\"\r\n              br\r\n              :config=\"config\"\r\n            />\r\n          </span>\r\n        </div>\r\n        <div\r\n          v-if=\"achievedTime\"\r\n          class=\"o-achievement-time\"\r\n        >\r\n          {{ achievedTime }}\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <div\r\n      v-if=\"showUnlockState\"\r\n      :class=\"indicatorClassObject\"\r\n    >\r\n      <i :class=\"indicatorIconClass\" />\r\n    </div>\r\n    <div\r\n      v-if=\"hasReward\"\r\n      :class=\"rewardClassObject\"\r\n    >\r\n      <i class=\"fas fa-star\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.o-achievement-time {\r\n  font-weight: bold;\r\n  color: var(--color-accent);\r\n}\r\n\r\n.o-achievement--disabled {\r\n  background-color: var(--color-pelle--base);\r\n  border-color: var(--color-bad);\r\n}\r\n\r\n.o-achievement--locked {\r\n  background-color: #a3a3a3;\r\n  border-color: var(--color-bad);\r\n}\r\n\r\n.t-dark-metro .o-achievement--locked {\r\n  background-color: #9e9e9e;\r\n}\r\n\r\n.t-metro .o-achievement--locked,\r\n.t-inverted-metro .o-achievement--locked,\r\n.t-s8 .o-achievement--locked {\r\n  background-color: #9e9e9e;\r\n  border-color: var(--color-bad);\r\n}\r\n\r\n.t-s2 .o-achievement--locked {\r\n  background-color: rgba(0, 0, 0, 0%);\r\n}\r\n\r\n.t-s5 .o-achievement--locked {\r\n  background-color: #222222;\r\n  border-color: #000000;\r\n}\r\n\r\n.t-s7 .o-achievement--locked {\r\n  background-color: #555555;\r\n  border-color: #111111;\r\n}\r\n\r\n.o-achievement--waiting {\r\n  background-color: #d1d161;\r\n  border-color: #acac39;\r\n}\r\n\r\n.t-dark-metro .o-achievement--waiting {\r\n  background-color: #b9b946;\r\n  border-color: #7d7d36;\r\n}\r\n\r\n.t-metro .o-achievement--waiting,\r\n.t-inverted-metro .o-achievement--waiting,\r\n.t-s8 .o-achievement--waiting {\r\n  background-color: #ffee58;\r\n  border-color: #757575;\r\n}\r\n\r\n.o-achievement--blink {\r\n  animation: a-achievement--blink 2s step-start 0s infinite;\r\n}\r\n\r\n@keyframes a-achievement--blink {\r\n  50% {\r\n    visibility: hidden;\r\n  }\r\n}\r\n\r\n.o-achievement__reward {\r\n  width: 1.5rem;\r\n  height: 1.5rem;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  font-size: 1rem;\r\n  color: black;\r\n  background: #5ac467;\r\n  border-top: var(--var-border-width, 0.2rem) solid #127a20;\r\n  border-right: var(--var-border-width, 0.2rem) solid #127a20;\r\n  border-top-right-radius: var(--var-border-radius, 0.8rem);\r\n  border-bottom-left-radius: var(--var-border-radius, 0.6rem);\r\n}\r\n\r\n.o-achievement__reward--locked {\r\n  background: #a3a3a3;\r\n  border-color: var(--color-bad);\r\n}\r\n\r\n.o-achievement__reward--waiting {\r\n  background: #d1d161;\r\n  border-color: #acac39;\r\n}\r\n\r\n.o-achievement__reward--disabled {\r\n  background: var(--color-pelle--base);\r\n  border-color: var(--color-bad);\r\n}\r\n</style>\r\n"]}]}