{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\infinity-dimensions\\ModernInfinityDimensionRow.vue?vue&type=style&index=0&id=92a6eaae&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\infinity-dimensions\\ModernInfinityDimensionRow.vue","mtime":1745241597374},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jLW1vZGVybi1kaW0tdG9vbHRpcC1jb250YWluZXIgLmMtbW9kZXJuLWRpbS1wdXJjaGFzZS1jb3VudC10b29sdGlwIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICB3aWR0aDogMjByZW07DQogIHRvcDogNTAlOw0KICBmb250LXNpemU6IDEuM3JlbTsNCiAgbGluZS1oZWlnaHQ6IDEuNnJlbTsNCiAgY29sb3I6IHdoaXRlOw0KICBiYWNrZ3JvdW5kOiBibGFjazsNCiAgYm9yZGVyOiAwLjFyZW0gc29saWQgdmFyKC0tY29sb3ItdGV4dCk7DQogIGJvcmRlci1yYWRpdXM6IHZhcigtLXZhci1ib3JkZXItd2lkdGgsIDAuNXJlbSk7DQogIC8qIEJ1dHRvbnMgYXJlIDQwcmVtIHdpZGUsIHRvb2x0aXAgaXMgMjByZW0gKi8NCiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoY2FsYygtMTc1JSAtIDFyZW0pLCAtNTAlKTsNCiAgcGFkZGluZzogMC41cmVtOw0KICB2aXNpYmlsaXR5OiBoaWRkZW47DQp9DQo="},{"version":3,"sources":["ModernInfinityDimensionRow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModernInfinityDimensionRow.vue","sourceRoot":"src/components/tabs/infinity-dimensions","sourcesContent":["<script>\r\nimport GenericDimensionRowText from \"@/components/GenericDimensionRowText\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\n\r\nexport default {\r\n  name: \"ModernInfinityDimensionRow\",\r\n  components: {\r\n    GenericDimensionRowText,\r\n    PrimaryButton,\r\n    PrimaryToggleButton\r\n  },\r\n  props: {\r\n    tier: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      hasPrevTier: false,\r\n      isUnlocked: false,\r\n      canUnlock: false,\r\n      multiplier: new Decimal(0),\r\n      baseAmount: 0,\r\n      amount: new Decimal(0),\r\n      purchases: 0,\r\n      rateOfChange: new Decimal(0),\r\n      isAutobuyerUnlocked: false,\r\n      cost: new Decimal(0),\r\n      isAvailableForPurchase: false,\r\n      isCapped: false,\r\n      capIP: new Decimal(0),\r\n      isAutobuyerOn: false,\r\n      isEC8Running: false,\r\n      hardcap: InfinityDimensions.HARDCAP_PURCHASES,\r\n      eternityReached: false,\r\n      enslavedRunning: false,\r\n    };\r\n  },\r\n  computed: {\r\n    shiftDown() {\r\n      return ui.view.shiftDown;\r\n    },\r\n    name() {\r\n      return `${InfinityDimension(this.tier).shortDisplayName} Infinity Dimension`;\r\n    },\r\n    costDisplay() {\r\n      if (this.isUnlocked || this.shiftDown) {\r\n        if (this.isCapped) return \"Capped\";\r\n        return this.showCostTitle ? `Cost: ${format(this.cost)} IP` : `${format(this.cost)} IP`;\r\n      }\r\n\r\n      if (this.canUnlock) {\r\n        return \"Unlock\";\r\n      }\r\n\r\n      return `Reach ${formatPostBreak(InfinityDimension(this.tier).amRequirement)} AM`;\r\n    },\r\n    hasLongText() {\r\n      return this.costDisplay.length > 15;\r\n    },\r\n    capTooltip() {\r\n      if (this.enslavedRunning) return `Nameless prevents the purchase of more than ${format(10)} Infinity Dimensions`;\r\n      if (this.isCapped) return `Cap reached at ${format(this.capIP)} IP`;\r\n      return `Purchased ${quantifyInt(\"time\", this.purchases)}`;\r\n    },\r\n    showRow() {\r\n      return this.eternityReached || this.isUnlocked || this.canUnlock || this.amount.gt(0) ||\r\n        this.hasPrevTier;\r\n    },\r\n    showCostTitle() {\r\n      return this.cost.exponent < 1e6;\r\n    }\r\n  },\r\n  watch: {\r\n    isAutobuyerOn(newValue) {\r\n      Autobuyer.infinityDimension(this.tier).isActive = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const tier = this.tier;\r\n      const dimension = InfinityDimension(tier);\r\n      this.hasPrevTier = tier === 1 || InfinityDimension(tier - 1).isUnlocked;\r\n      this.isUnlocked = dimension.isUnlocked;\r\n      this.canUnlock = dimension.canUnlock;\r\n      this.multiplier.copyFrom(dimension.multiplier);\r\n      this.baseAmount = dimension.baseAmount;\r\n      this.purchases = dimension.purchases;\r\n      this.amount.copyFrom(dimension.amount);\r\n      this.rateOfChange.copyFrom(dimension.rateOfChange);\r\n      this.isAutobuyerUnlocked = Autobuyer.infinityDimension(tier).isUnlocked;\r\n      this.cost.copyFrom(dimension.cost);\r\n      this.isAvailableForPurchase = dimension.isAvailableForPurchase;\r\n      this.isCapped = dimension.isCapped;\r\n      if (this.isCapped) {\r\n        this.capIP.copyFrom(dimension.hardcapIPAmount);\r\n        this.hardcap = dimension.purchaseCap;\r\n      }\r\n      this.isEC8Running = EternityChallenge(8).isRunning;\r\n      this.isAutobuyerOn = Autobuyer.infinityDimension(tier).isActive;\r\n      this.eternityReached = PlayerProgress.eternityUnlocked();\r\n      this.enslavedRunning = Enslaved.isRunning;\r\n    },\r\n    buySingleInfinityDimension() {\r\n      InfinityDimension(this.tier).buySingle();\r\n    },\r\n    buyMaxInfinityDimension() {\r\n      InfinityDimension(this.tier).buyMax(false);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-show=\"showRow\"\r\n    class=\"c-dimension-row l-dimension-row-infinity-dim l-dimension-single-row\"\r\n    :class=\"{ 'c-dim-row--not-reached': !isUnlocked && !canUnlock }\"\r\n  >\r\n    <GenericDimensionRowText\r\n      :tier=\"tier\"\r\n      :name=\"name\"\r\n      :multiplier-text=\"formatX(multiplier, 2, 1)\"\r\n      :amount-text=\"format(amount, 2)\"\r\n      :rate=\"rateOfChange\"\r\n    />\r\n    <div class=\"l-dim-row-multi-button-container c-modern-dim-tooltip-container\">\r\n      <div class=\"c-modern-dim-purchase-count-tooltip\">\r\n        {{ capTooltip }}\r\n      </div>\r\n      <PrimaryButton\r\n        :enabled=\"isAvailableForPurchase || (!isUnlocked && canUnlock)\"\r\n        class=\"o-primary-btn--buy-id o-primary-btn o-primary-btn--new o-primary-btn--buy-dim\"\r\n        :class=\"{ 'l-dim-row-small-text': hasLongText }\"\r\n        @click=\"buySingleInfinityDimension\"\r\n      >\r\n        {{ costDisplay }}\r\n      </PrimaryButton>\r\n      <PrimaryToggleButton\r\n        v-if=\"isAutobuyerUnlocked && !isEC8Running\"\r\n        v-model=\"isAutobuyerOn\"\r\n        class=\"o-primary-btn--id-auto\"\r\n        label=\"Auto:\"\r\n      />\r\n      <PrimaryButton\r\n        v-else\r\n        :enabled=\"isAvailableForPurchase\"\r\n        class=\"o-primary-btn--id-auto\"\r\n        @click=\"buyMaxInfinityDimension\"\r\n      >\r\n        Buy Max\r\n      </PrimaryButton>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-modern-dim-tooltip-container .c-modern-dim-purchase-count-tooltip {\r\n  position: absolute;\r\n  width: 20rem;\r\n  top: 50%;\r\n  font-size: 1.3rem;\r\n  line-height: 1.6rem;\r\n  color: white;\r\n  background: black;\r\n  border: 0.1rem solid var(--color-text);\r\n  border-radius: var(--var-border-width, 0.5rem);\r\n  /* Buttons are 40rem wide, tooltip is 20rem */\r\n  transform: translate(calc(-175% - 1rem), -50%);\r\n  padding: 0.5rem;\r\n  visibility: hidden;\r\n}\r\n</style>\r\n"]}]}