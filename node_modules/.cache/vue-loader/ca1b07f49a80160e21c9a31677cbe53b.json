{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\autobuyers\\MultipleAutobuyersBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\autobuyers\\MultipleAutobuyersBox.vue","mtime":1745241597054},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQXV0b2J1eWVyR3JvdXBUb2dnbGVMYWJlbCBmcm9tICIuL0F1dG9idXllckdyb3VwVG9nZ2xlTGFiZWwiOw0KaW1wb3J0IEF1dG9idXllckludGVydmFsTGFiZWwgZnJvbSAiLi9BdXRvYnV5ZXJJbnRlcnZhbExhYmVsIjsNCmltcG9ydCBTaW5nbGVBdXRvYnV5ZXJJblJvdyBmcm9tICIuL1NpbmdsZUF1dG9idXllckluUm93IjsNCg0KLy8gVGhpcyBjb21wb25lbnQgaXMgdGhlIGNvbnRhaW5lciBmb3IgYW4gaW5kaXZpZHVhbCBncm91cCBvZiBhdXRvYnV5ZXJzLCBzdWNoIGFzIGFsbCBvZiB0aGUgQUQgYXV0b2J1eWVycyBpbiB0aGUNCi8vIHNpbmdsZS1yb3cgbGF5b3V0IG9uY2UgdGhleSdyZSBhbGwgbWF4ZWQgYW5kIGhhdmUgdGhlIHNhbWUgcGFyYW1ldGVycw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiTXVsdGlwbGVBdXRvYnV5ZXJzQm94IiwNCiAgY29tcG9uZW50czogew0KICAgIEF1dG9idXllckludGVydmFsTGFiZWwsDQogICAgQXV0b2J1eWVyR3JvdXBUb2dnbGVMYWJlbCwNCiAgICBTaW5nbGVBdXRvYnV5ZXJJblJvdywNCiAgfSwNCiAgcHJvcHM6IHsNCiAgICB0eXBlOiB7DQogICAgICB0eXBlOiBGdW5jdGlvbiwNCiAgICAgIHJlcXVpcmVkOiB0cnVlLA0KICAgIH0sDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNvbnRpbnV1bUFjdGl2ZTogZmFsc2UsDQogICAgICBhbnlVbmxvY2tlZDogZmFsc2UsDQogICAgICBkaXNwbGF5TGFiZWxBc0dyb3VwOiBmYWxzZSwNCiAgICAgIHBhcmVudEFjdGl2ZTogZmFsc2UsDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBhdXRvYnV5ZXJzKCkgew0KICAgICAgcmV0dXJuIHRoaXMudHlwZS56ZXJvSW5kZXhlZDsNCiAgICB9LA0KICAgIG5hbWUoKSB7DQogICAgICByZXR1cm4gdGhpcy50eXBlLmdyb3VwTmFtZTsNCiAgICB9LA0KICAgIGVudHJ5Q291bnQoKSB7DQogICAgICByZXR1cm4gdGhpcy50eXBlLmVudHJ5Q291bnQ7DQogICAgfSwNCiAgICByb3dDb3VudCgpIHsNCiAgICAgIHJldHVybiBNYXRoLmNlaWwodGhpcy5lbnRyeUNvdW50IC8gOCk7DQogICAgfSwNCiAgICBlbnRyeUNvdW50UGVyUm93KCkgew0KICAgICAgcmV0dXJuIHRoaXMucm93Q291bnQgPT09IDEgPyB0aGlzLmVudHJ5Q291bnQgOiA1Ow0KICAgIH0sDQogICAgYm94U2l6ZSgpIHsNCiAgICAgIC8vIFRoZSAxJSByZWR1Y2VkIGZsZXgtYmFzaXMgaXMgdXNlZCB0byBwcmV2ZW50IHdyYXBwaW5nIGR1ZSB0byB0aGUgbWFyZ2lucy4NCiAgICAgIHJldHVybiBgZmxleDogMSAwICR7MTAwIC8gdGhpcy5lbnRyeUNvdW50UGVyUm93IC0gMX0lYDsNCiAgICB9LA0KICAgIGlzQURCb3goKSB7DQogICAgICByZXR1cm4gdGhpcy5uYW1lID09PSBBdXRvYnV5ZXIuYW50aW1hdHRlckRpbWVuc2lvbi5ncm91cE5hbWU7DQogICAgfSwNCiAgICBzaG93QXV0b2J1eWVycygpIHsNCiAgICAgIC8vIE9ubHkgZGlzcGxheSB0aGUgQW50aW1hdHRlciBEaW1lbnNpb24gQXV0b2J1eWVycyBpZiB0aGUgYnVsayBpcyB0aGUgc2FtZSBhbmQgdGhlcmUgYXJlIGFueSBvZiB0aGVtIHVubG9ja2VkDQogICAgICBpZiAodGhpcy5pc0FEQm94KSByZXR1cm4gdGhpcy5hbnlVbmxvY2tlZCAmJiB0aGlzLmRpc3BsYXlMYWJlbEFzR3JvdXA7DQogICAgICByZXR1cm4gdGhpcy5hbnlVbmxvY2tlZDsNCiAgICB9LA0KICB9LA0KICBtZXRob2RzOiB7DQogICAgdXBkYXRlKCkgew0KICAgICAgdGhpcy5jb250aW51dW1BY3RpdmUgPSBMYWl0ZWxhLmNvbnRpbnV1bUFjdGl2ZTsNCiAgICAgIGNvbnN0IHR5cGUgPSB0aGlzLnR5cGU7DQogICAgICB0aGlzLmFueVVubG9ja2VkID0gdHlwZS5hbnlVbmxvY2tlZDsNCiAgICAgIHRoaXMuZGlzcGxheUxhYmVsQXNHcm91cCA9ICh0eXBlLmFsbE1heGVkSW50ZXJ2YWwgPz8gdHJ1ZSkgJiYgKHR5cGUuYWxsVW5saW1pdGVkQnVsayA/PyB0cnVlKTsNCiAgICAgIHRoaXMucGFyZW50QWN0aXZlID0gdHlwZS5pc0FjdGl2ZTsNCiAgICB9LA0KICAgIHRvZ2dsZUdyb3VwKCkgew0KICAgICAgdGhpcy50eXBlLnRvZ2dsZSgpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["MultipleAutobuyersBox.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MultipleAutobuyersBox.vue","sourceRoot":"src/components/tabs/autobuyers","sourcesContent":["<script>\r\nimport AutobuyerGroupToggleLabel from \"./AutobuyerGroupToggleLabel\";\r\nimport AutobuyerIntervalLabel from \"./AutobuyerIntervalLabel\";\r\nimport SingleAutobuyerInRow from \"./SingleAutobuyerInRow\";\r\n\r\n// This component is the container for an individual group of autobuyers, such as all of the AD autobuyers in the\r\n// single-row layout once they're all maxed and have the same parameters\r\nexport default {\r\n  name: \"MultipleAutobuyersBox\",\r\n  components: {\r\n    AutobuyerIntervalLabel,\r\n    AutobuyerGroupToggleLabel,\r\n    SingleAutobuyerInRow,\r\n  },\r\n  props: {\r\n    type: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      continuumActive: false,\r\n      anyUnlocked: false,\r\n      displayLabelAsGroup: false,\r\n      parentActive: false,\r\n    };\r\n  },\r\n  computed: {\r\n    autobuyers() {\r\n      return this.type.zeroIndexed;\r\n    },\r\n    name() {\r\n      return this.type.groupName;\r\n    },\r\n    entryCount() {\r\n      return this.type.entryCount;\r\n    },\r\n    rowCount() {\r\n      return Math.ceil(this.entryCount / 8);\r\n    },\r\n    entryCountPerRow() {\r\n      return this.rowCount === 1 ? this.entryCount : 5;\r\n    },\r\n    boxSize() {\r\n      // The 1% reduced flex-basis is used to prevent wrapping due to the margins.\r\n      return `flex: 1 0 ${100 / this.entryCountPerRow - 1}%`;\r\n    },\r\n    isADBox() {\r\n      return this.name === Autobuyer.antimatterDimension.groupName;\r\n    },\r\n    showAutobuyers() {\r\n      // Only display the Antimatter Dimension Autobuyers if the bulk is the same and there are any of them unlocked\r\n      if (this.isADBox) return this.anyUnlocked && this.displayLabelAsGroup;\r\n      return this.anyUnlocked;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.continuumActive = Laitela.continuumActive;\r\n      const type = this.type;\r\n      this.anyUnlocked = type.anyUnlocked;\r\n      this.displayLabelAsGroup = (type.allMaxedInterval ?? true) && (type.allUnlimitedBulk ?? true);\r\n      this.parentActive = type.isActive;\r\n    },\r\n    toggleGroup() {\r\n      this.type.toggle();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <span\r\n    v-if=\"showAutobuyers && !(isADBox && continuumActive)\"\r\n    class=\"c-autobuyer-box-row\"\r\n  >\r\n    <AutobuyerGroupToggleLabel\r\n      :is-active=\"parentActive\"\r\n      :name=\"name\"\r\n      @click=\"toggleGroup\"\r\n    />\r\n    <div class=\"l-autobuyer-box__title\">\r\n      {{ name }}<br>Autobuyers\r\n      <!-- If we're showing as a group, then all attributes are the same and we can arbitrarily take the first one -->\r\n      <AutobuyerIntervalLabel\r\n        v-if=\"displayLabelAsGroup\"\r\n        :autobuyer=\"autobuyers[0]\"\r\n      />\r\n    </div>\r\n    <div class=\"l-autobuyer-box__autobuyers\">\r\n      <template\r\n        v-for=\"(autobuyer, id) in autobuyers\"\r\n      >\r\n        <SingleAutobuyerInRow\r\n          :key=\"id\"\r\n          class=\"l-autobuyer-box__autobuyers-internal\"\r\n          :style=\"boxSize\"\r\n          :autobuyer=\"autobuyer\"\r\n          :show-individual=\"!displayLabelAsGroup\"\r\n          :parent-disabled=\"!parentActive\"\r\n        />\r\n        <br\r\n          v-if=\"id % entryCountPerRow === entryCountPerRow\"\r\n          :key=\"id\"\r\n        >\r\n      </template>\r\n    </div>\r\n  </span>\r\n  <span\r\n    v-else-if=\"isADBox && continuumActive\"\r\n    class=\"c-autobuyer-box-row\"\r\n  >\r\n    Continuum replaces your Antimatter Dimension and Tickspeed Autobuyers, as your production multipliers\r\n    <br>\r\n    now automatically and continuously scale based on how many purchases you would have had otherwise.\r\n  </span>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}