{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\perks\\PerkPointLabel.vue?vue&type=style&index=0&id=60bb148d&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\perks\\PerkPointLabel.vue","mtime":1745241597417},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoucGVyay1zZXR0aW5ncyA+IGJ1dHRvbiB7DQogIG1hcmdpbi1yaWdodDogMXJlbTsNCn0NCg0KLmMtYnV0dG9uLXBlcmstbGF5b3V0IHsNCiAgd2lkdGg6IDMwcmVtOw0KICBtYXJnaW4tYm90dG9tOiAxcmVtOw0KfQ0KDQouYy1idXR0b24tcGh5c2ljcyB7DQogIHdpZHRoOiAyN3JlbTsNCiAgbWFyZ2luLWJvdHRvbTogMXJlbTsNCn0NCg=="},{"version":3,"sources":["PerkPointLabel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PerkPointLabel.vue","sourceRoot":"src/components/tabs/perks","sourcesContent":["<script>\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\n\r\nexport default {\r\n  name: \"PerkPointLabel\",\r\n  components: {\r\n    PrimaryButton\r\n  },\r\n  data() {\r\n    return {\r\n      pp: 0,\r\n      treeLayout: 0,\r\n      physicsEnabled: false,\r\n      physicsOverride: false,\r\n    };\r\n  },\r\n  computed: {\r\n    layoutText() {\r\n      return PerkLayouts[this.treeLayout].buttonText;\r\n    },\r\n    physicsText() {\r\n      const enableStr = (this.physicsOverride ?? this.physicsEnabled) ? \"Enabled\" : \"Disabled\";\r\n      return `${enableStr}${this.physicsOverride === undefined ? \"\" : \" (fixed)\"}`;\r\n    }\r\n  },\r\n  created() {\r\n    this.treeLayout = player.options.perkLayout;\r\n    this.physicsOverride = PerkLayouts[this.treeLayout].forcePhysics;\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.pp = Math.floor(Currency.perkPoints.value);\r\n      this.physicsEnabled = player.options.perkPhysicsEnabled;\r\n    },\r\n    togglePhysics() {\r\n      if (this.physicsOverride !== undefined) return;\r\n      player.options.perkPhysicsEnabled = !player.options.perkPhysicsEnabled;\r\n      PerkNetwork.setPhysics(player.options.perkPhysicsEnabled);\r\n    },\r\n    physicsClassObject() {\r\n      return {\r\n        \"o-primary-btn c-button-physics\": true,\r\n        \"o-primary-btn--disabled\": this.physicsOverride !== undefined\r\n      };\r\n    },\r\n    centerTree() {\r\n      PerkNetwork.resetPosition(true);\r\n    },\r\n    straightenEdges() {\r\n      PerkNetwork.setEdgeCurve(false);\r\n      PerkNetwork.setEdgeCurve(true);\r\n    },\r\n    cycleLayout() {\r\n      // Step forward once, but if this lands us on a locked layout, keep stepping until it doesn't\r\n      let newIndex = (player.options.perkLayout + 1) % PerkLayouts.length;\r\n      while (!(PerkLayouts[newIndex].isUnlocked?.() ?? true)) {\r\n        newIndex = (newIndex + 1) % PerkLayouts.length;\r\n      }\r\n\r\n      player.options.perkLayout = newIndex;\r\n      this.treeLayout = newIndex;\r\n      this.physicsOverride = PerkLayouts[this.treeLayout].forcePhysics;\r\n      PerkNetwork.currentLayout = PerkLayouts[this.treeLayout];\r\n      PerkNetwork.setPhysics(player.options.perkPhysicsEnabled);\r\n      PerkNetwork.moveToDefaultLayoutPositions(this.treeLayout);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"c-perk-tab__header\">\r\n    You have <span class=\"c-perk-tab__perk-points\">{{ format(pp, 2) }}</span> {{ pluralize(\"Perk Point\", pp) }}.\r\n    <br>\r\n    Perk choices are permanent and cannot be respecced.\r\n    <br>\r\n    Diamond-shaped perks also give Automator Points.\r\n    <br>\r\n    <div class=\"perk-settings\">\r\n      <PrimaryButton\r\n        class=\"o-primary-btn c-button-perk-layout\"\r\n        @click=\"cycleLayout\"\r\n      >\r\n        Perk Layout: {{ layoutText }}\r\n      </PrimaryButton>\r\n      <PrimaryButton\r\n        :class=\"physicsClassObject()\"\r\n        @click=\"togglePhysics\"\r\n      >\r\n        Physics: {{ physicsText }}\r\n      </PrimaryButton>\r\n      <br>\r\n      <PrimaryButton\r\n        class=\"o-primary-btn\"\r\n        @click=\"centerTree\"\r\n      >\r\n        Center Tree on START\r\n      </PrimaryButton>\r\n      <PrimaryButton\r\n        class=\"o-primary-btn\"\r\n        @click=\"straightenEdges\"\r\n      >\r\n        Straighten Edges\r\n      </PrimaryButton>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.perk-settings > button {\r\n  margin-right: 1rem;\r\n}\r\n\r\n.c-button-perk-layout {\r\n  width: 30rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.c-button-physics {\r\n  width: 27rem;\r\n  margin-bottom: 1rem;\r\n}\r\n</style>\r\n"]}]}