{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorModeSwitch.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorModeSwitch.vue","mtime":1745241597075},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBibG9ja2lmeVRleHRBdXRvbWF0b3IgfSBmcm9tICJAL2NvcmUvYXV0b21hdG9yIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiQXV0b21hdG9yTW9kZVN3aXRjaCIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGF1dG9tYXRvclR5cGU6IDAsDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBjdXJyZW50U2NyaXB0SUQ6IHsNCiAgICAgIGdldCgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuJHZpZXdNb2RlbC50YWJzLnJlYWxpdHkuYXV0b21hdG9yLmVkaXRvclNjcmlwdElEOw0KICAgICAgfSwNCiAgICAgIHNldCh2YWx1ZSkgew0KICAgICAgICB0aGlzLiR2aWV3TW9kZWwudGFicy5yZWFsaXR5LmF1dG9tYXRvci5lZGl0b3JTY3JpcHRJRCA9IHZhbHVlOw0KICAgICAgfQ0KICAgIH0sDQogICAgY3VycmVudFNjcmlwdENvbnRlbnQoKSB7DQogICAgICByZXR1cm4gcGxheWVyLnJlYWxpdHkuYXV0b21hdG9yLnNjcmlwdHNbdGhpcy5jdXJyZW50U2NyaXB0SURdLmNvbnRlbnQ7DQogICAgfSwNCiAgICBjdXJyZW50U2NyaXB0KCkgew0KICAgICAgcmV0dXJuIENvZGVNaXJyb3IuRG9jKHRoaXMuY3VycmVudFNjcmlwdENvbnRlbnQsICJhdXRvbWF0byIpLmdldFZhbHVlKCk7DQogICAgfSwNCiAgICBpc1RleHRBdXRvbWF0b3IoKSB7DQogICAgICByZXR1cm4gdGhpcy5hdXRvbWF0b3JUeXBlID09PSBBVVRPTUFUT1JfVFlQRS5URVhUOw0KICAgIH0sDQogICAgYXV0b21hdG9yTW9kZVRvb2x0aXAoKSB7DQogICAgICBpZiAodGhpcy5hdXRvbWF0b3JUeXBlID09PSBBVVRPTUFUT1JfVFlQRS5CTE9DSykgcmV0dXJuICJTd2l0Y2ggdG8gdGhlIHRleHQgZWRpdG9yIjsNCiAgICAgIHJldHVybiAiU3dpdGNoIHRvIHRoZSBibG9jayBlZGl0b3IiOw0KICAgIH0sDQogICAgdHV0b3JpYWxDbGFzcygpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgICJ0dXRvcmlhbC0tZ2xvdyI6IHVpLnZpZXcudHV0b3JpYWxTdGF0ZSA9PT0gVFVUT1JJQUxfU1RBVEUuQVVUT01BVE9SICYmIHVpLnZpZXcudHV0b3JpYWxBY3RpdmUNCiAgICAgIH07DQogICAgfSwNCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLm9uJChHQU1FX0VWRU5ULkdBTUVfTE9BRCwgKCkgPT4gdGhpcy5vbkdhbWVMb2FkKCkpOw0KICAgIHRoaXMub24kKEdBTUVfRVZFTlQuQVVUT01BVE9SX1NBVkVfQ0hBTkdFRCwgKCkgPT4gdGhpcy5vbkdhbWVMb2FkKCkpOw0KICAgIHRoaXMudXBkYXRlQ3VycmVudFNjcmlwdElEKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB1cGRhdGUoKSB7DQogICAgICB0aGlzLmF1dG9tYXRvclR5cGUgPSBwbGF5ZXIucmVhbGl0eS5hdXRvbWF0b3IudHlwZTsNCiAgICB9LA0KICAgIG9uR2FtZUxvYWQoKSB7DQogICAgICB0aGlzLnVwZGF0ZUN1cnJlbnRTY3JpcHRJRCgpOw0KICAgIH0sDQogICAgdXBkYXRlQ3VycmVudFNjcmlwdElEKCkgew0KICAgICAgY29uc3Qgc3RvcmVkU2NyaXB0cyA9IHBsYXllci5yZWFsaXR5LmF1dG9tYXRvci5zY3JpcHRzOw0KICAgICAgdGhpcy5jdXJyZW50U2NyaXB0SUQgPSBwbGF5ZXIucmVhbGl0eS5hdXRvbWF0b3Iuc3RhdGUuZWRpdG9yU2NyaXB0Ow0KICAgICAgLy8gVGhpcyBzaG91bGRuJ3QgaGFwcGVuIGlmIHRoaW5ncyBhcmUgbG9hZGVkIGluIHRoZSByaWdodCBvcmRlciwgYnV0IG1pZ2h0IGFzIHdlbGwgYmUgc3VyZS4NCiAgICAgIGlmIChzdG9yZWRTY3JpcHRzW3RoaXMuY3VycmVudFNjcmlwdElEXSA9PT0gdW5kZWZpbmVkKSB7DQogICAgICAgIHRoaXMuY3VycmVudFNjcmlwdElEID0gT2JqZWN0LmtleXMoc3RvcmVkU2NyaXB0cylbMF07DQogICAgICAgIHBsYXllci5yZWFsaXR5LmF1dG9tYXRvci5zdGF0ZS5lZGl0b3JTY3JpcHQgPSB0aGlzLmN1cnJlbnRTY3JpcHRJRDsNCiAgICAgICAgQXV0b21hdG9yRGF0YS5jbGVhclVuZG9EYXRhKCk7DQogICAgICB9DQogICAgICBpZiAoQmxvY2tBdXRvbWF0b3IuaGFzVW5wYXJzYWJsZUNvbW1hbmRzKHRoaXMuY3VycmVudFNjcmlwdCkgJiYNCiAgICAgICAgcGxheWVyLnJlYWxpdHkuYXV0b21hdG9yLnR5cGUgPT09IEFVVE9NQVRPUl9UWVBFLkJMT0NLKSB7DQogICAgICAgIE1vZGFsLm1lc3NhZ2Uuc2hvdyhgU29tZSBzY3JpcHQgY29tbWFuZHMgd2VyZSB1bnJlY29nbml6YWJsZSAtIGRlZmF1bHRpbmcgdG8gdGV4dCBlZGl0b3IuYCk7DQogICAgICAgIEF1dG9tYXRvckJhY2tlbmQuY2hhbmdlTW9kZXModGhpcy5jdXJyZW50U2NyaXB0SUQpOw0KICAgICAgfQ0KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gQmxvY2tBdXRvbWF0b3IudXBkYXRlRWRpdG9yKHRoaXMuY3VycmVudFNjcmlwdCkpOw0KICAgIH0sDQogICAgdG9nZ2xlQXV0b21hdG9yTW9kZSgpIHsNCiAgICAgIGNvbnN0IGN1cnJTY3JpcHQgPSBwbGF5ZXIucmVhbGl0eS5hdXRvbWF0b3Iuc2NyaXB0c1t0aGlzLmN1cnJlbnRTY3JpcHRJRF0uY29udGVudDsNCiAgICAgIGNvbnN0IGhhc1RleHRFcnJvcnMgPSB0aGlzLmF1dG9tYXRvclR5cGUgPT09IEFVVE9NQVRPUl9UWVBFLlRFWFQgJiYNCiAgICAgICAgKEJsb2NrQXV0b21hdG9yLmhhc1VucGFyc2FibGVDb21tYW5kcyhjdXJyU2NyaXB0KSB8fCBBdXRvbWF0b3JEYXRhLmN1cnJlbnRFcnJvcnMoKS5sZW5ndGggIT09IDApOw0KDQogICAgICBpZiAocGxheWVyLm9wdGlvbnMuY29uZmlybWF0aW9ucy5zd2l0Y2hBdXRvbWF0b3JNb2RlICYmIChoYXNUZXh0RXJyb3JzIHx8IEF1dG9tYXRvckJhY2tlbmQuaXNSdW5uaW5nKSkgew0KICAgICAgICBjb25zdCBibG9ja2lmaWVkID0gYmxvY2tpZnlUZXh0QXV0b21hdG9yKGN1cnJTY3JpcHQpOw0KDQogICAgICAgIC8vIFdlIGV4cGxpY2l0bHkgcGFzcyBpbiAwIGZvciBsb3N0QmxvY2tzIGlmIGNvbnZlcnRpbmcgZnJvbSBibG9jayB0byB0ZXh0IHNpbmNlIG5vdGhpbmcgaXMgZXZlciBsb3N0IGluIHRoYXQNCiAgICAgICAgLy8gY29udmVyc2lvbiBkaXJlY3Rpb24NCiAgICAgICAgY29uc3QgbG9zdEJsb2NrcyA9IHRoaXMuYXV0b21hdG9yVHlwZSA9PT0gQVVUT01BVE9SX1RZUEUuVEVYVA0KICAgICAgICAgID8gYmxvY2tpZmllZC52YWxpZGF0ZWRCbG9ja3MgLSBibG9ja2lmaWVkLnZpc2l0ZWRCbG9ja3MNCiAgICAgICAgICA6IDA7DQogICAgICAgIE1vZGFsLnN3aXRjaEF1dG9tYXRvckVkaXRvck1vZGUuc2hvdyh7DQogICAgICAgICAgY2FsbEJhY2s6ICgpID0+IHRoaXMuJHJlY29tcHV0ZSgiY3VycmVudFNjcmlwdENvbnRlbnQiKSwNCiAgICAgICAgICBsb3N0QmxvY2tzLA0KICAgICAgICB9KTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIEF1dG9tYXRvckJhY2tlbmQuY2hhbmdlTW9kZXModGhpcy5jdXJyZW50U2NyaXB0SUQpOw0KICAgICAgfQ0KICAgICAgQXV0b21hdG9yRGF0YS5jbGVhclVuZG9EYXRhKCk7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["AutomatorModeSwitch.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutomatorModeSwitch.vue","sourceRoot":"src/components/tabs/automator","sourcesContent":["<script>\r\nimport { blockifyTextAutomator } from \"@/core/automator\";\r\n\r\nexport default {\r\n  name: \"AutomatorModeSwitch\",\r\n  data() {\r\n    return {\r\n      automatorType: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    currentScriptID: {\r\n      get() {\r\n        return this.$viewModel.tabs.reality.automator.editorScriptID;\r\n      },\r\n      set(value) {\r\n        this.$viewModel.tabs.reality.automator.editorScriptID = value;\r\n      }\r\n    },\r\n    currentScriptContent() {\r\n      return player.reality.automator.scripts[this.currentScriptID].content;\r\n    },\r\n    currentScript() {\r\n      return CodeMirror.Doc(this.currentScriptContent, \"automato\").getValue();\r\n    },\r\n    isTextAutomator() {\r\n      return this.automatorType === AUTOMATOR_TYPE.TEXT;\r\n    },\r\n    automatorModeTooltip() {\r\n      if (this.automatorType === AUTOMATOR_TYPE.BLOCK) return \"Switch to the text editor\";\r\n      return \"Switch to the block editor\";\r\n    },\r\n    tutorialClass() {\r\n      return {\r\n        \"tutorial--glow\": ui.view.tutorialState === TUTORIAL_STATE.AUTOMATOR && ui.view.tutorialActive\r\n      };\r\n    },\r\n  },\r\n  created() {\r\n    this.on$(GAME_EVENT.GAME_LOAD, () => this.onGameLoad());\r\n    this.on$(GAME_EVENT.AUTOMATOR_SAVE_CHANGED, () => this.onGameLoad());\r\n    this.updateCurrentScriptID();\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.automatorType = player.reality.automator.type;\r\n    },\r\n    onGameLoad() {\r\n      this.updateCurrentScriptID();\r\n    },\r\n    updateCurrentScriptID() {\r\n      const storedScripts = player.reality.automator.scripts;\r\n      this.currentScriptID = player.reality.automator.state.editorScript;\r\n      // This shouldn't happen if things are loaded in the right order, but might as well be sure.\r\n      if (storedScripts[this.currentScriptID] === undefined) {\r\n        this.currentScriptID = Object.keys(storedScripts)[0];\r\n        player.reality.automator.state.editorScript = this.currentScriptID;\r\n        AutomatorData.clearUndoData();\r\n      }\r\n      if (BlockAutomator.hasUnparsableCommands(this.currentScript) &&\r\n        player.reality.automator.type === AUTOMATOR_TYPE.BLOCK) {\r\n        Modal.message.show(`Some script commands were unrecognizable - defaulting to text editor.`);\r\n        AutomatorBackend.changeModes(this.currentScriptID);\r\n      }\r\n      this.$nextTick(() => BlockAutomator.updateEditor(this.currentScript));\r\n    },\r\n    toggleAutomatorMode() {\r\n      const currScript = player.reality.automator.scripts[this.currentScriptID].content;\r\n      const hasTextErrors = this.automatorType === AUTOMATOR_TYPE.TEXT &&\r\n        (BlockAutomator.hasUnparsableCommands(currScript) || AutomatorData.currentErrors().length !== 0);\r\n\r\n      if (player.options.confirmations.switchAutomatorMode && (hasTextErrors || AutomatorBackend.isRunning)) {\r\n        const blockified = blockifyTextAutomator(currScript);\r\n\r\n        // We explicitly pass in 0 for lostBlocks if converting from block to text since nothing is ever lost in that\r\n        // conversion direction\r\n        const lostBlocks = this.automatorType === AUTOMATOR_TYPE.TEXT\r\n          ? blockified.validatedBlocks - blockified.visitedBlocks\r\n          : 0;\r\n        Modal.switchAutomatorEditorMode.show({\r\n          callBack: () => this.$recompute(\"currentScriptContent\"),\r\n          lostBlocks,\r\n        });\r\n      } else {\r\n        AutomatorBackend.changeModes(this.currentScriptID);\r\n      }\r\n      AutomatorData.clearUndoData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <button\r\n    v-tooltip=\"{\r\n      content: automatorModeTooltip,\r\n      hideOnTargetClick: false\r\n    }\"\r\n    :class=\"{\r\n      'c-slider-toggle-button': true,\r\n      'c-slider-toggle-button--right': isTextAutomator,\r\n      ...tutorialClass\r\n    }\"\r\n    @click=\"toggleAutomatorMode\"\r\n  >\r\n    <i class=\"fas fa-cubes\" />\r\n    <i class=\"fas fa-code\" />\r\n  </button>\r\n</template>\r\n\r\n<style scoped>\r\n.c-slider-toggle-button {\r\n  display: flex;\r\n  overflow: hidden;\r\n  position: relative;\r\n  align-items: center;\r\n  color: var(--color-automator-docs-font);\r\n  background-color: #626262;\r\n  border: var(--var-border-width, 0.2rem) solid #767676;\r\n  border-radius: var(--var-border-radius, 0.3rem);\r\n  margin: 0.3rem 0.4rem 0.3rem 0.5rem;\r\n  padding: 0.3rem 0;\r\n  cursor: pointer;\r\n}\r\n\r\n.c-slider-toggle-button .fas {\r\n  width: 3rem;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.c-slider-toggle-button::before {\r\n  content: \"\";\r\n  width: 3rem;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 0;\r\n  background-color: var(--color-automator-controls-inactive);\r\n  border-radius: var(--var-border-radius, 0.3rem);\r\n  transition: 0.3s ease all;\r\n}\r\n\r\n.c-slider-toggle-button--right::before {\r\n  left: 3rem;\r\n  background-color: var(--color-automator-controls-inactive);\r\n}\r\n\r\n.tutorial--glow::after {\r\n  z-index: 2;\r\n}\r\n</style>\r\n"]}]}