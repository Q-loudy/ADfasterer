{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\ChallengeBox.vue?vue&type=style&index=0&id=482e2a98&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\ChallengeBox.vue","mtime":1745241596761},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouby1jaGFsbGVuZ2UtYnRuLS1icm9rZW4gew0KICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1lbnNsYXZlZC0tYmFzZSk7DQogIGNsaXAtcGF0aDogcG9seWdvbigwJSAwJSwgMjUlIDIwJSwgOTUlIDAlLCAxMDAlIDI1JSwgODAlIDcwJSwgOTUlIDUwJSwgMTAwJSAxMDAlLCA0NSUgOTUlLA0KICAgIDY1JSA3MCUsIDE1JSA5NSUsIDAlIDQ1JSwgMTAlIDUwJSk7DQp9DQoNCi5vLWNoYWxsZW5nZS1idG4tLWJyb2tlbi1hbHQgew0KICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1lbnNsYXZlZC0tYmFzZSk7DQogIGNsaXAtcGF0aDogcG9seWdvbigwJSAwJSwgMTUlIDAlLCAyNSUgNDAlLCAzMCUgMCUsIDU1JSAwJSwgODUlIDMwJSwgNzUlIDAlLCAxMDAlIDAlLA0KICAgIDkwJSA0MCUsIDEwMCUgNjUlLCA5MCUgOTUlLCA0NSUgNDUlLCA3MCUgMTAwJSwgMjUlIDEwMCUsIDUlIDkwJSwgMTAlIDYwJSk7DQp9DQo="},{"version":3,"sources":["ChallengeBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ChallengeBox.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\nimport HintText from \"@/components/HintText\";\r\n\r\nexport default {\r\n  name: \"ChallengeBox\",\r\n  components: {\r\n    HintText\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    isUnlocked: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    isRunning: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    isCompleted: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    lockedAt: {\r\n      type: Decimal,\r\n      required: false,\r\n      default: undefined\r\n    },\r\n    overrideLabel: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      inC1: Boolean,\r\n      infinities: new Decimal(0),\r\n    };\r\n  },\r\n  computed: {\r\n    buttonClassObject() {\r\n      const challengeLocked = !(this.isCompleted || this.isRunning || this.inC1 || this.isUnlocked);\r\n      // It's important to disable the cursor for Normal Challenge 1, challenges that are running, or\r\n      // for challenges unable to be unlocked and not unlocked.\r\n      const challengeNotEnterable = !this.isUnlocked || this.isRunning || this.name === \"C1\";\r\n      return {\r\n        \"o-challenge-btn\": true,\r\n        \"o-challenge-btn--broken\": this.overrideLabel.length > 0 && this.name !== \"C10\",\r\n        \"o-challenge-btn--broken-alt\": this.overrideLabel.length > 0 && this.name === \"C10\",\r\n        \"o-challenge-btn--running\": this.isRunning || this.inC1,\r\n        \"o-challenge-btn--completed\": this.isCompleted && this.isUnlocked,\r\n        \"o-challenge-btn--unlocked\": !this.isCompleted && this.isUnlocked,\r\n        \"o-challenge-btn--locked\": challengeLocked,\r\n        \"o-challenge-btn--unenterable\": challengeNotEnterable,\r\n      };\r\n    },\r\n    buttonText() {\r\n      if (this.overrideLabel.length > 0) return this.overrideLabel;\r\n      if (this.isRunning || this.inC1) return \"Running\";\r\n      if (this.isCompleted) return \"Completed\";\r\n      if (this.isUnlocked) return \"Start\";\r\n      const lockedText = this.lockedAt === undefined\r\n        ? \"\"\r\n        : ` (${formatInt(this.infinities)}/${formatInt(this.lockedAt)})`;\r\n      return `Locked${lockedText}`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.inC1 = this.name === \"C1\" && !this.isCompleted && !Player.isInAntimatterChallenge;\r\n      this.infinities.copyFrom(Currency.infinities);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"c-challenge-box l-challenge-box\">\r\n    <HintText\r\n      type=\"challenges\"\r\n      class=\"l-hint-text--challenge\"\r\n    >\r\n      {{ name }}\r\n    </HintText>\r\n    <slot name=\"top\" />\r\n    <div class=\"l-challenge-box__fill\" />\r\n    <button\r\n      :class=\"buttonClassObject\"\r\n      @click=\"$emit('start')\"\r\n    >\r\n      {{ buttonText }}\r\n    </button>\r\n    <slot name=\"bottom\" />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.o-challenge-btn--broken {\r\n  background: var(--color-enslaved--base);\r\n  clip-path: polygon(0% 0%, 25% 20%, 95% 0%, 100% 25%, 80% 70%, 95% 50%, 100% 100%, 45% 95%,\r\n    65% 70%, 15% 95%, 0% 45%, 10% 50%);\r\n}\r\n\r\n.o-challenge-btn--broken-alt {\r\n  background: var(--color-enslaved--base);\r\n  clip-path: polygon(0% 0%, 15% 0%, 25% 40%, 30% 0%, 55% 0%, 85% 30%, 75% 0%, 100% 0%,\r\n    90% 40%, 100% 65%, 90% 95%, 45% 45%, 70% 100%, 25% 100%, 5% 90%, 10% 60%);\r\n}\r\n</style>\r\n"]}]}