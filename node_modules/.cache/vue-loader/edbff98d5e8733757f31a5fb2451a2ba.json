{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\sidebar\\SelectedEffectToggle.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\sidebar\\SelectedEffectToggle.vue","mtime":1745241597363},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJTZWxlY3RlZEVmZmVjdFRvZ2dsZSIsDQogIHByb3BzOiB7DQogICAgZWZmZWN0OiB7DQogICAgICB0eXBlOiBPYmplY3QsDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0sDQogICAgZ2x5cGhUeXBlOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgaXNBY3RpdmU6IGZhbHNlLA0KICAgICAgbm9FeGNsdWRlOiBmYWxzZSwNCiAgICAgIGVmZmFyaWdTZXR0aW5nczogew0KICAgICAgICBlZmZhcmlncm06IGZhbHNlLA0KICAgICAgICBlZmZhcmlnZ2x5cGg6IGZhbHNlDQogICAgICB9DQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBjb2xvcigpIHsNCiAgICAgIHJldHVybiBHbHlwaEFwcGVhcmFuY2VIYW5kbGVyLmdldEJvcmRlckNvbG9yKHRoaXMuZ2x5cGhUeXBlKTsNCiAgICB9LA0KICAgIGRlc2NyaXB0aW9uKCkgew0KICAgICAgcmV0dXJuIHRoaXMuZWZmZWN0LmdlbmVyaWNEZXNjOw0KICAgIH0sDQogICAgY2xhc3NPYmplY3QoKSB7DQogICAgICByZXR1cm4gdGhpcy5pc0FjdGl2ZSA/ICJjLWF1dG8tc2FjLXR5cGUtdGFiX19lZmZlY3QtZGVzYy0tYWN0aXZlIiA6ICJjLWF1dG8tc2FjLXR5cGUtdGFiX19lZmZlY3QtZGVzYy0taW5hY3RpdmUiOw0KICAgIH0sDQogICAgLy8gVGhpcyBpcyBoYXJkY29kZWQgaGVyZSBzaW5jZSB0aGVyZSBpcyBvbmx5IG9uZSBjYXNlIGV2ZXIsIGFuZCB0aGF0IGFkZGluZyBnZW5lcmljIGR5bmFtaWMgc3VwcG9ydCB0byBtdWx0aXBsZQ0KICAgIC8vIHBhaXJzL2dyb3VwcyBvZiBlZmZlY3RzIGlzIGJvdGggb3V0IG9mIGRlc2lnbiBzY29wZSBhbmQgYW4gdW5hY2NlcHRhYmxlIHBlcmZvcm1hbmNlIGhpdCB0byBhbXBsaWZpZWQgcmVhbGl0aWVzDQogICAgZXhjbHVzaW9uVG9vbHRpcCgpIHsNCiAgICAgIGlmICh0aGlzLm5vRXhjbHVkZSkgcmV0dXJuICIiOw0KDQogICAgICBjb25zdCBlZmZhcmlnU2V0dGluZ3MgPSB0aGlzLmVmZmFyaWdTZXR0aW5nczsNCiAgICAgIGlmIChlZmZhcmlnU2V0dGluZ3MuUk0gJiYgZWZmYXJpZ1NldHRpbmdzLmdseXBoICYmDQogICAgICAgICh0aGlzLmVmZmVjdC5pZCA9PT0gImVmZmFyaWdybSIgfHwgdGhpcy5lZmZlY3QuaWQgPT09ICJlZmZhcmlnZ2x5cGgiKSkgew0KICAgICAgICByZXR1cm4gIlJNIG11bHRpcGxpZXIgYW5kIEdseXBoIGluc3RhYmlsaXR5IGNhbm5vdCBvY2N1ciB0b2dldGhlciBvbiB0aGUgc2FtZSBHbHlwaCEiOw0KICAgICAgfQ0KICAgICAgaWYgKHRoaXMuZWZmZWN0LmlkID09PSAiZWZmYXJpZ3JtIiAmJiBlZmZhcmlnU2V0dGluZ3MuZ2x5cGgpIHsNCiAgICAgICAgcmV0dXJuICJUaGlzIGVmZmVjdCBpcyBtdXR1YWxseSBleGNsdXNpdmUgd2l0aCBHbHlwaCBpbnN0YWJpbGl0eSEiOw0KICAgICAgfQ0KICAgICAgaWYgKHRoaXMuZWZmZWN0LmlkID09PSAiZWZmYXJpZ2dseXBoIiAmJiBlZmZhcmlnU2V0dGluZ3MuUk0pIHsNCiAgICAgICAgcmV0dXJuICJUaGlzIGVmZmVjdCBpcyBtdXR1YWxseSBleGNsdXNpdmUgd2l0aCBSTSBtdWx0aXBsaWVyISI7DQogICAgICB9DQogICAgICByZXR1cm4gIiI7DQogICAgfSwNCiAgICBpc0V4Y2x1ZGVkKCkgew0KICAgICAgcmV0dXJuIHRoaXMuZXhjbHVzaW9uVG9vbHRpcCAhPT0gIiI7DQogICAgfSwNCiAgICBlZmZhcmlnQml0cygpIHsNCiAgICAgIGNvbnN0IGVmZmVjdERCID0gR2FtZURhdGFiYXNlLnJlYWxpdHkuZ2x5cGhFZmZlY3RzOw0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgUk06IGVmZmVjdERCLmVmZmFyaWdybS5iaXRtYXNrSW5kZXgsDQogICAgICAgIGdseXBoOiBlZmZlY3REQi5lZmZhcmlnZ2x5cGguYml0bWFza0luZGV4LA0KICAgICAgfTsNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB1cGRhdGUoKSB7DQogICAgICB0aGlzLmlzQWN0aXZlID0gKEF1dG9HbHlwaFByb2Nlc3Nvci50eXBlc1t0aGlzLmdseXBoVHlwZV0uc3BlY2lmaWVkTWFzayAmICgxIDw8IHRoaXMuZWZmZWN0LmJpdG1hc2tJbmRleCkpICE9PSAwOw0KICAgICAgY29uc3QgZWZmYXJpZ01hc2sgPSBBdXRvR2x5cGhQcm9jZXNzb3IudHlwZXMuZWZmYXJpZy5zcGVjaWZpZWRNYXNrOw0KICAgICAgdGhpcy5lZmZhcmlnU2V0dGluZ3MgPSB7DQogICAgICAgIFJNOiAoZWZmYXJpZ01hc2sgJiAoMSA8PCB0aGlzLmVmZmFyaWdCaXRzLlJNKSkgIT09IDAsDQogICAgICAgIGdseXBoOiAoZWZmYXJpZ01hc2sgJiAoMSA8PCB0aGlzLmVmZmFyaWdCaXRzLmdseXBoKSkgIT09IDANCiAgICAgIH07DQogICAgICB0aGlzLm5vRXhjbHVkZSA9IFJhLnVubG9ja3MuZ2x5cGhFZmZlY3RDb3VudC5jYW5CZUFwcGxpZWQ7DQogICAgfSwNCiAgICB0b2dnbGVTZWxlY3Rpb24oKSB7DQogICAgICBBdXRvR2x5cGhQcm9jZXNzb3IudHlwZXNbdGhpcy5nbHlwaFR5cGVdLnNwZWNpZmllZE1hc2sgXj0gMSA8PCB0aGlzLmVmZmVjdC5iaXRtYXNrSW5kZXg7DQogICAgfSwNCiAgICBzZXRFZmZlY3RDb3VudChldmVudCkgew0KICAgICAgY29uc3QgaW5wdXRWYWx1ZSA9IGV2ZW50LnRhcmdldC52YWx1ZTsNCiAgICAgIGlmICghaXNOYU4oaW5wdXRWYWx1ZSkpIHsNCiAgICAgICAgdGhpcy5hdXRvU2FjcmlmaWNlU2V0dGluZ3MuZWZmZWN0Q291bnQgPSBNYXRoLmNsYW1wKGlucHV0VmFsdWUsIDAsIDgpOw0KICAgICAgfQ0KICAgIH0sDQogIH0NCn07DQo="},{"version":3,"sources":["SelectedEffectToggle.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SelectedEffectToggle.vue","sourceRoot":"src/components/tabs/glyphs/sidebar","sourcesContent":["<script>\r\nexport default {\r\n  name: \"SelectedEffectToggle\",\r\n  props: {\r\n    effect: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    glyphType: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isActive: false,\r\n      noExclude: false,\r\n      effarigSettings: {\r\n        effarigrm: false,\r\n        effarigglyph: false\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    color() {\r\n      return GlyphAppearanceHandler.getBorderColor(this.glyphType);\r\n    },\r\n    description() {\r\n      return this.effect.genericDesc;\r\n    },\r\n    classObject() {\r\n      return this.isActive ? \"c-auto-sac-type-tab__effect-desc--active\" : \"c-auto-sac-type-tab__effect-desc--inactive\";\r\n    },\r\n    // This is hardcoded here since there is only one case ever, and that adding generic dynamic support to multiple\r\n    // pairs/groups of effects is both out of design scope and an unacceptable performance hit to amplified realities\r\n    exclusionTooltip() {\r\n      if (this.noExclude) return \"\";\r\n\r\n      const effarigSettings = this.effarigSettings;\r\n      if (effarigSettings.RM && effarigSettings.glyph &&\r\n        (this.effect.id === \"effarigrm\" || this.effect.id === \"effarigglyph\")) {\r\n        return \"RM multiplier and Glyph instability cannot occur together on the same Glyph!\";\r\n      }\r\n      if (this.effect.id === \"effarigrm\" && effarigSettings.glyph) {\r\n        return \"This effect is mutually exclusive with Glyph instability!\";\r\n      }\r\n      if (this.effect.id === \"effarigglyph\" && effarigSettings.RM) {\r\n        return \"This effect is mutually exclusive with RM multiplier!\";\r\n      }\r\n      return \"\";\r\n    },\r\n    isExcluded() {\r\n      return this.exclusionTooltip !== \"\";\r\n    },\r\n    effarigBits() {\r\n      const effectDB = GameDatabase.reality.glyphEffects;\r\n      return {\r\n        RM: effectDB.effarigrm.bitmaskIndex,\r\n        glyph: effectDB.effarigglyph.bitmaskIndex,\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isActive = (AutoGlyphProcessor.types[this.glyphType].specifiedMask & (1 << this.effect.bitmaskIndex)) !== 0;\r\n      const effarigMask = AutoGlyphProcessor.types.effarig.specifiedMask;\r\n      this.effarigSettings = {\r\n        RM: (effarigMask & (1 << this.effarigBits.RM)) !== 0,\r\n        glyph: (effarigMask & (1 << this.effarigBits.glyph)) !== 0\r\n      };\r\n      this.noExclude = Ra.unlocks.glyphEffectCount.canBeApplied;\r\n    },\r\n    toggleSelection() {\r\n      AutoGlyphProcessor.types[this.glyphType].specifiedMask ^= 1 << this.effect.bitmaskIndex;\r\n    },\r\n    setEffectCount(event) {\r\n      const inputValue = event.target.value;\r\n      if (!isNaN(inputValue)) {\r\n        this.autoSacrificeSettings.effectCount = Math.clamp(inputValue, 0, 8);\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-tooltip=\"exclusionTooltip\"\r\n    :class=\"classObject\"\r\n    @click=\"toggleSelection()\"\r\n  >\r\n    <span>\r\n      <i\r\n        v-if=\"isExcluded\"\r\n        class=\"fas fa-exclamation l-dock l-dock-left\"\r\n      />\r\n      {{ description }}\r\n      <i\r\n        v-if=\"isExcluded\"\r\n        class=\"fas fa-exclamation l-dock l-dock-right\"\r\n      />\r\n    </span>\r\n    <i\r\n      v-if=\"isActive\"\r\n      class=\"fas fa-check c-selected-effect-toggle-indicator--active\"\r\n      :style=\"{ 'background-color': color }\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-selected-effect-toggle-indicator--active {\r\n  position: absolute;\r\n\r\n  /* -0.1rem = -1px, needed because CSS renders a black border between the check and the border of the selector\r\n  otherwise */\r\n  top: -0.1rem;\r\n  right: -0.1rem;\r\n  font-size: 1rem;\r\n  color: black;\r\n  text-shadow: none;\r\n  border-radius: 0 var(--var-border-radius, 0.4rem);\r\n  padding: 0.2rem;\r\n}\r\n\r\n.l-dock {\r\n  position: absolute;\r\n  top: 50%;\r\n  margin: 0 4rem;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.l-dock-left {\r\n  left: 0;\r\n}\r\n\r\n.l-dock-right {\r\n  right: 0;\r\n}\r\n</style>\r\n"]}]}