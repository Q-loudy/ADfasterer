{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorScriptDropdownEntryList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorScriptDropdownEntryList.vue","mtime":1745241597090},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJBdXRvbWF0b3JTY3JpcHREcm9wZG93bkVudHJ5TGlzdCIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGlzQmxvY2s6IGZhbHNlLA0KICAgICAgY3VycmVudFNjcmlwdElEOiAwLA0KICAgICAgcnVubmluZ1NjcmlwdElEOiAwLA0KICAgICAgaXNSdW5uaW5nOiBmYWxzZSwNCiAgICAgIGlzUGF1c2VkOiBmYWxzZSwNCiAgICAgIGNhbk1ha2VOZXdTY3JpcHQ6IGZhbHNlLA0KICAgIH07DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgc2NyaXB0cygpIHsNCiAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHBsYXllci5yZWFsaXR5LmF1dG9tYXRvci5zY3JpcHRzKS5tYXAoc2NyaXB0ID0+ICh7DQogICAgICAgIGlkOiBzY3JpcHQuaWQsDQogICAgICAgIG5hbWU6IHNjcmlwdC5uYW1lLA0KICAgICAgfSkpOw0KICAgIH0sDQogICAgY3VycmVudFNjcmlwdENvbnRlbnQoKSB7DQogICAgICByZXR1cm4gcGxheWVyLnJlYWxpdHkuYXV0b21hdG9yLnNjcmlwdHNbdGhpcy5jdXJyZW50U2NyaXB0SURdLmNvbnRlbnQ7DQogICAgfSwNCiAgICBjdXJyZW50U2NyaXB0KCkgew0KICAgICAgcmV0dXJuIENvZGVNaXJyb3IuRG9jKHRoaXMuY3VycmVudFNjcmlwdENvbnRlbnQsICJhdXRvbWF0byIpLmdldFZhbHVlKCk7DQogICAgfSwNCiAgICBzY3JpcHRDb3VudCgpIHsNCiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhwbGF5ZXIucmVhbGl0eS5hdXRvbWF0b3Iuc2NyaXB0cykubGVuZ3RoOw0KICAgIH0sDQogICAgbWF4U2NyaXB0Q291bnQoKSB7DQogICAgICByZXR1cm4gQXV0b21hdG9yRGF0YS5NQVhfQUxMT1dFRF9TQ1JJUFRfQ09VTlQ7DQogICAgfSwNCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmN1cnJlbnRTY3JpcHRJRCA9IHBsYXllci5yZWFsaXR5LmF1dG9tYXRvci5zdGF0ZS5lZGl0b3JTY3JpcHQ7DQogICAgLy8gRGVsZXRlZCBzY3JpcHQgbmFtZXMgcG90ZW50aWFsbHkgcGVyc2lzdCB3aXRoaW4gdGhlIHZ1ZSBjb21wb25lbnQgdW5sZXNzIHdlIGNsZWFyIHRoZW0NCiAgICB0aGlzLm9uJChHQU1FX0VWRU5ULkFVVE9NQVRPUl9TQVZFX0NIQU5HRUQsICgpID0+IHsNCiAgICAgIHRoaXMuJHJlY29tcHV0ZSgic2NyaXB0cyIpOw0KICAgIH0pOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgdXBkYXRlKCkgew0KICAgICAgdGhpcy5pc0Jsb2NrID0gcGxheWVyLnJlYWxpdHkuYXV0b21hdG9yLnR5cGUgPT09IEFVVE9NQVRPUl9UWVBFLkJMT0NLOw0KICAgICAgdGhpcy5ydW5uaW5nU2NyaXB0SUQgPSBBdXRvbWF0b3JCYWNrZW5kLnN0YXRlLnRvcExldmVsU2NyaXB0Ow0KICAgICAgdGhpcy5pc1J1bm5pbmcgPSBBdXRvbWF0b3JCYWNrZW5kLmlzUnVubmluZzsNCiAgICAgIHRoaXMuaXNQYXVzZWQgPSBBdXRvbWF0b3JCYWNrZW5kLmlzT24gJiYgIUF1dG9tYXRvckJhY2tlbmQuaXNSdW5uaW5nOw0KICAgICAgdGhpcy5jYW5NYWtlTmV3U2NyaXB0ID0gdGhpcy5zY3JpcHRDb3VudCA8IHRoaXMubWF4U2NyaXB0Q291bnQ7DQogICAgfSwNCiAgICBjaGFuZ2VTY3JpcHRJRChuZXdJRCkgew0KICAgICAgdGhpcy5jdXJyZW50U2NyaXB0SUQgPSBuZXdJRDsNCiAgICAgIHBsYXllci5yZWFsaXR5LmF1dG9tYXRvci5zdGF0ZS5lZGl0b3JTY3JpcHQgPSBuZXdJRDsNCiAgICAgIHRoaXMudXBkYXRlQ3VycmVudFNjcmlwdElEKCk7DQogICAgfSwNCiAgICBjcmVhdGVOZXdTY3JpcHQoKSB7DQogICAgICBjb25zdCBuZXdTY3JpcHQgPSBBdXRvbWF0b3JCYWNrZW5kLm5ld1NjcmlwdCgpOw0KICAgICAgcGxheWVyLnJlYWxpdHkuYXV0b21hdG9yLnN0YXRlLmVkaXRvclNjcmlwdCA9IG5ld1NjcmlwdC5pZDsNCiAgICAgIHRoaXMudXBkYXRlQ3VycmVudFNjcmlwdElEKCk7DQogICAgICB0aGlzLiRwYXJlbnQuJHBhcmVudC5yZW5hbWUoKTsNCiAgICB9LA0KICAgIHVwZGF0ZUN1cnJlbnRTY3JpcHRJRCgpIHsNCiAgICAgIGNvbnN0IHN0b3JlZFNjcmlwdHMgPSBwbGF5ZXIucmVhbGl0eS5hdXRvbWF0b3Iuc2NyaXB0czsNCiAgICAgIHRoaXMuY3VycmVudFNjcmlwdElEID0gcGxheWVyLnJlYWxpdHkuYXV0b21hdG9yLnN0YXRlLmVkaXRvclNjcmlwdDsNCiAgICAgIC8vIFRoaXMgc2hvdWxkbid0IGhhcHBlbiBpZiB0aGluZ3MgYXJlIGxvYWRlZCBpbiB0aGUgcmlnaHQgb3JkZXIsIGJ1dCBtaWdodCBhcyB3ZWxsIGJlIHN1cmUuDQogICAgICBpZiAoc3RvcmVkU2NyaXB0c1t0aGlzLmN1cnJlbnRTY3JpcHRJRF0gPT09IHVuZGVmaW5lZCkgew0KICAgICAgICB0aGlzLmN1cnJlbnRTY3JpcHRJRCA9IE51bWJlcihPYmplY3Qua2V5cyhzdG9yZWRTY3JpcHRzKVswXSk7DQogICAgICAgIHBsYXllci5yZWFsaXR5LmF1dG9tYXRvci5zdGF0ZS5lZGl0b3JTY3JpcHQgPSB0aGlzLmN1cnJlbnRTY3JpcHRJRDsNCiAgICAgIH0NCiAgICAgIGlmICh0aGlzLmlzQmxvY2spIHRoaXMuJG5leHRUaWNrKCgpID0+IEJsb2NrQXV0b21hdG9yLnVwZGF0ZUVkaXRvcih0aGlzLmN1cnJlbnRTY3JpcHQpKTsNCiAgICAgIHRoaXMuJHBhcmVudC5vcGVuUmVxdWVzdCA9IGZhbHNlOw0KICAgICAgQXV0b21hdG9yRGF0YS5jbGVhclVuZG9EYXRhKCk7DQogICAgfSwNCiAgICBkcm9wZG93bkxhYmVsKHNjcmlwdCkgew0KICAgICAgY29uc3QgbGFiZWxzID0gW107DQogICAgICBpZiAoc2NyaXB0LmlkID09PSB0aGlzLmN1cnJlbnRTY3JpcHRJRCkgbGFiZWxzLnB1c2goInZpZXdpbmciKTsNCiAgICAgIGlmIChzY3JpcHQuaWQgPT09IHRoaXMucnVubmluZ1NjcmlwdElEKSB7DQogICAgICAgIGlmICh0aGlzLmlzUnVubmluZykgbGFiZWxzLnB1c2goInJ1bm5pbmciKTsNCiAgICAgICAgZWxzZSBpZiAodGhpcy5pc1BhdXNlZCkgbGFiZWxzLnB1c2goInBhdXNlZCIpOw0KICAgICAgfQ0KICAgICAgY29uc3Qgc3RhdHVzID0gbGFiZWxzLmxlbmd0aCA/IGAoJHtsYWJlbHMuam9pbigiLCAiKS5jYXBpdGFsaXplKCl9KWAgOiAiIjsNCiAgICAgIHJldHVybiBgJHtzY3JpcHQubmFtZX0gJHtzdGF0dXN9YDsNCiAgICB9LA0KICAgIGxhYmVsQ2xhc3NPYmplY3QoaWQpIHsNCiAgICAgIGNvbnN0IGhpZ2hsaWdodFJ1bm5pbmcgPSB0aGlzLmlzUnVubmluZyB8fCB0aGlzLmlzUGF1c2VkOw0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgImMtYXV0b21hdG9yLWRvY3Mtc2NyaXB0LXNlbGVjdCI6IHRydWUsDQogICAgICAgICJsLWFjdGl2ZS1zY3JpcHQiOiBpZCA9PT0gdGhpcy5ydW5uaW5nU2NyaXB0SUQgJiYgaGlnaGxpZ2h0UnVubmluZywNCiAgICAgICAgImwtc2VsZWN0ZWQtc2NyaXB0IjogaWQgPT09IHRoaXMuY3VycmVudFNjcmlwdElEICYmIChpZCAhPT0gdGhpcy5ydW5uaW5nU2NyaXB0SUQgfHwgIWhpZ2hsaWdodFJ1bm5pbmcpLA0KICAgICAgfTsNCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["AutomatorScriptDropdownEntryList.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutomatorScriptDropdownEntryList.vue","sourceRoot":"src/components/tabs/automator","sourcesContent":["<script>\r\nexport default {\r\n  name: \"AutomatorScriptDropdownEntryList\",\r\n  data() {\r\n    return {\r\n      isBlock: false,\r\n      currentScriptID: 0,\r\n      runningScriptID: 0,\r\n      isRunning: false,\r\n      isPaused: false,\r\n      canMakeNewScript: false,\r\n    };\r\n  },\r\n  computed: {\r\n    scripts() {\r\n      return Object.values(player.reality.automator.scripts).map(script => ({\r\n        id: script.id,\r\n        name: script.name,\r\n      }));\r\n    },\r\n    currentScriptContent() {\r\n      return player.reality.automator.scripts[this.currentScriptID].content;\r\n    },\r\n    currentScript() {\r\n      return CodeMirror.Doc(this.currentScriptContent, \"automato\").getValue();\r\n    },\r\n    scriptCount() {\r\n      return Object.keys(player.reality.automator.scripts).length;\r\n    },\r\n    maxScriptCount() {\r\n      return AutomatorData.MAX_ALLOWED_SCRIPT_COUNT;\r\n    },\r\n  },\r\n  created() {\r\n    this.currentScriptID = player.reality.automator.state.editorScript;\r\n    // Deleted script names potentially persist within the vue component unless we clear them\r\n    this.on$(GAME_EVENT.AUTOMATOR_SAVE_CHANGED, () => {\r\n      this.$recompute(\"scripts\");\r\n    });\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isBlock = player.reality.automator.type === AUTOMATOR_TYPE.BLOCK;\r\n      this.runningScriptID = AutomatorBackend.state.topLevelScript;\r\n      this.isRunning = AutomatorBackend.isRunning;\r\n      this.isPaused = AutomatorBackend.isOn && !AutomatorBackend.isRunning;\r\n      this.canMakeNewScript = this.scriptCount < this.maxScriptCount;\r\n    },\r\n    changeScriptID(newID) {\r\n      this.currentScriptID = newID;\r\n      player.reality.automator.state.editorScript = newID;\r\n      this.updateCurrentScriptID();\r\n    },\r\n    createNewScript() {\r\n      const newScript = AutomatorBackend.newScript();\r\n      player.reality.automator.state.editorScript = newScript.id;\r\n      this.updateCurrentScriptID();\r\n      this.$parent.$parent.rename();\r\n    },\r\n    updateCurrentScriptID() {\r\n      const storedScripts = player.reality.automator.scripts;\r\n      this.currentScriptID = player.reality.automator.state.editorScript;\r\n      // This shouldn't happen if things are loaded in the right order, but might as well be sure.\r\n      if (storedScripts[this.currentScriptID] === undefined) {\r\n        this.currentScriptID = Number(Object.keys(storedScripts)[0]);\r\n        player.reality.automator.state.editorScript = this.currentScriptID;\r\n      }\r\n      if (this.isBlock) this.$nextTick(() => BlockAutomator.updateEditor(this.currentScript));\r\n      this.$parent.openRequest = false;\r\n      AutomatorData.clearUndoData();\r\n    },\r\n    dropdownLabel(script) {\r\n      const labels = [];\r\n      if (script.id === this.currentScriptID) labels.push(\"viewing\");\r\n      if (script.id === this.runningScriptID) {\r\n        if (this.isRunning) labels.push(\"running\");\r\n        else if (this.isPaused) labels.push(\"paused\");\r\n      }\r\n      const status = labels.length ? `(${labels.join(\", \").capitalize()})` : \"\";\r\n      return `${script.name} ${status}`;\r\n    },\r\n    labelClassObject(id) {\r\n      const highlightRunning = this.isRunning || this.isPaused;\r\n      return {\r\n        \"c-automator-docs-script-select\": true,\r\n        \"l-active-script\": id === this.runningScriptID && highlightRunning,\r\n        \"l-selected-script\": id === this.currentScriptID && (id !== this.runningScriptID || !highlightRunning),\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div :key=\"scripts.length\">\r\n    <div\r\n      v-for=\"script in scripts\"\r\n      :key=\"script.id\"\r\n      class=\"l-script-option c-script-option-hover-effect\"\r\n      :class=\"labelClassObject(script.id)\"\r\n      @click=\"changeScriptID(script.id)\"\r\n    >\r\n      {{ dropdownLabel(script) }}\r\n    </div>\r\n    <div\r\n      v-if=\"canMakeNewScript\"\r\n      class=\"l-create-script c-automator-docs-script-select c-script-option-hover-effect\"\r\n      @click=\"createNewScript()\"\r\n    >\r\n      <i>Create a new script (You have {{ formatInt(scriptCount) }} / {{ formatInt(maxScriptCount) }})</i>\r\n    </div>\r\n    <div\r\n      v-else\r\n      class=\"l-create-script c-automator-docs-script-select l-max-scripts\"\r\n    >\r\n      <i>You can only have {{ formatInt(maxScriptCount) }} scripts!</i>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-script-option {\r\n  border-radius: 0;\r\n  border-bottom: 0;\r\n}\r\n\r\n.c-script-option-hover-effect:hover {\r\n  filter: brightness(70%);\r\n  background-color: var(--color-automator-active-line-background);\r\n}\r\n\r\n.l-script-option:first-child {\r\n  border-radius: var(--var-border-radius, 0.5rem) var(--var-border-radius, 0.5rem) 0 0;\r\n}\r\n\r\n.l-create-script {\r\n  border-radius: 0 0 var(--var-border-radius, 0.5rem) var(--var-border-radius, 0.5rem);\r\n}\r\n\r\n.l-active-script {\r\n  background-color: var(--color-automator-controls-active);\r\n}\r\n\r\n.l-selected-script {\r\n  background-color: var(--color-automator-active-line-outline);\r\n}\r\n\r\n.l-max-scripts {\r\n  background-color: var(--color-automator-error-background);\r\n  cursor: auto;\r\n}\r\n</style>\r\n"]}]}