{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\options-gameplay\\OptionsGameplayTab.vue?vue&type=style&index=0&id=43fe430a&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\options-gameplay\\OptionsGameplayTab.vue","mtime":1745241597394},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sLXRvZ2dsZS1idXR0b24gew0KICBmb250LXNpemU6IDEycHg7DQp9DQo="},{"version":3,"sources":["OptionsGameplayTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLA;AACA;AACA","file":"OptionsGameplayTab.vue","sourceRoot":"src/components/tabs/options-gameplay","sourcesContent":["<script>\r\nimport OpenModalHotkeysButton from \"@/components/OpenModalHotkeysButton\";\r\nimport OptionsButton from \"@/components/OptionsButton\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\nimport SliderComponent from \"@/components/SliderComponent\";\r\n\r\nexport default {\r\n  name: \"OptionsGameplayTab\",\r\n  components: {\r\n    OpenModalHotkeysButton,\r\n    OptionsButton,\r\n    PrimaryToggleButton,\r\n    SliderComponent\r\n  },\r\n  data() {\r\n    return {\r\n      offlineProgress: false,\r\n      hibernationCatchup: false,\r\n      hotkeys: false,\r\n      offlineSlider: 0,\r\n      offlineTicks: 0,\r\n      automaticTabSwitching: false,\r\n      infinityUnlocked: false,\r\n      automatorUnlocked: false,\r\n      automatorLogSize: 0,\r\n      gamePaused: false,\r\n    };\r\n  },\r\n  computed: {\r\n    sliderPropsOfflineTicks() {\r\n      return {\r\n        min: 22,\r\n        max: 54,\r\n        interval: 1,\r\n        width: \"100%\",\r\n        tooltip: false\r\n      };\r\n    },\r\n    sliderPropsAutomatorLogSize() {\r\n      return {\r\n        min: 50,\r\n        max: 500,\r\n        interval: 50,\r\n        width: \"100%\",\r\n        tooltip: false\r\n      };\r\n    }\r\n  },\r\n  watch: {\r\n    offlineProgress(newValue) {\r\n      player.options.offlineProgress = newValue;\r\n    },\r\n    hibernationCatchup(newValue) {\r\n      player.options.hibernationCatchup = newValue;\r\n    },\r\n    hotkeys(newValue) {\r\n      player.options.hotkeys = newValue;\r\n    },\r\n    offlineSlider(newValue) {\r\n      player.options.offlineTicks = this.parseOfflineSlider(newValue);\r\n    },\r\n    automaticTabSwitching(newValue) {\r\n      player.options.automaticTabSwitching = newValue;\r\n    },\r\n    automatorLogSize(newValue) {\r\n      player.options.automatorEvents.maxEntries = parseInt(newValue, 10);\r\n    },\r\n    gamePaused(newValue) {\r\n      if (player.options.gamePaused !== newValue) {\r\n        GameUI.notify.info(newValue ? \"Game paused\" : \"Game resumed\", 2000);\r\n      }\r\n      player.options.gamePaused = newValue;\r\n    },\r\n  },\r\n  // This puts the slider in the right spot on initialization\r\n  created() {\r\n    const ticks = player.options.offlineTicks;\r\n    const exponent = Math.floor(Math.log10(ticks));\r\n    const mantissa = (ticks / Math.pow(10, exponent)) - 1;\r\n    this.offlineSlider = 9 * exponent + mantissa;\r\n  },\r\n  methods: {\r\n    update() {\r\n      const options = player.options;\r\n      this.offlineProgress = options.offlineProgress;\r\n      this.hibernationCatchup = options.hibernationCatchup;\r\n      this.hotkeys = options.hotkeys;\r\n      this.offlineTicks = player.options.offlineTicks;\r\n      this.automaticTabSwitching = options.automaticTabSwitching;\r\n      this.infinityUnlocked = PlayerProgress.current.isInfinityUnlocked;\r\n      this.automatorUnlocked = Player.automatorUnlocked;\r\n      this.automatorLogSize = options.automatorEvents.maxEntries;\r\n      this.gamePaused = options.gamePaused;\r\n    },\r\n    // Given the endpoints of 22-54, this produces 500, 600, ... , 900, 1000, 2000, ... , 1e6 ticks\r\n    // It's essentially 10^(x/10) but with the mantissa spaced linearly instead of logarithmically\r\n    parseOfflineSlider(str) {\r\n      const value = parseInt(str, 10);\r\n      return (1 + value % 9) * Math.pow(10, Math.floor(value / 9));\r\n    },\r\n    adjustSliderValueOfflineTicks(value) {\r\n      this.offlineSlider = value;\r\n      player.options.offlineTicks = this.parseOfflineSlider(value);\r\n    },\r\n    adjustSliderValueAutomatorLogSize(value) {\r\n      this.automatorLogSize = value;\r\n      player.options.automatorEvents.maxEntries = this.automatorLogSize;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-options-tab\">\r\n    <div class=\"l-options-grid\">\r\n      <div class=\"l-options-grid__row\">\r\n        <OptionsButton\r\n          class=\"o-primary-btn--option\"\r\n          onclick=\"Modal.confirmationOptions.show()\"\r\n        >\r\n          Open Confirmation Options\r\n        </OptionsButton>\r\n        <PrimaryToggleButton\r\n          v-model=\"hotkeys\"\r\n          class=\"o-primary-btn--option l-options-grid__button\"\r\n          label=\"Hotkeys:\"\r\n          on=\"Enabled\"\r\n          off=\"Disabled\"\r\n        />\r\n        <PrimaryToggleButton\r\n          v-model=\"automaticTabSwitching\"\r\n          class=\"o-primary-btn--option l-options-grid__button l-toggle-button\"\r\n          label=\"Switch tabs on some events (e.g. entering challenges):\"\r\n        />\r\n      </div>\r\n      <div class=\"l-options-grid__row\">\r\n        <PrimaryToggleButton\r\n          v-model=\"offlineProgress\"\r\n          class=\"o-primary-btn--option l-options-grid__button\"\r\n          label=\"Offline progress:\"\r\n        />\r\n        <div class=\"o-primary-btn o-primary-btn--option o-primary-btn--slider l-options-grid__button\">\r\n          <b>Offline ticks: {{ formatInt(offlineTicks) }}</b>\r\n          <SliderComponent\r\n            class=\"o-primary-btn--slider__slider\"\r\n            v-bind=\"sliderPropsOfflineTicks\"\r\n            :value=\"offlineSlider\"\r\n            @input=\"adjustSliderValueOfflineTicks($event)\"\r\n          />\r\n        </div>\r\n        <PrimaryToggleButton\r\n          v-model=\"hibernationCatchup\"\r\n          class=\"o-primary-btn--option l-options-grid__button\"\r\n          label=\"Run suspended time as offline:\"\r\n        />\r\n      </div>\r\n      <div class=\"l-options-grid__row\">\r\n        <PrimaryToggleButton\r\n          v-model=\"gamePaused\"\r\n          class=\"o-primary-btn--option l-options-grid__button\"\r\n          label=\"\"\r\n          on=\"Resume the game\"\r\n          off=\"Pause the game\"\r\n        />\r\n        <div\r\n          v-if=\"automatorUnlocked\"\r\n          class=\"o-primary-btn o-primary-btn--option o-primary-btn--slider l-options-grid__button\"\r\n        >\r\n          <b>Automator Log Max: {{ formatInt(parseInt(automatorLogSize)) }}</b>\r\n          <SliderComponent\r\n            class=\"o-primary-btn--slider__slider\"\r\n            v-bind=\"sliderPropsAutomatorLogSize\"\r\n            :value=\"automatorLogSize\"\r\n            @input=\"adjustSliderValueAutomatorLogSize($event)\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <OpenModalHotkeysButton />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-toggle-button {\r\n  font-size: 12px;\r\n}\r\n</style>\r\n"]}]}