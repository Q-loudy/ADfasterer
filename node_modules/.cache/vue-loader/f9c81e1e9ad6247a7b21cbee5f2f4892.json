{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\time-dilation\\TimeDilationTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\time-dilation\\TimeDilationTab.vue","mtime":1745241597457},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgRGlsYXRpb25CdXR0b24gZnJvbSAiLi9EaWxhdGlvbkJ1dHRvbiI7DQppbXBvcnQgRGlsYXRpb25VcGdyYWRlQnV0dG9uIGZyb20gIi4vRGlsYXRpb25VcGdyYWRlQnV0dG9uIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiVGltZURpbGF0aW9uVGFiIiwNCiAgY29tcG9uZW50czogew0KICAgIERpbGF0aW9uQnV0dG9uLA0KICAgIERpbGF0aW9uVXBncmFkZUJ1dHRvbg0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICB0YWNoeW9uczogbmV3IERlY2ltYWwoKSwNCiAgICAgIGRpbGF0ZWRUaW1lOiBuZXcgRGVjaW1hbCgpLA0KICAgICAgZGlsYXRlZFRpbWVJbmNvbWU6IG5ldyBEZWNpbWFsKCksDQogICAgICBnYWxheHlUaHJlc2hvbGQ6IG5ldyBEZWNpbWFsKCksDQogICAgICBiYXNlR2FsYXhpZXM6IDAsDQogICAgICB0b3RhbEdhbGF4aWVzOiAwLA0KICAgICAgdGFjaHlvbkdhbGF4eUdhaW46IDEsDQogICAgICBoYXNQZWxsZURpbGF0aW9uVXBncmFkZXM6IGZhbHNlLA0KICAgICAgZ2FsYXh5VGltZUVzdGltYXRlOiAiIiwNCiAgICAgIG1heERUOiBuZXcgRGVjaW1hbCgpLA0KICAgICAgdG9NYXhUb29sdGlwOiAiIiwNCiAgICAgIGlzSG92ZXJpbmc6IGZhbHNlLA0KICAgIH07DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgcmVidXlhYmxlcygpIHsNCiAgICAgIHJldHVybiBbDQogICAgICAgIERpbGF0aW9uVXBncmFkZS5kdEdhaW4sDQogICAgICAgIERpbGF0aW9uVXBncmFkZS5nYWxheHlUaHJlc2hvbGQsDQogICAgICAgIERpbGF0aW9uVXBncmFkZS50YWNoeW9uR2Fpbg0KICAgICAgXTsNCiAgICB9LA0KICAgIHVwZ3JhZGVzKCkgew0KICAgICAgcmV0dXJuIFsNCiAgICAgICAgWw0KICAgICAgICAgIERpbGF0aW9uVXBncmFkZS5kb3VibGVHYWxheGllcywNCiAgICAgICAgICBEaWxhdGlvblVwZ3JhZGUudGRNdWx0UmVwbGljYW50aSwNCiAgICAgICAgICBEaWxhdGlvblVwZ3JhZGUubmRNdWx0RFQNCiAgICAgICAgXSwNCiAgICAgICAgWw0KICAgICAgICAgIERpbGF0aW9uVXBncmFkZS5pcE11bHREVCwNCiAgICAgICAgICBEaWxhdGlvblVwZ3JhZGUudGltZVN0dWR5U3BsaXQsDQogICAgICAgICAgRGlsYXRpb25VcGdyYWRlLmRpbGF0aW9uUGVuYWx0eQ0KICAgICAgICBdLA0KICAgICAgXTsNCiAgICB9LA0KICAgIC8vIFRoaXMgbWlnaHQgYmUgbmVnYXRpdmUgZHVlIHRvIHJpZnQgZHJhaW4sIHNvIHdlIG5lZWQgdG8gYWRkICIrIiBpZmYgdGhlIHZhbHVlIGlzIHBvc2l0aXZlLiBUaGUgYWN0dWFsDQogICAgLy8gYWRkaXRpb24gb2YgYSBuZWdhdGl2ZSBzaWduIChvciBub3QpIGlzIGFzc3VtZWQgdG8gYmUgaGFuZGxlZCBpbiBhIG5vdGF0aW9uLXNwZWNpZmljIHdheQ0KICAgIGRpbGF0ZWRUaW1lR2FpblRleHQoKSB7DQogICAgICBjb25zdCBzaWduID0gdGhpcy5kaWxhdGVkVGltZUluY29tZS5ndGUoMCkgPyAiKyIgOiAiIjsNCiAgICAgIHJldHVybiBgJHtzaWdufSR7Zm9ybWF0KHRoaXMuZGlsYXRlZFRpbWVJbmNvbWUsIDIsIDEpfWA7DQogICAgfSwNCiAgICBwZWxsZVJlYnV5YWJsZXMoKSB7DQogICAgICByZXR1cm4gWw0KICAgICAgICBEaWxhdGlvblVwZ3JhZGUuZHRHYWluUGVsbGUsDQogICAgICAgIERpbGF0aW9uVXBncmFkZS5nYWxheHlNdWx0aXBsaWVyLA0KICAgICAgICBEaWxhdGlvblVwZ3JhZGUudGlja3NwZWVkUG93ZXINCiAgICAgIF07DQogICAgfSwNCiAgICBwZWxsZVVwZ3JhZGVzKCkgew0KICAgICAgcmV0dXJuIFsNCiAgICAgICAgRGlsYXRpb25VcGdyYWRlLmdhbGF4eVRocmVzaG9sZFBlbGxlLA0KICAgICAgICBEaWxhdGlvblVwZ3JhZGUuZmxhdERpbGF0aW9uTXVsdA0KICAgICAgXTsNCiAgICB9LA0KICAgIHR0R2VuZXJhdG9yKCkgew0KICAgICAgcmV0dXJuIERpbGF0aW9uVXBncmFkZS50dEdlbmVyYXRvcjsNCiAgICB9LA0KICAgIGJhc2VHYWxheHlUZXh0KCkgew0KICAgICAgcmV0dXJuIGAke2Zvcm1hdEludCh0aGlzLmJhc2VHYWxheGllcyl9IEJhc2VgOw0KICAgIH0sDQogICAgaGFzTWF4VGV4dDogKCkgPT4gUGxheWVyUHJvZ3Jlc3MucmVhbGl0eVVubG9ja2VkKCkgJiYgIVBlbGxlLmlzRG9vbWVkLA0KICAgIGFsbFJlYnV5YWJsZXMoKSB7DQogICAgICBjb25zdCB1cGdyYWRlUm93cyA9IFtdOw0KICAgICAgdXBncmFkZVJvd3MucHVzaCh0aGlzLnJlYnV5YWJsZXMpOw0KICAgICAgaWYgKHRoaXMuaGFzUGVsbGVEaWxhdGlvblVwZ3JhZGVzKSB1cGdyYWRlUm93cy5wdXNoKHRoaXMucGVsbGVSZWJ1eWFibGVzKTsNCiAgICAgIHJldHVybiB1cGdyYWRlUm93czsNCiAgICB9LA0KICAgIGFsbFNpbmdsZVVwZ3JhZGVzKCkgew0KICAgICAgY29uc3QgdXBncmFkZVJvd3MgPSBbXTsNCiAgICAgIHVwZ3JhZGVSb3dzLnB1c2goLi4udGhpcy51cGdyYWRlcyk7DQogICAgICBpZiAodGhpcy5oYXNQZWxsZURpbGF0aW9uVXBncmFkZXMpIHVwZ3JhZGVSb3dzLnB1c2godGhpcy5wZWxsZVVwZ3JhZGVzKTsNCiAgICAgIHVwZ3JhZGVSb3dzLnB1c2goW3RoaXMudHRHZW5lcmF0b3JdKTsNCiAgICAgIHJldHVybiB1cGdyYWRlUm93czsNCiAgICB9LA0KICB9LA0KICBtZXRob2RzOiB7DQogICAgdXBkYXRlKCkgew0KICAgICAgdGhpcy50YWNoeW9ucy5jb3B5RnJvbShDdXJyZW5jeS50YWNoeW9uUGFydGljbGVzKTsNCiAgICAgIHRoaXMuZGlsYXRlZFRpbWUuY29weUZyb20oQ3VycmVuY3kuZGlsYXRlZFRpbWUpOw0KICAgICAgY29uc3QgcmF3RFRHYWluID0gZ2V0RGlsYXRpb25HYWluUGVyU2Vjb25kKCkudGltZXMoZ2V0R2FtZVNwZWVkdXBGb3JEaXNwbGF5KCkpOw0KICAgICAgdGhpcy5nYWxheHlUaW1lRXN0aW1hdGUgPSBnZXREaWxhdGlvblRpbWVFc3RpbWF0ZSh0aGlzLmdhbGF4eVRocmVzaG9sZCk7DQogICAgICBpZiAoUGVsbGVSaWZ0cy5wYXJhZG94LmlzQWN0aXZlKSB7DQogICAgICAgIC8vIFRoZSBudW1iZXIgY2FuIGJlIHNtYWxsIGFuZCBlaXRoZXIgcG9zaXRpdmUgb3IgbmVnYXRpdmUgd2l0aCB0aGUgcmlmdCBhY3RpdmUsIHdoaWNoIG1lYW5zIHRoYXQgZXh0cmEgY2FyZQ0KICAgICAgICAvLyBuZWVkcyB0byBiZSB0YWtlbiB0byBnZXQgdGhlIGNhbGN1bGF0aW9uIGFzIGNsb3NlIHRvIGNvcnJlY3QgYXMgcG9zc2libGUuIFRoaXMgcmVsaWVzIG9uIHNvbWUgZGV0YWlscw0KICAgICAgICAvLyByZWxhdGVkIHRvIHRpY2sgbWljcm9zdHJ1Y3R1cmUgdG8gbWFrZSB0aGluZ3MgYWNjdXJhdGUsIGFuZCBpdCBzZWVtcyB0byBiZSB0byByb3VnaGx5IDEgcGFydCBpbiA1ZTYNCiAgICAgICAgY29uc3QgdGlja1Byb3AgPSBwbGF5ZXIub3B0aW9ucy51cGRhdGVSYXRlIC8gMTAwMDsNCiAgICAgICAgY29uc3QgZHJhaW5GYWN0b3JQZXJUaWNrID0gMSAtICgxIC0gUGVsbGUucmlmdERyYWluUGVyY2VudCkgKiogdGlja1Byb3A7DQogICAgICAgIGNvbnN0IGRyYWluUGVyU2Vjb25kID0gdGhpcy5kaWxhdGVkVGltZS5hZGQocmF3RFRHYWluLnRpbWVzKHRpY2tQcm9wKSkudGltZXMoZHJhaW5GYWN0b3JQZXJUaWNrIC8gdGlja1Byb3ApOw0KICAgICAgICB0aGlzLmRpbGF0ZWRUaW1lSW5jb21lID0gcmF3RFRHYWluLm1pbnVzKGRyYWluUGVyU2Vjb25kKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuZGlsYXRlZFRpbWVJbmNvbWUgPSByYXdEVEdhaW47DQogICAgICB9DQogICAgICB0aGlzLmdhbGF4eVRocmVzaG9sZC5jb3B5RnJvbShwbGF5ZXIuZGlsYXRpb24ubmV4dFRocmVzaG9sZCk7DQogICAgICB0aGlzLmJhc2VHYWxheGllcyA9IHBsYXllci5kaWxhdGlvbi5iYXNlVGFjaHlvbkdhbGF4aWVzOw0KICAgICAgdGhpcy50b3RhbEdhbGF4aWVzID0gcGxheWVyLmRpbGF0aW9uLnRvdGFsVGFjaHlvbkdhbGF4aWVzOw0KICAgICAgdGhpcy5oYXNQZWxsZURpbGF0aW9uVXBncmFkZXMgPSBQZWxsZVJpZnRzLnBhcmFkb3gubWlsZXN0b25lc1swXS5jYW5CZUFwcGxpZWQ7DQogICAgICBpZiAodGhpcy5iYXNlR2FsYXhpZXMgPCA1MDAgJiYgRGlsYXRpb25VcGdyYWRlLmRvdWJsZUdhbGF4aWVzLmlzQm91Z2h0KSB7DQogICAgICAgIHRoaXMudGFjaHlvbkdhbGF4eUdhaW4gPSBEaWxhdGlvblVwZ3JhZGUuZG91YmxlR2FsYXhpZXMuZWZmZWN0VmFsdWU7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLnRhY2h5b25HYWxheHlHYWluID0gMTsNCiAgICAgIH0NCiAgICAgIHRoaXMudGFjaHlvbkdhbGF4eUdhaW4gKj0gRGlsYXRpb25VcGdyYWRlLmdhbGF4eU11bHRpcGxpZXIuZWZmZWN0VmFsdWU7DQogICAgICB0aGlzLm1heERULmNvcHlGcm9tKHBsYXllci5yZWNvcmRzLnRoaXNSZWFsaXR5Lm1heERUKTsNCg0KICAgICAgY29uc3QgZXN0aW1hdGVUZXh0ID0gZ2V0RGlsYXRpb25UaW1lRXN0aW1hdGUodGhpcy5tYXhEVCk7DQogICAgICBpZiAodGhpcy5kaWxhdGVkVGltZUluY29tZS5sdGUoMCkpIHRoaXMudG9NYXhUb29sdGlwID0gIk5vIERUIGdhaW4iOw0KICAgICAgZWxzZSB0aGlzLnRvTWF4VG9vbHRpcCA9IGVzdGltYXRlVGV4dC5zdGFydHNXaXRoKCI8IikgPyAiQ3VycmVudGx5IEluY3JlYXNpbmciIDogZXN0aW1hdGVUZXh0Ow0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["TimeDilationTab.vue"],"names":[],"mappingsfile":"TimeDilationTab.vue","sourceRoot":"src/components/tabs/time-dilation","sourcesContent":["<script>\r\nimport DilationButton from \"./DilationButton\";\r\nimport DilationUpgradeButton from \"./DilationUpgradeButton\";\r\n\r\nexport default {\r\n  name: \"TimeDilationTab\",\r\n  components: {\r\n    DilationButton,\r\n    DilationUpgradeButton\r\n  },\r\n  data() {\r\n    return {\r\n      tachyons: new Decimal(),\r\n      dilatedTime: new Decimal(),\r\n      dilatedTimeIncome: new Decimal(),\r\n      galaxyThreshold: new Decimal(),\r\n      baseGalaxies: 0,\r\n      totalGalaxies: 0,\r\n      tachyonGalaxyGain: 1,\r\n      hasPelleDilationUpgrades: false,\r\n      galaxyTimeEstimate: \"\",\r\n      maxDT: new Decimal(),\r\n      toMaxTooltip: \"\",\r\n      isHovering: false,\r\n    };\r\n  },\r\n  computed: {\r\n    rebuyables() {\r\n      return [\r\n        DilationUpgrade.dtGain,\r\n        DilationUpgrade.galaxyThreshold,\r\n        DilationUpgrade.tachyonGain\r\n      ];\r\n    },\r\n    upgrades() {\r\n      return [\r\n        [\r\n          DilationUpgrade.doubleGalaxies,\r\n          DilationUpgrade.tdMultReplicanti,\r\n          DilationUpgrade.ndMultDT\r\n        ],\r\n        [\r\n          DilationUpgrade.ipMultDT,\r\n          DilationUpgrade.timeStudySplit,\r\n          DilationUpgrade.dilationPenalty\r\n        ],\r\n      ];\r\n    },\r\n    // This might be negative due to rift drain, so we need to add \"+\" iff the value is positive. The actual\r\n    // addition of a negative sign (or not) is assumed to be handled in a notation-specific way\r\n    dilatedTimeGainText() {\r\n      const sign = this.dilatedTimeIncome.gte(0) ? \"+\" : \"\";\r\n      return `${sign}${format(this.dilatedTimeIncome, 2, 1)}`;\r\n    },\r\n    pelleRebuyables() {\r\n      return [\r\n        DilationUpgrade.dtGainPelle,\r\n        DilationUpgrade.galaxyMultiplier,\r\n        DilationUpgrade.tickspeedPower\r\n      ];\r\n    },\r\n    pelleUpgrades() {\r\n      return [\r\n        DilationUpgrade.galaxyThresholdPelle,\r\n        DilationUpgrade.flatDilationMult\r\n      ];\r\n    },\r\n    ttGenerator() {\r\n      return DilationUpgrade.ttGenerator;\r\n    },\r\n    baseGalaxyText() {\r\n      return `${formatInt(this.baseGalaxies)} Base`;\r\n    },\r\n    hasMaxText: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\r\n    allRebuyables() {\r\n      const upgradeRows = [];\r\n      upgradeRows.push(this.rebuyables);\r\n      if (this.hasPelleDilationUpgrades) upgradeRows.push(this.pelleRebuyables);\r\n      return upgradeRows;\r\n    },\r\n    allSingleUpgrades() {\r\n      const upgradeRows = [];\r\n      upgradeRows.push(...this.upgrades);\r\n      if (this.hasPelleDilationUpgrades) upgradeRows.push(this.pelleUpgrades);\r\n      upgradeRows.push([this.ttGenerator]);\r\n      return upgradeRows;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.tachyons.copyFrom(Currency.tachyonParticles);\r\n      this.dilatedTime.copyFrom(Currency.dilatedTime);\r\n      const rawDTGain = getDilationGainPerSecond().times(getGameSpeedupForDisplay());\r\n      this.galaxyTimeEstimate = getDilationTimeEstimate(this.galaxyThreshold);\r\n      if (PelleRifts.paradox.isActive) {\r\n        // The number can be small and either positive or negative with the rift active, which means that extra care\r\n        // needs to be taken to get the calculation as close to correct as possible. This relies on some details\r\n        // related to tick microstructure to make things accurate, and it seems to be to roughly 1 part in 5e6\r\n        const tickProp = player.options.updateRate / 1000;\r\n        const drainFactorPerTick = 1 - (1 - Pelle.riftDrainPercent) ** tickProp;\r\n        const drainPerSecond = this.dilatedTime.add(rawDTGain.times(tickProp)).times(drainFactorPerTick / tickProp);\r\n        this.dilatedTimeIncome = rawDTGain.minus(drainPerSecond);\r\n      } else {\r\n        this.dilatedTimeIncome = rawDTGain;\r\n      }\r\n      this.galaxyThreshold.copyFrom(player.dilation.nextThreshold);\r\n      this.baseGalaxies = player.dilation.baseTachyonGalaxies;\r\n      this.totalGalaxies = player.dilation.totalTachyonGalaxies;\r\n      this.hasPelleDilationUpgrades = PelleRifts.paradox.milestones[0].canBeApplied;\r\n      if (this.baseGalaxies < 500 && DilationUpgrade.doubleGalaxies.isBought) {\r\n        this.tachyonGalaxyGain = DilationUpgrade.doubleGalaxies.effectValue;\r\n      } else {\r\n        this.tachyonGalaxyGain = 1;\r\n      }\r\n      this.tachyonGalaxyGain *= DilationUpgrade.galaxyMultiplier.effectValue;\r\n      this.maxDT.copyFrom(player.records.thisReality.maxDT);\r\n\r\n      const estimateText = getDilationTimeEstimate(this.maxDT);\r\n      if (this.dilatedTimeIncome.lte(0)) this.toMaxTooltip = \"No DT gain\";\r\n      else this.toMaxTooltip = estimateText.startsWith(\"<\") ? \"Currently Increasing\" : estimateText;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-dilation-tab\">\r\n    <span>\r\n      You have\r\n      <span class=\"c-dilation-tab__tachyons\">{{ format(tachyons, 2, 1) }}</span>\r\n      {{ pluralize(\"Tachyon Particle\", tachyons) }}.\r\n    </span>\r\n    <div\r\n      @mouseover=\"isHovering = true\"\r\n      @mouseleave=\"isHovering = false\"\r\n    >\r\n      <DilationButton />\r\n    </div>\r\n    <span>\r\n      You have\r\n      <span class=\"c-dilation-tab__dilated-time\">{{ format(dilatedTime, 2, 1) }}</span>\r\n      Dilated Time.\r\n      <span class=\"c-dilation-tab__dilated-time-income\">{{ dilatedTimeGainText }}/s</span>\r\n    </span>\r\n    <span>\r\n      Next\r\n      <span v-if=\"tachyonGalaxyGain > 1\">{{ formatInt(tachyonGalaxyGain) }}</span>\r\n      {{ pluralize(\"Tachyon Galaxy\", tachyonGalaxyGain) }} at\r\n      <span\r\n        class=\"c-dilation-tab__galaxy-threshold\"\r\n        :ach-tooltip=\"galaxyTimeEstimate\"\r\n      >{{ format(galaxyThreshold, 2, 1) }}</span>\r\n      Dilated Time, gained total of\r\n      <span\r\n        class=\"c-dilation-tab__galaxies\"\r\n        :ach-tooltip=\"baseGalaxyText\"\r\n      >{{ formatInt(totalGalaxies) }}</span>\r\n      {{ pluralize(\"Tachyon Galaxy\", totalGalaxies) }}\r\n    </span>\r\n    <span v-if=\"hasMaxText\">\r\n      Your maximum Dilated Time reached this Reality is\r\n      <span\r\n        v-tooltip=\"toMaxTooltip\"\r\n        class=\"max-accent\"\r\n      >{{ format(maxDT, 2, 1) }}</span>.\r\n    </span>\r\n    <div class=\"l-dilation-upgrades-grid\">\r\n      <div\r\n        v-for=\"(upgradeRow, row) in allRebuyables\"\r\n        :key=\"'rebuyable' + row\"\r\n        class=\"l-dilation-upgrades-grid__row\"\r\n      >\r\n        <DilationUpgradeButton\r\n          v-for=\"upgrade in upgradeRow\"\r\n          :key=\"upgrade.id\"\r\n          :upgrade=\"upgrade\"\r\n          :is-rebuyable=\"true\"\r\n          class=\"l-dilation-upgrades-grid__cell\"\r\n          :show-tooltip=\"isHovering\"\r\n        />\r\n      </div>\r\n      <div\r\n        v-for=\"(upgradeRow, row) in allSingleUpgrades\"\r\n        :key=\"'single' + row\"\r\n        class=\"l-dilation-upgrades-grid__row\"\r\n      >\r\n        <DilationUpgradeButton\r\n          v-for=\"upgrade in upgradeRow\"\r\n          :key=\"upgrade.id\"\r\n          :upgrade=\"upgrade\"\r\n          :is-rebuyable=\"false\"\r\n          class=\"l-dilation-upgrades-grid__cell\"\r\n          :show-tooltip=\"isHovering\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.max-accent {\r\n  color: var(--color-dilation);\r\n  font-size: 1.5rem;\r\n  text-shadow: 0 0 0.2rem var(--color-reality-dark);\r\n  cursor: default;\r\n}\r\n\r\n.l-dilation-upgrades-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.l-dilation-upgrades-grid__row {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n}\r\n\r\n.l-dilation-upgrades-grid__cell {\r\n  margin: 1.2rem 1.5rem;\r\n}\r\n</style>\r\n"]}]}