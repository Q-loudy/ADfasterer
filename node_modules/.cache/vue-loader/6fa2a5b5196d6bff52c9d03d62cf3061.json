{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\GlyphsTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\GlyphsTab.vue","mtime":1745241597303},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQ3VycmVudEdseXBoRWZmZWN0cyBmcm9tICIuL0N1cnJlbnRHbHlwaEVmZmVjdHMiOw0KaW1wb3J0IEVxdWlwcGVkR2x5cGhzIGZyb20gIi4vRXF1aXBwZWRHbHlwaHMiOw0KaW1wb3J0IEV4cGFuZGluZ0NvbnRyb2xCb3ggZnJvbSAiQC9jb21wb25lbnRzL0V4cGFuZGluZ0NvbnRyb2xCb3giOw0KaW1wb3J0IEdseXBoSW52ZW50b3J5IGZyb20gIi4vR2x5cGhJbnZlbnRvcnkiOw0KaW1wb3J0IEdseXBoTGV2ZWxzQW5kV2VpZ2h0cyBmcm9tICIuL0dseXBoTGV2ZWxzQW5kV2VpZ2h0cyI7DQppbXBvcnQgR2x5cGhQZWVrIGZyb20gIi4vR2x5cGhQZWVrIjsNCmltcG9ydCBHbHlwaFRhYlNpZGViYXIgZnJvbSAiLi9zaWRlYmFyL0dseXBoVGFiU2lkZWJhciI7DQppbXBvcnQgUmVhbGl0eUFtcGxpZnlCdXR0b24gZnJvbSAiLi9SZWFsaXR5QW1wbGlmeUJ1dHRvbiI7DQppbXBvcnQgUmVhbGl0eVJlbWluZGVyIGZyb20gIi4vUmVhbGl0eVJlbWluZGVyIjsNCmltcG9ydCBSZXNldFJlYWxpdHlCdXR0b24gZnJvbSAiLi9SZXNldFJlYWxpdHlCdXR0b24iOw0KaW1wb3J0IFNhY3JpZmljZWRHbHlwaHMgZnJvbSAiLi9TYWNyaWZpY2VkR2x5cGhzIjsNCmltcG9ydCBTaW5nbGVHbHlwaEN1c3RvbXphdGlvblBhbmVsIGZyb20gIi4vU2luZ2xlR2x5cGhDdXN0b216YXRpb25QYW5lbCI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkdseXBoc1RhYiIsDQogIGNvbXBvbmVudHM6IHsNCiAgICBFeHBhbmRpbmdDb250cm9sQm94LA0KICAgIEdseXBoVGFiU2lkZWJhciwNCiAgICBHbHlwaFBlZWssDQogICAgUmVhbGl0eUFtcGxpZnlCdXR0b24sDQogICAgR2x5cGhJbnZlbnRvcnksDQogICAgU2FjcmlmaWNlZEdseXBocywNCiAgICBDdXJyZW50R2x5cGhFZmZlY3RzLA0KICAgIEVxdWlwcGVkR2x5cGhzLA0KICAgIEdseXBoTGV2ZWxzQW5kV2VpZ2h0cywNCiAgICBSZXNldFJlYWxpdHlCdXR0b24sDQogICAgUmVhbGl0eVJlbWluZGVyLA0KICAgIFNpbmdsZUdseXBoQ3VzdG9temF0aW9uUGFuZWwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZW5zbGF2ZWRIaW50OiAiIiwNCiAgICAgIHNob3dJbnN0YWJpbGl0eTogZmFsc2UsDQogICAgICBpbnN0YWJpbGl0eVRocmVzaG9sZDogMCwNCiAgICAgIGh5cGVySW5zdGFiaWxpdHlUaHJlc2hvbGQ6IDAsDQogICAgICBpc0luQ2VsZXN0aWFsUmVhbGl0eTogZmFsc2UsDQogICAgICBjYW5BbXBsaWZ5OiBmYWxzZSwNCiAgICAgIGdseXBoVGV4dENvbG9yczogdHJ1ZSwNCiAgICAgIGF1dG9SZXN0YXJ0Q2VsZXN0aWFsUnVuczogZmFsc2UsDQogICAgICBzYWNyaWZpY2VVbmxvY2tlZDogZmFsc2UsDQogICAgICBzYWNyaWZpY2VEaXNwbGF5ZWQ6IGZhbHNlLA0KICAgICAgcmVzZXRSZWFsaXR5RGlzcGxheWVkOiBmYWxzZSwNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIHNob3dFbnNsYXZlZEhpbnQoKSB7DQogICAgICByZXR1cm4gdGhpcy5lbnNsYXZlZEhpbnQgIT09ICIiOw0KICAgIH0sDQogICAgZ2x5cGhDb2xvclN0YXRlKCkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgIm8tZ2x5cGgtY29sb3ItY2hlY2tib3giOiB0cnVlLA0KICAgICAgICAiby1nbHlwaC1jb2xvci1jaGVja2JveC0tYWN0aXZlIjogdGhpcy5nbHlwaFRleHRDb2xvcnMsDQogICAgICAgICJvLWdseXBoLWNvbG9yLWNoZWNrYm94LS1pbmFjdGl2ZSI6ICF0aGlzLmdseXBoVGV4dENvbG9ycywNCiAgICAgIH07DQogICAgfSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHVwZGF0ZSgpIHsNCiAgICAgIHRoaXMucmVzZXRSZWFsaXR5RGlzcGxheWVkID0gUGxheWVyUHJvZ3Jlc3MucmVhbGl0eVVubG9ja2VkKCk7DQogICAgICB0aGlzLnNob3dJbnN0YWJpbGl0eSA9IHBsYXllci5yZWNvcmRzLmJlc3RSZWFsaXR5LmdseXBoTGV2ZWwgPiA4MDA7DQogICAgICB0aGlzLmluc3RhYmlsaXR5VGhyZXNob2xkID0gR2x5cGhzLmluc3RhYmlsaXR5VGhyZXNob2xkOw0KICAgICAgdGhpcy5oeXBlckluc3RhYmlsaXR5VGhyZXNob2xkID0gR2x5cGhzLmh5cGVySW5zdGFiaWxpdHlUaHJlc2hvbGQ7DQogICAgICB0aGlzLmlzSW5DZWxlc3RpYWxSZWFsaXR5ID0gaXNJbkNlbGVzdGlhbFJlYWxpdHkoKTsNCiAgICAgIHRoaXMuY2FuQW1wbGlmeSA9IEVuc2xhdmVkLmlzVW5sb2NrZWQgJiYgIXRoaXMuaXNJbkNlbGVzdGlhbFJlYWxpdHk7DQogICAgICB0aGlzLmF1dG9SZXN0YXJ0Q2VsZXN0aWFsUnVucyA9IHBsYXllci5vcHRpb25zLnJldHJ5Q2VsZXN0aWFsOw0KICAgICAgdGhpcy5nbHlwaFRleHRDb2xvcnMgPSBwbGF5ZXIub3B0aW9ucy5nbHlwaFRleHRDb2xvcnM7DQogICAgICB0aGlzLmVuc2xhdmVkSGludCA9ICIiOw0KICAgICAgdGhpcy5zYWNyaWZpY2VVbmxvY2tlZCA9IEdseXBoU2FjcmlmaWNlSGFuZGxlci5jYW5TYWNyaWZpY2U7DQogICAgICB0aGlzLnNhY3JpZmljZURpc3BsYXllZCA9IHBsYXllci5yZWFsaXR5LnNob3dHbHlwaFNhY3JpZmljZTsNCiAgICAgIGlmICghRW5zbGF2ZWQuaXNSdW5uaW5nKSByZXR1cm47DQogICAgICBjb25zdCBoYXZlQm9vc3QgPSBHbHlwaHMuYWN0aXZlV2l0aG91dENvbXBhbmlvbi5maW5kKGUgPT4gZS5sZXZlbCA8IEVuc2xhdmVkLmdseXBoTGV2ZWxNaW4pICE9PSB1bmRlZmluZWQ7DQogICAgICBpZiAoaGF2ZUJvb3N0KSB7DQogICAgICAgIHRoaXMuZW5zbGF2ZWRIaW50ID0gImRvbmUuLi4gd2hhdCBsaXR0bGUuLi4gSSBjYW4uLi4gd2l0aCBHbHlwaHMuLi4iOw0KICAgICAgfQ0KICAgIH0sDQogICAgdG9nZ2xlQXV0b1Jlc3RhcnRDZWxlc3RpYWwoKSB7DQogICAgICBwbGF5ZXIub3B0aW9ucy5yZXRyeUNlbGVzdGlhbCA9ICFwbGF5ZXIub3B0aW9ucy5yZXRyeUNlbGVzdGlhbDsNCiAgICB9LA0KICAgIHRvZ2dsZUdseXBoVGV4dENvbG9ycygpIHsNCiAgICAgIHBsYXllci5vcHRpb25zLmdseXBoVGV4dENvbG9ycyA9ICFwbGF5ZXIub3B0aW9ucy5nbHlwaFRleHRDb2xvcnM7DQogICAgfSwNCiAgICBnbHlwaEluZm9DbGFzcyhpc1NhY3JpZmljZU9wdGlvbikgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgImwtZ2x5cGgtaW5mby1idXR0b24iOiB0cnVlLA0KICAgICAgICAiYy1nbHlwaC1pbmZvLWJ1dHRvbiI6IHRydWUsDQogICAgICAgICJjLWdseXBoLWluZm8tYnV0dG9uLS1hY3RpdmUiOiBpc1NhY3JpZmljZU9wdGlvbiwNCiAgICAgICAgImMtZ2x5cGgtaW5mby1idXR0b24tLWluYWN0aXZlIjogIWlzU2FjcmlmaWNlT3B0aW9uDQogICAgICB9Ow0KICAgIH0sDQogICAgc2V0SW5mb1N0YXRlKHN0YXRlKSB7DQogICAgICBwbGF5ZXIucmVhbGl0eS5zaG93R2x5cGhTYWNyaWZpY2UgPSBzdGF0ZTsNCiAgICB9LA0KICAgIGdseXBoQ29sb3JQb3NpdGlvbigpIHsNCiAgICAgIHJldHVybiB0aGlzLnNhY3JpZmljZVVubG9ja2VkID8gImwtZ2x5cGgtY29sb3ItcG9zaXRpb25fX2xvdyIgOiAibC1nbHlwaC1jb2xvci1wb3NpdGlvbl9fdG9wIjsNCiAgICB9LA0KICAgIGdseXBoSW5mb0JvcmRlckNsYXNzKCkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgImMtY3VycmVudC1nbHlwaC1lZmZlY3RzLXdpdGgtdG9wLWJvcmRlciI6ICF0aGlzLnNhY3JpZmljZVVubG9ja2VkDQogICAgICB9Ow0KICAgIH0sDQogICAgYnV0dG9uR3JvdXBDbGFzcygpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgICJsLWhhbGYtd2lkdGgiOiB0aGlzLmNhbkFtcGxpZnkNCiAgICAgIH07DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["GlyphsTab.vue"],"names":[],"mappingsfile":"GlyphsTab.vue","sourceRoot":"src/components/tabs/glyphs","sourcesContent":["<script>\r\nimport CurrentGlyphEffects from \"./CurrentGlyphEffects\";\r\nimport EquippedGlyphs from \"./EquippedGlyphs\";\r\nimport ExpandingControlBox from \"@/components/ExpandingControlBox\";\r\nimport GlyphInventory from \"./GlyphInventory\";\r\nimport GlyphLevelsAndWeights from \"./GlyphLevelsAndWeights\";\r\nimport GlyphPeek from \"./GlyphPeek\";\r\nimport GlyphTabSidebar from \"./sidebar/GlyphTabSidebar\";\r\nimport RealityAmplifyButton from \"./RealityAmplifyButton\";\r\nimport RealityReminder from \"./RealityReminder\";\r\nimport ResetRealityButton from \"./ResetRealityButton\";\r\nimport SacrificedGlyphs from \"./SacrificedGlyphs\";\r\nimport SingleGlyphCustomzationPanel from \"./SingleGlyphCustomzationPanel\";\r\n\r\nexport default {\r\n  name: \"GlyphsTab\",\r\n  components: {\r\n    ExpandingControlBox,\r\n    GlyphTabSidebar,\r\n    GlyphPeek,\r\n    RealityAmplifyButton,\r\n    GlyphInventory,\r\n    SacrificedGlyphs,\r\n    CurrentGlyphEffects,\r\n    EquippedGlyphs,\r\n    GlyphLevelsAndWeights,\r\n    ResetRealityButton,\r\n    RealityReminder,\r\n    SingleGlyphCustomzationPanel\r\n  },\r\n  data() {\r\n    return {\r\n      enslavedHint: \"\",\r\n      showInstability: false,\r\n      instabilityThreshold: 0,\r\n      hyperInstabilityThreshold: 0,\r\n      isInCelestialReality: false,\r\n      canAmplify: false,\r\n      glyphTextColors: true,\r\n      autoRestartCelestialRuns: false,\r\n      sacrificeUnlocked: false,\r\n      sacrificeDisplayed: false,\r\n      resetRealityDisplayed: false,\r\n    };\r\n  },\r\n  computed: {\r\n    showEnslavedHint() {\r\n      return this.enslavedHint !== \"\";\r\n    },\r\n    glyphColorState() {\r\n      return {\r\n        \"o-glyph-color-checkbox\": true,\r\n        \"o-glyph-color-checkbox--active\": this.glyphTextColors,\r\n        \"o-glyph-color-checkbox--inactive\": !this.glyphTextColors,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.resetRealityDisplayed = PlayerProgress.realityUnlocked();\r\n      this.showInstability = player.records.bestReality.glyphLevel > 800;\r\n      this.instabilityThreshold = Glyphs.instabilityThreshold;\r\n      this.hyperInstabilityThreshold = Glyphs.hyperInstabilityThreshold;\r\n      this.isInCelestialReality = isInCelestialReality();\r\n      this.canAmplify = Enslaved.isUnlocked && !this.isInCelestialReality;\r\n      this.autoRestartCelestialRuns = player.options.retryCelestial;\r\n      this.glyphTextColors = player.options.glyphTextColors;\r\n      this.enslavedHint = \"\";\r\n      this.sacrificeUnlocked = GlyphSacrificeHandler.canSacrifice;\r\n      this.sacrificeDisplayed = player.reality.showGlyphSacrifice;\r\n      if (!Enslaved.isRunning) return;\r\n      const haveBoost = Glyphs.activeWithoutCompanion.find(e => e.level < Enslaved.glyphLevelMin) !== undefined;\r\n      if (haveBoost) {\r\n        this.enslavedHint = \"done... what little... I can... with Glyphs...\";\r\n      }\r\n    },\r\n    toggleAutoRestartCelestial() {\r\n      player.options.retryCelestial = !player.options.retryCelestial;\r\n    },\r\n    toggleGlyphTextColors() {\r\n      player.options.glyphTextColors = !player.options.glyphTextColors;\r\n    },\r\n    glyphInfoClass(isSacrificeOption) {\r\n      return {\r\n        \"l-glyph-info-button\": true,\r\n        \"c-glyph-info-button\": true,\r\n        \"c-glyph-info-button--active\": isSacrificeOption,\r\n        \"c-glyph-info-button--inactive\": !isSacrificeOption\r\n      };\r\n    },\r\n    setInfoState(state) {\r\n      player.reality.showGlyphSacrifice = state;\r\n    },\r\n    glyphColorPosition() {\r\n      return this.sacrificeUnlocked ? \"l-glyph-color-position__low\" : \"l-glyph-color-position__top\";\r\n    },\r\n    glyphInfoBorderClass() {\r\n      return {\r\n        \"c-current-glyph-effects-with-top-border\": !this.sacrificeUnlocked\r\n      };\r\n    },\r\n    buttonGroupClass() {\r\n      return {\r\n        \"l-half-width\": this.canAmplify\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"l-glyphs-tab\">\r\n      <div class=\"l-reality-button-column\">\r\n        <GlyphPeek />\r\n\r\n        <div\r\n          v-if=\"resetRealityDisplayed\"\r\n          class=\"l-reality-button-group\"\r\n        >\r\n          <RealityAmplifyButton\r\n            v-if=\"!isInCelestialReality\"\r\n            :class=\"buttonGroupClass()\"\r\n          />\r\n          <ResetRealityButton :class=\"buttonGroupClass()\" />\r\n        </div>\r\n\r\n        <div\r\n          v-if=\"isInCelestialReality\"\r\n          class=\"l-celestial-auto-restart-checkbox\"\r\n        >\r\n          <input\r\n            id=\"autoRestart\"\r\n            v-model=\"autoRestartCelestialRuns\"\r\n            type=\"checkbox\"\r\n            :value=\"autoRestartCelestialRuns\"\r\n            class=\"o-clickable\"\r\n            @input=\"toggleAutoRestartCelestial()\"\r\n          >\r\n          <label\r\n            for=\"autoRestart\"\r\n            class=\"o-clickable\"\r\n          >\r\n            Repeat this Celestial's Reality\r\n          </label>\r\n        </div>\r\n\r\n        <br>\r\n\r\n        <RealityReminder />\r\n\r\n        <div v-if=\"showInstability\">\r\n          <br>\r\n          Glyphs are becoming unstable.\r\n          <br>\r\n          Glyph levels higher than {{ formatInt(instabilityThreshold) }} are harder to reach.\r\n          <br>\r\n          This effect is even stronger above level {{ formatInt(hyperInstabilityThreshold) }}.\r\n        </div>\r\n        <SingleGlyphCustomzationPanel />\r\n        <ExpandingControlBox\r\n          width-source=\"content\"\r\n          label=\"Glyph Level Factors\"\r\n          container-class=\"c-glyph-level-factors-dropdown-header\"\r\n          class=\"l-glyph-level-factors\"\r\n        >\r\n          <template #dropdown>\r\n            <GlyphLevelsAndWeights />\r\n          </template>\r\n        </ExpandingControlBox>\r\n        <GlyphTabSidebar />\r\n      </div>\r\n      <div class=\"l-player-glyphs-column\">\r\n        <div\r\n          v-if=\"showEnslavedHint\"\r\n          class=\"o-teresa-quotes\"\r\n          v-html=\"enslavedHint\"\r\n        />\r\n        <div class=\"l-equipped-glyphs-and-effects-container\">\r\n          <EquippedGlyphs />\r\n          <div class=\"l-glyph-info-wrapper\">\r\n            <span\r\n              class=\"l-glyph-color-box\"\r\n              @click=\"toggleGlyphTextColors\"\r\n            >\r\n              <div :class=\"glyphColorPosition()\">\r\n                <label\r\n                  :class=\"glyphColorState\"\r\n                >\r\n                  <span class=\"fas fa-palette\" />\r\n                </label>\r\n              </div>\r\n            </span>\r\n            <div\r\n              v-if=\"sacrificeUnlocked\"\r\n              class=\"c-glyph-info-options\"\r\n            >\r\n              <button\r\n                :class=\"glyphInfoClass(!sacrificeDisplayed)\"\r\n                @click=\"setInfoState(false)\"\r\n              >\r\n                Current Glyph effects\r\n              </button>\r\n              <button\r\n                :class=\"glyphInfoClass(sacrificeDisplayed)\"\r\n                @click=\"setInfoState(true)\"\r\n              >\r\n                Glyph Sacrifice totals\r\n              </button>\r\n            </div>\r\n            <SacrificedGlyphs v-if=\"sacrificeUnlocked && sacrificeDisplayed\" />\r\n            <CurrentGlyphEffects\r\n              v-else\r\n              :class=\"glyphInfoBorderClass()\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <GlyphInventory />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-glyph-level-factors {\r\n  margin: 2rem;\r\n}\r\n\r\n.o-clickable {\r\n  cursor: pointer;\r\n}\r\n\r\n.l-celestial-auto-restart-checkbox {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  user-select: none;\r\n}\r\n\r\n.l-half-width {\r\n  width: 50%;\r\n}\r\n</style>\r\n"]}]}