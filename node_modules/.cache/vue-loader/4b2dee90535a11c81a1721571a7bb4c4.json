{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorDefinePage.vue?vue&type=style&index=0&id=ed1100fc&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorDefinePage.vue","mtime":1745241597066},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYy1kZWxldGUtbWFyZ2luIHsNCiAgbWFyZ2luOiAwOw0KfQ0KDQoubC1wYW5lbC1wYWRkaW5nIHsNCiAgcGFkZGluZzogMC41cmVtIDJyZW0gMCAwOw0KfQ0KDQoubC1kZWZpbml0aW9uLWNvbnRhaW5lciB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogIGJvcmRlcjogc29saWQgMC4xcmVtIHZhcigtLWNvbG9yLWF1dG9tYXRvci1kb2NzLWZvbnQpOw0KICBib3JkZXItcmFkaXVzOiB2YXIoLS12YXItYm9yZGVyLXJhZGl1cywgMC41cmVtKTsNCiAgcGFkZGluZzogMC41cmVtOw0KICBtYXJnaW4tdG9wOiAxcmVtOw0KfQ0K"},{"version":3,"sources":["AutomatorDefinePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutomatorDefinePage.vue","sourceRoot":"src/components/tabs/automator","sourcesContent":["<script>\r\nimport AutomatorDefineSingleEntry from \"./AutomatorDefineSingleEntry\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\n\r\nexport default {\r\n  name: \"AutomatorDefinePage\",\r\n  components: {\r\n    AutomatorDefineSingleEntry,\r\n    PrimaryButton,\r\n  },\r\n  data() {\r\n    return {\r\n      constants: [],\r\n      count: 0,\r\n      refreshConstants: false,\r\n    };\r\n  },\r\n  computed: {\r\n    maxConstantCount() {\r\n      return AutomatorData.MAX_ALLOWED_CONSTANT_COUNT;\r\n    },\r\n    maxNameLength() {\r\n      return AutomatorData.MAX_ALLOWED_CONSTANT_NAME_LENGTH;\r\n    },\r\n    maxValueLength() {\r\n      return AutomatorData.MAX_ALLOWED_CONSTANT_VALUE_LENGTH;\r\n    },\r\n    hasConstants() {\r\n      return this.constants.length > 1 || this.constants[0] !== \"\";\r\n    }\r\n  },\r\n  created() {\r\n    // This key-swaps the container for all the constants in order to force a re-render when externally changed\r\n    this.on$(GAME_EVENT.AUTOMATOR_CONSTANT_CHANGED, () => {\r\n      this.refreshConstants = true;\r\n      this.$nextTick(() => this.refreshConstants = false);\r\n    });\r\n  },\r\n  methods: {\r\n    update() {\r\n      const existingValues = player.reality.automator.constantSortOrder;\r\n      this.count = existingValues.length;\r\n      this.constants = this.count < this.maxConstantCount ? [...existingValues, \"\"] : [...existingValues];\r\n    },\r\n    deleteAllConstants() {\r\n      if (this.hasConstants) Modal.clearAutomatorConstants.show();\r\n    },\r\n    importPresets() {\r\n      Modal.importTSConstants.show();\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-panel-padding\">\r\n    This panel allows you to define case-sensitive constant values which can be used in place of numbers or Time Study\r\n    import strings. These definitions are shared across all of your scripts and are limited to a maximum of\r\n    {{ maxConstantCount }} defined constants. Additionally, constant names and values are limited to lengths of\r\n    {{ maxNameLength }} and {{ maxValueLength }} characters respectively. Changes made to constants will not apply\r\n    until any currently running scripts are restarted.\r\n    <br>\r\n    <br>\r\n    As a usage example, defining\r\n    <b>first ðŸ ˆ 11,21,22,31,32,33</b>\r\n    allows you to use\r\n    <b>studies purchase first</b>\r\n    in order to purchase all of the studies in the first three rows.\r\n    <br>\r\n    <br>\r\n    <PrimaryButton\r\n      v-tooltip=\"hasConstants ? null : 'You have no valid constants to delete!'\"\r\n      class=\"c-delete-margin o-primary-btn--subtab-option\"\r\n      :class=\"{ 'o-primary-btn--disabled' : !hasConstants }\"\r\n      @click=\"deleteAllConstants\"\r\n    >\r\n      Delete all constants\r\n    </PrimaryButton>\r\n    <br>\r\n    <br>\r\n    <PrimaryButton\r\n      class=\"c-delete-margin o-primary-btn--subtab-option\"\r\n      @click=\"importPresets\"\r\n    >\r\n      Import Time Study Presets\r\n    </PrimaryButton>\r\n    <div\r\n      :key=\"count + refreshConstants\"\r\n      class=\"l-definition-container\"\r\n    >\r\n      <AutomatorDefineSingleEntry\r\n        v-for=\"(constant, i) in constants\"\r\n        :key=\"i\"\r\n        :constant=\"constant\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-delete-margin {\r\n  margin: 0;\r\n}\r\n\r\n.l-panel-padding {\r\n  padding: 0.5rem 2rem 0 0;\r\n}\r\n\r\n.l-definition-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: solid 0.1rem var(--color-automator-docs-font);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  padding: 0.5rem;\r\n  margin-top: 1rem;\r\n}\r\n</style>\r\n"]}]}