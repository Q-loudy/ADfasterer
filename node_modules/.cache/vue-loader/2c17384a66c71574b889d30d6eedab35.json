{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\SacrificedGlyphs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\SacrificedGlyphs.vue","mtime":1745241597308},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBEQyB9IGZyb20gIkAvY29yZS9jb25zdGFudHMiOw0KDQppbXBvcnQgVHlwZVNhY3JpZmljZSBmcm9tICIuL1R5cGVTYWNyaWZpY2UiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJTYWNyaWZpY2VkR2x5cGhzIiwNCiAgY29tcG9uZW50czogew0KICAgIFR5cGVTYWNyaWZpY2UNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgYW55U2FjcmlmaWNlczogZmFsc2UsDQogICAgICBoYXNEcmFnb3ZlcjogZmFsc2UsDQogICAgICBoYXNBbHRlcmF0aW9uOiBmYWxzZSwNCiAgICAgIGhpZGVBbHRlcmF0aW9uOiBmYWxzZSwNCiAgICAgIG1heFNhY3JpZmljZTogMCwNCiAgICAgIHRlcmVzYU11bHQ6IDAsDQogICAgICBsYXN0TWFjaGluZXNUZXJlc2E6IG5ldyBEZWNpbWFsKDApLA0KICAgIH07DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgdHlwZXM6ICgpID0+IEdMWVBIX1RZUEVTLmZpbHRlcih0eXBlID0+IHR5cGUgIT09ICJjdXJzZWQiICYmIHR5cGUgIT09ICJjb21wYW5pb24iKSwNCiAgICBsYXN0TWFjaGluZXMoKSB7DQogICAgICByZXR1cm4gdGhpcy5sYXN0TWFjaGluZXNUZXJlc2EubHQoREMuRTEwMDAwKQ0KICAgICAgICA/IGAke3F1YW50aWZ5KCJSZWFsaXR5IE1hY2hpbmUiLCB0aGlzLmxhc3RNYWNoaW5lc1RlcmVzYSwgMil9YA0KICAgICAgICA6IGAke3F1YW50aWZ5KCJJbWFnaW5hcnkgTWFjaGluZSIsIHRoaXMubGFzdE1hY2hpbmVzVGVyZXNhLmRpdmlkZWRCeShEQy5FMTAwMDApLCAyKX1gOw0KICAgIH0sDQogICAgZHJvcERvd25JY29uQ2xhc3MoKSB7DQogICAgICByZXR1cm4gdGhpcy5oaWRlQWx0ZXJhdGlvbiA/ICJmYXIgZmEtcGx1cy1zcXVhcmUiIDogImZhciBmYS1taW51cy1zcXVhcmUiOw0KICAgIH0sDQogICAgaXNEb29tZWQoKSB7DQogICAgICByZXR1cm4gUGVsbGUuaXNEb29tZWQ7DQogICAgfSwNCiAgICBhZGRUaHJlc2hvbGQoKSB7DQogICAgICByZXR1cm4gR2x5cGhBbHRlcmF0aW9uLmFkZGl0aW9uVGhyZXNob2xkOw0KICAgIH0sDQogICAgZW1wb3dlclRocmVzaG9sZCgpIHsNCiAgICAgIHJldHVybiBHbHlwaEFsdGVyYXRpb24uZW1wb3dlcm1lbnRUaHJlc2hvbGQ7DQogICAgfSwNCiAgICBib29zdFRocmVzaG9sZCgpIHsNCiAgICAgIHJldHVybiBHbHlwaEFsdGVyYXRpb24uYm9vc3RpbmdUaHJlc2hvbGQ7DQogICAgfSwNCiAgICBjb3NtZXRpY1R5cGVzOiAoKSA9PiBDb3NtZXRpY0dseXBoVHlwZXMsDQogICAgYWRkU3R5bGUoKSB7DQogICAgICByZXR1cm4geyBjb2xvcjogR2x5cGhBbHRlcmF0aW9uLmJhc2VBZGRpdGlvbkNvbG9yKCkgfTsNCiAgICB9LA0KICAgIGVtcG93ZXJTdHlsZSgpIHsNCiAgICAgIHJldHVybiB7IGNvbG9yOiBHbHlwaEFsdGVyYXRpb24uYmFzZUVtcG93ZXJtZW50Q29sb3IoKSB9Ow0KICAgIH0sDQogICAgYm9vc3RTdHlsZSgpIHsNCiAgICAgIHJldHVybiB7IGNvbG9yOiBHbHlwaEFsdGVyYXRpb24uYmFzZUJvb3N0Q29sb3IoKSB9Ow0KICAgIH0sDQogICAgaGFzU2VlblJlYWxpdHlHbHlwaCgpIHsNCiAgICAgIHJldHVybiBwbGF5ZXIucmVhbGl0eS5nbHlwaHMuY3JlYXRlZFJlYWxpdHlHbHlwaDsNCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5vbiQoR0FNRV9FVkVOVC5HTFlQSF9WSVNVQUxfQ0hBTkdFLCAoKSA9PiB7DQogICAgICB0aGlzLiRyZWNvbXB1dGUoImNvc21ldGljVHlwZXMiKTsNCiAgICB9KTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHVwZGF0ZSgpIHsNCiAgICAgIHRoaXMuYW55U2FjcmlmaWNlcyA9IEdhbWVDYWNoZS5sb2dUb3RhbEdseXBoU2FjcmlmaWNlICE9PSAwOw0KICAgICAgdGhpcy5oYXNBbHRlcmF0aW9uID0gUmEudW5sb2Nrcy5hbHRlcmVkR2x5cGhzLmNhbkJlQXBwbGllZDsNCiAgICAgIHRoaXMuaGlkZUFsdGVyYXRpb24gPSBwbGF5ZXIub3B0aW9ucy5oaWRlQWx0ZXJhdGlvbkVmZmVjdHM7DQogICAgICB0aGlzLm1heFNhY3JpZmljZSA9IEdseXBoU2FjcmlmaWNlSGFuZGxlci5tYXhTYWNyaWZpY2VGb3JFZmZlY3RzOw0KICAgICAgdGhpcy50ZXJlc2FNdWx0ID0gVGVyZXNhLnJ1blJld2FyZE11bHRpcGxpZXI7DQogICAgICB0aGlzLmxhc3RNYWNoaW5lc1RlcmVzYS5jb3B5RnJvbShwbGF5ZXIuY2VsZXN0aWFscy50ZXJlc2EubGFzdFJlcGVhdGVkTWFjaGluZXMpOw0KICAgIH0sDQogICAgZHJhZ292ZXIoZXZlbnQpIHsNCiAgICAgIGlmIChQZWxsZS5pc0Rvb21lZCkgcmV0dXJuOw0KICAgICAgaWYgKCFldmVudC5kYXRhVHJhbnNmZXIudHlwZXMuaW5jbHVkZXMoR0xZUEhfTUlNRV9UWVBFKSkgcmV0dXJuOw0KICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsNCiAgICAgIHRoaXMuaGFzRHJhZ292ZXIgPSB0cnVlOw0KICAgIH0sDQogICAgZHJhZ2xlYXZlKGV2ZW50KSB7DQogICAgICBpZiAoDQogICAgICAgIHRoaXMuaXNEb29tZWQgfHwNCiAgICAgICAgIWV2ZW50LnJlbGF0ZWRUYXJnZXQgfHwNCiAgICAgICAgIWV2ZW50LnJlbGF0ZWRUYXJnZXQuY2xhc3NMaXN0IHx8DQogICAgICAgIGV2ZW50LnJlbGF0ZWRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCJjLWN1cnJlbnQtZ2x5cGgtZWZmZWN0cyIpIHx8DQogICAgICAgIGV2ZW50LnJlbGF0ZWRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCJjLXNhY3JpZmljZWQtZ2x5cGhzX19oZWFkZXIiKSB8fA0KICAgICAgICBldmVudC5yZWxhdGVkVGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygibC1zYWNyaWZpY2VkLWdseXBoc19fdHlwZSIpIHx8DQogICAgICAgIGV2ZW50LnJlbGF0ZWRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCJsLXNhY3JpZmljZWQtZ2x5cGhzX190eXBlLXN5bWJvbCIpIHx8DQogICAgICAgIGV2ZW50LnJlbGF0ZWRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCJsLXNhY3JpZmljZWQtZ2x5cGhzX190eXBlLWFtb3VudCIpIHx8DQogICAgICAgIGV2ZW50LnJlbGF0ZWRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCJjLXNhY3JpZmljZWQtZ2x5cGhzX190eXBlLW5ldy1hbW91bnQiKSB8fA0KICAgICAgICBldmVudC5yZWxhdGVkVGFyZ2V0LmNsYXNzTGlzdC5sZW5ndGggPT09IDApIHJldHVybjsNCiAgICAgIHRoaXMuaGFzRHJhZ292ZXIgPSBmYWxzZTsNCiAgICB9LA0KICAgIGRyb3AoZXZlbnQpIHsNCiAgICAgIGlmICh0aGlzLmlzRG9vbWVkIHx8ICFldmVudC5kYXRhVHJhbnNmZXIudHlwZXMuaW5jbHVkZXMoR0xZUEhfTUlNRV9UWVBFKSkgcmV0dXJuOw0KICAgICAgY29uc3QgaWQgPSBwYXJzZUludChldmVudC5kYXRhVHJhbnNmZXIuZ2V0RGF0YShHTFlQSF9NSU1FX1RZUEUpLCAxMCk7DQogICAgICBpZiAoaXNOYU4oaWQpKSByZXR1cm47DQogICAgICBjb25zdCBnbHlwaCA9IEdseXBocy5maW5kQnlJZChpZCk7DQogICAgICBpZiAoIWdseXBoKSByZXR1cm47DQogICAgICBHbHlwaFNhY3JpZmljZUhhbmRsZXIuc2FjcmlmaWNlR2x5cGgoZ2x5cGgsIHRydWUpOw0KICAgICAgdGhpcy5oYXNEcmFnb3ZlciA9IGZhbHNlOw0KICAgIH0sDQogICAgdG9nZ2xlQWx0ZXJhdGlvbigpIHsNCiAgICAgIHBsYXllci5vcHRpb25zLmhpZGVBbHRlcmF0aW9uRWZmZWN0cyA9ICFwbGF5ZXIub3B0aW9ucy5oaWRlQWx0ZXJhdGlvbkVmZmVjdHM7DQogICAgfSwNCiAgICBnbHlwaFN5bWJvbCh0eXBlKSB7DQogICAgICByZXR1cm4gdGhpcy5jb3NtZXRpY1R5cGVzW3R5cGVdLmN1cnJlbnRTeW1ib2wuc3ltYm9sOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["SacrificedGlyphs.vue"],"names":[],"mappingsfile":"SacrificedGlyphs.vue","sourceRoot":"src/components/tabs/glyphs","sourcesContent":["<script>\r\nimport { DC } from \"@/core/constants\";\r\n\r\nimport TypeSacrifice from \"./TypeSacrifice\";\r\n\r\nexport default {\r\n  name: \"SacrificedGlyphs\",\r\n  components: {\r\n    TypeSacrifice\r\n  },\r\n  data() {\r\n    return {\r\n      anySacrifices: false,\r\n      hasDragover: false,\r\n      hasAlteration: false,\r\n      hideAlteration: false,\r\n      maxSacrifice: 0,\r\n      teresaMult: 0,\r\n      lastMachinesTeresa: new Decimal(0),\r\n    };\r\n  },\r\n  computed: {\r\n    types: () => GLYPH_TYPES.filter(type => type !== \"cursed\" && type !== \"companion\"),\r\n    lastMachines() {\r\n      return this.lastMachinesTeresa.lt(DC.E10000)\r\n        ? `${quantify(\"Reality Machine\", this.lastMachinesTeresa, 2)}`\r\n        : `${quantify(\"Imaginary Machine\", this.lastMachinesTeresa.dividedBy(DC.E10000), 2)}`;\r\n    },\r\n    dropDownIconClass() {\r\n      return this.hideAlteration ? \"far fa-plus-square\" : \"far fa-minus-square\";\r\n    },\r\n    isDoomed() {\r\n      return Pelle.isDoomed;\r\n    },\r\n    addThreshold() {\r\n      return GlyphAlteration.additionThreshold;\r\n    },\r\n    empowerThreshold() {\r\n      return GlyphAlteration.empowermentThreshold;\r\n    },\r\n    boostThreshold() {\r\n      return GlyphAlteration.boostingThreshold;\r\n    },\r\n    cosmeticTypes: () => CosmeticGlyphTypes,\r\n    addStyle() {\r\n      return { color: GlyphAlteration.baseAdditionColor() };\r\n    },\r\n    empowerStyle() {\r\n      return { color: GlyphAlteration.baseEmpowermentColor() };\r\n    },\r\n    boostStyle() {\r\n      return { color: GlyphAlteration.baseBoostColor() };\r\n    },\r\n    hasSeenRealityGlyph() {\r\n      return player.reality.glyphs.createdRealityGlyph;\r\n    }\r\n  },\r\n  created() {\r\n    this.on$(GAME_EVENT.GLYPH_VISUAL_CHANGE, () => {\r\n      this.$recompute(\"cosmeticTypes\");\r\n    });\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.anySacrifices = GameCache.logTotalGlyphSacrifice !== 0;\r\n      this.hasAlteration = Ra.unlocks.alteredGlyphs.canBeApplied;\r\n      this.hideAlteration = player.options.hideAlterationEffects;\r\n      this.maxSacrifice = GlyphSacrificeHandler.maxSacrificeForEffects;\r\n      this.teresaMult = Teresa.runRewardMultiplier;\r\n      this.lastMachinesTeresa.copyFrom(player.celestials.teresa.lastRepeatedMachines);\r\n    },\r\n    dragover(event) {\r\n      if (Pelle.isDoomed) return;\r\n      if (!event.dataTransfer.types.includes(GLYPH_MIME_TYPE)) return;\r\n      event.preventDefault();\r\n      this.hasDragover = true;\r\n    },\r\n    dragleave(event) {\r\n      if (\r\n        this.isDoomed ||\r\n        !event.relatedTarget ||\r\n        !event.relatedTarget.classList ||\r\n        event.relatedTarget.classList.contains(\"c-current-glyph-effects\") ||\r\n        event.relatedTarget.classList.contains(\"c-sacrificed-glyphs__header\") ||\r\n        event.relatedTarget.classList.contains(\"l-sacrificed-glyphs__type\") ||\r\n        event.relatedTarget.classList.contains(\"l-sacrificed-glyphs__type-symbol\") ||\r\n        event.relatedTarget.classList.contains(\"l-sacrificed-glyphs__type-amount\") ||\r\n        event.relatedTarget.classList.contains(\"c-sacrificed-glyphs__type-new-amount\") ||\r\n        event.relatedTarget.classList.length === 0) return;\r\n      this.hasDragover = false;\r\n    },\r\n    drop(event) {\r\n      if (this.isDoomed || !event.dataTransfer.types.includes(GLYPH_MIME_TYPE)) return;\r\n      const id = parseInt(event.dataTransfer.getData(GLYPH_MIME_TYPE), 10);\r\n      if (isNaN(id)) return;\r\n      const glyph = Glyphs.findById(id);\r\n      if (!glyph) return;\r\n      GlyphSacrificeHandler.sacrificeGlyph(glyph, true);\r\n      this.hasDragover = false;\r\n    },\r\n    toggleAlteration() {\r\n      player.options.hideAlterationEffects = !player.options.hideAlterationEffects;\r\n    },\r\n    glyphSymbol(type) {\r\n      return this.cosmeticTypes[type].currentSymbol.symbol;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"c-current-glyph-effects l-current-glyph-effects\"\r\n    :class=\"{'c-sacrificed-glyphs--dragover': hasDragover}\"\r\n    @dragover=\"dragover\"\r\n    @dragleave=\"dragleave\"\r\n    @drop=\"drop\"\r\n  >\r\n    <div class=\"l-sacrificed-glyphs__help\">\r\n      <span\r\n        v-if=\"isDoomed\"\r\n        class=\"pelle-current-glyph-effects\"\r\n      >\r\n        You cannot sacrifice Glyphs while Doomed.\r\n      </span>\r\n      <span v-else>\r\n        <div>Drag Glyphs here or shift-click to Sacrifice.</div>\r\n        <div>The confirmation can be disabled in Options or by holding Ctrl.</div>\r\n      </span>\r\n    </div>\r\n    <div v-if=\"hasAlteration\">\r\n      <span\r\n        class=\"c-altered-glyphs-toggle-button\"\r\n        @click=\"toggleAlteration\"\r\n      >\r\n        <i :class=\"dropDownIconClass\" />\r\n        <b> Altered Glyphs</b>\r\n      </span>\r\n      <br>\r\n      <div v-if=\"hideAlteration\">\r\n        (Details hidden, click to unhide)\r\n      </div>\r\n      <div v-else>\r\n        Glyph types will have one of their effects improved<br>\r\n        when their Glyph type's total sacrifice value is above:\r\n        <br><br>\r\n        <b>\r\n          <span :style=\"addStyle\">{{ format(addThreshold) }} - an additional secondary effect</span>\r\n          <br>\r\n          <span :style=\"empowerStyle\">{{ format(empowerThreshold) }} - formula drastically improved</span>\r\n          <br>\r\n          <span :style=\"boostStyle\">{{ format(boostThreshold) }} - a boost depending on Glyph Sacrifice</span>\r\n        </b>\r\n        <br><br>\r\n        All effects from Glyph Sacrifice can no longer be increased once they reach {{ format(maxSacrifice) }}.\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <div class=\"c-sacrificed-glyphs__header\">\r\n      Glyph Sacrifice Boosts:\r\n    </div>\r\n    <div v-if=\"anySacrifices && !isDoomed\">\r\n      <div v-if=\"teresaMult > 1\">\r\n        Glyph sacrifice values are multiplied by {{ formatX(teresaMult, 2, 2) }};\r\n        Teresa was last done at {{ lastMachines }}.\r\n        <span v-if=\"hasSeenRealityGlyph\">\r\n          Reality Glyphs are unaffected by this multiplier and have no altered effects.\r\n        </span>\r\n      </div>\r\n      <template v-for=\"type in types\">\r\n        <TypeSacrifice\r\n          :key=\"type + glyphSymbol(type)\"\r\n          :type=\"type\"\r\n          :has-dragover=\"hasDragover\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div\r\n      v-else-if=\"isDoomed\"\r\n      class=\"pelle-current-glyph-effects\"\r\n    >\r\n      All boosts from Glyph Sacrifice are disabled while Doomed, including changes to effects due to Altered Glyphs.\r\n    </div>\r\n    <div v-else>\r\n      You haven't Sacrificed any Glyphs yet!\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}