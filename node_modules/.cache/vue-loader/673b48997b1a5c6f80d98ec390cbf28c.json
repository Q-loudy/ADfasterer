{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\statistics\\StatisticsTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\statistics\\StatisticsTab.vue","mtime":1745241597448},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StatisticsTab.vue"],"names":[],"mappingsfile":"StatisticsTab.vue","sourceRoot":"src/components/tabs/statistics","sourcesContent":["<script>\r\nimport { MatterScale } from \"./matter-scale\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\n\r\nexport default {\r\n  name: \"StatisticsTab\",\r\n  components: {\r\n    PrimaryButton\r\n  },\r\n  data() {\r\n    return {\r\n      isDoomed: false,\r\n      realTimeDoomed: TimeSpan.zero,\r\n      totalAntimatter: new Decimal(0),\r\n      realTimePlayed: TimeSpan.zero,\r\n      timeSinceCreation: 0,\r\n      uniqueNews: 0,\r\n      totalNews: 0,\r\n      secretAchievementCount: 0,\r\n      infinity: {\r\n        isUnlocked: false,\r\n        count: new Decimal(0),\r\n        banked: new Decimal(0),\r\n        projectedBanked: new Decimal(0),\r\n        bankRate: new Decimal(0),\r\n        hasBest: false,\r\n        best: TimeSpan.zero,\r\n        this: TimeSpan.zero,\r\n        thisReal: TimeSpan.zero,\r\n        bestRate: new Decimal(0),\r\n      },\r\n      eternity: {\r\n        isUnlocked: false,\r\n        count: new Decimal(0),\r\n        hasBest: false,\r\n        best: TimeSpan.zero,\r\n        this: TimeSpan.zero,\r\n        thisReal: TimeSpan.zero,\r\n        bestRate: new Decimal(0),\r\n      },\r\n      reality: {\r\n        isUnlocked: false,\r\n        count: 0,\r\n        best: TimeSpan.zero,\r\n        bestReal: TimeSpan.zero,\r\n        this: TimeSpan.zero,\r\n        thisReal: TimeSpan.zero,\r\n        totalTimePlayed: TimeSpan.zero,\r\n        bestRate: new Decimal(0),\r\n        bestRarity: 0,\r\n      },\r\n      matterScale: [],\r\n      lastMatterTime: 0,\r\n      paperclips: 0,\r\n      fullTimePlayed: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    // These are here to avoid extra spaces in-game pre-reality and to get around codefactor 120-char limits in the\r\n    // HTML template due to the fact that adding a linebreak also adds a space\r\n    infinityCountString() {\r\n      const num = this.infinity.count;\r\n      return num.gt(0)\r\n        ? `${this.formatDecimalAmount(num)} ${pluralize(\"Infinity\", num.floor())}`\r\n        : \"no Infinities\";\r\n    },\r\n    eternityCountString() {\r\n      const num = this.eternity.count;\r\n      return num.gt(0)\r\n        ? `${this.formatDecimalAmount(num)} ${pluralize(\"Eternity\", num.floor())}`\r\n        : \"no Eternities\";\r\n    },\r\n    fullGameCompletions() {\r\n      return player.records.fullGameCompletions;\r\n    },\r\n    startDate() {\r\n      return Time.toDateTimeString(player.records.gameCreatedTime);\r\n    },\r\n    saveAge() {\r\n      return TimeSpan.fromMilliseconds(this.timeSinceCreation);\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      const records = player.records;\r\n      this.totalAntimatter.copyFrom(records.totalAntimatter);\r\n      this.realTimePlayed.setFrom(records.realTimePlayed);\r\n      this.fullTimePlayed = TimeSpan.fromMilliseconds(records.previousRunRealTime + records.realTimePlayed);\r\n      this.uniqueNews = NewsHandler.uniqueTickersSeen;\r\n      this.totalNews = player.news.totalSeen;\r\n      this.secretAchievementCount = SecretAchievements.all.filter(a => a.isUnlocked).length;\r\n      this.timeSinceCreation = Date.now() - player.records.gameCreatedTime;\r\n\r\n      const progress = PlayerProgress.current;\r\n      const isInfinityUnlocked = progress.isInfinityUnlocked;\r\n      const infinity = this.infinity;\r\n      const bestInfinity = records.bestInfinity;\r\n      infinity.isUnlocked = isInfinityUnlocked;\r\n      if (isInfinityUnlocked) {\r\n        infinity.count.copyFrom(Currency.infinities);\r\n        infinity.banked.copyFrom(Currency.infinitiesBanked);\r\n        infinity.projectedBanked = new Decimal(0).plusEffectsOf(\r\n          Achievement(131).effects.bankedInfinitiesGain,\r\n          TimeStudy(191)\r\n        );\r\n        infinity.bankRate = infinity.projectedBanked.div(Math.clampMin(33, records.thisEternity.time)).times(60000);\r\n        infinity.hasBest = bestInfinity.time < 999999999999;\r\n        infinity.best.setFrom(bestInfinity.time);\r\n        infinity.this.setFrom(records.thisInfinity.time);\r\n        infinity.bestRate.copyFrom(bestInfinity.bestIPminEternity);\r\n      }\r\n\r\n      const isEternityUnlocked = progress.isEternityUnlocked;\r\n      const eternity = this.eternity;\r\n      const bestEternity = records.bestEternity;\r\n      eternity.isUnlocked = isEternityUnlocked;\r\n      if (isEternityUnlocked) {\r\n        eternity.count.copyFrom(Currency.eternities);\r\n        eternity.hasBest = bestEternity.time < 999999999999;\r\n        eternity.best.setFrom(bestEternity.time);\r\n        eternity.this.setFrom(records.thisEternity.time);\r\n        eternity.bestRate.copyFrom(bestEternity.bestEPminReality);\r\n      }\r\n\r\n      const isRealityUnlocked = progress.isRealityUnlocked;\r\n      const reality = this.reality;\r\n      const bestReality = records.bestReality;\r\n      reality.isUnlocked = isRealityUnlocked;\r\n\r\n      if (isRealityUnlocked) {\r\n        reality.count = Math.floor(Currency.realities.value);\r\n        reality.best.setFrom(bestReality.time);\r\n        reality.bestReal.setFrom(bestReality.realTime);\r\n        reality.this.setFrom(records.thisReality.time);\r\n        reality.totalTimePlayed.setFrom(records.totalTimePlayed);\r\n        // Real time tracking is only a thing once reality is unlocked:\r\n        infinity.thisReal.setFrom(records.thisInfinity.realTime);\r\n        infinity.bankRate = infinity.projectedBanked.div(Math.clampMin(33, records.thisEternity.realTime)).times(60000);\r\n        eternity.thisReal.setFrom(records.thisEternity.realTime);\r\n        reality.thisReal.setFrom(records.thisReality.realTime);\r\n        reality.bestRate.copyFrom(bestReality.RMmin);\r\n        reality.bestRarity = Math.max(strengthToRarity(bestReality.glyphStrength), 0);\r\n      }\r\n      this.updateMatterScale();\r\n\r\n      this.isDoomed = Pelle.isDoomed;\r\n      this.realTimeDoomed.setFrom(player.records.realTimeDoomed);\r\n      this.paperclips = player.news.specialTickerData.paperclips;\r\n    },\r\n    formatDecimalAmount(value) {\r\n      return value.gt(1e9) ? format(value, 3) : formatInt(Math.floor(value.toNumber()));\r\n    },\r\n    // Only updates once per second to reduce jitter\r\n    updateMatterScale() {\r\n      if (Date.now() - this.lastMatterTime > 1000) {\r\n        this.matterScale = MatterScale.estimate(Currency.antimatter.value);\r\n        this.lastMatterTime = Date.now();\r\n      }\r\n    },\r\n    realityClassObject() {\r\n      return {\r\n        \"c-stats-tab-title\": true,\r\n        \"c-stats-tab-reality\": !this.isDoomed,\r\n        \"c-stats-tab-doomed\": this.isDoomed,\r\n      };\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"c-stats-tab\">\r\n    <div>\r\n      <PrimaryButton onclick=\"Modal.catchup.show(0)\">\r\n        View Content Summary\r\n      </PrimaryButton>\r\n      <div class=\"c-stats-tab-title c-stats-tab-general\">\r\n        General\r\n      </div>\r\n      <div class=\"c-stats-tab-general\">\r\n        <div>You have made a total of {{ format(totalAntimatter, 2, 1) }} antimatter.</div>\r\n        <div>You have played for {{ realTimePlayed }}. (real time)</div>\r\n        <div v-if=\"reality.isUnlocked\">\r\n          Your existence has spanned {{ reality.totalTimePlayed }} of time. (game time)\r\n        </div>\r\n        <div>\r\n          Your save was created on {{ startDate }} ({{ saveAge }} ago)\r\n        </div>\r\n        <br>\r\n        <div>\r\n          You have seen {{ quantifyInt(\"news message\", totalNews) }} in total.\r\n        </div>\r\n        <div>\r\n          You have seen {{ quantifyInt(\"unique news message\", uniqueNews) }}.\r\n        </div>\r\n        <div>\r\n          You have unlocked {{ quantifyInt(\"Secret Achievement\", secretAchievementCount) }}.\r\n        </div>\r\n        <div v-if=\"paperclips\">\r\n          You have {{ quantifyInt(\"useless paperclip\", paperclips) }}.\r\n        </div>\r\n        <div v-if=\"fullGameCompletions\">\r\n          <br>\r\n          <b>\r\n            You have completed the entire game {{ quantifyInt(\"time\", fullGameCompletions) }}.\r\n            <br>\r\n            You have played for {{ fullTimePlayed }} across all playthroughs.\r\n          </b>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <br>\r\n        <div class=\"c-matter-scale-container c-stats-tab-general\">\r\n          <div\r\n            v-for=\"(line, i) in matterScale\"\r\n            :key=\"i\"\r\n          >\r\n            {{ line }}\r\n          </div>\r\n          <br v-if=\"matterScale.length < 2\">\r\n          <br v-if=\"matterScale.length < 3\">\r\n        </div>\r\n      </div>\r\n      <br>\r\n    </div>\r\n    <div\r\n      v-if=\"infinity.isUnlocked\"\r\n      class=\"c-stats-tab-subheader c-stats-tab-general\"\r\n    >\r\n      <div class=\"c-stats-tab-title c-stats-tab-infinity\">\r\n        Infinity\r\n      </div>\r\n      <div>\r\n        You have {{ infinityCountString }}<span v-if=\"eternity.isUnlocked\"> this Eternity</span>.\r\n      </div>\r\n      <div v-if=\"infinity.banked.gt(0)\">\r\n        You have {{ formatDecimalAmount(infinity.banked.floor()) }}\r\n        {{ pluralize(\"Banked Infinity\", infinity.banked.floor()) }}.\r\n      </div>\r\n      <div v-if=\"infinity.hasBest\">\r\n        Your fastest Infinity was {{ infinity.best.toStringShort() }}.\r\n      </div>\r\n      <div v-else>\r\n        You have no fastest Infinity<span v-if=\"eternity.isUnlocked\"> this Eternity</span>.\r\n      </div>\r\n      <div>\r\n        You have spent {{ infinity.this.toStringShort() }} in this Infinity.\r\n        <span v-if=\"reality.isUnlocked\">\r\n          ({{ infinity.thisReal.toStringShort() }} real time)\r\n        </span>\r\n      </div>\r\n      <div>\r\n        Your best Infinity Points per minute\r\n        <span v-if=\"eternity.count.gt(0)\">this Eternity </span>\r\n        is {{ format(infinity.bestRate, 2, 2) }}.\r\n      </div>\r\n      <br>\r\n    </div>\r\n    <div\r\n      v-if=\"eternity.isUnlocked\"\r\n      class=\"c-stats-tab-subheader c-stats-tab-general\"\r\n    >\r\n      <div class=\"c-stats-tab-title c-stats-tab-eternity\">\r\n        Eternity\r\n      </div>\r\n      <div>\r\n        You have {{ eternityCountString }}<span v-if=\"reality.isUnlocked\"> this Reality</span>.\r\n      </div>\r\n      <div v-if=\"infinity.projectedBanked.gt(0)\">\r\n        You will gain {{ formatDecimalAmount(infinity.projectedBanked.floor()) }}\r\n        {{ pluralize(\"Banked Infinity\", infinity.projectedBanked.floor()) }} on Eternity\r\n        ({{ formatDecimalAmount(infinity.bankRate) }} per minute).\r\n      </div>\r\n      <div v-else-if=\"infinity.banked.gt(0)\">\r\n        You will gain no Banked Infinities on Eternity.\r\n      </div>\r\n      <div v-if=\"eternity.hasBest\">\r\n        Your fastest Eternity was {{ eternity.best.toStringShort() }}.\r\n      </div>\r\n      <div v-else>\r\n        You have no fastest Eternity<span v-if=\"reality.isUnlocked\"> this Reality</span>.\r\n      </div>\r\n      <div>\r\n        You have spent {{ eternity.this.toStringShort() }} in this Eternity.\r\n        <span v-if=\"reality.isUnlocked\">\r\n          ({{ eternity.thisReal.toStringShort() }} real time)\r\n        </span>\r\n      </div>\r\n      <div>\r\n        Your best Eternity Points per minute\r\n        <span v-if=\"reality.isUnlocked\">this Reality </span>\r\n        is {{ format(eternity.bestRate, 2, 2) }}.\r\n      </div>\r\n      <br>\r\n    </div>\r\n    <div\r\n      v-if=\"reality.isUnlocked\"\r\n      class=\"c-stats-tab-subheader c-stats-tab-general\"\r\n    >\r\n      <div :class=\"realityClassObject()\">\r\n        {{ isDoomed ? \"Doomed Reality\" : \"Reality\" }}\r\n      </div>\r\n      <div>You have {{ quantifyInt(\"Reality\", reality.count) }}.</div>\r\n      <div>Your fastest game-time Reality was {{ reality.best.toStringShort() }}.</div>\r\n      <div>Your fastest real-time Reality was {{ reality.bestReal.toStringShort() }}.</div>\r\n      <div :class=\"{ 'c-stats-tab-doomed' : isDoomed }\">\r\n        You have spent {{ reality.this.toStringShort() }}\r\n        in this {{ isDoomed ? \"Armageddon\" : \"Reality\" }}.\r\n        ({{ reality.thisReal.toStringShort() }} real time)\r\n      </div>\r\n      <div\r\n        v-if=\"isDoomed\"\r\n        class=\"c-stats-tab-doomed\"\r\n      >\r\n        You have been Doomed for {{ realTimeDoomed.toStringShort() }}, real time.\r\n      </div>\r\n      <div>\r\n        Your best Reality Machines per minute is {{ format(reality.bestRate, 2, 2) }}.\r\n      </div>\r\n      <div>Your best Glyph rarity is {{ formatRarity(reality.bestRarity) }}.</div>\r\n      <br>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-matter-scale-container {\r\n  height: 5rem;\r\n}\r\n\r\n.c-stats-tab-general {\r\n  color: var(--color-text);\r\n}\r\n\r\n.c-stats-tab-title {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.c-stats-tab-subheader {\r\n  height: 15rem;\r\n}\r\n\r\n.c-stats-tab-infinity {\r\n  color: var(--color-infinity);\r\n}\r\n\r\n.c-stats-tab-eternity {\r\n  color: var(--color-eternity);\r\n}\r\n\r\n.c-stats-tab-reality {\r\n  color: var(--color-reality);\r\n}\r\n\r\n.c-stats-tab-doomed {\r\n  color: var(--color-pelle--base);\r\n}\r\n</style>"]}]}