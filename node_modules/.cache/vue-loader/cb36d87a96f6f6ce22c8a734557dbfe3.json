{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-ra\\RaTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-ra\\RaTab.vue","mtime":1745241597153},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQ2VsZXN0aWFsUXVvdGVIaXN0b3J5IGZyb20gIkAvY29tcG9uZW50cy9DZWxlc3RpYWxRdW90ZUhpc3RvcnkiOw0KaW1wb3J0IFJhUGV0IGZyb20gIi4vUmFQZXQiOw0KaW1wb3J0IFJhUGV0UmVtZW1icmFuY2VCdXR0b24gZnJvbSAiLi9SYVBldFJlbWVtYnJhbmNlQnV0dG9uIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiUmFUYWIiLA0KICBjb21wb25lbnRzOiB7DQogICAgUmFQZXQsDQogICAgUmFQZXRSZW1lbWJyYW5jZUJ1dHRvbiwNCiAgICBDZWxlc3RpYWxRdW90ZUhpc3RvcnkNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbWVtb3JpZXNQZXJDaHVuazogMCwNCiAgICAgIHNob3dSZWFsaXR5OiBmYWxzZSwNCiAgICAgIGlzUmFDYXBwZWQ6IGZhbHNlLA0KICAgICAgdG90YWxMZXZlbHM6IDAsDQogICAgICBzaG93UmVtZW1icmFuY2U6IGZhbHNlLA0KICAgICAgaGFzUmVtZW1icmFuY2U6IGZhbHNlLA0KICAgICAgcmVtZW1icmFuY2VSZXE6IDAsDQogICAgICByZW1lbWJyYW5jZU11bHQ6IDEsDQogICAgICByZW1lbWJyYW5jZU5lcmY6IDEsDQogICAgICBwZXRXaXRoUmVtZW1icmFuY2U6ICIiLA0KICAgICAgaXNSdW5uaW5nOiBmYWxzZSwNCiAgICAgIG1lbW9yeUJvb3N0czogIiIsDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBsYWl0ZWxhVW5sb2NrOiAoKSA9PiBMYWl0ZWxhLmlzVW5sb2NrZWQsDQogICAgcGV0czogKCkgPT4gWw0KICAgICAgew0KICAgICAgICBwZXQ6IFJhLnBldHMudGVyZXNhLA0KICAgICAgICBzY2FsaW5nVXBncmFkZVZpc2libGU6ICgpID0+IFJhLnVubG9ja3MuY2hhcmdlZEluZmluaXR5VXBncmFkZXMuaXNVbmxvY2tlZCwNCiAgICAgICAgc2NhbGluZ1VwZ3JhZGVUZXh0OiAoKSA9PiBgWW91IGNhbiBDaGFyZ2UgJHtxdWFudGlmeUludCgiSW5maW5pdHkgVXBncmFkZSIsIFJhLnRvdGFsQ2hhcmdlcyl9LmAsDQogICAgICB9LA0KICAgICAgew0KICAgICAgICBwZXQ6IFJhLnBldHMuZWZmYXJpZywNCiAgICAgICAgc2NhbGluZ1VwZ3JhZGVWaXNpYmxlOiAoKSA9PiBBbGNoZW15UmVzb3VyY2VzLmFsbC5maWx0ZXIociA9PiByLmlzVW5sb2NrZWQpLmxlbmd0aCA+IDAsDQogICAgICAgIHNjYWxpbmdVcGdyYWRlVGV4dDogKCkgPT4gew0KICAgICAgICAgIGNvbnN0IHJlc291cmNlcyA9IEFsY2hlbXlSZXNvdXJjZXMuYWxsLmZpbHRlcihyID0+IHIuaXNVbmxvY2tlZCkubGVuZ3RoOw0KICAgICAgICAgIHJldHVybiBgWW91IGhhdmUgdW5sb2NrZWQgJHtxdWFudGlmeUludCgiQWxjaGVteSBSZXNvdXJjZSIsIHJlc291cmNlcyl9LmA7DQogICAgICAgIH0sDQogICAgICB9LA0KICAgICAgew0KICAgICAgICBwZXQ6IFJhLnBldHMuZW5zbGF2ZWQsDQogICAgICAgIHNjYWxpbmdVcGdyYWRlVmlzaWJsZTogKCkgPT4gUmEudW5sb2Nrcy5pbXByb3ZlZFN0b3JlZFRpbWUuaXNVbmxvY2tlZCwNCiAgICAgICAgc2NhbGluZ1VwZ3JhZGVUZXh0OiAoKSA9PiBgU3RvcmVkIGdhbWUgdGltZQ0KICAgICAgICAgICR7Zm9ybWF0WChSYS51bmxvY2tzLmltcHJvdmVkU3RvcmVkVGltZS5lZmZlY3RzLmdhbWVUaW1lQW1wbGlmaWNhdGlvbi5lZmZlY3RPckRlZmF1bHQoMSksIDIpfSBhbmQgcmVhbCB0aW1lDQogICAgICAgICAgKyR7Zm9ybWF0SW50KFJhLnVubG9ja3MuaW1wcm92ZWRTdG9yZWRUaW1lLmVmZmVjdHMucmVhbFRpbWVDYXAuZWZmZWN0T3JEZWZhdWx0KDApIC8gKDEwMDAgKiAzNjAwKSl9IGhvdXJzYCwNCiAgICAgIH0sDQogICAgICB7DQogICAgICAgIHBldDogUmEucGV0cy52LA0KICAgICAgICBzY2FsaW5nVXBncmFkZVZpc2libGU6ICgpID0+IFJhLnVubG9ja3MudW5sb2NrSGFyZFYuaXNVbmxvY2tlZCwNCiAgICAgICAgc2NhbGluZ1VwZ3JhZGVUZXh0OiAoKSA9PiB7DQogICAgICAgICAgY29uc3QgdHJpYWRDb3VudCA9IFJhLnVubG9ja3MudW5sb2NrSGFyZFYuZWZmZWN0T3JEZWZhdWx0KDApOw0KICAgICAgICAgIHJldHVybiBgWW91IGhhdmUgdW5sb2NrZWQgJHtxdWFudGlmeUludCgiVHJpYWQgU3R1ZHkiLCB0cmlhZENvdW50KX0uYDsNCiAgICAgICAgfSwNCiAgICAgIH0NCiAgICBdLA0KICAgIHBldFN0eWxlKCkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgY29sb3I6ICh0aGlzLnBldFdpdGhSZW1lbWJyYW5jZSA9PT0gIiIpDQogICAgICAgICAgPyAid2hpdGUiDQogICAgICAgICAgOiB0aGlzLnBldHMuZmluZChwZXQgPT4gcGV0LnBldC5uYW1lID09PSB0aGlzLnBldFdpdGhSZW1lbWJyYW5jZSkucGV0LmNvbG9yLA0KICAgICAgfTsNCiAgICB9LA0KICAgIHJ1bkJ1dHRvbkNsYXNzT2JqZWN0KCkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgImMtcmEtcnVuLWJ1dHRvbl9faWNvbiI6IHRydWUsDQogICAgICAgICJjLXJhLXJ1bi1idXR0b25fX2ljb24tLXJ1bm5pbmciOiB0aGlzLmlzUnVubmluZywNCiAgICAgICAgImMtY2VsZXN0aWFsLXJ1bi1idXR0b24tLWNsaWNrYWJsZSI6ICF0aGlzLmlzRG9vbWVkLA0KICAgICAgICAiby1wZWxsZS1kaXNhYmxlZC1wb2ludGVyIjogdGhpcy5pc0Rvb21lZA0KICAgICAgfTsNCiAgICB9LA0KICAgIHJ1bkRlc2NyaXB0aW9uKCkgew0KICAgICAgcmV0dXJuIEdhbWVEYXRhYmFzZS5jZWxlc3RpYWxzLmRlc2NyaXB0aW9uc1s0XS5lZmZlY3RzKCkucmVwbGFjZSgvXlx3L3UsIGMgPT4gYy50b1VwcGVyQ2FzZSgpKS5zcGxpdCgiXG4iKTsNCiAgICB9LA0KICAgIG1lbW9yeURlc2NyaXB0aW9uKCkgew0KICAgICAgcmV0dXJuIGBXaXRoaW4gUmEncyBSZWFsaXR5LCBNZW1vcnkgQ2h1bmtzIGZvciBDZWxlc3RpYWwgTWVtb3JpZXMNCiAgICAgICAgd2lsbCBiZSBnZW5lcmF0ZWQgYmFzZWQgb24gY2VydGFpbiByZXNvdXJjZSBhbW91bnRzLmA7DQogICAgfSwNCiAgICBpc0Rvb21lZDogKCkgPT4gUGVsbGUuaXNEb29tZWQsDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB1cGRhdGUoKSB7DQogICAgICB0aGlzLm1lbW9yaWVzUGVyQ2h1bmsgPSBSYS5wcm9kdWN0aW9uUGVyTWVtb3J5Q2h1bms7DQogICAgICB0aGlzLmlzUmFDYXBwZWQgPSBSYS50b3RhbFBldExldmVsID09PSAxMDA7DQogICAgICB0aGlzLnRvdGFsTGV2ZWxzID0gUmEudG90YWxQZXRMZXZlbDsNCiAgICAgIHRoaXMuc2hvd1JlbWVtYnJhbmNlID0gUmEudW5sb2Nrcy5lZmZhcmlnVW5sb2NrLmNhbkJlQXBwbGllZDsNCiAgICAgIHRoaXMuaGFzUmVtZW1icmFuY2UgPSBSYS5yZW1lbWJyYW5jZS5pc1VubG9ja2VkOw0KICAgICAgdGhpcy5yZW1lbWJyYW5jZVJlcSA9IFJhLnJlbWVtYnJhbmNlLnJlcXVpcmVkTGV2ZWxzOw0KICAgICAgdGhpcy5yZW1lbWJyYW5jZU11bHQgPSBSYS5yZW1lbWJyYW5jZS5tdWx0aXBsaWVyOw0KICAgICAgdGhpcy5yZW1lbWJyYW5jZU5lcmYgPSBSYS5yZW1lbWJyYW5jZS5uZXJmOw0KICAgICAgdGhpcy5wZXRXaXRoUmVtZW1icmFuY2UgPSBSYS5wZXRXaXRoUmVtZW1icmFuY2U7DQogICAgICB0aGlzLmlzUnVubmluZyA9IFJhLmlzUnVubmluZzsNCiAgICAgIHRoaXMubWVtb3J5Qm9vc3RzID0gUmEubWVtb3J5Qm9vc3RSZXNvdXJjZXM7DQogICAgfSwNCiAgICBzdGFydFJ1bigpIHsNCiAgICAgIGlmICh0aGlzLmlzRG9vbWVkKSByZXR1cm47DQogICAgICBNb2RhbC5jZWxlc3RpYWxzLnNob3coeyBuYW1lOiAiUmEncyIsIG51bWJlcjogNCB9KTsNCiAgICB9LA0KICAgIHRvZ2dsZU1vZGUoKSB7DQogICAgICBSYS50b2dnbGVNb2RlKCk7DQogICAgfQ0KICB9LA0KfTsNCg=="},{"version":3,"sources":["RaTab.vue"],"names":[],"mappingsfile":"RaTab.vue","sourceRoot":"src/components/tabs/celestial-ra","sourcesContent":["<script>\r\nimport CelestialQuoteHistory from \"@/components/CelestialQuoteHistory\";\r\nimport RaPet from \"./RaPet\";\r\nimport RaPetRemembranceButton from \"./RaPetRemembranceButton\";\r\n\r\nexport default {\r\n  name: \"RaTab\",\r\n  components: {\r\n    RaPet,\r\n    RaPetRemembranceButton,\r\n    CelestialQuoteHistory\r\n  },\r\n  data() {\r\n    return {\r\n      memoriesPerChunk: 0,\r\n      showReality: false,\r\n      isRaCapped: false,\r\n      totalLevels: 0,\r\n      showRemembrance: false,\r\n      hasRemembrance: false,\r\n      remembranceReq: 0,\r\n      remembranceMult: 1,\r\n      remembranceNerf: 1,\r\n      petWithRemembrance: \"\",\r\n      isRunning: false,\r\n      memoryBoosts: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    laitelaUnlock: () => Laitela.isUnlocked,\r\n    pets: () => [\r\n      {\r\n        pet: Ra.pets.teresa,\r\n        scalingUpgradeVisible: () => Ra.unlocks.chargedInfinityUpgrades.isUnlocked,\r\n        scalingUpgradeText: () => `You can Charge ${quantifyInt(\"Infinity Upgrade\", Ra.totalCharges)}.`,\r\n      },\r\n      {\r\n        pet: Ra.pets.effarig,\r\n        scalingUpgradeVisible: () => AlchemyResources.all.filter(r => r.isUnlocked).length > 0,\r\n        scalingUpgradeText: () => {\r\n          const resources = AlchemyResources.all.filter(r => r.isUnlocked).length;\r\n          return `You have unlocked ${quantifyInt(\"Alchemy Resource\", resources)}.`;\r\n        },\r\n      },\r\n      {\r\n        pet: Ra.pets.enslaved,\r\n        scalingUpgradeVisible: () => Ra.unlocks.improvedStoredTime.isUnlocked,\r\n        scalingUpgradeText: () => `Stored game time\r\n          ${formatX(Ra.unlocks.improvedStoredTime.effects.gameTimeAmplification.effectOrDefault(1), 2)} and real time\r\n          +${formatInt(Ra.unlocks.improvedStoredTime.effects.realTimeCap.effectOrDefault(0) / (1000 * 3600))} hours`,\r\n      },\r\n      {\r\n        pet: Ra.pets.v,\r\n        scalingUpgradeVisible: () => Ra.unlocks.unlockHardV.isUnlocked,\r\n        scalingUpgradeText: () => {\r\n          const triadCount = Ra.unlocks.unlockHardV.effectOrDefault(0);\r\n          return `You have unlocked ${quantifyInt(\"Triad Study\", triadCount)}.`;\r\n        },\r\n      }\r\n    ],\r\n    petStyle() {\r\n      return {\r\n        color: (this.petWithRemembrance === \"\")\r\n          ? \"white\"\r\n          : this.pets.find(pet => pet.pet.name === this.petWithRemembrance).pet.color,\r\n      };\r\n    },\r\n    runButtonClassObject() {\r\n      return {\r\n        \"c-ra-run-button__icon\": true,\r\n        \"c-ra-run-button__icon--running\": this.isRunning,\r\n        \"c-celestial-run-button--clickable\": !this.isDoomed,\r\n        \"o-pelle-disabled-pointer\": this.isDoomed\r\n      };\r\n    },\r\n    runDescription() {\r\n      return GameDatabase.celestials.descriptions[4].effects().replace(/^\\w/u, c => c.toUpperCase()).split(\"\\n\");\r\n    },\r\n    memoryDescription() {\r\n      return `Within Ra's Reality, Memory Chunks for Celestial Memories\r\n        will be generated based on certain resource amounts.`;\r\n    },\r\n    isDoomed: () => Pelle.isDoomed,\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.memoriesPerChunk = Ra.productionPerMemoryChunk;\r\n      this.isRaCapped = Ra.totalPetLevel === 100;\r\n      this.totalLevels = Ra.totalPetLevel;\r\n      this.showRemembrance = Ra.unlocks.effarigUnlock.canBeApplied;\r\n      this.hasRemembrance = Ra.remembrance.isUnlocked;\r\n      this.remembranceReq = Ra.remembrance.requiredLevels;\r\n      this.remembranceMult = Ra.remembrance.multiplier;\r\n      this.remembranceNerf = Ra.remembrance.nerf;\r\n      this.petWithRemembrance = Ra.petWithRemembrance;\r\n      this.isRunning = Ra.isRunning;\r\n      this.memoryBoosts = Ra.memoryBoostResources;\r\n    },\r\n    startRun() {\r\n      if (this.isDoomed) return;\r\n      Modal.celestials.show({ name: \"Ra's\", number: 4 });\r\n    },\r\n    toggleMode() {\r\n      Ra.toggleMode();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-ra-celestial-tab\">\r\n    <div class=\"c-ra-memory-header\">\r\n      <CelestialQuoteHistory celestial=\"ra\" />\r\n      <div v-if=\"!isRaCapped\">\r\n        Each Memory Chunk generates a base of one Memory per second<span v-if=\"memoriesPerChunk > 1\">,\r\n          which has been increased to {{ quantify(\"Memory\", memoriesPerChunk, 2, 3) }} per second</span>.\r\n        <br>\r\n        Storing real time prevents Memory Chunk generation, but Memories will still be gained normally.\r\n        <span v-if=\"memoriesPerChunk > 1\">\r\n          <br>\r\n          This is being increased due to {{ memoryBoosts }}.\r\n        </span>\r\n      </div>\r\n      <div v-else>\r\n        All Memories have been returned.\r\n      </div>\r\n    </div>\r\n    <div>\r\n      Mouse-over the icons below the bar to see descriptions of upgrades,\r\n      <br>\r\n      and mouse-over <i class=\"fas fa-question-circle\" /> icons for specific resource information.\r\n    </div>\r\n    <div class=\"l-ra-all-pets-container\">\r\n      <RaPet\r\n        v-for=\"(pet, i) in pets\"\r\n        :key=\"i\"\r\n        :pet-config=\"pet\"\r\n      />\r\n    </div>\r\n    <div class=\"l-ra-non-pets\">\r\n      <button class=\"c-ra-run-button\">\r\n        <h2 :class=\"{ 'o-pelle-disabled': isDoomed }\">\r\n          <span v-if=\"isRunning\">You are in </span>\r\n          <span v-else>Start </span>\r\n          Ra's Reality\r\n        </h2>\r\n        <div\r\n          :class=\"runButtonClassObject\"\r\n          @click=\"startRun\"\r\n        >\r\n          <span class=\"c-ra-run-button__icon__sigil fas fa-sun\" />\r\n        </div>\r\n        <span\r\n          v-for=\"(line, lineId) in runDescription\"\r\n          :key=\"lineId + '-ra-run-desc'\"\r\n        >\r\n          {{ line }}\r\n        </span>\r\n        <br>\r\n        <span>\r\n          {{ memoryDescription }}\r\n        </span>\r\n      </button>\r\n      <div\r\n        v-if=\"showRemembrance && !isRaCapped\"\r\n        class=\"c-ra-remembrance-unlock\"\r\n      >\r\n        <h1 :style=\"petStyle\">\r\n          Remembrance\r\n        </h1>\r\n        <span :style=\"petStyle\">\r\n          Whichever Celestial has Remembrance will get {{ formatX(remembranceMult) }} Memory Chunk gain. The other\r\n          Celestials will get {{ formatX(remembranceNerf, 1, 1) }} Memory Chunk gain.\r\n        </span>\r\n        <div\r\n          v-if=\"hasRemembrance\"\r\n          class=\"c-ra-remembrance-unlock-inner\"\r\n        >\r\n          <RaPetRemembranceButton\r\n            v-for=\"(pet, i) in pets\"\r\n            :key=\"i\"\r\n            :pet-config=\"pet\"\r\n          />\r\n        </div>\r\n        <div\r\n          v-else\r\n          class=\"c-ra-remembrance-unlock-inner\"\r\n        >\r\n          Unlocked by getting {{ formatInt(remembranceReq) }} total Celestial Memory levels\r\n          (you need {{ formatInt(remembranceReq - totalLevels) }} more)\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n"]}]}