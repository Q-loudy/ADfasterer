{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\antimatter-dimensions\\ClassicAntimatterGalaxyRow.vue?vue&type=style&index=0&id=810ca244&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\antimatter-dimensions\\ClassicAntimatterGalaxyRow.vue","mtime":1745241597022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sLXRleHQtd3JhcHBlciB7DQogIGhlaWdodDogNnJlbTsNCn0NCg0KLmwtc2NhbGluZy10ZXh0LXdyYXBwZXIgew0KICBoZWlnaHQ6IDJyZW07DQp9DQoNCi5vLXByaW1hcnktYnRuLS1nYWxheHkgew0KICB3aWR0aDogMjJyZW07DQogIGhlaWdodDogNS41cmVtOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIGZvbnQtc2l6ZTogMC45cmVtOw0KfQ0K"},{"version":3,"sources":["ClassicAntimatterGalaxyRow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ClassicAntimatterGalaxyRow.vue","sourceRoot":"src/components/tabs/antimatter-dimensions","sourcesContent":["<script>\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\n\r\nexport default {\r\n  name: \"ClassicAntimatterGalaxyRow\",\r\n  components: {\r\n    PrimaryButton\r\n  },\r\n  data() {\r\n    return {\r\n      type: GALAXY_TYPE.NORMAL,\r\n      galaxies: {\r\n        normal: 0,\r\n        replicanti: 0,\r\n        dilation: 0\r\n      },\r\n      requirement: {\r\n        tier: 1,\r\n        amount: 0\r\n      },\r\n      canBeBought: false,\r\n      distantStart: 0,\r\n      remoteStart: 0,\r\n      lockText: null,\r\n      canBulkBuy: false,\r\n      creditsClosed: false,\r\n      scalingText: {\r\n        distant: null,\r\n        remote: null,\r\n      },\r\n      hasTutorial: false,\r\n    };\r\n  },\r\n  computed: {\r\n    isDoomed: () => Pelle.isDoomed,\r\n    dimName() {\r\n      return AntimatterDimension(this.requirement.tier).displayName;\r\n    },\r\n    buttonText() {\r\n      if (this.lockText !== null) return this.lockText;\r\n      const reset = [];\r\n      if (!Achievement(111).isUnlocked) reset.push(\"Dimensions\");\r\n      if (!Achievement(143).isUnlocked) reset.push(\"Dimension Boosts\");\r\n      return reset.length === 0\r\n        ? `Increase the power of Tickspeed upgrades`\r\n        : `Reset your ${makeEnumeration(reset)} to increase the power of Tickspeed upgrades`;\r\n    },\r\n    sumText() {\r\n      const parts = [Math.max(this.galaxies.normal, 0)];\r\n      if (this.galaxies.replicanti > 0) parts.push(this.galaxies.replicanti);\r\n      if (this.galaxies.dilation > 0) parts.push(this.galaxies.dilation);\r\n      const sum = parts.map(this.formatGalaxies).join(\" + \");\r\n      if (parts.length >= 2) {\r\n        return `${sum} = ${this.formatGalaxies(parts.sum())}`;\r\n      }\r\n      return sum;\r\n    },\r\n    typeName() {\r\n      switch (this.type) {\r\n        case GALAXY_TYPE.NORMAL: return \"Antimatter Galaxies\";\r\n        case GALAXY_TYPE.DISTANT: return \"Distant Antimatter Galaxies\";\r\n        case GALAXY_TYPE.REMOTE: return \"Remote Antimatter Galaxies\";\r\n      }\r\n      return undefined;\r\n    },\r\n    hasIncreasedScaling() {\r\n      return this.type !== GALAXY_TYPE.NORMAL;\r\n    },\r\n    costScalingText() {\r\n      switch (this.type) {\r\n        case GALAXY_TYPE.DISTANT:\r\n          return `Each Galaxy is more expensive past ${quantifyInt(\"Galaxy\", this.distantStart)}`;\r\n        case GALAXY_TYPE.REMOTE: {\r\n          const scalings = [\r\n            { type: \"distant\", function: \"quadratic\", amount: this.distantStart },\r\n            { type: \"remote\", function: \"exponential\", amount: this.remoteStart }\r\n          ];\r\n          return `Increased Galaxy cost scaling: ${scalings.sort((a, b) => a.amount - b.amount)\r\n            .map(scaling => `${scaling.function} scaling past ${this.formatGalaxies(scaling.amount)} (${scaling.type})`)\r\n            .join(\", \").capitalize()}`;\r\n        }\r\n      }\r\n      return undefined;\r\n    },\r\n    classObject() {\r\n      return {\r\n        \"o-primary-btn--galaxy l-dim-row__prestige-button\": true,\r\n        \"tutorial--glow\": this.canBeBought && this.hasTutorial,\r\n        \"o-pelle-disabled-pointer\": this.creditsClosed,\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.type = Galaxy.type;\r\n      this.galaxies.normal = player.galaxies + GalaxyGenerator.galaxies;\r\n      this.galaxies.replicanti = Replicanti.galaxies.total;\r\n      this.galaxies.dilation = player.dilation.totalTachyonGalaxies;\r\n      const requirement = Galaxy.requirement;\r\n      this.requirement.amount = requirement.amount;\r\n      this.requirement.tier = requirement.tier;\r\n      this.canBeBought = requirement.isSatisfied && Galaxy.canBeBought;\r\n      this.distantStart = EternityChallenge(5).isRunning ? 0 : Galaxy.costScalingStart;\r\n      this.remoteStart = Galaxy.remoteStart;\r\n      this.lockText = Galaxy.lockText;\r\n      this.canBulkBuy = EternityMilestone.autobuyMaxGalaxies.isReached;\r\n      this.creditsClosed = GameEnd.creditsEverClosed;\r\n      this.hasTutorial = Tutorial.isActive(TUTORIAL_STATE.GALAXY);\r\n    },\r\n    buyGalaxy(bulk) {\r\n      if (!this.canBeBought) return;\r\n      manualRequestGalaxyReset(this.canBulkBuy && bulk);\r\n    },\r\n    formatGalaxies(num) {\r\n      return num > 1e8 ? format(num, 2) : formatInt(num);\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"c-dimension-row c-antimatter-dim-row c-antimatter-prestige-row\">\r\n    <div\r\n      class=\"l-dim-row__prestige-text c-dim-row__label c-dim-row__label--amount l-text-wrapper\"\r\n    >\r\n      {{ typeName }} ({{ sumText }}):\r\n      requires {{ formatInt(requirement.amount) }} {{ dimName }} Dimensions\r\n      <div class=\"l-scaling-text-wrapper\">\r\n        {{ hasIncreasedScaling ? costScalingText : \"\" }}\r\n      </div>\r\n    </div>\r\n    <PrimaryButton\r\n      :enabled=\"canBeBought\"\r\n      :class=\"classObject\"\r\n      @click.exact=\"buyGalaxy(true)\"\r\n      @click.shift.exact=\"buyGalaxy(false)\"\r\n    >\r\n      {{ buttonText }}\r\n      <div\r\n        v-if=\"hasTutorial\"\r\n        class=\"fas fa-circle-exclamation l-notification-icon\"\r\n      />\r\n    </PrimaryButton>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-text-wrapper {\r\n  height: 6rem;\r\n}\r\n\r\n.l-scaling-text-wrapper {\r\n  height: 2rem;\r\n}\r\n\r\n.o-primary-btn--galaxy {\r\n  width: 22rem;\r\n  height: 5.5rem;\r\n  position: relative;\r\n  font-size: 0.9rem;\r\n}\r\n</style>\r\n"]}]}