{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\eternity-challenges\\EternityChallengesTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\eternity-challenges\\EternityChallengesTab.vue","mtime":1745241597277},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQ2hhbGxlbmdlR3JpZCBmcm9tICJAL2NvbXBvbmVudHMvQ2hhbGxlbmdlR3JpZCI7DQppbXBvcnQgQ2hhbGxlbmdlVGFiSGVhZGVyIGZyb20gIkAvY29tcG9uZW50cy9DaGFsbGVuZ2VUYWJIZWFkZXIiOw0KaW1wb3J0IEV0ZXJuaXR5Q2hhbGxlbmdlQm94IGZyb20gIi4vRXRlcm5pdHlDaGFsbGVuZ2VCb3giOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJFdGVybml0eUNoYWxsZW5nZXNUYWIiLA0KICBjb21wb25lbnRzOiB7DQogICAgQ2hhbGxlbmdlVGFiSGVhZGVyLA0KICAgIENoYWxsZW5nZUdyaWQsDQogICAgRXRlcm5pdHlDaGFsbGVuZ2VCb3gNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdW5sb2NrZWRDb3VudDogMCwNCiAgICAgIHNob3dBbGxDaGFsbGVuZ2VzOiBmYWxzZSwNCiAgICAgIGF1dG9FQzogZmFsc2UsDQogICAgICBpc0F1dG9FQ1Zpc2libGU6IGZhbHNlLA0KICAgICAgaGFzVXBncmFkZUxvY2s6IGZhbHNlLA0KICAgICAgcmVtYWluaW5nRUNUaWVyczogMCwNCiAgICAgIHVudGlsTmV4dEVDOiBUaW1lU3Bhbi56ZXJvLA0KICAgICAgdW50aWxBbGxFQzogVGltZVNwYW4uemVybywNCiAgICAgIGhhc0VDUjogZmFsc2UsDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBjaGFsbGVuZ2VzKCkgew0KICAgICAgcmV0dXJuIEV0ZXJuaXR5Q2hhbGxlbmdlcy5hbGw7DQogICAgfSwNCiAgICB1cGdyYWRlTG9ja05hbWVUZXh0KCkgew0KICAgICAgcmV0dXJuIFJlYWxpdHlVcGdyYWRlKDEyKS5pc0xvY2tpbmdNZWNoYW5pY3MNCiAgICAgICAgPyBSZWFsaXR5VXBncmFkZSgxMikubmFtZQ0KICAgICAgICA6IEltYWdpbmFyeVVwZ3JhZGUoMTUpLm5hbWU7DQogICAgfSwNCiAgICBuZXh0RUNUZXh0KCkgew0KICAgICAgcmV0dXJuIHRoaXMudW50aWxOZXh0RUMudG90YWxNaWxsaXNlY29uZHMgPT09IDAgJiYgIXRoaXMuYXV0b0VDDQogICAgICAgID8gIkltbWVkaWF0ZWx5IHVwb24gdW5wYXVzaW5nIg0KICAgICAgICA6IGAke3RoaXMudW50aWxOZXh0RUN9IChyZWFsIHRpbWUpYDsNCiAgICB9LA0KICAgIGFsbEVDVGV4dCgpIHsNCiAgICAgIHJldHVybiB0aGlzLnVudGlsQWxsRUMudG90YWxNaWxsaXNlY29uZHMgPT09IDAgJiYgIXRoaXMuYXV0b0VDDQogICAgICAgID8gIkltbWVkaWF0ZWx5IHVwb24gdW5wYXVzaW5nIg0KICAgICAgICA6IGBBZnRlciAke3RoaXMudW50aWxBbGxFQ30gKHJlYWwgdGltZSlgOw0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHVwZGF0ZSgpIHsNCiAgICAgIHRoaXMuc2hvd0FsbENoYWxsZW5nZXMgPSBwbGF5ZXIub3B0aW9ucy5zaG93QWxsQ2hhbGxlbmdlczsNCiAgICAgIHRoaXMudW5sb2NrZWRDb3VudCA9IEV0ZXJuaXR5Q2hhbGxlbmdlcy5hbGwNCiAgICAgICAgLmZpbHRlcih0aGlzLmlzQ2hhbGxlbmdlVmlzaWJsZSkNCiAgICAgICAgLmxlbmd0aDsNCiAgICAgIHRoaXMuaXNBdXRvRUNWaXNpYmxlID0gUGVyay5hdXRvY29tcGxldGVFQzEuY2FuQmVBcHBsaWVkOw0KICAgICAgdGhpcy5hdXRvRUMgPSBwbGF5ZXIucmVhbGl0eS5hdXRvRUM7DQogICAgICBjb25zdCBzaG91bGRQcmV2ZW50RUM3ID0gVGltZURpbWVuc2lvbigxKS5hbW91bnQuZ3QoMCk7DQogICAgICB0aGlzLmhhc1VwZ3JhZGVMb2NrID0gUmVhbGl0eVVwZ3JhZGUoMTIpLmlzTG9ja2luZ01lY2hhbmljcyB8fA0KICAgICAgICAoSW1hZ2luYXJ5VXBncmFkZSgxNSkuaXNMb2NraW5nTWVjaGFuaWNzICYmIHNob3VsZFByZXZlbnRFQzcgJiYNCiAgICAgICAgICAhQXJyYXkucmFuZ2UoMSwgNikuc29tZShlYyA9PiAhRXRlcm5pdHlDaGFsbGVuZ2UoZWMpLmlzRnVsbHlDb21wbGV0ZWQpKTsNCiAgICAgIGNvbnN0IHJlbWFpbmluZ0NvbXBsZXRpb25zID0gRXRlcm5pdHlDaGFsbGVuZ2VzLnJlbWFpbmluZ0NvbXBsZXRpb25zOw0KICAgICAgdGhpcy5yZW1haW5pbmdFQ1RpZXJzID0gcmVtYWluaW5nQ29tcGxldGlvbnM7DQogICAgICBpZiAocmVtYWluaW5nQ29tcGxldGlvbnMgIT09IDApIHsNCiAgICAgICAgY29uc3QgYXV0b0VDSW50ZXJ2YWwgPSBFdGVybml0eUNoYWxsZW5nZXMuYXV0b0NvbXBsZXRlLmludGVydmFsOw0KICAgICAgICBjb25zdCB1bnRpbE5leHRFQyA9IE1hdGgubWF4KGF1dG9FQ0ludGVydmFsIC0gcGxheWVyLnJlYWxpdHkubGFzdEF1dG9FQywgMCk7DQogICAgICAgIHRoaXMudW50aWxOZXh0RUMuc2V0RnJvbSh1bnRpbE5leHRFQyk7DQogICAgICAgIHRoaXMudW50aWxBbGxFQy5zZXRGcm9tKHVudGlsTmV4dEVDICsgKGF1dG9FQ0ludGVydmFsICogKHJlbWFpbmluZ0NvbXBsZXRpb25zIC0gMSkpKTsNCiAgICAgIH0NCiAgICAgIHRoaXMuaGFzRUNSID0gUGVyay5zdHVkeUVDUmVxdWlyZW1lbnQuaXNCb3VnaHQ7DQogICAgfSwNCiAgICBpc0NoYWxsZW5nZVZpc2libGUoY2hhbGxlbmdlKSB7DQogICAgICByZXR1cm4gY2hhbGxlbmdlLmNvbXBsZXRpb25zID4gMCB8fCBjaGFsbGVuZ2UuaXNVbmxvY2tlZCB8fCBjaGFsbGVuZ2UuaGFzVW5sb2NrZWQgfHwNCiAgICAgICAgKHRoaXMuc2hvd0FsbENoYWxsZW5nZXMgJiYgUGxheWVyUHJvZ3Jlc3MucmVhbGl0eVVubG9ja2VkKCkpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["EternityChallengesTab.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EternityChallengesTab.vue","sourceRoot":"src/components/tabs/eternity-challenges","sourcesContent":["<script>\r\nimport ChallengeGrid from \"@/components/ChallengeGrid\";\r\nimport ChallengeTabHeader from \"@/components/ChallengeTabHeader\";\r\nimport EternityChallengeBox from \"./EternityChallengeBox\";\r\n\r\nexport default {\r\n  name: \"EternityChallengesTab\",\r\n  components: {\r\n    ChallengeTabHeader,\r\n    ChallengeGrid,\r\n    EternityChallengeBox\r\n  },\r\n  data() {\r\n    return {\r\n      unlockedCount: 0,\r\n      showAllChallenges: false,\r\n      autoEC: false,\r\n      isAutoECVisible: false,\r\n      hasUpgradeLock: false,\r\n      remainingECTiers: 0,\r\n      untilNextEC: TimeSpan.zero,\r\n      untilAllEC: TimeSpan.zero,\r\n      hasECR: false,\r\n    };\r\n  },\r\n  computed: {\r\n    challenges() {\r\n      return EternityChallenges.all;\r\n    },\r\n    upgradeLockNameText() {\r\n      return RealityUpgrade(12).isLockingMechanics\r\n        ? RealityUpgrade(12).name\r\n        : ImaginaryUpgrade(15).name;\r\n    },\r\n    nextECText() {\r\n      return this.untilNextEC.totalMilliseconds === 0 && !this.autoEC\r\n        ? \"Immediately upon unpausing\"\r\n        : `${this.untilNextEC} (real time)`;\r\n    },\r\n    allECText() {\r\n      return this.untilAllEC.totalMilliseconds === 0 && !this.autoEC\r\n        ? \"Immediately upon unpausing\"\r\n        : `After ${this.untilAllEC} (real time)`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.showAllChallenges = player.options.showAllChallenges;\r\n      this.unlockedCount = EternityChallenges.all\r\n        .filter(this.isChallengeVisible)\r\n        .length;\r\n      this.isAutoECVisible = Perk.autocompleteEC1.canBeApplied;\r\n      this.autoEC = player.reality.autoEC;\r\n      const shouldPreventEC7 = TimeDimension(1).amount.gt(0);\r\n      this.hasUpgradeLock = RealityUpgrade(12).isLockingMechanics ||\r\n        (ImaginaryUpgrade(15).isLockingMechanics && shouldPreventEC7 &&\r\n          !Array.range(1, 6).some(ec => !EternityChallenge(ec).isFullyCompleted));\r\n      const remainingCompletions = EternityChallenges.remainingCompletions;\r\n      this.remainingECTiers = remainingCompletions;\r\n      if (remainingCompletions !== 0) {\r\n        const autoECInterval = EternityChallenges.autoComplete.interval;\r\n        const untilNextEC = Math.max(autoECInterval - player.reality.lastAutoEC, 0);\r\n        this.untilNextEC.setFrom(untilNextEC);\r\n        this.untilAllEC.setFrom(untilNextEC + (autoECInterval * (remainingCompletions - 1)));\r\n      }\r\n      this.hasECR = Perk.studyECRequirement.isBought;\r\n    },\r\n    isChallengeVisible(challenge) {\r\n      return challenge.completions > 0 || challenge.isUnlocked || challenge.hasUnlocked ||\r\n        (this.showAllChallenges && PlayerProgress.realityUnlocked());\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-challenges-tab\">\r\n    <ChallengeTabHeader />\r\n    <div v-if=\"isAutoECVisible\">\r\n      Eternity Challenges are automatically completed sequentially, requiring all previous\r\n      Eternity Challenges to be fully completed before any progress is made.\r\n    </div>\r\n    <div\r\n      v-if=\"isAutoECVisible && remainingECTiers > 0\"\r\n      class=\"c-challenges-tab__auto-ec-info l-challenges-tab__auto-ec-info\"\r\n    >\r\n      <div class=\"l-challenges-tab__auto-ec-timers\">\r\n        <span\r\n          v-if=\"hasUpgradeLock\"\r\n          class=\"l-emphasis\"\r\n        >\r\n          Auto EC is currently disabled because of the \"{{ upgradeLockNameText }}\" upgrade requirement lock.\r\n        </span>\r\n        <span v-if=\"remainingECTiers > 0\">\r\n          Next Auto Eternity Challenge completion: {{ nextECText }}\r\n        </span>\r\n        <span>\r\n          All Auto Eternity Challenge completions: {{ allECText }}\r\n        </span>\r\n        <br>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      Complete Eternity Challenges again for a bigger reward, maximum of {{ formatInt(5) }} times.<br>\r\n      The rewards are applied permanently with no need to have the respective Eternity Challenge Time Study purchased.\r\n    </div>\r\n    <div v-if=\"!hasECR\">\r\n      When you respec out of an unlocked Eternity Challenge, you don't need to redo the secondary requirement<br>\r\n      in order to unlock it again until you complete it; only the Time Theorems are required.\r\n    </div>\r\n    <div v-if=\"unlockedCount !== 12\">\r\n      You have seen {{ formatInt(unlockedCount) }} out of {{ formatInt(12) }} Eternity Challenges.\r\n    </div>\r\n    <div v-else>\r\n      You have seen all {{ formatInt(12) }} Eternity Challenges.\r\n    </div>\r\n    <ChallengeGrid\r\n      v-slot=\"{ challenge }\"\r\n      :challenges=\"challenges\"\r\n      :is-challenge-visible=\"isChallengeVisible\"\r\n    >\r\n      <EternityChallengeBox :challenge=\"challenge\" />\r\n    </ChallengeGrid>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-emphasis {\r\n  font-weight: bold;\r\n  color: var(--color-bad);\r\n}\r\n</style>\r\n"]}]}