{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\CustomizeableTooltip.vue?vue&type=style&index=0&id=175cae56&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\CustomizeableTooltip.vue","mtime":1745241596765},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubC1jdXN0b20tdG9vbHRpcCB7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgcG9zaXRpb246IHN0YXRpYzsNCn0NCg0KLmMtbWFpbi1jb250ZW50IHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KfQ0KDQovKiBjLXRvb2x0aXAtY29udGVudCBzdHlsZXMgaW4gc3R5bGVzLmNzcyB0byBtYWtlIHdheSBmb3IgY3VzdG9tIGNsYXNzIGNvbG91ciBzdHlsaW5nICovDQo="},{"version":3,"sources":["CustomizeableTooltip.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsKA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"CustomizeableTooltip.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\n// This component was mainly created to solve the z-index problem on PelleRiftBar milestone hovering\r\n// Because apparently making the z-index of PelleStrike change with its expanded/contracted state is bad.\r\n// As such it may not be perfectly generalised. Changes should be made to generalise it more.\r\nexport default {\r\n  name: \"CustomizeableTooltip\",\r\n  props: {\r\n    tooltipContentStyle: {\r\n      type: Object,\r\n      required: false,\r\n      default: () => ({})\r\n    },\r\n    tooltipArrowStyle: {\r\n      type: Object,\r\n      required: false,\r\n      default: () => ({})\r\n    },\r\n    left: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\"\r\n    },\r\n    top: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\"\r\n    },\r\n    right: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\"\r\n    },\r\n    bottom: {\r\n      type: String,\r\n      required: false,\r\n      default: \"\"\r\n    },\r\n    contentClass: {\r\n      type: [Object, String],\r\n      required: false,\r\n      default: \"\"\r\n    },\r\n    tooltipClass: {\r\n      type: [Object, String],\r\n      required: false,\r\n      default: \"\"\r\n    },\r\n    mode: {\r\n      type: String,\r\n      required: false,\r\n      default: \"top\"\r\n    },\r\n    show: {\r\n      type: Boolean,\r\n      required: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      hovering: false,\r\n      mainContent: null,\r\n      isDarkTheme: false\r\n    };\r\n  },\r\n  computed: {\r\n    positionStyle() {\r\n      return {\r\n        left: this.left,\r\n        top: this.top,\r\n        right: this.right,\r\n        bottom: this.bottom\r\n      };\r\n    },\r\n    tooltipType() {\r\n      return `c-tooltip--${this.mode}`;\r\n    },\r\n    contentTransform() {\r\n      const axis = this.mode === \"top\" || this.mode === \"bottom\" ? \"X\" : \"Y\";\r\n      return `translate${axis}(${this.showNegativeSign(axis)}50%)`;\r\n    },\r\n    tooltipTransform() {\r\n      switch (this.mode) {\r\n        case \"top\":\r\n          return `translate(${this.showNegativeSign(\"X\")}50%, -100%)`;\r\n        case \"bottom\":\r\n          return `translate(${this.showNegativeSign(\"X\")}50%, 100%)`;\r\n        case \"right\":\r\n          return `translate(100%, ${this.showNegativeSign(\"Y\")}50%)`;\r\n        case \"left\":\r\n          return `translate(-100%, ${this.showNegativeSign(\"Y\")}50%)`;\r\n        default:\r\n          return \"\";\r\n      }\r\n    },\r\n    showTooltip() {\r\n      return this.show || this.hovering;\r\n    },\r\n    // Manual light-dark differentiation instead of just slapping on a .s-base--dark .c-tooltip is needed\r\n    // to minimise specificity to make the custom class specify more styles\r\n    tooltipContentLightDarkClass() {\r\n      return this.isDarkTheme ? \"c-tooltip-content--dark\" : \"\";\r\n    },\r\n    tooltipArrowLightDarkClass() {\r\n      return this.isDarkTheme ? \"c-tooltip-arrow--dark\" : \"\";\r\n    },\r\n    tooltipInternalClass() {\r\n      return {\r\n        \"c-tooltip-show\": this.showTooltip,\r\n        [this.tooltipType]: true\r\n      };\r\n    },\r\n    tooltipContentClass() {\r\n      return [\r\n        this.tooltipInternalClass,\r\n        this.tooltipClass,\r\n        this.tooltipContentLightDarkClass\r\n      ];\r\n    },\r\n    tooltipArrowClass() {\r\n      return [\r\n        this.tooltipInternalClass,\r\n        this.tooltipArrowLightDarkClass\r\n      ];\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isDarkTheme = Theme.current().isDark();\r\n    },\r\n    showNegativeSign(axis) {\r\n      if (axis === \"X\") {\r\n        return this.left ? \"-\" : \"\";\r\n      }\r\n      return this.top ? \"-\" : \"\";\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-custom-tooltip\">\r\n    <div\r\n      class=\"c-main-content\"\r\n      :class=\"contentClass\"\r\n      :style=\"{ ...positionStyle, transform: contentTransform }\"\r\n      @mouseenter=\"hovering = true\"\r\n      @mouseleave=\"hovering = false\"\r\n    >\r\n      <slot name=\"mainContent\" />\r\n    </div>\r\n    <div\r\n      class=\"c-tooltip-content\"\r\n      :class=\"tooltipContentClass\"\r\n      :style=\"[tooltipContentStyle, positionStyle, { transform: tooltipTransform }]\"\r\n    >\r\n      <slot name=\"tooltipContent\" />\r\n    </div>\r\n    <div\r\n      class=\"c-tooltip-arrow\"\r\n      :class=\"tooltipArrowClass\"\r\n      :style=\"[tooltipArrowStyle, positionStyle, { transform: tooltipTransform }]\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-custom-tooltip {\r\n  display: inline-block;\r\n  position: static;\r\n}\r\n\r\n.c-main-content {\r\n  position: absolute;\r\n}\r\n\r\n/* c-tooltip-content styles in styles.css to make way for custom class colour styling */\r\n</style>\r\n"]}]}