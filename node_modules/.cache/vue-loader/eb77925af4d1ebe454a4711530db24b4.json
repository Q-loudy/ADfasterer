{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\GlyphTooltipEffect.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\GlyphTooltipEffect.vue","mtime":1745241596784},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJHbHlwaFRvb2x0aXBFZmZlY3QiLA0KICBwcm9wczogew0KICAgIGVmZmVjdDogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9LA0KICAgIHZhbHVlOiB7DQogICAgICB0eXBlOiBbTnVtYmVyLCBPYmplY3RdLA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgZWZmZWN0Q29uZmlnKCkgew0KICAgICAgcmV0dXJuIEdseXBoRWZmZWN0c1t0aGlzLmVmZmVjdF07DQogICAgfSwNCiAgICBib29zdENvbG9yKCkgew0KICAgICAgcmV0dXJuICh0aGlzLmVmZmVjdENvbmZpZy5hbHRlcmF0aW9uVHlwZSAhPT0gdW5kZWZpbmVkICYmDQogICAgICAgIHRoaXMuZWZmZWN0Q29uZmlnLmFsdGVyYXRpb25UeXBlICE9PSBBTFRFUkFUSU9OX1RZUEUuQURESVRJT04pDQogICAgICAgID8gdGhpcy5lZmZlY3RDb25maWcuYWx0ZXJlZENvbG9yKCkNCiAgICAgICAgOiB1bmRlZmluZWQ7DQogICAgfSwNCiAgICBhZGRpdGlvbkNvbG9yKCkgew0KICAgICAgcmV0dXJuIHRoaXMuZWZmZWN0Q29uZmlnLmFsdGVyYXRpb25UeXBlID09PSBBTFRFUkFUSU9OX1RZUEUuQURESVRJT04NCiAgICAgICAgPyB0aGlzLmVmZmVjdENvbmZpZy5hbHRlcmVkQ29sb3IoKQ0KICAgICAgICA6IHVuZGVmaW5lZDsNCiAgICB9LA0KICAgIGVmZmVjdFN0cmluZ1RlbXBsYXRlKCkgew0KICAgICAgcmV0dXJuIHRoaXMuZWZmZWN0Q29uZmlnLnNpbmdsZURlc2M7DQogICAgfSwNCiAgICBwcmltYXJ5RWZmZWN0VGV4dCgpIHsNCiAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5lZmZlY3RDb25maWcuZm9ybWF0U2luZ2xlRWZmZWN0KHRoaXMudmFsdWUpOw0KICAgICAgcmV0dXJuIHRoaXMuYm9vc3RDb2xvciA/IGDir4Uke3ZhbHVlfWAgOiB2YWx1ZTsNCiAgICB9LA0KICAgIHNlY29uZGFyeUVmZmVjdFRleHQoKSB7DQogICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZWZmZWN0Q29uZmlnLmZvcm1hdFNpbmdsZVNlY29uZGFyeUVmZmVjdCgNCiAgICAgICAgdGhpcy5lZmZlY3RDb25maWcuY29udmVyc2lvbih0aGlzLnZhbHVlKSk7DQogICAgICByZXR1cm4gdGhpcy5ib29zdENvbG9yID8gYOKvhSR7dmFsdWV9YCA6IHZhbHVlOw0KICAgIH0sDQogICAgdGV4dFNwbGl0cygpIHsNCiAgICAgIGNvbnN0IGZpcnN0U3BsaXQgPSB0aGlzLmVmZmVjdFN0cmluZ1RlbXBsYXRlLnNwbGl0KCJ7dmFsdWV9Iik7DQogICAgICBjb25zdCBzZWNvbmRTcGxpdCA9IGZpcnN0U3BsaXRbMV0gPyBmaXJzdFNwbGl0WzFdLnNwbGl0KCJ7dmFsdWUyfSIpIDogIiI7DQogICAgICBpZiAoc2Vjb25kU3BsaXQubGVuZ3RoICE9PSAxKSByZXR1cm4gW2ZpcnN0U3BsaXRbMF1dLmNvbmNhdChzZWNvbmRTcGxpdCk7DQogICAgICByZXR1cm4gZmlyc3RTcGxpdDsNCiAgICB9LA0KICAgIGhhc1ZhbHVlKCkgew0KICAgICAgcmV0dXJuIHRoaXMuZWZmZWN0U3RyaW5nVGVtcGxhdGUuaW5jbHVkZXMoInt2YWx1ZX0iKTsNCiAgICB9LA0KICAgIGhhc1NlY29uZGFyeVZhbHVlKCkgew0KICAgICAgcmV0dXJuIHRoaXMudGV4dFNwbGl0c1syXSAhPT0gdW5kZWZpbmVkOw0KICAgIH0sDQogICAgaXNQZWxsZURpc2FibGVkKCkgew0KICAgICAgcmV0dXJuIHRoaXMuZWZmZWN0Q29uZmlnLmlzRGlzYWJsZWRCeURvb21lZDsNCiAgICB9LA0KICAgIGNvbnZlcnRlZFBhcnRzKCkgew0KICAgICAgY29uc3QgcGFydHMgPSBbXTsNCiAgICAgIGZvciAoY29uc3QgdGV4dCBvZiB0aGlzLnRleHRTcGxpdHMpIHBhcnRzLnB1c2godGhpcy5jb252ZXJ0VG9IVE1MKHRleHQpKTsNCiAgICAgIHJldHVybiBwYXJ0czsNCiAgICB9LA0KICAgIHZhbHVlU3R5bGUoKSB7DQogICAgICByZXR1cm4gdGhpcy5ib29zdENvbG9yID8gew0KICAgICAgICBjb2xvcjogdGhpcy5ib29zdENvbG9yLA0KICAgICAgICAidGV4dC1zaGFkb3ciOiBgMCAwIDAuNHJlbSAke3RoaXMuYm9vc3RDb2xvcn1gDQogICAgICB9IDogew0KICAgICAgICBjb2xvcjogIiM3NkVFNzYiLA0KICAgICAgfTsNCiAgICB9LA0KICAgIHRleHRTaGFkb3dDb2xvcigpIHsNCiAgICAgIHJldHVybiBHbHlwaEFwcGVhcmFuY2VIYW5kbGVyLmdldEJhc2VDb2xvcih0cnVlKTsNCiAgICB9LA0KICB9LA0KICBtZXRob2RzOiB7DQogICAgY29udmVydFRvSFRNTChzdHJpbmcpIHsNCiAgICAgIHJldHVybiBzdHJpbmcNCiAgICAgICAgLnJlcGxhY2UoIlxuIiwgIjxicj4iKQ0KICAgICAgICAucmVwbGFjZSgiXSIsICI8L3NwYW4+IikNCiAgICAgICAgLnJlcGxhY2UoDQogICAgICAgICAgIlsiLCBgPHNwYW4gc3R5bGU9IiR7R2x5cGhBcHBlYXJhbmNlSGFuZGxlci5pc0xpZ2h0QkcNCiAgICAgICAgICAgID8gIiINCiAgICAgICAgICAgIDogInRleHQtc2hhZG93OiB3aGl0ZSAwIDAgMC42cmVtOyJ9DQogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsiPmANCiAgICAgICAgKTsNCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["GlyphTooltipEffect.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GlyphTooltipEffect.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\nexport default {\r\n  name: \"GlyphTooltipEffect\",\r\n  props: {\r\n    effect: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    value: {\r\n      type: [Number, Object],\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    effectConfig() {\r\n      return GlyphEffects[this.effect];\r\n    },\r\n    boostColor() {\r\n      return (this.effectConfig.alterationType !== undefined &&\r\n        this.effectConfig.alterationType !== ALTERATION_TYPE.ADDITION)\r\n        ? this.effectConfig.alteredColor()\r\n        : undefined;\r\n    },\r\n    additionColor() {\r\n      return this.effectConfig.alterationType === ALTERATION_TYPE.ADDITION\r\n        ? this.effectConfig.alteredColor()\r\n        : undefined;\r\n    },\r\n    effectStringTemplate() {\r\n      return this.effectConfig.singleDesc;\r\n    },\r\n    primaryEffectText() {\r\n      const value = this.effectConfig.formatSingleEffect(this.value);\r\n      return this.boostColor ? `⯅${value}` : value;\r\n    },\r\n    secondaryEffectText() {\r\n      const value = this.effectConfig.formatSingleSecondaryEffect(\r\n        this.effectConfig.conversion(this.value));\r\n      return this.boostColor ? `⯅${value}` : value;\r\n    },\r\n    textSplits() {\r\n      const firstSplit = this.effectStringTemplate.split(\"{value}\");\r\n      const secondSplit = firstSplit[1] ? firstSplit[1].split(\"{value2}\") : \"\";\r\n      if (secondSplit.length !== 1) return [firstSplit[0]].concat(secondSplit);\r\n      return firstSplit;\r\n    },\r\n    hasValue() {\r\n      return this.effectStringTemplate.includes(\"{value}\");\r\n    },\r\n    hasSecondaryValue() {\r\n      return this.textSplits[2] !== undefined;\r\n    },\r\n    isPelleDisabled() {\r\n      return this.effectConfig.isDisabledByDoomed;\r\n    },\r\n    convertedParts() {\r\n      const parts = [];\r\n      for (const text of this.textSplits) parts.push(this.convertToHTML(text));\r\n      return parts;\r\n    },\r\n    valueStyle() {\r\n      return this.boostColor ? {\r\n        color: this.boostColor,\r\n        \"text-shadow\": `0 0 0.4rem ${this.boostColor}`\r\n      } : {\r\n        color: \"#76EE76\",\r\n      };\r\n    },\r\n    textShadowColor() {\r\n      return GlyphAppearanceHandler.getBaseColor(true);\r\n    },\r\n  },\r\n  methods: {\r\n    convertToHTML(string) {\r\n      return string\r\n        .replace(\"\\n\", \"<br>\")\r\n        .replace(\"]\", \"</span>\")\r\n        .replace(\r\n          \"[\", `<span style=\"${GlyphAppearanceHandler.isLightBG\r\n            ? \"\"\r\n            : \"text-shadow: white 0 0 0.6rem;\"}\r\n            font-weight: bold;\">`\r\n        );\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"c-glyph-tooltip__effect\"\r\n    :class=\"{ 'o-pelle-disabled': isPelleDisabled }\"\r\n  >\r\n    <span v-html=\"convertedParts[0]\" />\r\n    <!-- Do not \"fix\" the spacing on these spans; moving effectText to its own line causes extra spaces to appear -->\r\n    <span\r\n      v-if=\"hasValue\"\r\n      :style=\"valueStyle\"\r\n    >{{ primaryEffectText }}</span>\r\n    <span v-html=\"convertedParts[1]\" />\r\n    <span\r\n      v-if=\"hasSecondaryValue\"\r\n      :style=\"valueStyle\"\r\n    >{{ secondaryEffectText }}</span>\r\n    <span\r\n      v-if=\"hasSecondaryValue\"\r\n      v-html=\"convertedParts[2]\"\r\n    />\r\n  </div>\r\n</template>\r\n"]}]}