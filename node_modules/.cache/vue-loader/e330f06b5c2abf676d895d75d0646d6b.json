{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\infinity-upgrades\\InfinityUpgradesTab.vue?vue&type=style&index=0&id=35ae3762&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\infinity-upgrades\\InfinityUpgradesTab.vue","mtime":1745241597377},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmMtaW5maW5pdHktdXBncmFkZS1ncmlkX19jb2x1bW4gew0KICBkaXNwbGF5OiBmbGV4Ow0KICBvdmVyZmxvdzogaGlkZGVuOw0KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIGJvcmRlci1yYWRpdXM6IHZhcigtLXZhci1ib3JkZXItcmFkaXVzLCAwLjNyZW0pOw0KICBtYXJnaW46IDAgMC4zcmVtOw0KfQ0KDQouYy1pbmZpbml0eS11cGdyYWRlLWdyaWRfX2NvbHVtbi0tYmFja2dyb3VuZCB7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgdG9wOiAwOw0KICBsZWZ0OiAwOw0KICB6LWluZGV4OiAtMTsNCiAgb3BhY2l0eTogMC43Ow0KfQ0KDQoucy1iYXNlLS1kYXJrIC5jLWluZmluaXR5LXVwZ3JhZGUtZ3JpZF9fY29sdW1uLS1iYWNrZ3JvdW5kIHsNCiAgb3BhY2l0eTogMC41Ow0KfQ0KDQoubC1pbmZpbml0eS11cGdyYWRlcy1ib3R0b20tcm93IC5sLWluZmluaXR5LXVwZ3JhZGUtZ3JpZF9fY2VsbCwNCi5sLWluZmluaXR5LXVwZ3JhZGVzLWJvdHRvbS1yb3cgLmwtaW5maW5pdHktdXBncmFkZXMtdGFiX19tdWx0LWJ0biB7DQogIG1hcmdpbjogMC41cmVtIDEuMXJlbTsNCn0NCg=="},{"version":3,"sources":["InfinityUpgradesTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"InfinityUpgradesTab.vue","sourceRoot":"src/components/tabs/infinity-upgrades","sourcesContent":["<script>\r\nimport InfinityUpgradeButton from \"@/components/InfinityUpgradeButton\";\r\nimport IpMultiplierButton from \"./IpMultiplierButton\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\n\r\nexport default {\r\n  name: \"InfinityUpgradesTab\",\r\n  components: {\r\n    PrimaryButton,\r\n    InfinityUpgradeButton,\r\n    IpMultiplierButton\r\n  },\r\n  data() {\r\n    return {\r\n      isUseless: false,\r\n      chargeUnlocked: false,\r\n      totalCharges: 0,\r\n      chargesUsed: 0,\r\n      disCharge: false,\r\n      ipMultSoftCap: 0,\r\n      ipMultHardCap: 0,\r\n      eternityUnlocked: false,\r\n      bottomRowUnlocked: false,\r\n      styleOfColumnBg: undefined\r\n    };\r\n  },\r\n  computed: {\r\n    grid() {\r\n      return [\r\n        [\r\n          InfinityUpgrade.totalTimeMult,\r\n          InfinityUpgrade.dim18mult,\r\n          InfinityUpgrade.dim36mult,\r\n          InfinityUpgrade.resetBoost\r\n        ],\r\n        [\r\n          InfinityUpgrade.buy10Mult,\r\n          InfinityUpgrade.dim27mult,\r\n          InfinityUpgrade.dim45mult,\r\n          InfinityUpgrade.galaxyBoost\r\n        ],\r\n        [\r\n          InfinityUpgrade.thisInfinityTimeMult,\r\n          InfinityUpgrade.unspentIPMult,\r\n          InfinityUpgrade.dimboostMult,\r\n          InfinityUpgrade.ipGen\r\n        ],\r\n        [\r\n          InfinityUpgrade.skipReset1,\r\n          InfinityUpgrade.skipReset2,\r\n          InfinityUpgrade.skipReset3,\r\n          InfinityUpgrade.skipResetGalaxy\r\n        ]\r\n      ];\r\n    },\r\n    allColumnUpgrades() {\r\n      return this.grid.flat();\r\n    },\r\n    disChargeClassObject() {\r\n      return {\r\n        \"o-primary-btn--subtab-option\": true,\r\n        \"o-primary-btn--charged-respec-active\": this.disCharge\r\n      };\r\n    },\r\n    offlineIpUpgrade: () => InfinityUpgrade.ipOffline\r\n  },\r\n  watch: {\r\n    disCharge(newValue) {\r\n      player.celestials.ra.disCharge = newValue;\r\n    }\r\n  },\r\n  created() {\r\n    this.on$(GAME_EVENT.INFINITY_UPGRADE_BOUGHT, () => this.setStyleOfColumnBg());\r\n    this.on$(GAME_EVENT.INFINITY_UPGRADE_CHARGED, () => this.setStyleOfColumnBg());\r\n    this.on$(GAME_EVENT.INFINITY_UPGRADES_DISCHARGED, () => this.setStyleOfColumnBg());\r\n\r\n    this.setStyleOfColumnBg();\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isUseless = Pelle.isDoomed;\r\n      this.chargeUnlocked = Ra.unlocks.chargedInfinityUpgrades.canBeApplied && !Pelle.isDoomed;\r\n      this.totalCharges = Ra.totalCharges;\r\n      this.chargesUsed = Ra.totalCharges - Ra.chargesLeft;\r\n      this.disCharge = player.celestials.ra.disCharge;\r\n      this.ipMultSoftCap = GameDatabase.infinity.upgrades.ipMult.costIncreaseThreshold;\r\n      this.ipMultHardCap = GameDatabase.infinity.upgrades.ipMult.costCap;\r\n      this.eternityUnlocked = PlayerProgress.current.isEternityUnlocked;\r\n      this.bottomRowUnlocked = Achievement(41).isUnlocked;\r\n    },\r\n    btnClassObject(column) {\r\n      const classObject = {\r\n        \"l-infinity-upgrade-grid__cell\": true\r\n      };\r\n      if (column > 0) {\r\n        // Indexing starts from 0, while css classes start from 2 (and first column has default css class)\r\n        classObject[`o-infinity-upgrade-btn--color-${column + 1}`] = true;\r\n      }\r\n      return classObject;\r\n    },\r\n    getColumnColor(location) {\r\n      if (location.isCharged) return \"var(--color-teresa--base)\";\r\n      if (location.isBought) return \"var(--color-infinity)\";\r\n      return \"transparent\";\r\n    },\r\n    setStyleOfColumnBg() {\r\n      this.styleOfColumnBg = this.grid.map(col => ({\r\n        background:\r\n          `linear-gradient(to bottom,\r\n          ${this.getColumnColor(col[0])} 15%,\r\n          ${this.getColumnColor(col[1])} 35% 40%,\r\n          ${this.getColumnColor(col[2])} 60% 65%,\r\n          ${this.getColumnColor(col[3])} 85% 100%`\r\n      }));\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-infinity-upgrades-tab\">\r\n    <div\r\n      v-if=\"chargeUnlocked\"\r\n      class=\"c-subtab-option-container\"\r\n    >\r\n      <PrimaryButton\r\n        :class=\"disChargeClassObject\"\r\n        @click=\"disCharge = !disCharge\"\r\n      >\r\n        Respec Charged Infinity Upgrades on next Reality\r\n      </PrimaryButton>\r\n    </div>\r\n    <div v-if=\"chargeUnlocked\">\r\n      You have charged {{ formatInt(chargesUsed) }}/{{ formatInt(totalCharges) }} Infinity Upgrades.\r\n      Charged Infinity Upgrades have their effect altered.\r\n      <br>\r\n      Hold shift to show Charged Infinity Upgrades. You can freely respec your choices on Reality.\r\n    </div>\r\n    <div v-if=\"isUseless\">\r\n      You cannot Charge Infinity Upgrades while Doomed.\r\n    </div>\r\n    <br>\r\n    Within each column, the upgrades must be purchased from top to bottom.\r\n    <br>\r\n    <div class=\"l-infinity-upgrade-grid l-infinity-upgrades-tab__grid\">\r\n      <div\r\n        v-for=\"(column, columnId) in grid\"\r\n        :key=\"columnId\"\r\n        class=\"c-infinity-upgrade-grid__column\"\r\n      >\r\n        <InfinityUpgradeButton\r\n          v-for=\"upgrade in column\"\r\n          :key=\"upgrade.id\"\r\n          :upgrade=\"upgrade\"\r\n          :class=\"btnClassObject(columnId)\"\r\n        />\r\n        <div\r\n          class=\"c-infinity-upgrade-grid__column--background\"\r\n          :style=\"styleOfColumnBg[columnId]\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div\r\n      v-if=\"bottomRowUnlocked\"\r\n      class=\"l-infinity-upgrades-bottom-row\"\r\n    >\r\n      <IpMultiplierButton class=\"l-infinity-upgrades-tab__mult-btn\" />\r\n      <InfinityUpgradeButton\r\n        :upgrade=\"offlineIpUpgrade\"\r\n        :class=\"btnClassObject(1)\"\r\n      />\r\n    </div>\r\n    <div v-if=\"eternityUnlocked && bottomRowUnlocked\">\r\n      The Infinity Point multiplier becomes more expensive\r\n      <br>\r\n      above {{ formatPostBreak(ipMultSoftCap) }} Infinity Points, and cannot be purchased past\r\n      {{ formatPostBreak(ipMultHardCap) }} Infinity Points.\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-infinity-upgrade-grid__column {\r\n  display: flex;\r\n  overflow: hidden;\r\n  flex-direction: column;\r\n  position: relative;\r\n  border-radius: var(--var-border-radius, 0.3rem);\r\n  margin: 0 0.3rem;\r\n}\r\n\r\n.c-infinity-upgrade-grid__column--background {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n  opacity: 0.7;\r\n}\r\n\r\n.s-base--dark .c-infinity-upgrade-grid__column--background {\r\n  opacity: 0.5;\r\n}\r\n\r\n.l-infinity-upgrades-bottom-row .l-infinity-upgrade-grid__cell,\r\n.l-infinity-upgrades-bottom-row .l-infinity-upgrades-tab__mult-btn {\r\n  margin: 0.5rem 1.1rem;\r\n}\r\n</style>\r\n"]}]}