{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\black-hole\\BlackHoleUpgradeRow.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\black-hole\\BlackHoleUpgradeRow.vue","mtime":1745241597097},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQmxhY2tIb2xlVXBncmFkZUJ1dHRvbiBmcm9tICJAL2NvbXBvbmVudHMvdGFicy9ibGFjay1ob2xlL0JsYWNrSG9sZVVwZ3JhZGVCdXR0b24iOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJCbGFja0hvbGVVcGdyYWRlUm93IiwNCiAgY29tcG9uZW50czogew0KICAgIEJsYWNrSG9sZVVwZ3JhZGVCdXR0b24NCiAgfSwNCiAgcHJvcHM6IHsNCiAgICBibGFja0hvbGU6IHsNCiAgICAgIHR5cGU6IE9iamVjdCwNCiAgICAgIHJlcXVpcmVkOiB0cnVlDQogICAgfQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBpc1VubG9ja2VkOiBmYWxzZSwNCiAgICAgIGlzUGVybWFuZW50OiBmYWxzZSwNCiAgICAgIGludGVydmFsVmFsOiAwLA0KICAgICAgZHVyYXRpb25WYWw6IDAsDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBibGFja0hvbGVEZXNjcmlwdGlvbigpIHsNCiAgICAgIHJldHVybiB0aGlzLmJsYWNrSG9sZS5kZXNjcmlwdGlvbihmYWxzZSk7DQogICAgfSwNCiAgICBpbnRlcnZhbENvbmZpZygpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIHVwZ3JhZGU6IHRoaXMuYmxhY2tIb2xlLmludGVydmFsVXBncmFkZSwNCiAgICAgICAgZGVzY3JpcHRpb246ICgpID0+IGBSZWR1Y2UgJHt0aGlzLmJsYWNrSG9sZURlc2NyaXB0aW9ufSdzIGluYWN0aXZlIHRpbWUgYnkgJHtmb3JtYXRQZXJjZW50cygwLjIpfWAsDQogICAgICAgIGVmZmVjdFRpdGxlOiAiQ3VycmVudCBpbnRlcnZhbCIsDQogICAgICAgIGZvcm1hdEVmZmVjdDogKCkgPT4gYCR7VGltZVNwYW4uZnJvbVNlY29uZHModGhpcy5ibGFja0hvbGUucmF3SW50ZXJ2YWwpLnRvU3RyaW5nU2hvcnQoZmFsc2UpfWANCiAgICAgIH07DQogICAgfSwNCiAgICBwb3dlckNvbmZpZygpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIHVwZ3JhZGU6IHRoaXMuYmxhY2tIb2xlLnBvd2VyVXBncmFkZSwNCiAgICAgICAgZGVzY3JpcHRpb246ICgpID0+IGBNYWtlICR7dGhpcy5ibGFja0hvbGVEZXNjcmlwdGlvbn0gJHtmb3JtYXRQZXJjZW50cygwLjM1KX0gc3Ryb25nZXJgLA0KICAgICAgICBlZmZlY3RUaXRsZTogIkN1cnJlbnQgcG93ZXIiLA0KICAgICAgICBmb3JtYXRFZmZlY3Q6IHZhbHVlID0+IGAke2Zvcm1hdFgodmFsdWUsIDIsIDIpfWANCiAgICAgIH07DQogICAgfSwNCiAgICBkdXJhdGlvbkNvbmZpZygpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIHVwZ3JhZGU6IHRoaXMuYmxhY2tIb2xlLmR1cmF0aW9uVXBncmFkZSwNCiAgICAgICAgZGVzY3JpcHRpb246ICgpID0+IGBFeHRlbmQgJHt0aGlzLmJsYWNrSG9sZURlc2NyaXB0aW9ufSdzIGR1cmF0aW9uIGJ5ICR7Zm9ybWF0UGVyY2VudHMoMC4zKX1gLA0KICAgICAgICBlZmZlY3RUaXRsZTogIkN1cnJlbnQgZHVyYXRpb24iLA0KICAgICAgICBmb3JtYXRFZmZlY3Q6ICgpID0+IGAke1RpbWVTcGFuLmZyb21TZWNvbmRzKHRoaXMuYmxhY2tIb2xlLmR1cmF0aW9uKS50b1N0cmluZ1Nob3J0KGZhbHNlKX1gDQogICAgICB9Ow0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHVwZGF0ZSgpIHsNCiAgICAgIGNvbnN0IGJoID0gdGhpcy5ibGFja0hvbGU7DQogICAgICB0aGlzLmlzVW5sb2NrZWQgPSBiaC5pc1VubG9ja2VkOw0KICAgICAgdGhpcy5pc1Blcm1hbmVudCA9IGJoLmlzUGVybWFuZW50Ow0KICAgICAgLy8gV2UgcHVsbCBkaXJlY3RseSBmcm9tIHRoZSBibGFjayBob2xlIGRhdGEgaGVyZSAoYW5kIGluIGZvcm1hdEVmZmVjdCBhYm92ZSkgYmVjYXVzZSB0aGVyZSBhcmUgb3RoZXIgc291cmNlcw0KICAgICAgLy8gd2hpY2ggYWxzbyBhZmZlY3QgdGhlbSwgYW5kIHRoaXMgaXMgdGhlIG9ubHkgcGxhY2Ugd2hlcmUgdGhlc2UgdmFsdWVzIGFyZSBkaXNwbGF5ZWQgZGlyZWN0bHkgaW4tZ2FtZS4gVGhlbg0KICAgICAgLy8gd2UgdXNlIHRoZXNlIHZhbHVlcyBhcyBrZXlzIHNvIHRoYXQgdGhlIGJ1dHRvbnMgYXJlIGZvcmNlZCB0byByZS1yZW5kZXIgaW1tZWRpYXRlbHkgaWYgdGhleSdyZSBldmVyIGNoYW5nZWQNCiAgICAgIHRoaXMuaW50ZXJ2YWxWYWwgPSBiaC5yYXdJbnRlcnZhbDsNCiAgICAgIHRoaXMuZHVyYXRpb25WYWwgPSBiaC5kdXJhdGlvbjsNCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["BlackHoleUpgradeRow.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlackHoleUpgradeRow.vue","sourceRoot":"src/components/tabs/black-hole","sourcesContent":["<script>\r\nimport BlackHoleUpgradeButton from \"@/components/tabs/black-hole/BlackHoleUpgradeButton\";\r\n\r\nexport default {\r\n  name: \"BlackHoleUpgradeRow\",\r\n  components: {\r\n    BlackHoleUpgradeButton\r\n  },\r\n  props: {\r\n    blackHole: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isUnlocked: false,\r\n      isPermanent: false,\r\n      intervalVal: 0,\r\n      durationVal: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    blackHoleDescription() {\r\n      return this.blackHole.description(false);\r\n    },\r\n    intervalConfig() {\r\n      return {\r\n        upgrade: this.blackHole.intervalUpgrade,\r\n        description: () => `Reduce ${this.blackHoleDescription}'s inactive time by ${formatPercents(0.2)}`,\r\n        effectTitle: \"Current interval\",\r\n        formatEffect: () => `${TimeSpan.fromSeconds(this.blackHole.rawInterval).toStringShort(false)}`\r\n      };\r\n    },\r\n    powerConfig() {\r\n      return {\r\n        upgrade: this.blackHole.powerUpgrade,\r\n        description: () => `Make ${this.blackHoleDescription} ${formatPercents(0.35)} stronger`,\r\n        effectTitle: \"Current power\",\r\n        formatEffect: value => `${formatX(value, 2, 2)}`\r\n      };\r\n    },\r\n    durationConfig() {\r\n      return {\r\n        upgrade: this.blackHole.durationUpgrade,\r\n        description: () => `Extend ${this.blackHoleDescription}'s duration by ${formatPercents(0.3)}`,\r\n        effectTitle: \"Current duration\",\r\n        formatEffect: () => `${TimeSpan.fromSeconds(this.blackHole.duration).toStringShort(false)}`\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const bh = this.blackHole;\r\n      this.isUnlocked = bh.isUnlocked;\r\n      this.isPermanent = bh.isPermanent;\r\n      // We pull directly from the black hole data here (and in formatEffect above) because there are other sources\r\n      // which also affect them, and this is the only place where these values are displayed directly in-game. Then\r\n      // we use these values as keys so that the buttons are forced to re-render immediately if they're ever changed\r\n      this.intervalVal = bh.rawInterval;\r\n      this.durationVal = bh.duration;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-if=\"isUnlocked\"\r\n    class=\"l-black-hole-upgrade-grid__row\"\r\n  >\r\n    <BlackHoleUpgradeButton\r\n      v-if=\"!isPermanent\"\r\n      :key=\"intervalVal\"\r\n      :config=\"intervalConfig\"\r\n    />\r\n    <BlackHoleUpgradeButton :config=\"powerConfig\" />\r\n    <BlackHoleUpgradeButton\r\n      v-if=\"!isPermanent\"\r\n      :key=\"durationVal\"\r\n      :config=\"durationConfig\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}