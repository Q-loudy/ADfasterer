{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-laitela\\SingularityPane.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-laitela\\SingularityPane.vue","mtime":1745241597133},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJTaW5ndWxhcml0eVBhbmUiLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBkYXJrRW5lcmd5OiAwLA0KICAgICAgZGFya0VuZXJneUdhaW5QZXJTZWNvbmQ6IDAsDQogICAgICBzaW5ndWxhcml0aWVzOiAwLA0KICAgICAgc2luZ3VsYXJpdHlDYXBJbmNyZWFzZXM6IDAsDQogICAgICBjYW5QZXJmb3JtU2luZ3VsYXJpdHk6IGZhbHNlLA0KICAgICAgdW5sb2NrZWRCdWxrU2luZ3VsYXJpdHk6IGZhbHNlLA0KICAgICAgc2luZ3VsYXJpdHlDYXA6IDAsDQogICAgICBiYXNlVGltZVRvU2luZ3VsYXJpdHk6IDAsDQogICAgICBjdXJyZW50VGltZVRvU2luZ3VsYXJpdHk6IDAsDQogICAgICBleHRyYVRpbWVBZnRlclNpbmd1bGFyaXR5OiAwLA0KICAgICAgc2luZ3VsYXJpdGllc0dhaW5lZDogMCwNCiAgICAgIGF1dG9TaW5ndWxhcml0eUZhY3RvcjogMCwNCiAgICAgIHBlclN0ZXBGYWN0b3I6IDAsDQogICAgICBpc0F1dG9FbmFibGVkOiBmYWxzZSwNCiAgICAgIGhhc0F1dG9TaW5ndWxhcml0eTogZmFsc2UsDQogICAgICBuZXh0TG93ZXJTdGVwOiAwLA0KICAgICAgd2lsbENvbmRlbnNlT25EZWNyZWFzZTogZmFsc2UsDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBpc0Rvb21lZDogKCkgPT4gUGVsbGUuaXNEb29tZWQsDQogICAgc2luZ3VsYXJpdHlGb3JtVGV4dCgpIHsNCiAgICAgIGNvbnN0IGZvcm1UZXh0ID0gdGhpcy5zaW5ndWxhcml0aWVzR2FpbmVkID09PSAxID8gImFsbCBEYXJrIEVuZXJneSBpbnRvIGEgU2luZ3VsYXJpdHkiDQogICAgICAgIDogYGFsbCBEYXJrIEVuZXJneSBpbnRvICR7cXVhbnRpZnkoIlNpbmd1bGFyaXR5IiwgdGhpcy5zaW5ndWxhcml0aWVzR2FpbmVkLCAyKX1gOw0KICAgICAgaWYgKHRoaXMuY2FuUGVyZm9ybVNpbmd1bGFyaXR5KSB7DQogICAgICAgIHJldHVybiBgQ29uZGVuc2UgJHtmb3JtVGV4dH1gOw0KICAgICAgfQ0KICAgICAgcmV0dXJuIGBSZWFjaCAke2Zvcm1hdCh0aGlzLnNpbmd1bGFyaXR5Q2FwKX0gRGFyayBFbmVyZ3kgdG8gY29uZGVuc2UgJHtmb3JtVGV4dH1gOw0KICAgIH0sDQogICAgc2luZ3VsYXJpdHlXYWl0VGV4dCgpIHsNCiAgICAgIGxldCBzaW5ndWxhcml0eVRpbWUgPSB0aGlzLmN1cnJlbnRUaW1lVG9TaW5ndWxhcml0eTsNCiAgICAgIGlmICh0aGlzLmNhblBlcmZvcm1TaW5ndWxhcml0eSkgew0KICAgICAgICBzaW5ndWxhcml0eVRpbWUgKz0gdGhpcy5leHRyYVRpbWVBZnRlclNpbmd1bGFyaXR5Ow0KICAgICAgICBpZiAoIXRoaXMuaXNBdXRvRW5hYmxlZCkgcmV0dXJuICIiOw0KICAgICAgICByZXR1cm4gc2luZ3VsYXJpdHlUaW1lID4gMA0KICAgICAgICAgID8gYChBdXRvLWNvbmRlbnNpbmcgaW4gJHtUaW1lU3Bhbi5mcm9tU2Vjb25kcyhzaW5ndWxhcml0eVRpbWUpLnRvU3RyaW5nU2hvcnQoKX0pYA0KICAgICAgICAgIDogIihXaWxsIGltbWVkaWF0ZWx5IGF1dG8tY29uZGVuc2UpIjsNCiAgICAgIH0NCiAgICAgIHJldHVybiBgKEVub3VnaCBEYXJrIEVuZXJneSBpbiAke1RpbWVTcGFuLmZyb21TZWNvbmRzKHNpbmd1bGFyaXR5VGltZSkudG9TdHJpbmdTaG9ydCgpfSlgOw0KICAgIH0sDQogICAgYmFzZVNpbmd1bGFyaXR5VGltZSgpIHsNCiAgICAgIHJldHVybiBUaW1lU3Bhbi5mcm9tU2Vjb25kcyh0aGlzLmJhc2VUaW1lVG9TaW5ndWxhcml0eSkudG9TdHJpbmdTaG9ydCgpOw0KICAgIH0sDQogICAgYWRkaXRpb25hbFNpbmd1bGFyaXR5VGltZSgpIHsNCiAgICAgIHJldHVybiBUaW1lU3Bhbi5mcm9tU2Vjb25kcyh0aGlzLmV4dHJhVGltZUFmdGVyU2luZ3VsYXJpdHkpLnRvU3RyaW5nU2hvcnQoKTsNCiAgICB9LA0KICAgIG1hbnVhbFNpbmd1bGFyaXR5UmF0ZSgpIHsNCiAgICAgIGNvbnN0IHRvdGFsVGltZSA9IHRoaXMuYmFzZVRpbWVUb1Npbmd1bGFyaXR5Ow0KICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0UmF0ZSh0aGlzLnNpbmd1bGFyaXRpZXNHYWluZWQgLyB0b3RhbFRpbWUpOw0KICAgIH0sDQogICAgYXV0b1Npbmd1bGFyaXR5UmF0ZSgpIHsNCiAgICAgIGlmICh0aGlzLmhhc0F1dG9TaW5ndWxhcml0eSAmJiAhdGhpcy5pc0F1dG9FbmFibGVkKSByZXR1cm4gIkF1dG8tU2luZ3VsYXJpdHkgaXMgT0ZGIjsNCiAgICAgIGNvbnN0IHRvdGFsVGltZSA9IHRoaXMuYmFzZVRpbWVUb1Npbmd1bGFyaXR5ICsgdGhpcy5leHRyYVRpbWVBZnRlclNpbmd1bGFyaXR5Ow0KICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0UmF0ZSh0aGlzLnNpbmd1bGFyaXRpZXNHYWluZWQgLyB0b3RhbFRpbWUpOw0KICAgIH0sDQogICAgZGVjcmVhc2VUb29sdGlwKCkgew0KICAgICAgaWYgKHRoaXMuc2luZ3VsYXJpdHlDYXBJbmNyZWFzZXMgPT09IDApIHJldHVybiAiWW91IGNhbm5vdCBkZWNyZWFzZSB0aGUgY2FwIGFueSBmdXJ0aGVyISI7DQogICAgICBjb25zdCBzaW5ndWxhcml0aWVzID0gdGhpcy5zaW5ndWxhcml0aWVzR2FpbmVkIC8gdGhpcy5wZXJTdGVwRmFjdG9yOw0KICAgICAgcmV0dXJuIHRoaXMud2lsbENvbmRlbnNlT25EZWNyZWFzZQ0KICAgICAgICA/IGBEZWNyZWFzaW5nIHRoZSBjYXAgd2lsbCBpbW1lZGlhdGVseSBhdXRvLWNvbmRlbnNlIGZvcg0KICAgICAgICAgICR7cXVhbnRpZnkoIlNpbmd1bGFyaXR5Iiwgc2luZ3VsYXJpdGllcywgMil9IWANCiAgICAgICAgOiBudWxsOw0KICAgIH0sDQogICAgaW5jcmVhc2VUb29sdGlwKCkgew0KICAgICAgcmV0dXJuIHRoaXMuc2luZ3VsYXJpdHlDYXBJbmNyZWFzZXMgPj0gNTANCiAgICAgICAgPyAiWW91IGNhbm5vdCBpbmNyZWFzZSB0aGUgY2FwIGFueSBmdXJ0aGVyISINCiAgICAgICAgOiBudWxsOw0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHVwZGF0ZSgpIHsNCiAgICAgIGNvbnN0IGxhaXRlbGEgPSBwbGF5ZXIuY2VsZXN0aWFscy5sYWl0ZWxhOw0KICAgICAgdGhpcy5kYXJrRW5lcmd5ID0gQ3VycmVuY3kuZGFya0VuZXJneS52YWx1ZTsNCiAgICAgIHRoaXMuZGFya0VuZXJneUdhaW5QZXJTZWNvbmQgPSBDdXJyZW5jeS5kYXJrRW5lcmd5LnByb2R1Y3Rpb25QZXJTZWNvbmQ7DQogICAgICB0aGlzLnNpbmd1bGFyaXRpZXMgPSBDdXJyZW5jeS5zaW5ndWxhcml0aWVzLnZhbHVlOw0KICAgICAgdGhpcy5zaW5ndWxhcml0eUNhcEluY3JlYXNlcyA9IGxhaXRlbGEuc2luZ3VsYXJpdHlDYXBJbmNyZWFzZXM7DQogICAgICB0aGlzLmNhblBlcmZvcm1TaW5ndWxhcml0eSA9IFNpbmd1bGFyaXR5LmNhcElzUmVhY2hlZDsNCiAgICAgIHRoaXMudW5sb2NrZWRCdWxrU2luZ3VsYXJpdHkgPSBDdXJyZW5jeS5zaW5ndWxhcml0aWVzLmd0ZSgxMCk7DQogICAgICB0aGlzLnNpbmd1bGFyaXR5Q2FwID0gU2luZ3VsYXJpdHkuY2FwOw0KICAgICAgdGhpcy5iYXNlVGltZVRvU2luZ3VsYXJpdHkgPSBTaW5ndWxhcml0eS50aW1lUGVyQ29uZGVuc2U7DQogICAgICB0aGlzLmN1cnJlbnRUaW1lVG9TaW5ndWxhcml0eSA9IFNpbmd1bGFyaXR5LnRpbWVVbnRpbENhcDsNCiAgICAgIHRoaXMuZXh0cmFUaW1lQWZ0ZXJTaW5ndWxhcml0eSA9IFNpbmd1bGFyaXR5LnRpbWVEZWxheUZyb21BdXRvOw0KICAgICAgdGhpcy5zaW5ndWxhcml0aWVzR2FpbmVkID0gU2luZ3VsYXJpdHkuc2luZ3VsYXJpdGllc0dhaW5lZDsNCiAgICAgIHRoaXMuYXV0b1Npbmd1bGFyaXR5RmFjdG9yID0gU2luZ3VsYXJpdHlNaWxlc3RvbmUuYXV0b0NvbmRlbnNlLmVmZmVjdE9yRGVmYXVsdChJbmZpbml0eSk7DQogICAgICB0aGlzLnBlclN0ZXBGYWN0b3IgPSBTaW5ndWxhcml0eS5nYWluUGVyQ2FwSW5jcmVhc2U7DQogICAgICB0aGlzLmlzQXV0b0VuYWJsZWQgPSBwbGF5ZXIuYXV0by5zaW5ndWxhcml0eS5pc0FjdGl2ZSAmJiBTaW5ndWxhcml0eU1pbGVzdG9uZS5hdXRvQ29uZGVuc2UuY2FuQmVBcHBsaWVkOw0KICAgICAgdGhpcy5oYXNBdXRvU2luZ3VsYXJpdHkgPSBOdW1iZXIuaXNGaW5pdGUodGhpcy5hdXRvU2luZ3VsYXJpdHlGYWN0b3IpOw0KICAgICAgdGhpcy5uZXh0TG93ZXJTdGVwID0gdGhpcy5zaW5ndWxhcml0eUNhcCAqIHRoaXMuYXV0b1Npbmd1bGFyaXR5RmFjdG9yIC8gMTA7DQogICAgICB0aGlzLndpbGxDb25kZW5zZU9uRGVjcmVhc2UgPSB0aGlzLmlzQXV0b0VuYWJsZWQgJiYgdGhpcy5kYXJrRW5lcmd5ID4gdGhpcy5uZXh0TG93ZXJTdGVwOw0KICAgIH0sDQogICAgZG9TaW5ndWxhcml0eSgpIHsNCiAgICAgIFNpbmd1bGFyaXR5LnBlcmZvcm0oKTsNCiAgICB9LA0KICAgIGluY3JlYXNlQ2FwKCkgew0KICAgICAgU2luZ3VsYXJpdHkuaW5jcmVhc2VDYXAoKTsNCiAgICB9LA0KICAgIGRlY3JlYXNlQ2FwKCkgew0KICAgICAgU2luZ3VsYXJpdHkuZGVjcmVhc2VDYXAoKTsNCiAgICB9LA0KICAgIGZvcm1hdFJhdGUocmF0ZSkgew0KICAgICAgaWYgKHJhdGUgPCAxIC8gNjApIHJldHVybiBgJHtmb3JtYXQoMzYwMCAqIHJhdGUsIDIsIDMpfSBwZXIgaG91cmA7DQogICAgICBpZiAocmF0ZSA8IDEpIHJldHVybiBgJHtmb3JtYXQoNjAgKiByYXRlLCAyLCAzKX0gcGVyIG1pbnV0ZWA7DQogICAgICByZXR1cm4gYCR7Zm9ybWF0KHJhdGUsIDIsIDMpfSBwZXIgc2Vjb25kYDsNCiAgICB9LA0KICAgIGNvbmRlbnNlQ2xhc3NPYmplY3QoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICAiYy1sYWl0ZWxhLXNpbmd1bGFyaXR5IjogdHJ1ZSwNCiAgICAgICAgImMtbGFpdGVsYS1zaW5ndWxhcml0eS0tYWN0aXZlIjogdGhpcy5jYW5QZXJmb3JtU2luZ3VsYXJpdHkgJiYgIXRoaXMuaXNEb29tZWQsDQogICAgICAgICJvLXBlbGxlLWRpc2FibGVkIjogdGhpcy5pc0Rvb21lZCwNCiAgICAgICAgIm8tcGVsbGUtZGlzYWJsZWQtcG9pbnRlciI6IHRoaXMuaXNEb29tZWQsDQogICAgICB9Ow0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["SingularityPane.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SingularityPane.vue","sourceRoot":"src/components/tabs/celestial-laitela","sourcesContent":["<script>\r\nexport default {\r\n  name: \"SingularityPane\",\r\n  data() {\r\n    return {\r\n      darkEnergy: 0,\r\n      darkEnergyGainPerSecond: 0,\r\n      singularities: 0,\r\n      singularityCapIncreases: 0,\r\n      canPerformSingularity: false,\r\n      unlockedBulkSingularity: false,\r\n      singularityCap: 0,\r\n      baseTimeToSingularity: 0,\r\n      currentTimeToSingularity: 0,\r\n      extraTimeAfterSingularity: 0,\r\n      singularitiesGained: 0,\r\n      autoSingularityFactor: 0,\r\n      perStepFactor: 0,\r\n      isAutoEnabled: false,\r\n      hasAutoSingularity: false,\r\n      nextLowerStep: 0,\r\n      willCondenseOnDecrease: false,\r\n    };\r\n  },\r\n  computed: {\r\n    isDoomed: () => Pelle.isDoomed,\r\n    singularityFormText() {\r\n      const formText = this.singularitiesGained === 1 ? \"all Dark Energy into a Singularity\"\r\n        : `all Dark Energy into ${quantify(\"Singularity\", this.singularitiesGained, 2)}`;\r\n      if (this.canPerformSingularity) {\r\n        return `Condense ${formText}`;\r\n      }\r\n      return `Reach ${format(this.singularityCap)} Dark Energy to condense ${formText}`;\r\n    },\r\n    singularityWaitText() {\r\n      let singularityTime = this.currentTimeToSingularity;\r\n      if (this.canPerformSingularity) {\r\n        singularityTime += this.extraTimeAfterSingularity;\r\n        if (!this.isAutoEnabled) return \"\";\r\n        return singularityTime > 0\r\n          ? `(Auto-condensing in ${TimeSpan.fromSeconds(singularityTime).toStringShort()})`\r\n          : \"(Will immediately auto-condense)\";\r\n      }\r\n      return `(Enough Dark Energy in ${TimeSpan.fromSeconds(singularityTime).toStringShort()})`;\r\n    },\r\n    baseSingularityTime() {\r\n      return TimeSpan.fromSeconds(this.baseTimeToSingularity).toStringShort();\r\n    },\r\n    additionalSingularityTime() {\r\n      return TimeSpan.fromSeconds(this.extraTimeAfterSingularity).toStringShort();\r\n    },\r\n    manualSingularityRate() {\r\n      const totalTime = this.baseTimeToSingularity;\r\n      return this.formatRate(this.singularitiesGained / totalTime);\r\n    },\r\n    autoSingularityRate() {\r\n      if (this.hasAutoSingularity && !this.isAutoEnabled) return \"Auto-Singularity is OFF\";\r\n      const totalTime = this.baseTimeToSingularity + this.extraTimeAfterSingularity;\r\n      return this.formatRate(this.singularitiesGained / totalTime);\r\n    },\r\n    decreaseTooltip() {\r\n      if (this.singularityCapIncreases === 0) return \"You cannot decrease the cap any further!\";\r\n      const singularities = this.singularitiesGained / this.perStepFactor;\r\n      return this.willCondenseOnDecrease\r\n        ? `Decreasing the cap will immediately auto-condense for\r\n          ${quantify(\"Singularity\", singularities, 2)}!`\r\n        : null;\r\n    },\r\n    increaseTooltip() {\r\n      return this.singularityCapIncreases >= 50\r\n        ? \"You cannot increase the cap any further!\"\r\n        : null;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const laitela = player.celestials.laitela;\r\n      this.darkEnergy = Currency.darkEnergy.value;\r\n      this.darkEnergyGainPerSecond = Currency.darkEnergy.productionPerSecond;\r\n      this.singularities = Currency.singularities.value;\r\n      this.singularityCapIncreases = laitela.singularityCapIncreases;\r\n      this.canPerformSingularity = Singularity.capIsReached;\r\n      this.unlockedBulkSingularity = Currency.singularities.gte(10);\r\n      this.singularityCap = Singularity.cap;\r\n      this.baseTimeToSingularity = Singularity.timePerCondense;\r\n      this.currentTimeToSingularity = Singularity.timeUntilCap;\r\n      this.extraTimeAfterSingularity = Singularity.timeDelayFromAuto;\r\n      this.singularitiesGained = Singularity.singularitiesGained;\r\n      this.autoSingularityFactor = SingularityMilestone.autoCondense.effectOrDefault(Infinity);\r\n      this.perStepFactor = Singularity.gainPerCapIncrease;\r\n      this.isAutoEnabled = player.auto.singularity.isActive && SingularityMilestone.autoCondense.canBeApplied;\r\n      this.hasAutoSingularity = Number.isFinite(this.autoSingularityFactor);\r\n      this.nextLowerStep = this.singularityCap * this.autoSingularityFactor / 10;\r\n      this.willCondenseOnDecrease = this.isAutoEnabled && this.darkEnergy > this.nextLowerStep;\r\n    },\r\n    doSingularity() {\r\n      Singularity.perform();\r\n    },\r\n    increaseCap() {\r\n      Singularity.increaseCap();\r\n    },\r\n    decreaseCap() {\r\n      Singularity.decreaseCap();\r\n    },\r\n    formatRate(rate) {\r\n      if (rate < 1 / 60) return `${format(3600 * rate, 2, 3)} per hour`;\r\n      if (rate < 1) return `${format(60 * rate, 2, 3)} per minute`;\r\n      return `${format(rate, 2, 3)} per second`;\r\n    },\r\n    condenseClassObject() {\r\n      return {\r\n        \"c-laitela-singularity\": true,\r\n        \"c-laitela-singularity--active\": this.canPerformSingularity && !this.isDoomed,\r\n        \"o-pelle-disabled\": this.isDoomed,\r\n        \"o-pelle-disabled-pointer\": this.isDoomed,\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"c-laitela-singularity-container\">\r\n    <div>\r\n      <h2>\r\n        You have {{ quantify(\"Singularity\", singularities, 2) }}\r\n      </h2>\r\n      <button\r\n        :class=\"condenseClassObject()\"\r\n        @click=\"doSingularity\"\r\n      >\r\n        <h2>\r\n          {{ singularityFormText }}\r\n        </h2>\r\n        <br v-if=\"singularityWaitText !== ''\">\r\n        <h2>\r\n          {{ singularityWaitText }}\r\n        </h2>\r\n      </button>\r\n    </div>\r\n    <div v-if=\"singularities !== 0\">\r\n      <div class=\"o-laitela-matter-amount\">\r\n        You have {{ format(darkEnergy, 2, 4) }} Dark Energy. (+{{ format(darkEnergyGainPerSecond, 2, 4) }}/s)\r\n      </div>\r\n      <div v-if=\"unlockedBulkSingularity\">\r\n        <button\r\n          class=\"c-laitela-singularity__cap-control\"\r\n          :class=\"{ 'c-laitela-singularity__cap-control--available' : singularityCapIncreases > 0 }\"\r\n          :ach-tooltip=\"decreaseTooltip\"\r\n          @click=\"decreaseCap\"\r\n        >\r\n          Decrease Singularity cap.\r\n        </button>\r\n        <button\r\n          class=\"c-laitela-singularity__cap-control\"\r\n          :class=\"{ 'c-laitela-singularity__cap-control--available' : singularityCapIncreases < 50 }\"\r\n          :ach-tooltip=\"increaseTooltip\"\r\n          @click=\"increaseCap\"\r\n        >\r\n          Increase Singularity cap.\r\n        </button>\r\n        <br>\r\n        Each step increases the required Dark Energy by {{ formatX(10) }},\r\n        <br>\r\n        but also increases gained Singularities by {{ formatX(perStepFactor) }}.\r\n      </div>\r\n      <div v-else>\r\n        <br>\r\n        Reach {{ format(10) }} Singularities\r\n        <br>\r\n        to unlock Bulk Singularities.\r\n        <br>\r\n      </div>\r\n      <br>\r\n      Total time to <span v-if=\"hasAutoSingularity\">(auto-)</span>condense:\r\n      {{ baseSingularityTime }}\r\n      <span v-if=\"hasAutoSingularity && autoSingularityFactor !== 1\">\r\n        (+{{ additionalSingularityTime }})\r\n      </span>\r\n      <br>\r\n      <span v-if=\"hasAutoSingularity && autoSingularityFactor !== 1\">Manual </span>\r\n      Singularity gain rate: {{ manualSingularityRate }}\r\n      <br>\r\n      <span v-if=\"hasAutoSingularity && autoSingularityFactor !== 1\">\r\n        Automatic Singularity gain rate: {{ autoSingularityRate }}\r\n      </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-laitela-singularity__cap-control {\r\n  margin: 0 0.3rem 1rem;\r\n}\r\n</style>\r\n"]}]}