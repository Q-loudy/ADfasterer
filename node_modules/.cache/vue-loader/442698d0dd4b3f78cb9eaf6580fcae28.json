{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-enslaved\\EnslavedTab.vue?vue&type=style&index=0&id=085e22ac&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-enslaved\\EnslavedTab.vue","mtime":1745241597119},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYy1lbnNsYXZlZC1ydW4tZGVzY3JpcHRpb24tbGluZSB7DQogIG1hcmdpbi1ib3R0b206IDFyZW07DQp9DQoNCi5sLWZpeGVkLXNldHRpbmcgew0KICBjdXJzb3I6IHBvaW50ZXI7DQogIHBvaW50ZXItZXZlbnRzOiBub25lOw0KICBmaWx0ZXI6IGJyaWdodG5lc3MoNzAlKTsNCn0NCg=="},{"version":3,"sources":["EnslavedTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6VA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"EnslavedTab.vue","sourceRoot":"src/components/tabs/celestial-enslaved","sourcesContent":["<script>\r\nimport BlackHoleChargingSliders from \"@/components/tabs/black-hole/BlackHoleChargingSliders\";\r\nimport CelestialQuoteHistory from \"@/components/CelestialQuoteHistory\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\n\r\nexport default {\r\n  name: \"EnslavedTab\",\r\n  components: {\r\n    CelestialQuoteHistory,\r\n    PrimaryButton,\r\n    PrimaryToggleButton,\r\n    BlackHoleChargingSliders\r\n  },\r\n  data: () => ({\r\n    isStoringBlackHole: false,\r\n    isStoringReal: false,\r\n    autoStoreReal: false,\r\n    offlineEnabled: false,\r\n    hasAutoRelease: false,\r\n    isRunning: false,\r\n    completed: false,\r\n    storedBlackHole: 0,\r\n    storedReal: 0,\r\n    storedRealEffiency: 0,\r\n    storedRealCap: 0,\r\n    autoRelease: false,\r\n    autoReleaseSpeed: 0,\r\n    unlocks: [],\r\n    buyableUnlocks: [],\r\n    quote: \"\",\r\n    currentSpeedUp: 0,\r\n    hintsUnlocked: false,\r\n    canModifyGameTimeStorage: false,\r\n    canChangeStoreTime: false,\r\n    canChangeStoreRealTime: false,\r\n    canDischarge: false,\r\n    canAutoRelease: false,\r\n    hasNoCharge: true,\r\n    hasReachedCurrentCap: false,\r\n  }),\r\n  computed: {\r\n    storedRealEfficiencyDesc() {\r\n      return formatPercents(this.storedRealEffiency);\r\n    },\r\n    storedRealCapDesc() {\r\n      return timeDisplayShort(this.storedRealCap);\r\n    },\r\n    unlocksInfo() {\r\n      return ENSLAVED_UNLOCKS;\r\n    },\r\n    nerfedBlackHoleTime() {\r\n      return Enslaved.storedTimeInsideEnslaved(this.storedBlackHole);\r\n    },\r\n    realityTitle() {\r\n      if (this.isRunning) return \"You are inside The Nameless Ones' Reality\";\r\n      return \"Start The Nameless Ones' Reality\";\r\n    },\r\n    runButtonClassObject() {\r\n      return {\r\n        \"c-enslaved-run-button__icon\": true,\r\n        \"c-enslaved-run-button__icon--running\": this.isRunning,\r\n        \"c-celestial-run-button--clickable\": !this.isDoomed,\r\n        \"o-pelle-disabled-pointer\": this.isDoomed\r\n      };\r\n    },\r\n    runDescription() {\r\n      return GameDatabase.celestials.descriptions[2].effects().split(\"\\n\");\r\n    },\r\n    realTimeButtonText() {\r\n      if (!this.offlineEnabled) return \"Offline Progress is disabled\";\r\n      if (this.autoStoreReal) return \"Offline time stored\";\r\n      return \"Offline time used for production\";\r\n    },\r\n    // Use this here since Nameless has a fairly non-standard character, and SFCs don't support using \\uf0c1\r\n    enslavedSymbol: () => Enslaved.symbol,\r\n    isDoomed: () => Pelle.isDoomed,\r\n    storeGameTimeClass() {\r\n      return {\r\n        \"o-enslaved-mechanic-button\": true,\r\n        \"o-enslaved-mechanic-button--clickable\": this.canModifyGameTimeStorage,\r\n        \"o-enslaved-mechanic-button--storing-time\": this.isStoringBlackHole,\r\n        \"l-fixed-setting\": !this.canModifyGameTimeStorage,\r\n        \"o-pelle-disabled\": this.isDoomed\r\n      };\r\n    },\r\n    storeRealTimeClass() {\r\n      return {\r\n        \"o-enslaved-mechanic-button\": true,\r\n        \"o-enslaved-mechanic-button--clickable\": !this.isDoomed,\r\n        \"o-enslaved-mechanic-button--storing-time\": this.isStoringReal,\r\n        \"l-fixed-setting\": !this.canChangeStoreRealTime,\r\n        \"o-pelle-disabled\": this.isDoomed\r\n      };\r\n    },\r\n    dischargeClass() {\r\n      return {\r\n        \"o-enslaved-mechanic-button\": true,\r\n        \"o-enslaved-mechanic-button--clickable\": !this.isDoomed,\r\n        \"l-fixed-setting\": !this.canDischarge || this.hasNoCharge,\r\n        \"o-pelle-disabled\": this.isDoomed\r\n      };\r\n    },\r\n    doomedDisabledClass() {\r\n      return { \"o-pelle-disabled\": this.isDoomed };\r\n    },\r\n    mechanicButtonClass() {\r\n      return {\r\n        \"o-enslaved-mechanic-button\": true,\r\n        \"o-enslaved-mechanic-button--clickable\": !this.isDoomed\r\n      };\r\n    }\r\n  },\r\n  watch: {\r\n    autoRelease(newValue) {\r\n      player.celestials.enslaved.isAutoReleasing = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isStoringBlackHole = Enslaved.isStoringGameTime;\r\n      this.storedBlackHole = player.celestials.enslaved.stored;\r\n      this.isStoringReal = Enslaved.isStoringRealTime;\r\n      this.autoStoreReal = player.celestials.enslaved.autoStoreReal;\r\n      this.offlineEnabled = player.options.offlineProgress;\r\n      this.hasAutoRelease = Ra.unlocks.autoPulseTime.canBeApplied;\r\n      this.isRunning = Enslaved.isRunning;\r\n      this.completed = Enslaved.isCompleted && !this.isDoomed;\r\n      this.storedReal = player.celestials.enslaved.storedReal;\r\n      this.storedRealEffiency = Enslaved.storedRealTimeEfficiency;\r\n      this.storedRealCap = Enslaved.storedRealTimeCap;\r\n      this.unlocks = Array.from(player.celestials.enslaved.unlocks);\r\n      this.buyableUnlocks = Object.values(ENSLAVED_UNLOCKS).map(x => Enslaved.canBuy(x));\r\n      this.quote = Enslaved.quote;\r\n      this.autoRelease = player.celestials.enslaved.isAutoReleasing;\r\n      this.autoReleaseSpeed = Enslaved.isAutoReleasing ? Enslaved.autoReleaseSpeed : 0;\r\n      this.currentSpeedUp = Enslaved.currentBlackHoleStoreAmountPerMs;\r\n      this.hintsUnlocked = EnslavedProgress.hintsUnlocked.hasProgress;\r\n      this.canModifyGameTimeStorage = Enslaved.canModifyGameTimeStorage;\r\n      this.canChangeStoreTime = Enslaved.canModifyGameTimeStorage;\r\n      this.canChangeStoreRealTime = Enslaved.canModifyRealTimeStorage;\r\n      this.canDischarge = Enslaved.canRelease(false);\r\n      this.canAutoRelease = Enslaved.canRelease(true);\r\n      this.hasNoCharge = player.celestials.enslaved.stored === 0;\r\n      this.hasReachedCurrentCap = this.storedReal === this.storedRealCap;\r\n    },\r\n    toggleStoreBlackHole() {\r\n      Enslaved.toggleStoreBlackHole();\r\n    },\r\n    toggleStoreReal() {\r\n      Enslaved.toggleStoreReal();\r\n    },\r\n    toggleAutoStoreReal() {\r\n      if (!this.offlineEnabled) return;\r\n      Enslaved.toggleAutoStoreReal();\r\n    },\r\n    useStored() {\r\n      Enslaved.useStoredTime(false);\r\n    },\r\n    timeDisplayShort(ms) {\r\n      return timeDisplayShort(ms);\r\n    },\r\n    timeUntilBuy(price) {\r\n      return Math.max((price - this.storedBlackHole) / this.currentSpeedUp, 0);\r\n    },\r\n    buyUnlock(info) {\r\n      Enslaved.buyUnlock(info);\r\n    },\r\n    startRun() {\r\n      if (this.isDoomed) return;\r\n      Modal.celestials.show({ name: \"The Nameless Ones'\", number: 2 });\r\n    },\r\n    hasUnlock(info) {\r\n      return Enslaved.has(info);\r\n    },\r\n    canBuyUnlock(info) {\r\n      // This (rather than just using Enslaved.canBuy(info) and removing this.buyableUnlocks)\r\n      // is needed for proper reactivity of button styles (e.g., if you get a level 5000 glyph\r\n      // while on the Nameless tab).\r\n      return this.buyableUnlocks[info.id];\r\n    },\r\n    unlockClassObject(info) {\r\n      return {\r\n        \"o-enslaved-shop-button--bought\": this.hasUnlock(info),\r\n        \"o-enslaved-shop-button--available\": this.canBuyUnlock(info)\r\n      };\r\n    },\r\n    glitchStyle(x) {\r\n      const xScale = 15 / 27;\r\n      const yScale = 5;\r\n      const dx = (x - 13) * xScale + (Math.random() * 2 - 1) * 0.85;\r\n      const dy = (Math.random() * 2 - 1) * yScale;\r\n      const height = (Math.pow(Math.random(), 1.5) + 0.25) * 3 * yScale;\r\n      return {\r\n        transform: `translate(${dx}rem, ${dy}rem)`,\r\n        height: `${height}rem`,\r\n      };\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-enslaved-celestial-tab\">\r\n    <CelestialQuoteHistory celestial=\"enslaved\" />\r\n    <div\r\n      v-if=\"hasAutoRelease && canAutoRelease\"\r\n      class=\"c-subtab-option-container\"\r\n    >\r\n      <PrimaryToggleButton\r\n        v-model=\"autoRelease\"\r\n        class=\"o-primary-btn--subtab-option\"\r\n        label=\"Pulse Black Hole:\"\r\n      />\r\n    </div>\r\n    <div class=\"l-enslaved-celestial-tab--inner\">\r\n      <div class=\"l-enslaved-run-container\">\r\n        <div v-if=\"hasUnlock(unlocksInfo.RUN)\">\r\n          <div class=\"c-enslaved-run-button\">\r\n            <div\r\n              class=\"c-enslaved-run-button__title\"\r\n              :class=\"doomedDisabledClass\"\r\n            >\r\n              {{ realityTitle }}\r\n            </div>\r\n            <div v-if=\"completed\">\r\n              <b>(Completed)</b>\r\n            </div>\r\n            <div\r\n              :class=\"runButtonClassObject\"\r\n              @click=\"startRun\"\r\n            >\r\n              <div class=\"c-enslaved-run-button__icon__sigil\">\r\n                {{ enslavedSymbol }}\r\n              </div>\r\n              <div\r\n                v-for=\"x in (isRunning ? 25 : 0)\"\r\n                :key=\"x\"\r\n                class=\"c-enslaved-run-button__icon__glitch\"\r\n                :style=\"glitchStyle(x)\"\r\n              />\r\n            </div>\r\n            <div\r\n              v-for=\"line in runDescription\"\r\n              :key=\"line\"\r\n              class=\"c-enslaved-run-description-line\"\r\n            >\r\n              {{ line }}\r\n            </div>\r\n            <b>Reward: Unlock Tesseracts, which let you increase Infinity Dimension caps\r\n              (see Infinity Dimension tab)</b>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"l-enslaved-upgrades-column\">\r\n        <PrimaryButton\r\n          v-if=\"hintsUnlocked\"\r\n          class=\"o-primary-btn\"\r\n          onclick=\"Modal.enslavedHints.show()\"\r\n        >\r\n          Examine the Reality more closely...\r\n        </PrimaryButton>\r\n        <div class=\"l-enslaved-top-container\">\r\n          <div class=\"l-enslaved-top-container__half\">\r\n            While charging, game speed multipliers are {{ hasAutoRelease ? \"decreased\" : \"disabled\" }},\r\n            and the lost speed is converted into stored game time. Discharging the Black Hole allows you to skip\r\n            forward in time. Stored game time is also used to unlock certain upgrades.\r\n            <button\r\n              :class=\"storeGameTimeClass\"\r\n              @click=\"toggleStoreBlackHole\"\r\n            >\r\n              <div\r\n                class=\"o-enslaved-stored-time\"\r\n                :class=\"doomedDisabledClass\"\r\n              >\r\n                {{ timeDisplayShort(storedBlackHole) }}\r\n              </div>\r\n              <div>\r\n                {{ isStoringBlackHole ? \"Charging Black Hole\": \"Charge Black Hole\" }}\r\n              </div>\r\n            </button>\r\n            <button\r\n              :class=\"dischargeClass\"\r\n              @click=\"useStored\"\r\n            >\r\n              <span>Discharge Black Hole</span>\r\n              <p v-if=\"isRunning\">\r\n                {{ timeDisplayShort(nerfedBlackHoleTime) }} in this Reality\r\n              </p>\r\n            </button>\r\n          </div>\r\n          <div class=\"l-enslaved-top-container__half\">\r\n            Storing real time completely halts all production, setting game speed to {{ formatInt(0) }}.\r\n            You can use stored real time to \"amplify\" a Reality, simulating repeated runs of it.\r\n            Amplified Realities give all the rewards that normal Realities do.\r\n            <button\r\n              :class=\"[storeRealTimeClass,\r\n                       {'l-fixed-setting': hasReachedCurrentCap}]\"\r\n              @click=\"toggleStoreReal\"\r\n            >\r\n              <div class=\"o-enslaved-stored-time\">\r\n                {{ timeDisplayShort(storedReal) }}\r\n              </div>\r\n              <div>\r\n                {{ isStoringReal ? \"Storing real time\": \"Store real time\" }}\r\n              </div>\r\n            </button>\r\n            <button\r\n              :class=\"[mechanicButtonClass,\r\n                       {'o-enslaved-mechanic-button--storing-time': autoStoreReal && offlineEnabled,\r\n                        'l-fixed-setting': !canChangeStoreRealTime || !offlineEnabled},\r\n                       doomedDisabledClass]\"\r\n              @click=\"toggleAutoStoreReal\"\r\n            >\r\n              {{ realTimeButtonText }}\r\n            </button>\r\n            <div>\r\n              Efficiency: {{ storedRealEfficiencyDesc }}\r\n            </div>\r\n            <div>\r\n              Maximum stored real time: {{ storedRealCapDesc }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <BlackHoleChargingSliders />\r\n        <br>\r\n        <div class=\"l-enslaved-shop-container\">\r\n          <button\r\n            v-for=\"unlock in unlocksInfo\"\r\n            :key=\"unlock.id\"\r\n            class=\"o-enslaved-shop-button\"\r\n            :class=\"unlockClassObject(unlock)\"\r\n            @click=\"buyUnlock(unlock)\"\r\n          >\r\n            {{ unlock.description() }}\r\n            <div v-if=\"!hasUnlock(unlock)\">\r\n              Costs: {{ timeDisplayShort(unlock.price) }}\r\n            </div>\r\n            <span v-if=\"isStoringBlackHole && !hasUnlock(unlock) && timeUntilBuy(unlock.price) > 0\">\r\n              Time to obtain: {{ timeDisplayShort(timeUntilBuy(unlock.price)) }}\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-enslaved-run-description-line {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.l-fixed-setting {\r\n  cursor: pointer;\r\n  pointer-events: none;\r\n  filter: brightness(70%);\r\n}\r\n</style>"]}]}