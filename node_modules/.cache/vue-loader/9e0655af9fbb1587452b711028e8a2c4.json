{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\EffectDisplay.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\EffectDisplay.vue","mtime":1745241596767},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBpc0RlY2ltYWwsIGlzRnVuY3Rpb24sIGlzTnVtYmVyIH0gZnJvbSAiQC91dGlsaXR5IjsNCg0KLyogZXNsaW50LWRpc2FibGUgbm8tZW1wdHktZnVuY3Rpb24gKi8NCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkVmZmVjdERpc3BsYXkiLA0KICBwcm9wczogew0KICAgIGNvbmZpZzogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogdW5kZWZpbmVkDQogICAgfSwNCiAgICBicjogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZQ0KICAgIH0sDQogICAgbGFiZWw6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlZmF1bHQ6ICJDdXJyZW50bHkiLA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlDQogICAgfSwNCiAgICBpZ25vcmVDYXBwZWQ6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICByZXF1aXJlZDogZmFsc2UsDQogICAgICBkZWZhdWx0OiBmYWxzZQ0KICAgIH0sDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGlzVmlzaWJsZTogZmFsc2UsDQogICAgICBlZmZlY3RWYWx1ZTogMCwNCiAgICAgIC8vIE51bWJlci5NQVhfVkFMVUUgZG9lc24ndCByZWFsbHkgbWF0dGVyIGhlcmUsIGJ1dCB3ZSBuZWVkIGl0IGJlY2F1c2UNCiAgICAgIC8vIHVuZGVmaW5lZCB2YWx1ZXMgYXJlIG5vdCBhbGxvd2VkIGZvciBkYXRhIHByb3BlcnRpZXMNCiAgICAgIGNhcDogTnVtYmVyLk1BWF9WQUxVRSwNCiAgICAgIGhhc0NhcDogZmFsc2UNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIHJlYWNoZWRDYXAoKSB7DQogICAgICByZXR1cm4gdGhpcy5oYXNDYXAgJiYgdGhpcy5yZWFjaGVkQ2FwRnVuY3Rpb24oKTsNCiAgICB9LA0KICAgIGxhYmVsRGlzcGxheSgpIHsNCiAgICAgIGlmICh0aGlzLmNvbmZpZy5ub0xhYmVsKSB7DQogICAgICAgIHJldHVybiAiIjsNCiAgICAgIH0NCiAgICAgIHJldHVybiBgJHt0aGlzLnJlYWNoZWRDYXAgJiYgIXRoaXMuaWdub3JlQ2FwcGVkID8gIkNhcHBlZCIgOiB0aGlzLmxhYmVsfTogYDsNCiAgICB9LA0KICAgIGVmZmVjdERpc3BsYXkoKSB7DQogICAgICByZXR1cm4gdGhpcy5mb3JtYXRFZmZlY3QodGhpcy5yZWFjaGVkQ2FwID8gdGhpcy5jYXAgOiB0aGlzLmVmZmVjdFZhbHVlKTsNCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgY29uZmlnOiB7DQogICAgICBpbW1lZGlhdGU6IHRydWUsDQogICAgICBoYW5kbGVyKGNvbmZpZykgew0KICAgICAgICB0aGlzLnVwZGF0ZUVmZmVjdCA9ICgpID0+IHsgfTsNCiAgICAgICAgdGhpcy51cGRhdGVDYXAgPSAoKSA9PiB7IH07DQogICAgICAgIGNvbnN0IGVmZmVjdCA9IGNvbmZpZz8uZWZmZWN0Ow0KICAgICAgICBjb25zdCBmb3JtYXRFZmZlY3QgPSBjb25maWc/LmZvcm1hdEVmZmVjdDsNCiAgICAgICAgdGhpcy5pc1Zpc2libGUgPSBlZmZlY3QgIT09IHVuZGVmaW5lZCAmJiBmb3JtYXRFZmZlY3QgIT09IHVuZGVmaW5lZDsNCiAgICAgICAgaWYgKCF0aGlzLmlzVmlzaWJsZSkgcmV0dXJuOw0KICAgICAgICB0aGlzLmZvcm1hdEVmZmVjdCA9IGZvcm1hdEVmZmVjdDsNCg0KICAgICAgICBpZiAoaXNOdW1iZXIoZWZmZWN0KSkgew0KICAgICAgICAgIHRoaXMuZWZmZWN0VmFsdWUgPSBlZmZlY3Q7DQogICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKGlzRGVjaW1hbChlZmZlY3QpKSB7DQogICAgICAgICAgdGhpcy5lZmZlY3RWYWx1ZSA9IERlY2ltYWwuZnJvbURlY2ltYWwoZWZmZWN0KTsNCiAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoIWlzRnVuY3Rpb24oZWZmZWN0KSkgew0KICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRWZmZWN0RGlzcGxheSBjb25maWcuZWZmZWN0IGhhcyBgICsNCiAgICAgICAgICAgIGAgdW5zdXBwb3J0ZWQgdHlwZSAiJHt0eXBlb2YgZWZmZWN0fSJgKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGNvbnN0IHZhbHVlID0gZWZmZWN0KCk7DQoNCiAgICAgICAgaWYgKGlzTnVtYmVyKHZhbHVlKSkgew0KICAgICAgICAgIHRoaXMuZWZmZWN0VmFsdWUgPSB2YWx1ZTsNCiAgICAgICAgICB0aGlzLnVwZGF0ZUVmZmVjdCA9ICgpID0+IHRoaXMuZWZmZWN0VmFsdWUgPSBlZmZlY3QoKTsNCiAgICAgICAgfSBlbHNlIGlmIChpc0RlY2ltYWwodmFsdWUpKSB7DQogICAgICAgICAgdGhpcy5lZmZlY3RWYWx1ZSA9IERlY2ltYWwuZnJvbURlY2ltYWwodmFsdWUpOw0KICAgICAgICAgIHRoaXMudXBkYXRlRWZmZWN0ID0gKCkgPT4gdGhpcy5lZmZlY3RWYWx1ZS5jb3B5RnJvbShlZmZlY3QoKSk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFZmZlY3REaXNwbGF5IGNvbmZpZy5lZmZlY3QgaXMgYSBmdW5jdGlvbiB3aGljaCByZXR1cm5zYCArDQogICAgICAgICAgICBgIHVuc3VwcG9ydGVkIHR5cGUgIiR7dHlwZW9mIGVmZmVjdH0iYCk7DQogICAgICAgIH0NCg0KICAgICAgICBsZXQgY2FwID0gY29uZmlnLmNhcDsNCiAgICAgICAgaWYgKGNvbmZpZy5yZWFjaGVkQ2FwICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAvLyBJZiB0aGUgY29uZmlnIGhhcyBhIHJlYWNoZWRDYXAsIHdlIGFzc3VtZSBpdHMgZWZmZWN0IHZhbHVlIGNhbGN1bGF0aW9uDQogICAgICAgICAgLy8gdGFrZXMgYWNjb3VudCBvZiB0aGUgY2FwIGl0c2VsZiwgc28gd2UgZG9uJ3QgaGF2ZSB0by4NCiAgICAgICAgICBjYXAgPSAoKSA9PiB0aGlzLmVmZmVjdFZhbHVlOw0KICAgICAgICAgIHRoaXMucmVhY2hlZENhcEZ1bmN0aW9uID0gY29uZmlnLnJlYWNoZWRDYXA7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAoY2FwICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICBpZiAoY29uZmlnLnJlYWNoZWRDYXAgPT09IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgdGhpcy5yZWFjaGVkQ2FwRnVuY3Rpb24gPSBpc051bWJlcih2YWx1ZSkNCiAgICAgICAgICAgICAgPyAoKSA9PiB0aGlzLmVmZmVjdFZhbHVlID49IHRoaXMuY2FwDQogICAgICAgICAgICAgIDogKCkgPT4gdGhpcy5lZmZlY3RWYWx1ZS5ndGUodGhpcy5jYXApOw0KICAgICAgICAgIH0NCg0KICAgICAgICAgIGlmIChpc051bWJlcihjYXApKSB7DQogICAgICAgICAgICB0aGlzLmNhcCA9IGNhcDsNCiAgICAgICAgICAgIHRoaXMuaGFzQ2FwID0gdHJ1ZTsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICB9DQoNCiAgICAgICAgICBpZiAoaXNEZWNpbWFsKGNhcCkpIHsNCiAgICAgICAgICAgIHRoaXMuY2FwID0gRGVjaW1hbC5mcm9tRGVjaW1hbChjYXApOw0KICAgICAgICAgICAgdGhpcy5oYXNDYXAgPSB0cnVlOw0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgIH0NCg0KICAgICAgICAgIGlmIChpc0Z1bmN0aW9uKGNhcCkpIHsNCiAgICAgICAgICAgIHRoaXMudXBkYXRlQ2FwID0gKCkgPT4gew0KICAgICAgICAgICAgICB0aGlzLmNhcCA9IGNhcCgpOw0KICAgICAgICAgICAgICB0aGlzLmhhc0NhcCA9IHRoaXMuY2FwICE9PSB1bmRlZmluZWQ7DQogICAgICAgICAgICB9Ow0KICAgICAgICAgICAgdGhpcy51cGRhdGVDYXAoKTsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICB9DQoNCiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVmZmVjdERpc3BsYXkgY29uZmlnLmNhcCBpcyBhIGZ1bmN0aW9uIHdoaWNoIHJldHVybnNgICsNCiAgICAgICAgICAgIGAgdW5zdXBwb3J0ZWQgdHlwZSAiJHt0eXBlb2YgZWZmZWN0fSJgKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogIH0sDQogIGJlZm9yZUNyZWF0ZSgpIHsNCiAgICB0aGlzLnVwZGF0ZUVmZmVjdCA9ICgpID0+IHsgfTsNCiAgICB0aGlzLnVwZGF0ZUNhcCA9ICgpID0+IHsgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHVwZGF0ZSgpIHsNCiAgICAgIHRoaXMudXBkYXRlRWZmZWN0KCk7DQogICAgICB0aGlzLnVwZGF0ZUNhcCgpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["EffectDisplay.vue"],"names":[],"mappingsfile":"EffectDisplay.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\nimport { isDecimal, isFunction, isNumber } from \"@/utility\";\r\n\r\n/* eslint-disable no-empty-function */\r\nexport default {\r\n  name: \"EffectDisplay\",\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      required: false,\r\n      default: undefined\r\n    },\r\n    br: {\r\n      type: Boolean,\r\n      required: false\r\n    },\r\n    label: {\r\n      type: String,\r\n      default: \"Currently\",\r\n      required: false\r\n    },\r\n    ignoreCapped: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isVisible: false,\r\n      effectValue: 0,\r\n      // Number.MAX_VALUE doesn't really matter here, but we need it because\r\n      // undefined values are not allowed for data properties\r\n      cap: Number.MAX_VALUE,\r\n      hasCap: false\r\n    };\r\n  },\r\n  computed: {\r\n    reachedCap() {\r\n      return this.hasCap && this.reachedCapFunction();\r\n    },\r\n    labelDisplay() {\r\n      if (this.config.noLabel) {\r\n        return \"\";\r\n      }\r\n      return `${this.reachedCap && !this.ignoreCapped ? \"Capped\" : this.label}: `;\r\n    },\r\n    effectDisplay() {\r\n      return this.formatEffect(this.reachedCap ? this.cap : this.effectValue);\r\n    }\r\n  },\r\n  watch: {\r\n    config: {\r\n      immediate: true,\r\n      handler(config) {\r\n        this.updateEffect = () => { };\r\n        this.updateCap = () => { };\r\n        const effect = config?.effect;\r\n        const formatEffect = config?.formatEffect;\r\n        this.isVisible = effect !== undefined && formatEffect !== undefined;\r\n        if (!this.isVisible) return;\r\n        this.formatEffect = formatEffect;\r\n\r\n        if (isNumber(effect)) {\r\n          this.effectValue = effect;\r\n          return;\r\n        }\r\n\r\n        if (isDecimal(effect)) {\r\n          this.effectValue = Decimal.fromDecimal(effect);\r\n          return;\r\n        }\r\n\r\n        if (!isFunction(effect)) {\r\n          throw new Error(`EffectDisplay config.effect has ` +\r\n            ` unsupported type \"${typeof effect}\"`);\r\n        }\r\n\r\n        const value = effect();\r\n\r\n        if (isNumber(value)) {\r\n          this.effectValue = value;\r\n          this.updateEffect = () => this.effectValue = effect();\r\n        } else if (isDecimal(value)) {\r\n          this.effectValue = Decimal.fromDecimal(value);\r\n          this.updateEffect = () => this.effectValue.copyFrom(effect());\r\n        } else {\r\n          throw new Error(`EffectDisplay config.effect is a function which returns` +\r\n            ` unsupported type \"${typeof effect}\"`);\r\n        }\r\n\r\n        let cap = config.cap;\r\n        if (config.reachedCap !== undefined) {\r\n          // If the config has a reachedCap, we assume its effect value calculation\r\n          // takes account of the cap itself, so we don't have to.\r\n          cap = () => this.effectValue;\r\n          this.reachedCapFunction = config.reachedCap;\r\n        }\r\n\r\n        if (cap !== undefined) {\r\n          if (config.reachedCap === undefined) {\r\n            this.reachedCapFunction = isNumber(value)\r\n              ? () => this.effectValue >= this.cap\r\n              : () => this.effectValue.gte(this.cap);\r\n          }\r\n\r\n          if (isNumber(cap)) {\r\n            this.cap = cap;\r\n            this.hasCap = true;\r\n            return;\r\n          }\r\n\r\n          if (isDecimal(cap)) {\r\n            this.cap = Decimal.fromDecimal(cap);\r\n            this.hasCap = true;\r\n            return;\r\n          }\r\n\r\n          if (isFunction(cap)) {\r\n            this.updateCap = () => {\r\n              this.cap = cap();\r\n              this.hasCap = this.cap !== undefined;\r\n            };\r\n            this.updateCap();\r\n            return;\r\n          }\r\n\r\n          throw new Error(`EffectDisplay config.cap is a function which returns` +\r\n            ` unsupported type \"${typeof effect}\"`);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  beforeCreate() {\r\n    this.updateEffect = () => { };\r\n    this.updateCap = () => { };\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.updateEffect();\r\n      this.updateCap();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <span v-if=\"isVisible && effectDisplay !== undefined\">\r\n    <br v-if=\"br\">\r\n    {{ labelDisplay }}{{ effectDisplay }}\r\n  </span>\r\n</template>\r\n"]}]}