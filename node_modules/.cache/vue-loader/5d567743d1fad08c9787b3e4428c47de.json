{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\antimatter-dimensions\\ModernAntimatterDimensionsTab.vue?vue&type=style&index=0&id=7dec2f0d&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\antimatter-dimensions\\ModernAntimatterDimensionsTab.vue","mtime":1745241597024},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sLWJ1dHRvbi1jb250YWluZXIgew0KICB3aWR0aDogMTAwcHg7DQogIGhlaWdodDogMzBweDsNCiAgcGFkZGluZzogMDsNCn0NCg=="},{"version":3,"sources":["ModernAntimatterDimensionsTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;AACA;AACA","file":"ModernAntimatterDimensionsTab.vue","sourceRoot":"src/components/tabs/antimatter-dimensions","sourcesContent":["<script>\r\nimport AntimatterDimensionProgressBar from \"./AntimatterDimensionProgressBar\";\r\nimport AntimatterDimensionRow from \"@/components/tabs/antimatter-dimensions/ModernAntimatterDimensionRow\";\r\nimport AntimatterGalaxyRow from \"@/components/tabs/antimatter-dimensions/ModernAntimatterGalaxyRow\";\r\nimport DimensionBoostRow from \"@/components/tabs/antimatter-dimensions/ModernDimensionBoostRow\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport TickspeedRow from \"@/components/tabs/antimatter-dimensions/TickspeedRow\";\r\n\r\nexport default {\r\n  name: \"ModernAntimatterDimensionsTab\",\r\n  components: {\r\n    PrimaryButton,\r\n    AntimatterDimensionProgressBar,\r\n    AntimatterDimensionRow,\r\n    AntimatterGalaxyRow,\r\n    DimensionBoostRow,\r\n    TickspeedRow\r\n  },\r\n  data() {\r\n    return {\r\n      hasDimensionBoosts: false,\r\n      buyUntil10: true,\r\n      isSacrificeUnlocked: false,\r\n      isSacrificeAffordable: false,\r\n      buy10Mult: new Decimal(0),\r\n      currentSacrifice: new Decimal(0),\r\n      sacrificeBoost: new Decimal(0),\r\n      disabledCondition: \"\",\r\n      isQuickResetAvailable: false,\r\n      hasContinuum: false,\r\n      isContinuumActive: false,\r\n      multiplierText: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    sacrificeTooltip() {\r\n      return `Boosts 8th Antimatter Dimension by ${formatX(this.sacrificeBoost, 2, 2)}`;\r\n    },\r\n  },\r\n  methods: {\r\n    maxAll() {\r\n      maxAll();\r\n    },\r\n    sacrifice() {\r\n      sacrificeBtnClick();\r\n    },\r\n    // Toggle single/10 without Continuum, otherwise cycle through all 3 if it's unlocked\r\n    changeBuyMode() {\r\n      if (!this.hasContinuum) {\r\n        player.buyUntil10 = !player.buyUntil10;\r\n        return;\r\n      }\r\n      // \"Continuum\" => \"Until 10\" => \"Buy 1\" => \"Continuum\"\r\n      if (this.isContinuumActive) {\r\n        Laitela.setContinuum(false);\r\n        player.buyUntil10 = true;\r\n      } else if (player.buyUntil10) {\r\n        player.buyUntil10 = false;\r\n      } else {\r\n        if (ImaginaryUpgrade(21).isLockingMechanics && player.auto.disableContinuum) {\r\n          ImaginaryUpgrade(21).tryShowWarningModal();\r\n          return;\r\n        }\r\n        Laitela.setContinuum(true);\r\n      }\r\n    },\r\n    getUntil10Display() {\r\n      if (this.isContinuumActive) return \"Continuum\";\r\n      return this.buyUntil10 ? \"Until 10\" : \"Buy 1\";\r\n    },\r\n    update() {\r\n      this.hasDimensionBoosts = player.dimensionBoosts > 0;\r\n      this.buyUntil10 = player.buyUntil10;\r\n      this.hasContinuum = Laitela.continuumUnlocked;\r\n      this.isContinuumActive = Laitela.continuumActive;\r\n      this.isQuickResetAvailable = Player.isInAntimatterChallenge && Player.antimatterChallenge.isQuickResettable;\r\n\r\n      const isSacrificeUnlocked = Sacrifice.isVisible;\r\n      this.isSacrificeUnlocked = isSacrificeUnlocked;\r\n\r\n      this.buy10Mult.copyFrom(AntimatterDimensions.buyTenMultiplier);\r\n\r\n      this.multiplierText = `Buy 10 Dimension purchase multiplier: ${formatX(this.buy10Mult, 2, 2)}`;\r\n      if (!isSacrificeUnlocked) return;\r\n      this.isSacrificeAffordable = Sacrifice.canSacrifice;\r\n      this.currentSacrifice.copyFrom(Sacrifice.totalBoost);\r\n      this.sacrificeBoost.copyFrom(Sacrifice.nextBoost);\r\n      this.disabledCondition = Sacrifice.disabledCondition;\r\n      const sacText = this.isSacrificeUnlocked\r\n        ? ` | Dimensional Sacrifice multiplier: ${formatX(this.currentSacrifice, 2, 2)}`\r\n        : \"\";\r\n      this.multiplierText += sacText;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-antimatter-dim-tab\">\r\n    <div class=\"modes-container\">\r\n      <button\r\n        class=\"o-primary-btn l-button-container\"\r\n        @click=\"changeBuyMode\"\r\n      >\r\n        {{ getUntil10Display() }}\r\n      </button>\r\n      <PrimaryButton\r\n        v-show=\"isSacrificeUnlocked\"\r\n        v-tooltip=\"sacrificeTooltip\"\r\n        :enabled=\"isSacrificeAffordable\"\r\n        class=\"o-primary-btn--sacrifice\"\r\n        @click=\"sacrifice\"\r\n      >\r\n        <span v-if=\"isSacrificeAffordable\">Dimensional Sacrifice ({{ formatX(sacrificeBoost, 2, 2) }})</span>\r\n        <span v-else>Dimensional Sacrifice Disabled ({{ disabledCondition }})</span>\r\n      </PrimaryButton>\r\n      <button\r\n        class=\"o-primary-btn l-button-container\"\r\n        @click=\"maxAll\"\r\n      >\r\n        Max All (M)\r\n      </button>\r\n    </div>\r\n    <span>{{ multiplierText }}</span>\r\n    <TickspeedRow />\r\n    <div class=\"l-dimensions-container\">\r\n      <AntimatterDimensionRow\r\n        v-for=\"tier in 8\"\r\n        :key=\"tier\"\r\n        :tier=\"tier\"\r\n      />\r\n    </div>\r\n    <div class=\"resets-container\">\r\n      <DimensionBoostRow />\r\n      <PrimaryButton\r\n        v-if=\"isQuickResetAvailable\"\r\n        class=\"o-primary-btn--quick-reset\"\r\n        onclick=\"softReset(-1, true, true)\"\r\n      >\r\n        Perform a Dimension Boost reset\r\n        <span v-if=\"hasDimensionBoosts\"> but lose a Dimension Boost</span>\r\n        <span v-else> for no gain</span>\r\n      </PrimaryButton>\r\n      <AntimatterGalaxyRow />\r\n    </div>\r\n    <AntimatterDimensionProgressBar />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-button-container {\r\n  width: 100px;\r\n  height: 30px;\r\n  padding: 0;\r\n}\r\n</style>\r\n"]}]}