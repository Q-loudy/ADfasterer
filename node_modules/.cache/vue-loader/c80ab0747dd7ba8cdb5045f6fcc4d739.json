{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\SliderComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\SliderComponent.vue","mtime":1745241596803},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SliderComponent.vue"],"names":[],"mappingsfile":"SliderComponent.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\nimport PlusMinusButton from \"@/components/PlusMinusButton\";\r\n\r\n/*\r\n* This is based on vue-slider-component\r\n* downloaded from https://github.com/NightCatSama/vue-slider-component\r\n* It's modified to support showing the slider value in the slider.\r\n*/\r\n/*\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2016 NightCatSama.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\n// Unsharp text [#166](https://github.com/NightCatSama/vue-slider-component/issues/166)\r\nconst roundToDPR = (function () {\r\n  const r = typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1\r\n  return value => Math.round(value * r) / r\r\n})()\r\n\r\nexport default {\r\n  name: \"SliderComponent\",\r\n  components: {\r\n    PlusMinusButton\r\n  },\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: 'auto'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: \"6px\"\r\n    },\r\n    data: {\r\n      type: Array,\r\n      default: null\r\n    },\r\n    dotSize: {\r\n      type: [String, Number],\r\n      default: \"16px\"\r\n    },\r\n    dotWidth: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    dotHeight: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    min: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    max: {\r\n      type: Number,\r\n      default: 100\r\n    },\r\n    interval: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    show: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    disabled: {\r\n      type: [Boolean, Array],\r\n      default: false\r\n    },\r\n    piecewise: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    tooltip: {\r\n      type: [String, Boolean],\r\n      default: 'always'\r\n    },\r\n    eventType: {\r\n      type: String,\r\n      default: 'auto'\r\n    },\r\n    direction: {\r\n      type: String,\r\n      default: 'horizontal'\r\n    },\r\n    reverse: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    lazy: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    clickable: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    speed: {\r\n      type: Number,\r\n      default: 0.5\r\n    },\r\n    realTime: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    stopPropagation: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    value: {\r\n      type: [String, Number, Array, Object],\r\n      default: 0\r\n    },\r\n    piecewiseLabel: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    debug: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    minRange: {\r\n      type: Number\r\n    },\r\n    maxRange: {\r\n      type: Number\r\n    },\r\n    processDraggable: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    useKeyboard: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    actionsKeyboard: {\r\n      type: Array,\r\n      default() {\r\n        return [(i) => i - 1, (i) => i + 1]\r\n      }\r\n    },\r\n    piecewiseFilter: {\r\n      type: Function\r\n    },\r\n    tooltipMerge: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    startAnimation: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    enableCross: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    valueInDot: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    plusMinusButtons: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    sliderStyle: [Array, Object, Function],\r\n    focusStyle: [Array, Object, Function],\r\n    tooltipDir: [Array, String],\r\n    xformatter: [String, Function], // Global mixin defines formatter\r\n    mergeFormatter: [String, Function],\r\n    piecewiseStyle: Object,\r\n    disabledStyle: Object,\r\n    piecewiseActiveStyle: Object,\r\n    processStyle: Object,\r\n    processClass: String,\r\n    bgStyle: Object,\r\n    bgClass: String,\r\n    tooltipStyle: [Array, Object, Function],\r\n    disabledDotStyle: [Array, Object, Function],\r\n    labelStyle: Object,\r\n    labelActiveStyle: Object,\r\n    dotClass: [String, Array]\r\n  },\r\n  data() {\r\n    return {\r\n      flag: false,\r\n      dragFlag: false,\r\n      crossFlag: false,\r\n      keydownFlag: null,\r\n      focusFlag: false,\r\n      processFlag: false,\r\n      processSign: null,\r\n      size: 0,\r\n      fixedValue: 0,\r\n      focusSlider: 0,\r\n      currentValue: 0,\r\n      currentSlider: 0,\r\n      isComponentExists: true,\r\n      isMounted: false,\r\n      dotAxialSizePx: 1,\r\n    }\r\n  },\r\n  computed: {\r\n    tooltipFormatHelper() {\r\n      if (this.mergeFormatter) {\r\n        return this.mergeFormatting(this.val[0], this.val[1]);\r\n      }\r\n      if (this.xformatter) {\r\n        if (this.val[0] === this.val[1]) return this.formatting(this.val[0]);\r\n        return this.formatting(this.val[0]) + \"-\" + this.formatting(this.val[1]);\r\n      }\r\n      if (this.val[0] === this.val[1]) return this.val[0];\r\n      return this.val[0] + \"-\" + this.val[1];\r\n    },\r\n    dotWidthVal() {\r\n      return this.dotWidth || this.dotSize;\r\n    },\r\n    dotHeightVal() {\r\n      return this.dotHeight || this.dotSize;\r\n    },\r\n    flowDirection() {\r\n      return `l-ad-slider--${this.direction + (this.reverse ? '-reverse' : '')}`\r\n    },\r\n    tooltipMergedPosition() {\r\n      if (!this.isMounted) return {}\r\n      const tooltipDirection = this.tooltipDirection[0]\r\n      if (this.$refs.dot0) {\r\n        const style = {}\r\n        style[tooltipDirection] = `-${(this.dotAxialSizePx / 2) - (this.size / 2) + 9}px`\r\n        style['left'] = `50%`\r\n        return style\r\n      }\r\n    },\r\n    tooltipDirection() {\r\n      const dir = this.tooltipDir || (this.direction === 'vertical' ? 'left' : 'top')\r\n      if (Array.isArray(dir)) {\r\n        return this.isRange ? dir : dir[1]\r\n      } else {\r\n        return this.isRange ? [dir, dir] : dir\r\n      }\r\n    },\r\n    tooltipStatus() {\r\n      return this.tooltip === 'hover' && this.flag ? 'ad-slider-always' : this.tooltip ? `ad-slider-${this.tooltip}` : ''\r\n    },\r\n    tooltipClass() {\r\n      return [`ad-slider-tooltip-${this.tooltipDirection}`, 'ad-slider-tooltip']\r\n    },\r\n    disabledArray() {\r\n      return Array.isArray(this.disabled) ? this.disabled : [this.disabled, this.disabled]\r\n    },\r\n    boolDisabled() {\r\n      return this.disabledArray.every(b => b === true)\r\n    },\r\n    isDisabled() {\r\n      return this.eventType === 'none' ? true : this.boolDisabled\r\n    },\r\n    disabledClass() {\r\n      return this.boolDisabled ? 'l-ad-slider--disabled' : ''\r\n    },\r\n    stateClass() {\r\n      return {\r\n        'ad-slider-state-process-drag': this.processFlag,\r\n        'ad-slider-state-drag': this.flag && !this.processFlag && !this.keydownFlag,\r\n        'ad-slider-state-focus': this.focusFlag\r\n      }\r\n    },\r\n    isRange() {\r\n      return Array.isArray(this.value)\r\n    },\r\n    slider() {\r\n      return this.isRange ? [this.$refs.dot0, this.$refs.dot1] : [this.$refs.dot0]\r\n    },\r\n    minimum() {\r\n      return this.data ? 0 : this.min\r\n    },\r\n    val: {\r\n      get() {\r\n        return this.data ? (this.isRange ? [this.data[this.currentValue[0]], this.data[this.currentValue[1]]] : this.data[this.currentValue]) : this.currentValue\r\n      },\r\n      set(val) {\r\n        if (this.data) {\r\n          if (this.isRange) {\r\n            const index0 = this.data.indexOf(val[0])\r\n            const index1 = this.data.indexOf(val[1])\r\n            if (index0 > -1 && index1 > -1) {\r\n              this.currentValue = [index0, index1]\r\n            }\r\n          } else {\r\n            const index = this.data.indexOf(val)\r\n            if (index > -1) {\r\n              this.currentValue = index\r\n            }\r\n          }\r\n        } else {\r\n          this.currentValue = val\r\n        }\r\n      }\r\n    },\r\n    currentIndex() {\r\n      if (this.isRange) {\r\n        return this.data ? this.currentValue : [this.getIndexByValue(this.currentValue[0]), this.getIndexByValue(this.currentValue[1])]\r\n      } else {\r\n        return this.getIndexByValue(this.currentValue)\r\n      }\r\n    },\r\n    indexRange() {\r\n      if (this.isRange) {\r\n        return this.currentIndex\r\n      } else {\r\n        return [0, this.currentIndex]\r\n      }\r\n    },\r\n    maximum() {\r\n      return this.data ? (this.data.length - 1) : this.max\r\n    },\r\n    multiple() {\r\n      const decimals = `${this.interval}`.split('.')[1]\r\n      return decimals ? Math.pow(10, decimals.length) : 1\r\n    },\r\n    spacing() {\r\n      return this.data ? 1 : this.interval\r\n    },\r\n    total() {\r\n      if (this.data) {\r\n        return this.data.length - 1\r\n      } else if (Math.floor((this.maximum - this.minimum) * this.multiple) % (this.interval * this.multiple) !== 0) {\r\n        this.printError('Prop[interval] is illegal, Please make sure that the interval can be divisible')\r\n      }\r\n      return (this.maximum - this.minimum) / this.interval\r\n    },\r\n    usableSize() {\r\n      return this.size - this.dotAxialSizePx;\r\n    },\r\n    gap() {\r\n      return this.usableSize / this.total\r\n    },\r\n    position() {\r\n      if (this.isRange) {\r\n        return [(this.currentValue[0] - this.minimum) / this.spacing * this.gap + this.dotAxialSizePx / 2, (this.currentValue[1] - this.minimum) / this.spacing * this.gap + this.dotAxialSizePx / 2]\r\n      } else {\r\n        return ((this.currentValue - this.minimum) / this.spacing * this.gap + this.dotAxialSizePx / 2)\r\n      }\r\n    },\r\n    isFixed() {\r\n      return this.fixed || this.minRange\r\n    },\r\n    limit() {\r\n      if (this.isRange) {\r\n        if (this.isFixed) {\r\n          return [[this.dotAxialSizePx / 2, this.dotAxialSizePx / 2 + (this.total - this.fixedValue) * this.gap], [this.fixedValue * this.gap + this.dotAxialSizePx / 2, this.size - this.dotAxialSizePx / 2]]\r\n        } else {\r\n          return [[this.dotAxialSizePx / 2, this.position[1]], [this.position[0], this.size - this.dotAxialSizePx / 2]];\r\n        }\r\n      } else {\r\n        return [this.dotAxialSizePx / 2, this.size - this.dotAxialSizePx / 2];\r\n      }\r\n    },\r\n    valueLimit() {\r\n      return this.isRange ? this.isFixed ? [[this.minimum, this.maximum - (this.fixedValue * (this.spacing * this.multiple)) / this.multiple], [this.minimum + (this.fixedValue * (this.spacing * this.multiple)) / this.multiple, this.maximum]] : [[this.minimum, this.currentValue[1]], [this.currentValue[0], this.maximum]] : [this.minimum, this.maximum]\r\n    },\r\n    idleSlider() {\r\n      return this.currentSlider === 0 ? 1 : 0\r\n    },\r\n    wrapStyles() {\r\n      let ret = this.direction === 'vertical' ? {\r\n        height: this.height,\r\n      } : {\r\n        width: this.width,\r\n      }\r\n      if (this.plusMinusButtons) {\r\n        ret[this.direction === \"vertical\" ? \"margin-top\" : \"margin-right\"] = \"0.5rem\";\r\n        ret[this.direction === \"vertical\" ? \"margin-bottom\" : \"margin-left\"] = \"0.5rem\";\r\n      }\r\n      return ret;\r\n    },\r\n    sliderStyles() {\r\n      if (Array.isArray(this.sliderStyle)) {\r\n        return this.isRange ? this.sliderStyle : this.sliderStyle[1]\r\n      } else if (typeof this.sliderStyle === 'function') {\r\n        return this.sliderStyle(this.val, this.currentIndex)\r\n      } else {\r\n        return this.isRange ? [this.sliderStyle, this.sliderStyle] : this.sliderStyle\r\n      }\r\n    },\r\n    focusStyles() {\r\n      if (Array.isArray(this.focusStyle)) {\r\n        return this.isRange ? this.focusStyle : this.focusStyle[1]\r\n      } else if (typeof this.focusStyle === 'function') {\r\n        return this.focusStyle(this.val, this.currentIndex)\r\n      } else {\r\n        return this.isRange ? [this.focusStyle, this.focusStyle] : this.focusStyle\r\n      }\r\n    },\r\n    disabledDotStyles() {\r\n      const disabledStyle = this.disabledDotStyle\r\n      if (Array.isArray(disabledStyle)) {\r\n        return disabledStyle\r\n      } else if (typeof disabledStyle === 'function') {\r\n        const style = disabledStyle(this.val, this.currentIndex)\r\n        return Array.isArray(style) ? style : [style, style]\r\n      } else if (disabledStyle) {\r\n        return [disabledStyle, disabledStyle]\r\n      } else {\r\n        return [{\r\n          backgroundColor: '#ccc'\r\n        }, {\r\n          backgroundColor: '#ccc'\r\n        }]\r\n      }\r\n    },\r\n    tooltipStyles() {\r\n      if (Array.isArray(this.tooltipStyle)) {\r\n        return this.isRange ? this.tooltipStyle : this.tooltipStyle[1]\r\n      } else if (typeof this.tooltipStyle === 'function') {\r\n        return this.tooltipStyle(this.val, this.currentIndex)\r\n      } else {\r\n        return this.isRange ? [this.tooltipStyle, this.tooltipStyle] : this.tooltipStyle\r\n      }\r\n    },\r\n    elemStyles() {\r\n      return this.direction === 'vertical' ? {\r\n        width: this.width,\r\n        height: '100%',\r\n        position: \"relative\"\r\n      } : {\r\n        height: this.height,\r\n        position: \"relative\"\r\n      }\r\n    },\r\n    draggableStyle() {\r\n      return {\r\n        cursor: this.boolDisabled ? \"default\" : \"pointer\"\r\n      };\r\n    },\r\n    dotStyles() {\r\n      let ret = {\r\n        width: this.dotWidthVal,\r\n        height: this.dotHeightVal,\r\n        position: \"absolute\",\r\n      }\r\n      if (this.direction === \"vertical\") {\r\n        ret.left = \"50%\";\r\n      } else {\r\n        ret.top = \"50%\";\r\n      }\r\n      return ret;\r\n      /*\r\n      return this.direction === 'vertical' ? {\r\n        width: this.dotWidthVal,\r\n        height: this.dotHeightVal,\r\n        left: `${(-(this.dotWidthVal - this.width) / 2)}px`\r\n      } : {\r\n          width: `${this.dotWidthVal}px`,\r\n          height: `${this.dotHeightVal}px`,\r\n          top: `${(-(this.dotHeightVal - this.height) / 2)}px`\r\n        }*/\r\n    },\r\n    piecewiseDotStyle() {\r\n      return {\r\n        width: this.width,\r\n        height: this.height,\r\n      };\r\n    },\r\n    piecewiseDotWrap() {\r\n      if (!this.piecewise && !this.piecewiseLabel) {\r\n        return false\r\n      }\r\n      let arr = []\r\n      for (let i = 0; i <= this.total; i++) {\r\n        const style = this.direction === 'vertical' ? {\r\n          bottom: `${this.gap * i - this.usableSize / 2 }px`,\r\n          left: 0\r\n        } : {\r\n          left: `${this.gap * i - this.usableSize / 2 }px`,\r\n          top: 0\r\n        }\r\n        const index = this.reverse ? (this.total - i) : i\r\n        const label = this.data ? this.data[index] : (this.spacing * index) + this.min\r\n        if (this.piecewiseFilter && !this.piecewiseFilter({ index, label })) {\r\n          continue\r\n        }\r\n        arr.push({\r\n          style,\r\n          index,\r\n          label: this.xformatter ? this.formatting(label) : label\r\n        })\r\n      }\r\n      return arr\r\n    },\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.flag || this.setValue(val, true)\r\n    },\r\n    max(val) {\r\n      if (val < this.min) {\r\n        return this.printError('The maximum value can not be less than the minimum value.')\r\n      }\r\n      const resetVal = this.limitValue(this.val)\r\n      this.setValue(resetVal)\r\n      this.refresh()\r\n    },\r\n    min(val) {\r\n      if (val > this.max) {\r\n        return this.printError('The minimum value can not be greater than the maximum value.')\r\n      }\r\n      const resetVal = this.limitValue(this.val)\r\n      this.setValue(resetVal)\r\n      this.refresh()\r\n    },\r\n    show(bool) {\r\n      if (bool && !this.size) {\r\n        this.$nextTick(() => {\r\n          this.refresh()\r\n        })\r\n      }\r\n    },\r\n    fixed() {\r\n      this.computedFixedValue()\r\n    },\r\n    minRange() {\r\n      this.computedFixedValue()\r\n    },\r\n    reverse() {\r\n      this.$refs.process.style.cssText = ''\r\n      this.refresh()\r\n    },\r\n  },\r\n  methods: {\r\n    bindEvents() {\r\n      document.addEventListener('touchmove', this.moving, { passive: false })\r\n      document.addEventListener('touchend', this.moveEnd, { passive: false })\r\n      document.addEventListener('mousedown', this.blurSlider)\r\n      document.addEventListener('mousemove', this.moving)\r\n      document.addEventListener('mouseup', this.moveEnd)\r\n      document.addEventListener('mouseleave', this.moveEnd)\r\n      document.addEventListener('keydown', this.handleKeydown)\r\n      document.addEventListener('keyup', this.handleKeyup)\r\n      window.addEventListener('resize', this.refresh)\r\n      if (this.isRange && this.tooltipMerge) {\r\n        this.$refs.dot0.addEventListener('transitionend', this.handleOverlapTooltip)\r\n        this.$refs.dot1.addEventListener('transitionend', this.handleOverlapTooltip)\r\n      }\r\n    },\r\n    unbindEvents() {\r\n      document.removeEventListener('touchmove', this.moving)\r\n      document.removeEventListener('touchend', this.moveEnd)\r\n      document.removeEventListener('mousedown', this.blurSlider)\r\n      document.removeEventListener('mousemove', this.moving)\r\n      document.removeEventListener('mouseup', this.moveEnd)\r\n      document.removeEventListener('mouseleave', this.moveEnd)\r\n      document.removeEventListener('keydown', this.handleKeydown)\r\n      document.removeEventListener('keyup', this.handleKeyup)\r\n      window.removeEventListener('resize', this.refresh)\r\n      if (this.isRange && this.tooltipMerge) {\r\n        this.$refs.dot0.removeEventListener('transitionend', this.handleOverlapTooltip)\r\n        this.$refs.dot1.removeEventListener('transitionend', this.handleOverlapTooltip)\r\n      }\r\n    },\r\n    handleKeydown(e) {\r\n      if (!this.useKeyboard || !this.focusFlag) {\r\n        return false\r\n      }\r\n      switch (e.keyCode) {\r\n        case 37:\r\n        case 40:\r\n          e.preventDefault()\r\n          this.keydownFlag = true\r\n          this.flag = true\r\n          this.changeFocusSlider(this.actionsKeyboard[0])\r\n          break\r\n        case 38:\r\n        case 39:\r\n          e.preventDefault()\r\n          this.keydownFlag = true\r\n          this.flag = true\r\n          this.changeFocusSlider(this.actionsKeyboard[1])\r\n          break\r\n      }\r\n    },\r\n    handleKeyup() {\r\n      if (this.keydownFlag) {\r\n        this.keydownFlag = false\r\n        this.flag = false\r\n      }\r\n    },\r\n    changeFocusSlider(fn) {\r\n      if (this.isRange) {\r\n        let arr = this.currentIndex.map((index, i) => {\r\n          if (i === this.focusSlider || this.fixed) {\r\n            const val = fn(index)\r\n            const range = this.fixed ? this.valueLimit[i] : [0, this.total]\r\n            if (val <= range[1] && val >= range[0]) {\r\n              return val\r\n            }\r\n          }\r\n          return index\r\n        })\r\n        if (arr[0] > arr[1]) {\r\n          this.focusSlider = this.focusSlider === 0 ? 1 : 0\r\n          arr = arr.reverse()\r\n        }\r\n        this.setIndex(arr)\r\n      } else {\r\n        this.setIndex(fn(this.currentIndex))\r\n      }\r\n    },\r\n    blurSlider(e) {\r\n      const dot = this.isRange ? this.$refs[`dot${this.focusSlider}`] : this.$refs.dot\r\n      if (!dot || dot === e.target || dot.contains(e.target)) {\r\n        return false\r\n      }\r\n      this.focusFlag = false\r\n    },\r\n    formatting(value) {\r\n      return typeof this.xformatter === 'string' ? this.xformatter.replace(/\\{value\\}/, value) : this.xformatter(value)\r\n    },\r\n    mergeFormatting(value1, value2) {\r\n      return typeof this.mergeFormatter === 'string' ? this.mergeFormatter.replace(/\\{(value1|value2)\\}/g, (_, key) => key === 'value1' ? value1 : value2) : this.mergeFormatter(value1, value2)\r\n    },\r\n    getPos(e) {\r\n      this.realTime && this.getStaticData()\r\n      var rect = this.$refs.elem.getBoundingClientRect();\r\n      return this.direction === 'vertical' ? (this.reverse ? (e.clientY - rect.top) : (this.size - (e.clientY - rect.top))) : (this.reverse ? (this.size - (e.clientX - rect.left)) : (e.clientX - rect.left))\r\n    },\r\n    processClick(e) {\r\n      if (this.fixed) {\r\n        e.stopPropagation()\r\n      }\r\n    },\r\n    wrapClick(e) {\r\n      if (this.isDisabled || !this.clickable || this.processFlag || this.dragFlag) return false\r\n      const pos = this.getPos(e)\r\n      if (this.isRange) {\r\n        if (this.disabledArray.every(b => b === false)) {\r\n          this.currentSlider = pos > ((this.position[1] - this.position[0]) / 2 + this.position[0]) ? 1 : 0\r\n        } else if (this.disabledArray[0]) {\r\n          if (pos < this.position[0]) return false\r\n          this.currentSlider = 1\r\n        } else if (this.disabledArray[1]) {\r\n          if (pos > this.position[1]) return false\r\n          this.currentSlider = 0\r\n        }\r\n      }\r\n      if (this.disabledArray[this.currentSlider]) {\r\n        return false\r\n      }\r\n      this.setValueOnPos(pos)\r\n      if (this.isRange && this.tooltipMerge) {\r\n        const timer = setInterval(() => this.handleOverlapTooltip(), 16.7)\r\n        setTimeout(() => window.clearInterval(timer), this.speed * 1000)\r\n      }\r\n    },\r\n    moveStart(e, index = 0, isProcess) {\r\n      if (this.disabledArray[index]) {\r\n        return false\r\n      }\r\n      if (this.stopPropagation) {\r\n        e.stopPropagation()\r\n      }\r\n      if (this.isRange) {\r\n        this.currentSlider = index\r\n        if (isProcess) {\r\n          if (!this.processDraggable) {\r\n            return false\r\n          }\r\n          this.processFlag = true\r\n          this.processSign = {\r\n            pos: this.position,\r\n            start: this.getPos((e.targetTouches && e.targetTouches[0]) ? e.targetTouches[0] : e)\r\n          }\r\n        }\r\n        if (!this.enableCross && this.val[0] === this.val[1]) {\r\n          this.crossFlag = true\r\n        }\r\n      }\r\n      if (!isProcess && this.useKeyboard) {\r\n        this.focusFlag = true\r\n        this.focusSlider = index\r\n      }\r\n      this.flag = true\r\n      this.$emit('drag-start', this)\r\n    },\r\n    moving(e) {\r\n      if (this.stopPropagation) {\r\n        e.stopPropagation()\r\n      }\r\n      if (!this.flag) return false\r\n      e.preventDefault()\r\n      if (e.targetTouches && e.targetTouches[0]) e = e.targetTouches[0]\r\n      if (this.processFlag) {\r\n        this.currentSlider = 0\r\n        this.setValueOnPos(this.processSign.pos[0] + this.getPos(e) - this.processSign.start, true)\r\n        this.currentSlider = 1\r\n        this.setValueOnPos(this.processSign.pos[1] + this.getPos(e) - this.processSign.start, true)\r\n      } else {\r\n        this.dragFlag = true\r\n        this.setValueOnPos(this.getPos(e), true)\r\n      }\r\n      if (this.isRange && this.tooltipMerge) {\r\n        this.handleOverlapTooltip()\r\n      }\r\n    },\r\n    moveEnd(e) {\r\n      if (this.stopPropagation) {\r\n        e.stopPropagation()\r\n      }\r\n      if (this.flag) {\r\n        this.$emit('drag-end', this)\r\n        if (this.lazy && this.isDiff(this.val, this.value)) {\r\n          this.syncValue()\r\n        }\r\n      } else {\r\n        return false\r\n      }\r\n      this.flag = false\r\n      window.setTimeout(() => {\r\n        this.crossFlag = false\r\n        this.dragFlag = false\r\n        this.processFlag = false\r\n      }, 0)\r\n      this.setPosition()\r\n    },\r\n    setValueOnPos(pos, isDrag) {\r\n      const range = this.isRange ? this.limit[this.currentSlider] : this.limit\r\n      const valueRange = this.isRange ? this.valueLimit[this.currentSlider] : this.valueLimit\r\n      const index = Math.round((pos - this.dotAxialSizePx / 2) / this.gap)\r\n      if (pos >= range[0] && pos <= range[1]) {\r\n        const v = this.getValueByIndex(index)\r\n        this.setTransform(pos)\r\n        this.setCurrentValue(v, isDrag)\r\n        if (this.isRange && (this.fixed || this.isLessRange(pos, index))) {\r\n          this.setTransform(pos + ((this.fixedValue * this.gap) * (this.currentSlider === 0 ? 1 : -1)), true)\r\n          this.setCurrentValue((v * this.multiple + (this.fixedValue * this.spacing * this.multiple * (this.currentSlider === 0 ? 1 : -1))) / this.multiple, isDrag, true)\r\n        }\r\n      } else {\r\n        const anotherSlider = pos < range[0] ? 0 : 1\r\n        const currentSlider = anotherSlider === 0 ? 1 : 0\r\n        this.setTransform(range[anotherSlider])\r\n        this.setCurrentValue(valueRange[anotherSlider])\r\n        if (this.isRange && (this.fixed || this.isLessRange(pos, index))) {\r\n          this.setTransform(this.limit[this.idleSlider][anotherSlider], true)\r\n          this.setCurrentValue(this.valueLimit[this.idleSlider][anotherSlider], isDrag, true)\r\n        } else if (this.isRange && (this.enableCross || this.crossFlag) && !this.isFixed && !this.disabledArray[anotherSlider] && this.currentSlider === currentSlider) {\r\n          this.focusSlider = anotherSlider\r\n          this.currentSlider = anotherSlider\r\n        }\r\n      }\r\n      this.crossFlag = false\r\n    },\r\n    isLessRange(pos, index) {\r\n      if (!this.isRange || (!this.minRange && !this.maxRange)) {\r\n        return false\r\n      }\r\n      const diff = this.currentSlider === 0 ? this.currentIndex[1] - index : index - this.currentIndex[0]\r\n      if (this.minRange && diff <= this.minRange) {\r\n        this.fixedValue = this.minRange\r\n        return true\r\n      }\r\n      if (this.maxRange && diff >= this.maxRange) {\r\n        this.fixedValue = this.maxRange\r\n        return true\r\n      }\r\n      this.computedFixedValue()\r\n      return false\r\n    },\r\n    isDiff(a, b) {\r\n      if (Object.prototype.toString.call(a) !== Object.prototype.toString.call(b)) {\r\n        return true\r\n      } else if (Array.isArray(a) && a.length === b.length) {\r\n        return a.some((v, i) => v !== b[i])\r\n      }\r\n      return a !== b\r\n    },\r\n    setCurrentValue(val, isDrag, isIdleSlider) {\r\n      const slider = isIdleSlider ? this.idleSlider : this.currentSlider\r\n      if (val < this.minimum || val > this.maximum) return false\r\n      if (this.isRange) {\r\n        if (this.isDiff(this.currentValue[slider], val)) {\r\n          this.currentValue.splice(slider, 1, val)\r\n          if (!this.lazy || !this.flag) {\r\n            this.syncValue()\r\n          }\r\n        }\r\n      } else if (this.isDiff(this.currentValue, val)) {\r\n        this.currentValue = val\r\n        if (!this.lazy || !this.flag) {\r\n          this.syncValue()\r\n        }\r\n      }\r\n      isDrag || this.setPosition()\r\n    },\r\n    getValueByIndex(index) {\r\n      return ((this.spacing * this.multiple) * index + (this.minimum * this.multiple)) / this.multiple\r\n    },\r\n    getIndexByValue(value) {\r\n      return Math.round((value - this.minimum) * this.multiple) / (this.spacing * this.multiple)\r\n    },\r\n    setIndex(val) {\r\n      if (Array.isArray(val) && this.isRange) {\r\n        let value\r\n        if (this.data) {\r\n          value = [this.data[val[0]], this.data[val[1]]]\r\n        } else {\r\n          value = [this.getValueByIndex(val[0]), this.getValueByIndex(val[1])]\r\n        }\r\n        this.setValue(value)\r\n      } else {\r\n        val = this.getValueByIndex(val)\r\n        if (this.isRange) {\r\n          this.currentSlider = val > ((this.currentValue[1] - this.currentValue[0]) / 2 + this.currentValue[0]) ? 1 : 0\r\n        }\r\n        this.setCurrentValue(val)\r\n      }\r\n    },\r\n    increment(dir) {\r\n      if (this.boolDisabled) return;\r\n      const newVal = this.getValue() + dir * this.interval;\r\n      if (newVal > this.max || newVal < this.min) return;\r\n      this.setValue(newVal);\r\n    },\r\n    setValue(val, noCb, speed) {\r\n      if (this.isDiff(this.val, val)) {\r\n        const resetVal = this.limitValue(val)\r\n        this.val = this.isRange ? resetVal.concat() : resetVal\r\n        this.computedFixedValue()\r\n        this.syncValue(noCb)\r\n      }\r\n      this.$nextTick(() => this.setPosition(speed))\r\n    },\r\n    computedFixedValue() {\r\n      if (!this.isFixed) {\r\n        this.fixedValue = 0\r\n        return false\r\n      }\r\n      this.fixedValue = Math.max(this.fixed ? this.currentIndex[1] - this.currentIndex[0] : 0, this.minRange || 0)\r\n    },\r\n    setPosition(speed) {\r\n      this.flag || this.setTransitionTime(speed === undefined ? this.speed : speed)\r\n      if (this.isRange) {\r\n        this.setTransform(this.position[0], this.currentSlider === 1)\r\n        this.setTransform(this.position[1], this.currentSlider === 0)\r\n      } else {\r\n        this.setTransform(this.position)\r\n      }\r\n      this.flag || this.setTransitionTime(0)\r\n    },\r\n    setTransform(val, isIdleSlider) {\r\n      const slider = isIdleSlider ? this.idleSlider : this.currentSlider\r\n      const value = roundToDPR((this.direction === 'vertical' ? ((this.dotAxialSizePx / 2) - val) : (val - (this.dotAxialSizePx / 2))) * (this.reverse ? -1 : 1))\r\n      const translateValue = this.direction === 'vertical' ? `translate(-50%, ${value}px)` : `translate(${value}px, -50%)`\r\n      const processSize = this.fixed ? `${this.fixedValue * this.gap}px` : `${slider === 0 ? this.position[1] - val : val - this.position[0]}px`\r\n      const processPos = this.fixed ? `${slider === 0 ? val : (val - this.fixedValue * this.gap)}px` : `${slider === 0 ? val : this.position[0]}px`\r\n      this.slider[slider].style.transform = translateValue\r\n      this.slider[slider].style.WebkitTransform = translateValue\r\n      this.slider[slider].style.msTransform = translateValue\r\n      if (this.isRange) {\r\n        if (this.direction === 'vertical') {\r\n          this.$refs.process.style.height = processSize\r\n          this.$refs.process.style[this.reverse ? 'top' : 'bottom'] = processPos\r\n        } else {\r\n          this.$refs.process.style.width = processSize\r\n          this.$refs.process.style[this.reverse ? 'right' : 'left'] = processPos\r\n        }\r\n      } else {\r\n        if (this.direction === 'vertical') {\r\n          this.$refs.process.style.height = `${val}px`\r\n          this.$refs.process.style[this.reverse ? 'top' : 'bottom'] = 0\r\n        } else {\r\n          this.$refs.process.style.width = `${val}px`\r\n          this.$refs.process.style[this.reverse ? 'right' : 'left'] = 0\r\n        }\r\n      }\r\n    },\r\n    setTransitionTime(time) {\r\n      // In order to avoid browser merge style and modify together\r\n      time || this.$refs.process.offsetWidth\r\n      for (let i = 0; i < this.slider.length; i++) {\r\n        this.slider[i].style.transitionDuration = `${time}s`\r\n        this.slider[i].style.WebkitTransitionDuration = `${time}s`\r\n      }\r\n      if (this.isRange) {\r\n        this.$refs.process.style.transitionDuration = `${time}s`\r\n        this.$refs.process.style.WebkitTransitionDuration = `${time}s`\r\n      } else {\r\n        this.$refs.process.style.transitionDuration = `${time}s`\r\n        this.$refs.process.style.WebkitTransitionDuration = `${time}s`\r\n      }\r\n    },\r\n    limitValue(val) {\r\n      if (this.data) {\r\n        return val\r\n      }\r\n      const inRange = (v) => {\r\n        if (v < this.min) {\r\n          this.printError(`The value of the slider is ${val}, the minimum value is ${this.min}, the value of this slider can not be less than the minimum value`)\r\n          return this.min\r\n        } else if (v > this.max) {\r\n          this.printError(`The value of the slider is ${val}, the maximum value is ${this.max}, the value of this slider can not be greater than the maximum value`)\r\n          return this.max\r\n        }\r\n        return v\r\n      }\r\n      if (this.isRange) {\r\n        return val.map((v) => inRange(v))\r\n      } else {\r\n        return inRange(val)\r\n      }\r\n    },\r\n    isActive(index) {\r\n      return index >= this.indexRange[0] && index <= this.indexRange[1]\r\n    },\r\n    syncValue(noCb) {\r\n      let val = this.isRange ? this.val.concat() : this.val\r\n      this.$emit('input', val)\r\n      this.keydownFlag && this.$emit('on-keypress', val)\r\n      noCb || this.$emit('callback', val)\r\n    },\r\n    getValue() {\r\n      return this.val\r\n    },\r\n    getIndex() {\r\n      return this.currentIndex\r\n    },\r\n    getStaticData() {\r\n      if (this.$refs.elem) {\r\n        this.size = this.direction === 'vertical' ? this.$refs.elem.offsetHeight : this.$refs.elem.offsetWidth\r\n        this.dotAxialSizePx = this.direction === 'vertical' ? this.$refs.dot0.clientHeight : this.$refs.dot0.clientWidth;\r\n      }\r\n    },\r\n    refresh() {\r\n      if (this.$refs.elem) {\r\n        this.getStaticData()\r\n        this.computedFixedValue()\r\n        this.setPosition(0)\r\n      }\r\n    },\r\n    printError(msg) {\r\n      if (this.debug) {\r\n        console.error(`[VueSlider error]: ${msg}`)\r\n      }\r\n    },\r\n    handleOverlapTooltip() {\r\n      const isDirectionSame = this.tooltipDirection[0] === this.tooltipDirection[1]\r\n      if (this.isRange && isDirectionSame) {\r\n        const tooltip0 = this.reverse ? this.$refs.tooltip1 : this.$refs.tooltip0\r\n        const tooltip1 = this.reverse ? this.$refs.tooltip0 : this.$refs.tooltip1\r\n        const tooltip0Rect = tooltip0.getBoundingClientRect()\r\n        const tooltip1Rect = tooltip1.getBoundingClientRect()\r\n        const tooltip0Right = tooltip0Rect.right\r\n        const tooltip1Left = tooltip1Rect.left\r\n        const tooltip0Y = tooltip0Rect.top\r\n        const tooltip1Y = tooltip1Rect.top + tooltip1Rect.height\r\n        const horizontalOverlap = this.direction === 'horizontal' && tooltip0Right > tooltip1Left\r\n        const verticalOverlap = this.direction === 'vertical' && tooltip1Y > tooltip0Y\r\n        if (horizontalOverlap || verticalOverlap) {\r\n          this.handleDisplayMergedTooltip(true)\r\n        } else {\r\n          this.handleDisplayMergedTooltip(false)\r\n        }\r\n      }\r\n    },\r\n    handleDisplayMergedTooltip(show) {\r\n      const tooltip0 = this.$refs.tooltip0\r\n      const tooltip1 = this.$refs.tooltip1\r\n      const mergedTooltip = this.$refs.process.getElementsByClassName('vue-merged-tooltip')[0]\r\n      if (show) {\r\n        tooltip0.style.visibility = 'hidden'\r\n        tooltip1.style.visibility = 'hidden'\r\n        mergedTooltip.style.visibility = 'visible'\r\n      } else {\r\n        tooltip0.style.visibility = 'visible'\r\n        tooltip1.style.visibility = 'visible'\r\n        mergedTooltip.style.visibility = 'hidden'\r\n      }\r\n    },\r\n    dotContents() {\r\n      if (Notations.current.name === \"Blind\" || Theme.current().name === \"S9\" ) return \"\";\r\n      // Doesn't work if the slider needs to show more precision than integers,\r\n      // but I don't think we have any such sliders.\r\n      return this.valueInDot ? Math.round(this.getValue()) : '';\r\n    },\r\n  },\r\n  mounted() {\r\n    this.isComponentExists = true\r\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\r\n      return this.printError('window or document is undefined, can not be initialization.')\r\n    }\r\n    this.$nextTick(() => {\r\n      if (this.isComponentExists) {\r\n        this.getStaticData()\r\n        this.setValue(this.limitValue(this.value), true, this.startAnimation ? this.speed : 0)\r\n        this.bindEvents()\r\n        if (this.isRange && this.tooltipMerge && !this.startAnimation) {\r\n          this.$nextTick(() => {\r\n            this.handleOverlapTooltip()\r\n          })\r\n        }\r\n      }\r\n    })\r\n    this.isMounted = true\r\n  },\r\n  beforeDestroy() {\r\n    this.isComponentExists = false\r\n    this.unbindEvents()\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div :class=\"['l-ad-slider', flowDirection, disabledClass, { 'l-ad-slider--has-label': piecewiseLabel }]\"\r\n       v-show=\"show\">\r\n    <PlusMinusButton v-if=\"plusMinusButtons\" type=\"minus\" @click=\"increment(-1)\"/>\r\n    <div ref=\"wrap\"\r\n         :class=\"['l-ad-slider__wrap', stateClass]\"\r\n         :style=\"[wrapStyles, boolDisabled ? disabledStyle : null]\"\r\n         @click=\"wrapClick\">\r\n      <div ref=\"elem\" aria-hidden=\"true\" :class=\"['l-ad-slider__bg', 'c-ad-slider__bg', bgClass]\"\r\n        :style=\"[elemStyles, bgStyle, draggableStyle]\"\r\n        @mousedown=\"moveStart($event, 0, true)\"\r\n        @touchstart=\"moveStart($event, 0, true)\"\r\n      >\r\n        <template v-if=\"isRange\">\r\n          <div\r\n            ref=\"dot0\"\r\n            key=\"dot0\"\r\n            :class=\"[tooltipStatus, 'l-ad-slider__dot', 'c-ad-slider__dot',\r\n            {\r\n              'l-ad-slider__dot--focus': focusFlag && focusSlider === 0,\r\n              'l-ad-slider__dot--dragging': flag && currentSlider === 0,\r\n              'l-ad-slider__dot--disabled': !boolDisabled && disabledArray[0]\r\n            }\r\n          ]\"\r\n            :style=\"dotStyles\"\r\n            @mousedown=\"moveStart\"\r\n            @touchstart=\"moveStart\"\r\n          >\r\n            <div\r\n              :class=\"['l-ad-slider__dot-handle', 'c-ad-slider__dot-handle', dotClass]\"\r\n              :style=\"[\r\n              (!boolDisabled && disabledArray[0])\r\n              ? disabledDotStyles[0]\r\n              : null,\r\n              sliderStyles[0],\r\n              focusFlag && focusSlider === 0 ? focusStyles[0]: null\r\n            ]\"\r\n            ></div>\r\n            <div ref=\"tooltip0\" :class=\"['ad-slider-tooltip-' + tooltipDirection[0], 'ad-slider-tooltip-wrap']\">\r\n              <span class=\"ad-slider-tooltip\" :style=\"tooltipStyles[0]\">{{ xformatter ? formatting(val[0]) : val[0] }}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            ref=\"dot1\"\r\n            key=\"dot1\"\r\n            :class=\"[tooltipStatus, 'l-ad-slider__dot', 'c-ad-slider__dot',\r\n            {\r\n              'l-ad-slider__dot--focus': focusFlag && focusSlider === 1,\r\n              'l-ad-slider__dot--dragging': flag && currentSlider === 1,\r\n              'l-ad-slider__dot--disabled': !boolDisabled && disabledArray[1]\r\n            }\r\n          ]\"\r\n            :style=\"dotStyles\"\r\n            @mousedown=\"moveStart($event, 1)\"\r\n            @touchstart=\"moveStart($event, 1)\"\r\n          >\r\n            <div\r\n              :class=\"['l-ad-slider__dot-handle', 'c-ad-slider__dot-handle', dotClass]\"\r\n              :style=\"[\r\n              (!boolDisabled && disabledArray[1])\r\n              ? disabledDotStyles[1]\r\n              : null,\r\n              sliderStyles[1],\r\n              focusFlag && focusSlider === 1 ? focusStyles[1]: null\r\n            ]\"\r\n            ></div>\r\n            <div ref=\"tooltip1\" :class=\"['ad-slider-tooltip-' + tooltipDirection[1], 'ad-slider-tooltip-wrap']\">\r\n              <span class=\"ad-slider-tooltip\" :style=\"tooltipStyles[1]\">{{ xformatter ? formatting(val[1]) : val[1] }}</span>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <template v-else>\r\n          <div\r\n            ref=\"dot0\"\r\n            key=\"dot0\"\r\n            :class=\"[tooltipStatus, 'l-ad-slider__dot', 'c-ad-slider__dot',\r\n            {\r\n              'l-ad-slider__dot--focus': focusFlag && focusSlider === 0,\r\n              'l-ad-slider__dot--dragging': flag && currentSlider === 0\r\n            }\r\n          ]\"\r\n            :style=\"dotStyles\"\r\n            @mousedown=\"moveStart\"\r\n            @touchstart=\"moveStart\"\r\n          >\r\n            <div :class=\"['l-ad-slider__dot-handle', 'c-ad-slider__dot-handle', dotClass]\"\r\n                 :style=\"[sliderStyles, focusFlag && focusSlider === 0 ? focusStyles : null]\">\r\n              {{dotContents(0)}}\r\n            </div>\r\n            <div :class=\"['ad-slider-tooltip-' + tooltipDirection, 'ad-slider-tooltip-wrap']\">\r\n              <span class=\"ad-slider-tooltip\" :style=\"tooltipStyles\">{{ xformatter ? formatting(val) : val }}</span>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <ul class=\"ad-slider-piecewise\">\r\n          <li\r\n            v-for=\"(piecewiseObj, index) in piecewiseDotWrap\"\r\n            class=\"ad-slider-piecewise-item\"\r\n            :style=\"[piecewiseDotStyle, piecewiseObj.style]\"\r\n            :key=\"index\"\r\n          >\r\n            <span\r\n              v-if=\"piecewise\"\r\n              class=\"ad-slider-piecewise-dot\"\r\n              :style=\"[ piecewiseStyle, isActive(piecewiseObj.index) ? piecewiseActiveStyle : null ]\"\r\n            ></span>\r\n\r\n            <span\r\n              v-if=\"piecewiseLabel\"\r\n              class=\"ad-slider-piecewise-label\"\r\n              :style=\"[ labelStyle, isActive(piecewiseObj.index) ? labelActiveStyle : null ]\"\r\n            >\r\n              {{ piecewiseObj.label }}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <div\r\n          ref=\"process\"\r\n          :class=\"['l-ad-slider__process', 'c-ad-slider__process', { 'ad-slider-process-draggable': isRange && processDraggable }, processClass]\"\r\n          :style=\"[elemStyles, bgStyle, draggableStyle]\"\r\n          @click=\"processClick\"\r\n        >\r\n          <div\r\n            ref=\"mergedTooltip\"\r\n            :class=\"['vue-merged-tooltip', 'ad-slider-tooltip-' + tooltipDirection[0], 'ad-slider-tooltip-wrap']\"\r\n            :style=\"tooltipMergedPosition\"\r\n          >\r\n            <span class=\"ad-slider-tooltip\" :style=\"tooltipStyles\">\r\n              {{ tooltipFormatHelper }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <PlusMinusButton v-if=\"plusMinusButtons\" type=\"plus\" @click=\"increment(1)\"/>\r\n  </div>\r\n</template>\r\n"]}]}