{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-pelle\\PelleGalaxyGeneratorPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-pelle\\PelleGalaxyGeneratorPanel.vue","mtime":1745241597143},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgd29yZFNoaWZ0IGZyb20gIkAvY29yZS93b3JkLXNoaWZ0IjsNCg0KaW1wb3J0IFBlbGxlVXBncmFkZSBmcm9tICIuL1BlbGxlVXBncmFkZSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkdhbGF4eUdlbmVyYXRvclBhbmVsIiwNCiAgY29tcG9uZW50czogew0KICAgIFBlbGxlVXBncmFkZQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBpc1VubG9ja2VkOiBmYWxzZSwNCiAgICAgIGdhbGF4aWVzOiAwLA0KICAgICAgZ2VuZXJhdGVkR2FsYXhpZXM6IDAsDQogICAgICBnYWxheGllc1BlclNlY29uZDogMCwNCiAgICAgIGNhcDogMCwNCiAgICAgIGlzQ2FwcGVkOiBmYWxzZSwNCiAgICAgIGNhcFJpZnQ6IG51bGwsDQogICAgICBzYWNyaWZpY2VBY3RpdmU6IGZhbHNlLA0KICAgICAgaXNDb2xsYXBzZWQ6IGZhbHNlLA0KICAgICAgYmFyV2lkdGg6IDAsDQogICAgICBjYXBSaWZ0TmFtZTogIiIsDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBjb2xsYXBzZUljb24oKSB7DQogICAgICByZXR1cm4gdGhpcy5pc0NvbGxhcHNlZA0KICAgICAgICA/ICJmYXMgZmEtZXhwYW5kLWFycm93cy1hbHQiDQogICAgICAgIDogImZhcyBmYS1jb21wcmVzcy1hcnJvd3MtYWx0IjsNCiAgICB9LA0KICAgIHVwZ3JhZGVzKCkgew0KICAgICAgcmV0dXJuIEdhbGF4eUdlbmVyYXRvclVwZ3JhZGVzLmFsbDsNCiAgICB9LA0KICAgIGdhbGF4eVRleHQoKSB7DQogICAgICBsZXQgdGV4dCA9IGZvcm1hdChNYXRoLm1heCh0aGlzLmdhbGF4aWVzLCAwKSwgMik7DQogICAgICBpZiAodGhpcy5nYWxheGllcyA8IDApIHRleHQgKz0gYCBbJHtmb3JtYXQodGhpcy5nYWxheGllcywgMil9XWA7DQogICAgICByZXR1cm4gdGV4dDsNCiAgICB9LA0KICAgIHNhY3JpZmljZVRleHQoKSB7DQogICAgICByZXR1cm4gdGhpcy5jYXBSaWZ0LmdhbGF4eUdlbmVyYXRvclRleHQucmVwbGFjZSgiJHZhbHVlIiwgdGhpcy5jYXBSaWZ0TmFtZSk7DQogICAgfSwNCiAgICBlbXBoYXNpc2VkU3RhcnQoKSB7DQogICAgICByZXR1cm4gTWF0aC5wb3codGhpcy5nZW5lcmF0ZWRHYWxheGllcyAvIHRoaXMuY2FwLCAwLjQ1KTsNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB1cGRhdGUoKSB7DQogICAgICB0aGlzLmlzVW5sb2NrZWQgPSBQZWxsZS5oYXNHYWxheHlHZW5lcmF0b3I7DQogICAgICB0aGlzLmlzQ2FwcGVkID0gR2FsYXh5R2VuZXJhdG9yLmlzQ2FwcGVkOw0KICAgICAgdGhpcy5pc0NvbGxhcHNlZCA9IHBsYXllci5jZWxlc3RpYWxzLnBlbGxlLmNvbGxhcHNlZC5nYWxheGllcyAmJiAhdGhpcy5pc0NhcHBlZDsNCiAgICAgIGlmICh0aGlzLmlzQ29sbGFwc2VkIHx8ICF0aGlzLmlzVW5sb2NrZWQpIHJldHVybjsNCiAgICAgIHRoaXMuZ2FsYXhpZXMgPSBwbGF5ZXIuZ2FsYXhpZXMgKyBHYWxheHlHZW5lcmF0b3IuZ2FsYXhpZXM7DQogICAgICB0aGlzLmdlbmVyYXRlZEdhbGF4aWVzID0gR2FsYXh5R2VuZXJhdG9yLmdlbmVyYXRlZEdhbGF4aWVzOw0KICAgICAgdGhpcy5nYWxheGllc1BlclNlY29uZCA9IEdhbGF4eUdlbmVyYXRvci5nYWluUGVyU2Vjb25kOw0KICAgICAgdGhpcy5jYXAgPSBHYWxheHlHZW5lcmF0b3IuZ2VuZXJhdGlvbkNhcDsNCiAgICAgIHRoaXMuY2FwUmlmdCA9IEdhbGF4eUdlbmVyYXRvci5jYXBSaWZ0Ow0KICAgICAgdGhpcy5zYWNyaWZpY2VBY3RpdmUgPSBHYWxheHlHZW5lcmF0b3Iuc2FjcmlmaWNlQWN0aXZlOw0KICAgICAgdGhpcy5iYXJXaWR0aCA9ICh0aGlzLmlzQ2FwcGVkID8gdGhpcy5jYXBSaWZ0LnJlZHVjZWRUbyA6IHRoaXMuZW1waGFzaXNlZFN0YXJ0KTsNCiAgICAgIGlmICh0aGlzLmNhcFJpZnQpIHRoaXMuY2FwUmlmdE5hbWUgPSB3b3JkU2hpZnQud29yZEN5Y2xlKHRoaXMuY2FwUmlmdC5uYW1lKTsNCiAgICB9LA0KICAgIGluY3JlYXNlQ2FwKCkgew0KICAgICAgaWYgKEdhbGF4eUdlbmVyYXRvci5pc0NhcHBlZCkgR2FsYXh5R2VuZXJhdG9yLnN0YXJ0U2FjcmlmaWNlKCk7DQogICAgfSwNCiAgICB0b2dnbGVDb2xsYXBzZSgpIHsNCiAgICAgIHBsYXllci5jZWxlc3RpYWxzLnBlbGxlLmNvbGxhcHNlZC5nYWxheGllcyA9ICF0aGlzLmlzQ29sbGFwc2VkOw0KICAgIH0sDQogICAgdW5sb2NrKCkgew0KICAgICAgcGxheWVyLmNlbGVzdGlhbHMucGVsbGUuZ2FsYXh5R2VuZXJhdG9yLnVubG9ja2VkID0gdHJ1ZTsNCiAgICAgIFBlbGxlLnF1b3Rlcy5nYWxheHlHZW5lcmF0b3JVbmxvY2suc2hvdygpOw0KICAgIH0NCiAgfSwNCn07DQo="},{"version":3,"sources":["PelleGalaxyGeneratorPanel.vue"],"names":[],"mappings":";AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PelleGalaxyGeneratorPanel.vue","sourceRoot":"src/components/tabs/celestial-pelle","sourcesContent":["<script>\r\nimport wordShift from \"@/core/word-shift\";\r\n\r\nimport PelleUpgrade from \"./PelleUpgrade\";\r\n\r\nexport default {\r\n  name: \"GalaxyGeneratorPanel\",\r\n  components: {\r\n    PelleUpgrade\r\n  },\r\n  data() {\r\n    return {\r\n      isUnlocked: false,\r\n      galaxies: 0,\r\n      generatedGalaxies: 0,\r\n      galaxiesPerSecond: 0,\r\n      cap: 0,\r\n      isCapped: false,\r\n      capRift: null,\r\n      sacrificeActive: false,\r\n      isCollapsed: false,\r\n      barWidth: 0,\r\n      capRiftName: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    collapseIcon() {\r\n      return this.isCollapsed\r\n        ? \"fas fa-expand-arrows-alt\"\r\n        : \"fas fa-compress-arrows-alt\";\r\n    },\r\n    upgrades() {\r\n      return GalaxyGeneratorUpgrades.all;\r\n    },\r\n    galaxyText() {\r\n      let text = format(Math.max(this.galaxies, 0), 2);\r\n      if (this.galaxies < 0) text += ` [${format(this.galaxies, 2)}]`;\r\n      return text;\r\n    },\r\n    sacrificeText() {\r\n      return this.capRift.galaxyGeneratorText.replace(\"$value\", this.capRiftName);\r\n    },\r\n    emphasisedStart() {\r\n      return Math.pow(this.generatedGalaxies / this.cap, 0.45);\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isUnlocked = Pelle.hasGalaxyGenerator;\r\n      this.isCapped = GalaxyGenerator.isCapped;\r\n      this.isCollapsed = player.celestials.pelle.collapsed.galaxies && !this.isCapped;\r\n      if (this.isCollapsed || !this.isUnlocked) return;\r\n      this.galaxies = player.galaxies + GalaxyGenerator.galaxies;\r\n      this.generatedGalaxies = GalaxyGenerator.generatedGalaxies;\r\n      this.galaxiesPerSecond = GalaxyGenerator.gainPerSecond;\r\n      this.cap = GalaxyGenerator.generationCap;\r\n      this.capRift = GalaxyGenerator.capRift;\r\n      this.sacrificeActive = GalaxyGenerator.sacrificeActive;\r\n      this.barWidth = (this.isCapped ? this.capRift.reducedTo : this.emphasisedStart);\r\n      if (this.capRift) this.capRiftName = wordShift.wordCycle(this.capRift.name);\r\n    },\r\n    increaseCap() {\r\n      if (GalaxyGenerator.isCapped) GalaxyGenerator.startSacrifice();\r\n    },\r\n    toggleCollapse() {\r\n      player.celestials.pelle.collapsed.galaxies = !this.isCollapsed;\r\n    },\r\n    unlock() {\r\n      player.celestials.pelle.galaxyGenerator.unlocked = true;\r\n      Pelle.quotes.galaxyGeneratorUnlock.show();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-pelle-panel-container\">\r\n    <div class=\"c-pelle-panel-title\">\r\n      <i\r\n        v-if=\"!isCapped\"\r\n        :class=\"collapseIcon\"\r\n        class=\"c-collapse-icon-clickable\"\r\n        @click=\"toggleCollapse\"\r\n      />\r\n      Galaxy Generator\r\n    </div>\r\n    <div\r\n      v-if=\"!isCollapsed\"\r\n      class=\"l-pelle-content-container\"\r\n    >\r\n      <div v-if=\"isUnlocked\">\r\n        <div>\r\n          You have a total of\r\n          <span class=\"c-galaxies-amount\">{{ galaxyText }}</span>\r\n          Galaxies.\r\n          <span class=\"c-galaxies-amount\">+{{ format(galaxiesPerSecond, 2, 1) }}/s</span>\r\n        </div>\r\n        <div>\r\n          <button\r\n            class=\"c-increase-cap\"\r\n            :class=\"{\r\n              'c-increase-cap-available': isCapped && capRift && !sacrificeActive,\r\n              'tutorial--glow': cap === Infinity\r\n            }\"\r\n            @click=\"increaseCap\"\r\n          >\r\n            <div\r\n              class=\"c-increase-cap-background\"\r\n              :style=\"{ 'width': `${barWidth * 100}%` }\"\r\n            />\r\n            <div\r\n              v-if=\"isCapped && capRift\"\r\n              class=\"c-increase-cap-text\"\r\n            >\r\n              {{ sacrificeText }}. <br><br>\r\n              <span\r\n                v-if=\"!sacrificeActive\"\r\n                class=\"c-big-text\"\r\n              >\r\n                Sacrifice your {{ capRiftName }}\r\n              </span>\r\n              <span\r\n                v-else\r\n                class=\"c-big-text\"\r\n              >\r\n                Getting rid of all that {{ capRiftName }}...\r\n              </span>\r\n            </div>\r\n            <div\r\n              v-else\r\n              class=\"c-increase-cap-text c-medium-text\"\r\n            >\r\n              {{ format(generatedGalaxies, 2) }} / {{ format(cap, 2) }} Galaxies generated\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div class=\"l-galaxy-generator-upgrades-container\">\r\n          <PelleUpgrade\r\n            v-for=\"upgrade in upgrades\"\r\n            :key=\"upgrade.config.id\"\r\n            :upgrade=\"upgrade\"\r\n            :galaxy-generator=\"true\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <button\r\n        v-else\r\n        class=\"c-generator-unlock-button\"\r\n        @click=\"unlock\"\r\n      >\r\n        Unlock the Galaxy Generator\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-collapse-icon-clickable {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 1.5rem;\r\n  width: 3rem;\r\n  align-content: center;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n}\r\n\r\n.c-generator-unlock-button {\r\n  width: 25rem;\r\n  height: 10rem;\r\n  font-family: Typewriter;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: black;\r\n  background: linear-gradient(var(--color-pelle--secondary), var(--color-pelle--base));\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  padding: 2rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.l-galaxy-generator-upgrades-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n.c-galaxies-amount {\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n  background: linear-gradient(var(--color-pelle--secondary), var(--color-pelle--base));\r\n  background-clip: text;\r\n\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.highlight {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: var(--color-pelle--base);\r\n}\r\n\r\n.c-increase-cap {\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 11.4rem;\r\n  max-width: 70rem;\r\n  position: relative;\r\n  font-family: Typewriter;\r\n  font-size: 1.1rem;\r\n  color: var(--color-text);\r\n  background-color: #c1eaf0;\r\n  border: var(--var-border-width, 0.1rem) solid var(--color-pelle--base);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  /* box-shadow is here to prevent a weird grey border forming around the background */\r\n  box-shadow: inset 0 0 0.1rem 0.1rem var(--color-pelle--base);\r\n  margin: 1rem;\r\n  padding: 2rem;\r\n}\r\n\r\n.s-base--dark .c-increase-cap {\r\n  background-color: #004b55;\r\n}\r\n\r\n.c-increase-cap:hover {\r\n  box-shadow: inset 0 0 0.1rem 0.1rem var(--color-pelle--base), 0.1rem 0.1rem 0.5rem var(--color-pelle--base);\r\n  transition-duration: 0.12s;\r\n}\r\n\r\n.c-increase-cap-available {\r\n  cursor: pointer;\r\n}\r\n\r\n.c-increase-cap-text {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.c-increase-cap-background {\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 0;\r\n  background: linear-gradient(var(--color-text-inverted), var(--color-pelle--base));\r\n  transition: width 0.1s;\r\n}\r\n\r\n.c-big-text {\r\n  font-size: 2.5rem;\r\n  text-shadow: 0.2rem 0.2rem 0.2rem #888888;\r\n}\r\n\r\n.s-base--dark .c-big-text {\r\n  text-shadow: 0.2rem 0.2rem 0.2rem black;\r\n}\r\n\r\n.c-medium-text {\r\n  font-size: 2rem;\r\n  text-shadow: 0.2rem 0.2rem 0.2rem #888888;\r\n}\r\n\r\n.s-base--dark .c-medium-text {\r\n  text-shadow: 0.2rem 0.2rem 0.2rem black;\r\n}\r\n</style>\r\n"]}]}