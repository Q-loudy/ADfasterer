{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\ui-modes\\NewsTicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\ui-modes\\NewsTicker.vue","mtime":1745241597532},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBvcGVuRXh0ZXJuYWxMaW5rIH0gZnJvbSAiQC91dGlsaXR5L29wZW4tZXh0ZXJuYWwtbGluayI7DQppbXBvcnQgeyBTVEVBTSB9IGZyb20gIkAvZW52IjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiTmV3c1RpY2tlciIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGVuYWJsZUFuaW1hdGlvbjogZmFsc2UsDQogICAgfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBsaW5lQ2xhc3MoKSB7DQogICAgICByZXR1cm4gdGhpcy5lbmFibGVBbmltYXRpb24gPyB1bmRlZmluZWQgOiAiYy1kaXNhYmxlLXRpY2tlci1hbmltYXRpb24iOw0KICAgIH0NCiAgfSwNCiAgYmVmb3JlQ3JlYXRlKCkgew0KICAgIHRoaXMucmVjZW50VGlja2VycyA9IFtdOw0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoInZpc2liaWxpdHljaGFuZ2UiLCAoKSA9PiB0aGlzLnJlc3RhcnQuYmluZCh0aGlzKSk7DQogICAgdGhpcy5yZXN0YXJ0KCk7DQogIH0sDQogIGJlZm9yZURlc3Ryb3koKSB7DQogICAgdGhpcy5jbGVhclRpbWVvdXRzKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB1cGRhdGUoKSB7DQogICAgICBpZiAodGhpcy5jdXJyZW50TmV3cz8uZHluYW1pYykgew0KICAgICAgICB0aGlzLiRyZWZzLmxpbmUuaW5uZXJIVE1MID0gdGhpcy5jdXJyZW50TmV3cy50ZXh0Ow0KICAgICAgfQ0KICAgICAgdGhpcy5lbmFibGVBbmltYXRpb24gPSBwbGF5ZXIub3B0aW9ucy5uZXdzLmluY2x1ZGVBbmltYXRlZDsNCiAgICB9LA0KICAgIHJlc3RhcnQoKSB7DQogICAgICBpZiAoIUdhbWVVSS5pbml0aWFsaXplZCkgew0KICAgICAgICBzZXRUaW1lb3V0KHRoaXMucmVzdGFydC5iaW5kKHRoaXMpLCAxMDApOw0KICAgICAgICByZXR1cm47DQogICAgICB9DQogICAgICB0aGlzLmNsZWFyVGltZW91dHMoKTsNCiAgICAgIGlmIChkb2N1bWVudC5oaWRkZW4pIHsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgdGhpcy5wcmVwYXJlTmV4dE1lc3NhZ2UoKTsNCiAgICB9LA0KICAgIGNsZWFyVGltZW91dHMoKSB7DQogICAgICBjbGVhclRpbWVvdXQodGhpcy5kZWxheVRpbWVvdXQpOw0KICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuc2Nyb2xsVGltZW91dCk7DQogICAgfSwNCiAgICBwcmVwYXJlTmV4dE1lc3NhZ2UoKSB7DQogICAgICBjb25zdCBsaW5lID0gdGhpcy4kcmVmcy5saW5lOw0KICAgICAgaWYgKGxpbmUgPT09IHVuZGVmaW5lZCkgcmV0dXJuOw0KDQogICAgICAvLyBQcmV2ZW50IHRpY2tlcnMgZnJvbSByZXBlYXRpbmcgaWYgdGhleSBhcmVuJ3QgdW5sb2NrZWQgb3Igd2VyZSBzZWVuIHJlY2VudGx5DQogICAgICBjb25zdCBjYW5TaG93ID0gbmV3cyA9PiAobmV3cy51bmxvY2tlZCA/PyB0cnVlKSAmJiAhdGhpcy5yZWNlbnRUaWNrZXJzLmluY2x1ZGVzKG5ld3MuaWQpOw0KDQogICAgICBpZiAobmV4dE5ld3NNZXNzYWdlSWQgJiYgR2FtZURhdGFiYXNlLm5ld3MuZmluZChtZXNzYWdlID0+IG1lc3NhZ2UuaWQgPT09IG5leHROZXdzTWVzc2FnZUlkKSkgew0KICAgICAgICB0aGlzLmN1cnJlbnROZXdzID0gR2FtZURhdGFiYXNlLm5ld3MuZmluZChtZXNzYWdlID0+IG1lc3NhZ2UuaWQgPT09IG5leHROZXdzTWVzc2FnZUlkKTsNCiAgICAgICAgbmV4dE5ld3NNZXNzYWdlSWQgPSB1bmRlZmluZWQ7DQogICAgICB9IGVsc2UgaWYgKHRoaXMuY3VycmVudE5ld3MgJiYgdGhpcy5jdXJyZW50TmV3cy5pZCA9PT0gImEyMzYiKSB7DQogICAgICAgIHRoaXMuY3VycmVudE5ld3MgPSBHYW1lRGF0YWJhc2UubmV3cw0KICAgICAgICAgIC5maWx0ZXIobWVzc2FnZSA9PiBtZXNzYWdlLmlzQWR2ZXJ0aXNpbmcgJiYgY2FuU2hvdyhtZXNzYWdlKSkNCiAgICAgICAgICAucmFuZG9tRWxlbWVudCgpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29uc3QgaXNBSSA9IE1hdGgucmFuZG9tKCkgPCBwbGF5ZXIub3B0aW9ucy5uZXdzLkFJQ2hhbmNlOw0KICAgICAgICB0aGlzLmN1cnJlbnROZXdzID0gR2FtZURhdGFiYXNlLm5ld3MNCiAgICAgICAgICAuZmlsdGVyKG1lc3NhZ2UgPT4gbWVzc2FnZS5pZC5pbmNsdWRlcygiYWkiKSA9PT0gaXNBSSkNCiAgICAgICAgICAuZmlsdGVyKG1lc3NhZ2UgPT4gY2FuU2hvdyhtZXNzYWdlKSkNCiAgICAgICAgICAucmFuZG9tRWxlbWVudCgpOw0KICAgICAgfQ0KDQogICAgICB0aGlzLnJlY2VudFRpY2tlcnMucHVzaCh0aGlzLmN1cnJlbnROZXdzLmlkKTsNCiAgICAgIHdoaWxlICh0aGlzLnJlY2VudFRpY2tlcnMubGVuZ3RoID4gcGxheWVyLm9wdGlvbnMubmV3cy5yZXBlYXRCdWZmZXIpIHRoaXMucmVjZW50VGlja2Vycy5zaGlmdCgpOw0KDQogICAgICBpZiAodGhpcy5jdXJyZW50TmV3cy5yZXNldCkgew0KICAgICAgICB0aGlzLmN1cnJlbnROZXdzLnJlc2V0KCk7DQogICAgICB9DQoNCiAgICAgIGxldCB0ZXh0ID0gdGhpcy5jdXJyZW50TmV3cy50ZXh0Ow0KICAgICAgaWYgKFNURUFNKSB7DQogICAgICAgIHdpbmRvdy5vcGVuTmV3c0xpbmsgPSBvcGVuRXh0ZXJuYWxMaW5rOw0KICAgICAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKA0KICAgICAgICAgIC9ocmVmPVsnIl0oW14iJ10rKVsnIl0vZ3UsDQogICAgICAgICAgImhyZWYgb25DbGljaz0nd2luZG93Lm9wZW5OZXdzTGluayhcIiQxXCIpOyByZXR1cm4gZmFsc2U7JyINCiAgICAgICAgKTsNCiAgICAgIH0NCiAgICAgIGxpbmUuaW5uZXJIVE1MID0gdGV4dDsNCg0KICAgICAgbGluZS5zdHlsZVsidHJhbnNpdGlvbi1kdXJhdGlvbiJdID0gIjBtcyI7DQogICAgICBpZiAodGhpcy5jdXJyZW50TmV3cz8uaWQgPT09ICJhMjQ0IiB8fCB0aGlzLmN1cnJlbnROZXdzPy5pZCA9PT0gImFpNjMiKSB7DQogICAgICAgIGxpbmUuc3R5bGUudHJhbnNmb3JtID0gInRyYW5zbGF0ZVgoLTEwMCUpIjsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGxpbmUuc3R5bGUudHJhbnNmb3JtID0gInRyYW5zbGF0ZVgoMCkiOw0KICAgICAgfQ0KDQogICAgICBjb25zdCBERUxBWSA9IDEwMDA7DQogICAgICB0aGlzLmRlbGF5VGltZW91dCA9IHNldFRpbWVvdXQodGhpcy5zY3JvbGxNZXNzYWdlLmJpbmQodGhpcyksIERFTEFZKTsNCiAgICB9LA0KICAgIHNjcm9sbE1lc3NhZ2UoKSB7DQogICAgICBjb25zdCBsaW5lID0gdGhpcy4kcmVmcy5saW5lOw0KDQogICAgICAvLyBTQ1JPTExfU1BFRUQgaXMgaW4gcGl4ZWxzIHBlciBzZWNvbmQNCiAgICAgIGNvbnN0IFNDUk9MTF9TUEVFRCA9IHBsYXllci5vcHRpb25zLm5ld3Muc3BlZWQgKiAxMDA7DQogICAgICBjb25zdCBzY3JvbGxEdXJhdGlvbiA9ICh0aGlzLiRyZWZzLnRpY2tlci5jbGllbnRXaWR0aCArIGxpbmUuY2xpZW50V2lkdGgpIC8gU0NST0xMX1NQRUVEOw0KDQogICAgICBsaW5lLnN0eWxlWyJ0cmFuc2l0aW9uLWR1cmF0aW9uIl0gPSBgJHtzY3JvbGxEdXJhdGlvbn1zYDsNCiAgICAgIGlmICh0aGlzLmN1cnJlbnROZXdzICYmIHRoaXMuY3VycmVudE5ld3MuaWQgPT09ICJhMjQ0Iikgew0KICAgICAgICBsaW5lLnN0eWxlLnRyYW5zZm9ybSA9ICJ0cmFuc2xhdGVYKDApIjsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGxpbmUuc3R5bGUudHJhbnNmb3JtID0gInRyYW5zbGF0ZVgoLTEwMCUpIjsNCiAgICAgIH0NCg0KICAgICAgTmV3c0hhbmRsZXIuYWRkU2Vlbk5ld3ModGhpcy5jdXJyZW50TmV3cy5pZCk7DQogICAgICBpZiAoTmV3c0hhbmRsZXIudW5pcXVlVGlja2Vyc1NlZW4gPj0gNTApIEFjaGlldmVtZW50KDIyKS51bmxvY2soKTsNCg0KICAgICAgdGhpcy5zY3JvbGxUaW1lb3V0ID0gc2V0VGltZW91dCh0aGlzLnByZXBhcmVOZXh0TWVzc2FnZS5iaW5kKHRoaXMpLCBzY3JvbGxEdXJhdGlvbiAqIDEwMDApOw0KICAgIH0sDQogICAgb25MaW5lQ2xpY2soKSB7DQogICAgICBpZiAodGhpcy5jdXJyZW50TmV3cy5vbkNsaWNrID09PSB1bmRlZmluZWQpIHsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgU2VjcmV0QWNoaWV2ZW1lbnQoMjQpLnVubG9jaygpOw0KICAgICAgY29uc3QgdXBkYXRlZFRleHQgPSB0aGlzLmN1cnJlbnROZXdzLm9uQ2xpY2soKTsNCiAgICAgIGlmICh1cGRhdGVkVGV4dCAhPT0gdW5kZWZpbmVkKSB7DQogICAgICAgIHRoaXMuJHJlZnMubGluZS5pbm5lckhUTUwgPSB1cGRhdGVkVGV4dDsNCiAgICAgIH0NCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["NewsTicker.vue"],"names":[],"mappingsfile":"NewsTicker.vue","sourceRoot":"src/components/ui-modes","sourcesContent":["<script>\r\nimport { openExternalLink } from \"@/utility/open-external-link\";\r\nimport { STEAM } from \"@/env\";\r\n\r\nexport default {\r\n  name: \"NewsTicker\",\r\n  data() {\r\n    return {\r\n      enableAnimation: false,\r\n    };\r\n  },\r\n  computed: {\r\n    lineClass() {\r\n      return this.enableAnimation ? undefined : \"c-disable-ticker-animation\";\r\n    }\r\n  },\r\n  beforeCreate() {\r\n    this.recentTickers = [];\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"visibilitychange\", () => this.restart.bind(this));\r\n    this.restart();\r\n  },\r\n  beforeDestroy() {\r\n    this.clearTimeouts();\r\n  },\r\n  methods: {\r\n    update() {\r\n      if (this.currentNews?.dynamic) {\r\n        this.$refs.line.innerHTML = this.currentNews.text;\r\n      }\r\n      this.enableAnimation = player.options.news.includeAnimated;\r\n    },\r\n    restart() {\r\n      if (!GameUI.initialized) {\r\n        setTimeout(this.restart.bind(this), 100);\r\n        return;\r\n      }\r\n      this.clearTimeouts();\r\n      if (document.hidden) {\r\n        return;\r\n      }\r\n      this.prepareNextMessage();\r\n    },\r\n    clearTimeouts() {\r\n      clearTimeout(this.delayTimeout);\r\n      clearTimeout(this.scrollTimeout);\r\n    },\r\n    prepareNextMessage() {\r\n      const line = this.$refs.line;\r\n      if (line === undefined) return;\r\n\r\n      // Prevent tickers from repeating if they aren't unlocked or were seen recently\r\n      const canShow = news => (news.unlocked ?? true) && !this.recentTickers.includes(news.id);\r\n\r\n      if (nextNewsMessageId && GameDatabase.news.find(message => message.id === nextNewsMessageId)) {\r\n        this.currentNews = GameDatabase.news.find(message => message.id === nextNewsMessageId);\r\n        nextNewsMessageId = undefined;\r\n      } else if (this.currentNews && this.currentNews.id === \"a236\") {\r\n        this.currentNews = GameDatabase.news\r\n          .filter(message => message.isAdvertising && canShow(message))\r\n          .randomElement();\r\n      } else {\r\n        const isAI = Math.random() < player.options.news.AIChance;\r\n        this.currentNews = GameDatabase.news\r\n          .filter(message => message.id.includes(\"ai\") === isAI)\r\n          .filter(message => canShow(message))\r\n          .randomElement();\r\n      }\r\n\r\n      this.recentTickers.push(this.currentNews.id);\r\n      while (this.recentTickers.length > player.options.news.repeatBuffer) this.recentTickers.shift();\r\n\r\n      if (this.currentNews.reset) {\r\n        this.currentNews.reset();\r\n      }\r\n\r\n      let text = this.currentNews.text;\r\n      if (STEAM) {\r\n        window.openNewsLink = openExternalLink;\r\n        text = text.replace(\r\n          /href=['\"]([^\"']+)['\"]/gu,\r\n          \"href onClick='window.openNewsLink(\\\"$1\\\"); return false;'\"\r\n        );\r\n      }\r\n      line.innerHTML = text;\r\n\r\n      line.style[\"transition-duration\"] = \"0ms\";\r\n      if (this.currentNews?.id === \"a244\" || this.currentNews?.id === \"ai63\") {\r\n        line.style.transform = \"translateX(-100%)\";\r\n      } else {\r\n        line.style.transform = \"translateX(0)\";\r\n      }\r\n\r\n      const DELAY = 1000;\r\n      this.delayTimeout = setTimeout(this.scrollMessage.bind(this), DELAY);\r\n    },\r\n    scrollMessage() {\r\n      const line = this.$refs.line;\r\n\r\n      // SCROLL_SPEED is in pixels per second\r\n      const SCROLL_SPEED = player.options.news.speed * 100;\r\n      const scrollDuration = (this.$refs.ticker.clientWidth + line.clientWidth) / SCROLL_SPEED;\r\n\r\n      line.style[\"transition-duration\"] = `${scrollDuration}s`;\r\n      if (this.currentNews && this.currentNews.id === \"a244\") {\r\n        line.style.transform = \"translateX(0)\";\r\n      } else {\r\n        line.style.transform = \"translateX(-100%)\";\r\n      }\r\n\r\n      NewsHandler.addSeenNews(this.currentNews.id);\r\n      if (NewsHandler.uniqueTickersSeen >= 50) Achievement(22).unlock();\r\n\r\n      this.scrollTimeout = setTimeout(this.prepareNextMessage.bind(this), scrollDuration * 1000);\r\n    },\r\n    onLineClick() {\r\n      if (this.currentNews.onClick === undefined) {\r\n        return;\r\n      }\r\n      SecretAchievement(24).unlock();\r\n      const updatedText = this.currentNews.onClick();\r\n      if (updatedText !== undefined) {\r\n        this.$refs.line.innerHTML = updatedText;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    ref=\"ticker\"\r\n    class=\"c-news-ticker\"\r\n  >\r\n    <span\r\n      ref=\"line\"\r\n      class=\"c-news-line c-news-ticker__line\"\r\n      :class=\"lineClass\"\r\n      @click=\"onLineClick\"\r\n    />\r\n  </div>\r\n</template>\r\n"]}]}