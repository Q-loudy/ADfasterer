{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-teresa\\TeresaTab.vue?vue&type=style&index=0&id=4987f228&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-teresa\\TeresaTab.vue","mtime":1745241597254},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmMtZGlzYWJsZWQtcG91ciB7DQogIG9wYWNpdHk6IDAuODsNCiAgcG9pbnRlci1ldmVudHM6IG5vbmU7DQp9DQo="},{"version":3,"sources":["TeresaTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmRA;AACA;AACA;AACA","file":"TeresaTab.vue","sourceRoot":"src/components/tabs/celestial-teresa","sourcesContent":["<script>\r\nimport { DC } from \"@/core/constants\";\r\n\r\nimport CelestialQuoteHistory from \"@/components/CelestialQuoteHistory\";\r\nimport CustomizeableTooltip from \"@/components/CustomizeableTooltip\";\r\nimport GlyphSetPreview from \"@/components/GlyphSetPreview\";\r\nimport PerkShopUpgradeButton from \"./PerkShopUpgradeButton\";\r\n\r\nexport default {\r\n  name: \"TeresaTab\",\r\n  components: {\r\n    GlyphSetPreview,\r\n    PerkShopUpgradeButton,\r\n    CelestialQuoteHistory,\r\n    CustomizeableTooltip\r\n  },\r\n  data() {\r\n    return {\r\n      pour: false,\r\n      time: new Date().getTime(),\r\n      pouredAmount: 0,\r\n      isPouredAmountCapped: false,\r\n      rm: new Decimal(0),\r\n      percentage: \"\",\r\n      possibleFillPercentage: \"\",\r\n      rmMult: 0,\r\n      bestAM: new Decimal(0),\r\n      bestAMSet: [],\r\n      lastMachines: new Decimal(0),\r\n      runReward: 0,\r\n      perkPoints: 0,\r\n      hasReality: false,\r\n      hasEPGen: false,\r\n      hasPerkShop: false,\r\n      raisedPerkShop: false,\r\n      isRunning: false,\r\n      canUnlockNextPour: false,\r\n    };\r\n  },\r\n  computed: {\r\n    unlockInfos: () => TeresaUnlocks.all,\r\n    pouredAmountCap: () => Teresa.pouredAmountCap,\r\n    showRunReward() {\r\n      return this.bestAM.gt(1);\r\n    },\r\n    upgrades() {\r\n      const upgrades = [\r\n        PerkShopUpgrade.glyphLevel,\r\n        PerkShopUpgrade.rmMult,\r\n        PerkShopUpgrade.bulkDilation,\r\n        PerkShopUpgrade.autoSpeed,\r\n        PerkShopUpgrade.musicGlyph,\r\n      ];\r\n      if (this.raisedPerkShop) upgrades.push(PerkShopUpgrade.fillMusicGlyph);\r\n      return upgrades;\r\n    },\r\n    runButtonClassObject() {\r\n      return {\r\n        \"c-teresa-run-button__icon\": true,\r\n        \"c-teresa-run-button__icon--running\": this.isRunning,\r\n        \"c-celestial-run-button--clickable\": !this.isDoomed,\r\n        \"o-pelle-disabled-pointer\": this.isDoomed\r\n      };\r\n    },\r\n    pourButtonClassObject() {\r\n      return {\r\n        \"o-teresa-shop-button\": true,\r\n        \"c-teresa-pour\": true,\r\n        \"o-teresa-shop-button--available\": !this.isPouredAmountCapped,\r\n        \"o-teresa-shop-button--capped\": this.isPouredAmountCapped,\r\n        \"c-teresa-pour--unlock-available\": this.canUnlockNextPour,\r\n        \"c-disabled-pour\": this.isPouredAmountCapped\r\n      };\r\n    },\r\n    pourText() {\r\n      return this.isPouredAmountCapped ? \"Filled\" : \"Pour RM\";\r\n    },\r\n    runDescription() {\r\n      return GameDatabase.celestials.descriptions[0].effects();\r\n    },\r\n    lastMachinesString() {\r\n      return this.lastMachines.lt(DC.E10000)\r\n        ? `${quantify(\"Reality Machine\", this.lastMachines, 2)}`\r\n        : `${quantify(\"Imaginary Machine\", this.lastMachines.dividedBy(DC.E10000), 2)}`;\r\n    },\r\n    unlockInfoTooltipArrowStyle() {\r\n      return {\r\n        borderRight: \"0.5rem solid var(--color-teresa--base)\"\r\n      };\r\n    },\r\n    isDoomed: () => Pelle.isDoomed,\r\n  },\r\n  methods: {\r\n    update() {\r\n      const now = new Date().getTime();\r\n      if (this.pour) {\r\n        const diff = (now - this.time) / 1000;\r\n        Teresa.pourRM(diff);\r\n      } else {\r\n        Teresa.timePoured = 0;\r\n      }\r\n      this.time = now;\r\n      this.pouredAmount = player.celestials.teresa.pouredAmount;\r\n      this.isPouredAmountCapped = this.pouredAmount === this.pouredAmountCap;\r\n      this.percentage = `${(Teresa.fill * 100).toFixed(2)}%`;\r\n      this.possibleFillPercentage = `${(Teresa.possibleFill * 100).toFixed(2)}%`;\r\n      this.rmMult = Teresa.rmMultiplier;\r\n      this.hasReality = TeresaUnlocks.run.isUnlocked;\r\n      this.hasEPGen = TeresaUnlocks.epGen.isUnlocked;\r\n      this.hasPerkShop = TeresaUnlocks.shop.isUnlocked;\r\n      this.raisedPerkShop = Ra.unlocks.perkShopIncrease.canBeApplied;\r\n      this.bestAM.copyFrom(player.celestials.teresa.bestRunAM);\r\n      this.bestAMSet = Glyphs.copyForRecords(player.celestials.teresa.bestAMSet);\r\n      this.lastMachines.copyFrom(player.celestials.teresa.lastRepeatedMachines);\r\n      this.runReward = Teresa.runRewardMultiplier;\r\n      this.perkPoints = Currency.perkPoints.value;\r\n      this.rm.copyFrom(Currency.realityMachines);\r\n      this.isRunning = Teresa.isRunning;\r\n      this.canUnlockNextPour = TeresaUnlocks.all\r\n        .filter(unlock => this.rm.plus(this.pouredAmount).gte(unlock.price) && !unlock.isUnlocked).length > 0;\r\n    },\r\n    startRun() {\r\n      if (this.isDoomed) return;\r\n      Modal.celestials.show({ name: \"Teresa's\", number: 0 });\r\n    },\r\n    unlockDescriptionHeight(unlockInfo) {\r\n      const maxPrice = TeresaUnlocks[Teresa.lastUnlock].price;\r\n      const pos = Math.log1p(unlockInfo.price) / Math.log1p(maxPrice);\r\n      return `calc(${(100 * pos).toFixed(2)}% - 0.1rem)`;\r\n    },\r\n    hasUnlock(unlockInfo) {\r\n      return unlockInfo.isUnlocked;\r\n    },\r\n    unlockInfoTooltipClass(unlockInfo) {\r\n      return {\r\n        \"c-teresa-unlock-description\": true,\r\n        \"c-teresa-unlock-description--unlocked\": this.hasUnlock(unlockInfo)\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-teresa-celestial-tab\">\r\n    <CelestialQuoteHistory celestial=\"teresa\" />\r\n    <div>\r\n      You have {{ quantify(\"Reality Machine\", rm, 2, 2) }}.\r\n    </div>\r\n    <div class=\"l-mechanics-container\">\r\n      <div\r\n        v-if=\"hasReality\"\r\n        class=\"l-teresa-mechanic-container\"\r\n      >\r\n        <div class=\"c-teresa-unlock c-teresa-run-button\">\r\n          <span :class=\"{ 'o-pelle-disabled': isDoomed }\">\r\n            Start Teresa's Reality.\r\n          </span>\r\n          <div\r\n            :class=\"runButtonClassObject\"\r\n            @click=\"startRun()\"\r\n          >\r\n            Ïž\r\n          </div>\r\n          {{ runDescription }}\r\n          <br><br>\r\n          <div>\r\n            This Reality can be repeated for a stronger reward based on the antimatter gained within it.\r\n            <br><br>\r\n            <span v-if=\"showRunReward\">\r\n              Your record antimatter in Teresa's Reality is {{ format(bestAM, 2) }},\r\n              achieved with {{ lastMachinesString }}.\r\n              <br><br>\r\n              Glyph Set used:\r\n              <GlyphSetPreview\r\n                text=\"Teresa's Best Glyph Set\"\r\n                :text-hidden=\"true\"\r\n                :force-name-color=\"false\"\r\n                :glyphs=\"bestAMSet\"\r\n              />\r\n            </span>\r\n            <span v-else>\r\n              You have not completed Teresa's Reality yet.\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div\r\n          v-if=\"showRunReward\"\r\n          class=\"c-teresa-unlock\"\r\n        >\r\n          Teresa Reality reward: Glyph Sacrifice power {{ formatX(runReward, 2, 2) }}\r\n        </div>\r\n        <div\r\n          v-if=\"hasEPGen\"\r\n          class=\"c-teresa-unlock\"\r\n        >\r\n          <span :class=\"{ 'o-pelle-disabled': isDoomed }\">\r\n            Every second, you gain {{ formatPercents(0.01) }} of your peaked Eternity Points per minute this Reality.\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"l-rm-container l-teresa-mechanic-container\">\r\n        <button\r\n          :class=\"pourButtonClassObject\"\r\n          @mousedown=\"pour = true\"\r\n          @touchstart=\"pour = true\"\r\n          @mouseup=\"pour = false\"\r\n          @touchend=\"pour = false\"\r\n          @mouseleave=\"pour = false\"\r\n        >\r\n          {{ pourText }}\r\n        </button>\r\n        <div class=\"c-rm-store\">\r\n          <div\r\n            class=\"c-rm-store-inner c-rm-store-inner--light\"\r\n            :style=\"{ height: possibleFillPercentage}\"\r\n          />\r\n          <div\r\n            class=\"c-rm-store-inner\"\r\n            :style=\"{ height: percentage}\"\r\n          >\r\n            <div class=\"c-rm-store-label\">\r\n              {{ formatX(rmMult, 2, 2) }} RM gain\r\n              <br>\r\n              {{ format(pouredAmount, 2, 2) }}/{{ format(pouredAmountCap, 2, 2) }}\r\n            </div>\r\n          </div>\r\n          <CustomizeableTooltip\r\n            v-for=\"unlockInfo in unlockInfos\"\r\n            :key=\"unlockInfo.id\"\r\n            content-class=\"c-teresa-unlock-description--hover-area\"\r\n            :bottom=\"unlockDescriptionHeight(unlockInfo)\"\r\n            right=\"0\"\r\n            mode=\"right\"\r\n            :show=\"true\"\r\n            :tooltip-arrow-style=\"unlockInfoTooltipArrowStyle\"\r\n            :tooltip-class=\"unlockInfoTooltipClass(unlockInfo)\"\r\n          >\r\n            <template #mainContent>\r\n              <div\r\n                class=\"c-teresa-milestone-line\"\r\n                :class=\"{ 'c-teresa-milestone-line--unlocked': hasUnlock(unlockInfo) }\"\r\n              />\r\n            </template>\r\n            <template #tooltipContent>\r\n              <b :class=\"{ 'o-pelle-disabled': unlockInfo.pelleDisabled }\">\r\n                {{ format(unlockInfo.price, 2, 2) }}: {{ unlockInfo.description }}\r\n              </b>\r\n            </template>\r\n          </CustomizeableTooltip>\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"hasPerkShop\"\r\n        class=\"c-teresa-shop\"\r\n      >\r\n        <span class=\"o-teresa-pp\">\r\n          You have {{ quantify(\"Perk Point\", perkPoints, 2, 0) }}.\r\n        </span>\r\n        <PerkShopUpgradeButton\r\n          v-for=\"upgrade in upgrades\"\r\n          :key=\"upgrade.id\"\r\n          :upgrade=\"upgrade\"\r\n        />\r\n        You can now modify the appearance of your Glyphs to look like Music Glyphs.\r\n      </div>\r\n      <div\r\n        v-else\r\n        class=\"l-rm-container-labels l-teresa-mechanic-container\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-disabled-pour {\r\n  opacity: 0.8;\r\n  pointer-events: none;\r\n}\r\n</style>\r\n"]}]}