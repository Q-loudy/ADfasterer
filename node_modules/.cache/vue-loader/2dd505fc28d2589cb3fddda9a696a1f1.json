{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\time-studies\\tt-shop\\HoverMenu.vue?vue&type=style&index=0&id=61198b98&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\time-studies\\tt-shop\\HoverMenu.vue","mtime":1745241597508},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmhvdmVyLW1lbnVfX3dyYXBwZXIgew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQp9DQo="},{"version":3,"sources":["HoverMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA","file":"HoverMenu.vue","sourceRoot":"src/components/tabs/time-studies/tt-shop","sourcesContent":["<script>\r\n/**\r\n * This slotted component manages a context menu that is accessible both\r\n * by right clicking and by hovering; this is mostly about wrangling timers.\r\n */\r\n\r\nexport default {\r\n  name: \"HoverMenu\",\r\n  props: {\r\n    saveslot: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  data: () => ({\r\n    componentID: UIID.next(),\r\n    contextMenuHideTimer: null,\r\n    contextMenuShowTimer: null,\r\n  }),\r\n  computed: {\r\n    contextMenuIsVisible() {\r\n      return this.$viewModel.currentContextMenu === this.componentID;\r\n    },\r\n    listeners() {\r\n      return Object.assign({}, this.$listeners, {\r\n        touchstart: () => this.startShowTimer(),\r\n        mouseenter: () => this.startShowTimer(),\r\n        mouseleave: () => this.startHideTimer(),\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    startShowTimer() {\r\n      this.stopHideTimer();\r\n      if (this.contextMenuIsVisible || this.contextMenuShowTimer) return;\r\n      this.contextMenuShowTimer = setTimeout(() => {\r\n        this.contextMenuShowTimer = null;\r\n        this.showContextMenu();\r\n      }, 250);\r\n    },\r\n    showContextMenu() {\r\n      this.stopTimers();\r\n      this.$viewModel.currentContextMenu = this.componentID;\r\n    },\r\n    startHideTimer() {\r\n      this.stopShowTimer();\r\n      if (!this.contextMenuIsVisible || this.contextMenuHideTimer) return;\r\n      this.contextMenuHideTimer = setTimeout(() => {\r\n        this.contextMenuHideTimer = null;\r\n        this.hideContextMenu();\r\n      }, 500);\r\n    },\r\n    hideContextMenu() {\r\n      this.stopTimers();\r\n      if (this.$viewModel.currentContextMenu === this.componentID) {\r\n        this.$viewModel.currentContextMenu = null;\r\n      }\r\n    },\r\n    toggleContextMenu() {\r\n      if (this.contextMenuIsVisible) this.hideContextMenu();\r\n      else this.showContextMenu();\r\n    },\r\n    stopTimers() {\r\n      this.stopHideTimer();\r\n      this.stopShowTimer();\r\n    },\r\n    stopHideTimer() {\r\n      if (this.contextMenuHideTimer) {\r\n        clearTimeout(this.contextMenuHideTimer);\r\n        this.contextMenuHideTimer = null;\r\n      }\r\n    },\r\n    stopShowTimer() {\r\n      if (this.contextMenuShowTimer) {\r\n        clearTimeout(this.contextMenuShowTimer);\r\n        this.contextMenuShowTimer = null;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"hover-menu__wrapper\"\r\n    v-on=\"listeners\"\r\n    @contextmenu.prevent=\"toggleContextMenu\"\r\n  >\r\n    <slot\r\n      ref=\"clown\"\r\n      name=\"object\"\r\n    />\r\n    <slot\r\n      v-if=\"contextMenuIsVisible\"\r\n      name=\"menu\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n.hover-menu__wrapper {\r\n  position: relative;\r\n}\r\n</style>"]}]}