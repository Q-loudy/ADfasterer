{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\ui-modes\\s12\\TaskbarIcon.vue?vue&type=style&index=0&id=5163a0e4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\ui-modes\\s12\\TaskbarIcon.vue","mtime":1745241597619},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jLXRhc2tiYXItaWNvbiB7DQogIGRpc3BsYXk6IGZsZXg7DQogIHdpZHRoOiA2cmVtOw0KICBoZWlnaHQ6IDEwMCU7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgei1pbmRleDogMjsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChhdCA1JSAtMzUlLCB3aGl0ZSwgdHJhbnNwYXJlbnQgNTAlKTsNCiAgYm9yZGVyOiAwLjE1cmVtIHNvbGlkIHZhcigtLXMxMi1ib3JkZXItY29sb3IpOw0KICBib3JkZXItdG9wOiBub25lOw0KICBib3JkZXItcmFkaXVzOiAwLjNyZW07DQogIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwLjNyZW0gMC4xcmVtIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTsNCiAgbWFyZ2luLWxlZnQ6IDAuNHJlbTsNCiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjVzOw0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5jLXRhc2tiYXItaWNvbjpob3ZlciB7DQogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zNSk7DQp9DQoNCi5jLXRhc2tiYXItaWNvbi0tYWN0aXZlIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpOw0KfQ0KDQouYy10YXNrYmFyLWljb24tLWFjdGl2ZTpob3ZlciB7DQogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQwLCAyNDAsIDI0MCwgMC45KTsNCn0NCg0KLmMtdGFza2Jhci1pY29uX19pbWFnZSB7DQogIGhlaWdodDogODAlOw0KICBib3JkZXItcmFkaXVzOiAxcmVtOw0KfQ0K"},{"version":3,"sources":["TaskbarIcon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TaskbarIcon.vue","sourceRoot":"src/components/ui-modes/s12","sourcesContent":["<script>\r\nimport { S12Windows } from \"./windows\";\r\n\r\nexport default {\r\n  name: \"TaskbarIcon\",\r\n  props: {\r\n    tab: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    tabPosition: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isAvailable: true,\r\n      isHidden: false,\r\n      hasNotification: false,\r\n      tabName: \"\",\r\n      S12Windows,\r\n    };\r\n  },\r\n  computed: {\r\n    isCurrentTab() {\r\n      return this.tab.isOpen && !S12Windows.isMinimised;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isAvailable = this.tab.isAvailable;\r\n      this.isHidden = this.tab.isHidden;\r\n      this.hasNotification = this.tab.hasNotification;\r\n      if (this.tabPosition < Pelle.endTabNames.length) {\r\n        this.tabName = Pelle.transitionText(\r\n          this.tab.name,\r\n          Pelle.endTabNames[this.tabPosition],\r\n          Math.clamp(GameEnd.endState - (this.tab.id % 4) / 10, 0, 1)\r\n        );\r\n      } else {\r\n        this.tabName = this.tab.name;\r\n      }\r\n\r\n      S12Windows.tabs.tabButtonPositions[this.tab.id] = this.getSubtabsPosition();\r\n    },\r\n    getSubtabsPosition() {\r\n      if (!this.$refs.taskbarIcon) return \"0px\";\r\n      return this.$refs.taskbarIcon.offsetLeft + this.$refs.taskbarIcon.offsetWidth / 2;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    ref=\"taskbarIcon\"\r\n    :class=\"{\r\n      'c-taskbar-icon': true,\r\n      'c-taskbar-icon--active': isCurrentTab\r\n    }\"\r\n    :title=\"tab.name\"\r\n    @mouseenter=\"S12Windows.tabs.setHoveringTab(tab)\"\r\n    @mouseleave=\"S12Windows.tabs.unsetHoveringTab()\"\r\n    @click=\"tab.show(true); S12Windows.isMinimised = false; S12Windows.tabs.unsetHoveringTab(true);\"\r\n  >\r\n    <img\r\n      class=\"c-taskbar-icon__image\"\r\n      :src=\"`images/s12/${tab.key}.png`\"\r\n    >\r\n    <div\r\n      v-if=\"hasNotification\"\r\n      class=\"fas fa-circle-exclamation l-notification-icon\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-taskbar-icon {\r\n  display: flex;\r\n  width: 6rem;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 2;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: radial-gradient(at 5% -35%, white, transparent 50%);\r\n  border: 0.15rem solid var(--s12-border-color);\r\n  border-top: none;\r\n  border-radius: 0.3rem;\r\n  box-shadow: inset 0 0 0.3rem 0.1rem rgba(255, 255, 255, 0.8);\r\n  margin-left: 0.4rem;\r\n  transition: background-color 0.5s;\r\n  cursor: pointer;\r\n}\r\n\r\n.c-taskbar-icon:hover {\r\n  background-color: rgba(255, 255, 255, 0.35);\r\n}\r\n\r\n.c-taskbar-icon--active {\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.c-taskbar-icon--active:hover {\r\n  background-color: rgba(240, 240, 240, 0.9);\r\n}\r\n\r\n.c-taskbar-icon__image {\r\n  height: 80%;\r\n  border-radius: 1rem;\r\n}\r\n</style>"]}]}