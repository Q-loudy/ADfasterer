{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-navigation\\ProgressConnector.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\celestial-navigation\\ProgressConnector.vue","mtime":1745241597137},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJQcm9ncmVzc0Nvbm5lY3RvciIsDQogIHByb3BzOiB7DQogICAgY29tcGxldGU6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIHJlcXVpcmVkOiB0cnVlDQogICAgfSwNCiAgICBjb21wbGV0ZVdpZHRoOiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICByZXF1aXJlZDogZmFsc2UsDQogICAgICBkZWZhdWx0OiA4DQogICAgfSwNCiAgICBpbmNvbXBsZXRlV2lkdGg6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6IDYsDQogICAgfSwNCiAgICBub0JHOiB7DQogICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogZmFsc2UsDQogICAgfSwNCiAgICBvcGFjaXR5OiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICByZXF1aXJlZDogZmFsc2UsDQogICAgICBkZWZhdWx0OiAxLA0KICAgIH0sDQogICAgZmlsbDogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogIiM1MTUxZWMiLA0KICAgIH0sDQogICAgZmlsdGVyTmFtZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogImNvbXBsZXRlR2xvdyIsDQogICAgfSwNCiAgICBwYXRoOiB7DQogICAgICB0eXBlOiBPYmplY3QsDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0sDQogICAgcGF0aFN0YXJ0OiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0sDQogICAgcGF0aEVuZDogew0KICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9LA0KICAgIHBhdGhQYWRTdGFydDogew0KICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogMCwNCiAgICB9LA0KICAgIHBhdGhQYWRFbmQ6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6IDAsDQogICAgfSwNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICB1bnBhZGRlZFNwYW4oKSB7DQogICAgICByZXR1cm4gKHRoaXMucGF0aEVuZCAtIHRoaXMucGF0aFBhZEVuZCkgLSAodGhpcy5wYXRoU3RhcnQgKyB0aGlzLnBhdGhQYWRTdGFydCk7DQogICAgfSwNCiAgICBpbmNvbXBsZXRlU3RhcnQoKSB7DQogICAgICByZXR1cm4gdGhpcy5jb21wbGV0ZSA+PSAxDQogICAgICAgID8gdGhpcy5wYXRoRW5kDQogICAgICAgIDogdGhpcy5wYXRoU3RhcnQgKyB0aGlzLnBhdGhQYWRTdGFydCArIHRoaXMudW5wYWRkZWRTcGFuICogdGhpcy5jb21wbGV0ZTsNCiAgICB9LA0KICAgIGluY29tcGxldGVTdGFydFNoYXBlKCkgew0KICAgICAgcmV0dXJuIHRoaXMuc2hhcGVBdCh0aGlzLmluY29tcGxldGVTdGFydCk7DQogICAgfSwNCiAgICBjb21wbGV0ZVN0YXJ0U2hhcGUoKSB7DQogICAgICByZXR1cm4gdGhpcy5zaGFwZUF0KHRoaXMucGF0aFN0YXJ0KTsNCiAgICB9LA0KICAgIGluY29tcGxldGVUcmFuc2Zvcm0oKSB7DQogICAgICBjb25zdCBzaGFwZSA9IHRoaXMuaW5jb21wbGV0ZVN0YXJ0U2hhcGU7DQogICAgICByZXR1cm4gYCR7c2hhcGUucG9zaXRpb24uYXNUcmFuc2xhdGUoKX0gJHtzaGFwZS5kaXJlY3Rpb24uYXNSb3RhdGUoKX1gOw0KICAgIH0sDQogICAgcGF0aEVuZFNoYXBlKCkgew0KICAgICAgcmV0dXJuIHRoaXMuc2hhcGVBdCh0aGlzLnBhdGhFbmQpOw0KICAgIH0sDQogICAgLy8gSW4gb3JkZXIgdG8gc3VwcG9ydCBncmFkaWVudHMgdGhhdCBmaWxsIGFsb25nIGEgY29tcGxldGVkIHBhdGgsDQogICAgLy8gd2UgcmVuZGVyIGluIGEgY29vcmRpbmF0ZSBzeXN0ZW0gdGhhdCdzIHNjYWxlZCB0byBiZSAwLi4xIGZyb20gc3RhcnQgdG8gZW5kDQogICAgdG90YWxQYXRoT2Zmc2V0UHgoKSB7DQogICAgICByZXR1cm4gdGhpcy5wYXRoRW5kU2hhcGUucG9zaXRpb24ubWludXModGhpcy5jb21wbGV0ZVN0YXJ0U2hhcGUucG9zaXRpb24pOw0KICAgIH0sDQogICAgY29tcGxldGVUcmFuc2Zvcm0oKSB7DQogICAgICBjb25zdCBzaGFwZSA9IHRoaXMuY29tcGxldGVTdGFydFNoYXBlOw0KICAgICAgY29uc3Qgc2NhbGUgPSB0aGlzLnRvdGFsUGF0aE9mZnNldFB4Lmxlbmd0aDsNCiAgICAgIHJldHVybiBgJHtzaGFwZS5wb3NpdGlvbi5hc1RyYW5zbGF0ZSgpfSAke3NoYXBlLmRpcmVjdGlvbi5hc1JvdGF0ZSgpfSBzY2FsZSgke3NjYWxlfSlgOw0KICAgIH0sDQogICAgaW5jb21wbGV0ZUZhZGVFbmQoKSB7DQogICAgICBjb25zdCBzaGFwZSA9IHRoaXMuaW5jb21wbGV0ZVN0YXJ0U2hhcGU7DQogICAgICBjb25zdCBmYWRlTGVuZ3RoID0gMTIgLyBzaGFwZS5kZXJpdmF0aXZlLmxlbmd0aDsNCiAgICAgIHJldHVybiB0aGlzLnBhdGhFbmQgPiB0aGlzLnBhdGhTdGFydA0KICAgICAgICA/IE1hdGgubWluKHRoaXMuaW5jb21wbGV0ZVN0YXJ0ICsgZmFkZUxlbmd0aCwgdGhpcy5wYXRoRW5kKQ0KICAgICAgICA6IE1hdGgubWF4KHRoaXMuaW5jb21wbGV0ZVN0YXJ0IC0gZmFkZUxlbmd0aCwgdGhpcy5wYXRoRW5kKTsNCiAgICB9LA0KICAgIGluY29tcGxldGVGYWRlUGF0aCgpIHsNCiAgICAgIHJldHVybiB0aGlzLmdlbmVyYXRlSW5jb21wbGV0ZVBhdGgodGhpcy5pbmNvbXBsZXRlU3RhcnQsIHRoaXMuaW5jb21wbGV0ZUZhZGVFbmQpOw0KICAgIH0sDQogICAgaW5jb21wbGV0ZVNvbGlkUGF0aCgpIHsNCiAgICAgIHJldHVybiB0aGlzLmdlbmVyYXRlSW5jb21wbGV0ZVBhdGgoDQogICAgICAgIHRoaXMuaW5jb21wbGV0ZUZhZGVFbmQgLSAxZS0zICogKHRoaXMucGF0aEVuZCAtIHRoaXMuaW5jb21wbGV0ZUZhZGVFbmQpLCB0aGlzLnBhdGhFbmQpOw0KICAgIH0sDQogICAgY29tcGxldGVQYXRoKCkgew0KICAgICAgY29uc3Qgc3RhcnRTaGFwZSA9IHRoaXMuY29tcGxldGVTdGFydFNoYXBlOw0KICAgICAgY29uc3Qgc2NhbGUgPSAxIC8gdGhpcy50b3RhbFBhdGhPZmZzZXRQeC5sZW5ndGg7DQogICAgICBjb25zdCB0Zm9ybSA9IEFmZmluZVRyYW5zZm9ybQ0KICAgICAgICAudHJhbnNsYXRpb24oc3RhcnRTaGFwZS5wb3NpdGlvbi5uZWdhdGl2ZSkNCiAgICAgICAgLnJvdGF0ZWQoLXN0YXJ0U2hhcGUuZGlyZWN0aW9uLmFuZ2xlKQ0KICAgICAgICAuc2NhbGVkKHNjYWxlKTsNCiAgICAgIGNvbnN0IHRTdGFydCA9IHRoaXMucGF0aFN0YXJ0LCB0RW5kID0gdGhpcy5pbmNvbXBsZXRlU3RhcnQ7DQogICAgICBjb25zdCB3ID0gdGhpcy5jb21wbGV0ZVdpZHRoOw0KICAgICAgY29uc3QgaW5zZXRQYXRoID0gdGhpcy5nZXRPZmZzZXRQYXRoKC13IC8gMiwgdFN0YXJ0LCB0RW5kKS50cmFuc2Zvcm1lZEJ5KHRmb3JtKTsNCiAgICAgIGNvbnN0IG91dHNldFBhdGggPSB0aGlzLmdldE9mZnNldFBhdGgodyAvIDIsIHRFbmQsIHRTdGFydCkudHJhbnNmb3JtZWRCeSh0Zm9ybSk7DQogICAgICBjb25zdCBlbmRWZWN0b3IgPSB0aGlzLmluY29tcGxldGVTdGFydFNoYXBlLmRpcmVjdGlvbi50cmFuc2Zvcm1lZEJ5KHRmb3JtLndpdGhvdXRUcmFuc2xhdGlvbik7DQogICAgICBjb25zdCBpbkVuZCA9IGluc2V0UGF0aC5wYXRoW2luc2V0UGF0aC5wYXRoLmxlbmd0aCAtIDFdOw0KICAgICAgY29uc3Qgb3V0U3RhcnQgPSBvdXRzZXRQYXRoLnBhdGhbMF07DQogICAgICBjb25zdCBjYXBDUDAgPSBpbkVuZC5wb3NpdGlvbigxKS5wbHVzKGVuZFZlY3Rvci50aW1lcyh3IC8gMikpOw0KICAgICAgY29uc3QgY2FwQ1AxID0gb3V0U3RhcnQucG9zaXRpb24oMCkucGx1cyhlbmRWZWN0b3IudGltZXModyAvIDIpKTsNCiAgICAgIGNvbnN0IGNhcCA9IGBDICR7Y2FwQ1AwLnh9ICR7Y2FwQ1AwLnl9ICR7Y2FwQ1AxLnh9ICR7Y2FwQ1AxLnl9ICR7b3V0U3RhcnQucDAueH0gJHtvdXRTdGFydC5wMC55fVxuYDsNCiAgICAgIHJldHVybiBpbnNldFBhdGgudG9TVkcoIk0iKSArIGNhcCArIG91dHNldFBhdGgudG9TVkcoIkwiKTsNCiAgICB9LA0KICAgIGhhc0luY29tcGxldGVTb2xpZFBhdGgoKSB7DQogICAgICByZXR1cm4gdGhpcy5pbmNvbXBsZXRlRmFkZUVuZCAhPT0gdGhpcy5wYXRoRW5kOw0KICAgIH0sDQogICAgZmlsdGVyKCkgew0KICAgICAgcmV0dXJuIGB1cmwoIyR7dGhpcy5maWx0ZXJOYW1lfSlgOw0KICAgIH0sDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBnZW5lcmF0ZUluY29tcGxldGVQYXRoKHRTdGFydCwgdEVuZCkgew0KICAgICAgY29uc3QgaW5zZXQgPSB0aGlzLmdldE9mZnNldFBhdGgoLXRoaXMuaW5jb21wbGV0ZVdpZHRoIC8gMiwgdFN0YXJ0LCB0RW5kKTsNCiAgICAgIGNvbnN0IG91dHNldCA9IHRoaXMuZ2V0T2Zmc2V0UGF0aCh0aGlzLmluY29tcGxldGVXaWR0aCAvIDIsIHRFbmQsIHRTdGFydCk7DQogICAgICBjb25zdCBzMCA9IHRoaXMuaW5jb21wbGV0ZVN0YXJ0U2hhcGU7DQogICAgICBjb25zdCB0Zm9ybSA9IEFmZmluZVRyYW5zZm9ybS50cmFuc2xhdGlvbihzMC5wb3NpdGlvbi5uZWdhdGl2ZSkucm90YXRlZCgtczAuZGlyZWN0aW9uLmFuZ2xlKTsNCiAgICAgIHJldHVybiBpbnNldC50cmFuc2Zvcm1lZEJ5KHRmb3JtKS50b1NWRygiTSIpICsgb3V0c2V0LnRyYW5zZm9ybWVkQnkodGZvcm0pLnRvU1ZHKCJMIik7DQogICAgfSwNCiAgICBnZXRPZmZzZXRQYXRoKG9mZnNldCwgdFN0YXJ0LCB0RW5kKSB7DQogICAgICBpZiAodGhpcy5wYXRoIGluc3RhbmNlb2YgTGluZWFyUGF0aCkgew0KICAgICAgICByZXR1cm4gbmV3IFBpZWNld2lzZVBhdGgoW3RoaXMucGF0aC5jcmVhdGVPZmZzZXRMaW5lKG9mZnNldCwgdFN0YXJ0LCB0RW5kKV0pOw0KICAgICAgfQ0KICAgICAgY29uc3Qgb2Zmc2V0UGF0aCA9IG5ldyBPZmZzZXRDdXJ2ZSh0aGlzLnBhdGgsIG9mZnNldCk7DQogICAgICByZXR1cm4gUGllY2V3aXNlUGF0aC5jdWJpY0JlemllckZpdFRvQ3VydmVTZWN0aW9uKG9mZnNldFBhdGgsIHRTdGFydCwgdEVuZCk7DQogICAgfSwNCiAgICBzaGFwZUF0KHQpIHsNCiAgICAgIGNvbnN0IHNoYXBlID0gdGhpcy5wYXRoLnNoYXBlQXQodCk7DQogICAgICBpZiAodGhpcy5wYXRoU3RhcnQgPiB0aGlzLnBhdGhFbmQpIHsNCiAgICAgICAgc2hhcGUuZGlyZWN0aW9uID0gc2hhcGUuZGlyZWN0aW9uLm5lZ2F0aXZlOw0KICAgICAgICBzaGFwZS5kZXJpdmF0aXZlID0gc2hhcGUuZGVyaXZhdGl2ZS5uZWdhdGl2ZTsNCiAgICAgIH0NCiAgICAgIHJldHVybiBzaGFwZTsNCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["ProgressConnector.vue"],"names":[],"mappingsfile":"ProgressConnector.vue","sourceRoot":"src/components/tabs/celestial-navigation","sourcesContent":["<script>\r\nexport default {\r\n  name: \"ProgressConnector\",\r\n  props: {\r\n    complete: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    completeWidth: {\r\n      type: Number,\r\n      required: false,\r\n      default: 8\r\n    },\r\n    incompleteWidth: {\r\n      type: Number,\r\n      required: false,\r\n      default: 6,\r\n    },\r\n    noBG: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false,\r\n    },\r\n    opacity: {\r\n      type: Number,\r\n      required: false,\r\n      default: 1,\r\n    },\r\n    fill: {\r\n      type: String,\r\n      required: false,\r\n      default: \"#5151ec\",\r\n    },\r\n    filterName: {\r\n      type: String,\r\n      required: false,\r\n      default: \"completeGlow\",\r\n    },\r\n    path: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    pathStart: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    pathEnd: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    pathPadStart: {\r\n      type: Number,\r\n      required: false,\r\n      default: 0,\r\n    },\r\n    pathPadEnd: {\r\n      type: Number,\r\n      required: false,\r\n      default: 0,\r\n    },\r\n  },\r\n  computed: {\r\n    unpaddedSpan() {\r\n      return (this.pathEnd - this.pathPadEnd) - (this.pathStart + this.pathPadStart);\r\n    },\r\n    incompleteStart() {\r\n      return this.complete >= 1\r\n        ? this.pathEnd\r\n        : this.pathStart + this.pathPadStart + this.unpaddedSpan * this.complete;\r\n    },\r\n    incompleteStartShape() {\r\n      return this.shapeAt(this.incompleteStart);\r\n    },\r\n    completeStartShape() {\r\n      return this.shapeAt(this.pathStart);\r\n    },\r\n    incompleteTransform() {\r\n      const shape = this.incompleteStartShape;\r\n      return `${shape.position.asTranslate()} ${shape.direction.asRotate()}`;\r\n    },\r\n    pathEndShape() {\r\n      return this.shapeAt(this.pathEnd);\r\n    },\r\n    // In order to support gradients that fill along a completed path,\r\n    // we render in a coordinate system that's scaled to be 0..1 from start to end\r\n    totalPathOffsetPx() {\r\n      return this.pathEndShape.position.minus(this.completeStartShape.position);\r\n    },\r\n    completeTransform() {\r\n      const shape = this.completeStartShape;\r\n      const scale = this.totalPathOffsetPx.length;\r\n      return `${shape.position.asTranslate()} ${shape.direction.asRotate()} scale(${scale})`;\r\n    },\r\n    incompleteFadeEnd() {\r\n      const shape = this.incompleteStartShape;\r\n      const fadeLength = 12 / shape.derivative.length;\r\n      return this.pathEnd > this.pathStart\r\n        ? Math.min(this.incompleteStart + fadeLength, this.pathEnd)\r\n        : Math.max(this.incompleteStart - fadeLength, this.pathEnd);\r\n    },\r\n    incompleteFadePath() {\r\n      return this.generateIncompletePath(this.incompleteStart, this.incompleteFadeEnd);\r\n    },\r\n    incompleteSolidPath() {\r\n      return this.generateIncompletePath(\r\n        this.incompleteFadeEnd - 1e-3 * (this.pathEnd - this.incompleteFadeEnd), this.pathEnd);\r\n    },\r\n    completePath() {\r\n      const startShape = this.completeStartShape;\r\n      const scale = 1 / this.totalPathOffsetPx.length;\r\n      const tform = AffineTransform\r\n        .translation(startShape.position.negative)\r\n        .rotated(-startShape.direction.angle)\r\n        .scaled(scale);\r\n      const tStart = this.pathStart, tEnd = this.incompleteStart;\r\n      const w = this.completeWidth;\r\n      const insetPath = this.getOffsetPath(-w / 2, tStart, tEnd).transformedBy(tform);\r\n      const outsetPath = this.getOffsetPath(w / 2, tEnd, tStart).transformedBy(tform);\r\n      const endVector = this.incompleteStartShape.direction.transformedBy(tform.withoutTranslation);\r\n      const inEnd = insetPath.path[insetPath.path.length - 1];\r\n      const outStart = outsetPath.path[0];\r\n      const capCP0 = inEnd.position(1).plus(endVector.times(w / 2));\r\n      const capCP1 = outStart.position(0).plus(endVector.times(w / 2));\r\n      const cap = `C ${capCP0.x} ${capCP0.y} ${capCP1.x} ${capCP1.y} ${outStart.p0.x} ${outStart.p0.y}\\n`;\r\n      return insetPath.toSVG(\"M\") + cap + outsetPath.toSVG(\"L\");\r\n    },\r\n    hasIncompleteSolidPath() {\r\n      return this.incompleteFadeEnd !== this.pathEnd;\r\n    },\r\n    filter() {\r\n      return `url(#${this.filterName})`;\r\n    },\r\n  },\r\n  methods: {\r\n    generateIncompletePath(tStart, tEnd) {\r\n      const inset = this.getOffsetPath(-this.incompleteWidth / 2, tStart, tEnd);\r\n      const outset = this.getOffsetPath(this.incompleteWidth / 2, tEnd, tStart);\r\n      const s0 = this.incompleteStartShape;\r\n      const tform = AffineTransform.translation(s0.position.negative).rotated(-s0.direction.angle);\r\n      return inset.transformedBy(tform).toSVG(\"M\") + outset.transformedBy(tform).toSVG(\"L\");\r\n    },\r\n    getOffsetPath(offset, tStart, tEnd) {\r\n      if (this.path instanceof LinearPath) {\r\n        return new PiecewisePath([this.path.createOffsetLine(offset, tStart, tEnd)]);\r\n      }\r\n      const offsetPath = new OffsetCurve(this.path, offset);\r\n      return PiecewisePath.cubicBezierFitToCurveSection(offsetPath, tStart, tEnd);\r\n    },\r\n    shapeAt(t) {\r\n      const shape = this.path.shapeAt(t);\r\n      if (this.pathStart > this.pathEnd) {\r\n        shape.direction = shape.direction.negative;\r\n        shape.derivative = shape.derivative.negative;\r\n      }\r\n      return shape;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <g>\r\n    <g\r\n      v-if=\"!noBG\"\r\n      :transform=\"incompleteTransform\"\r\n    >\r\n      <path\r\n        :d=\"incompleteFadePath\"\r\n        fill=\"url(#incompleteFade)\"\r\n      />\r\n      <path\r\n        v-if=\"hasIncompleteSolidPath\"\r\n        :d=\"incompleteSolidPath\"\r\n        fill=\"#888\"\r\n      />\r\n    </g>\r\n    <g :filter=\"filter\">\r\n      <path\r\n        :transform=\"completeTransform\"\r\n        :fill=\"fill\"\r\n        stroke=\"none\"\r\n        :d=\"completePath\"\r\n        :style=\"{ 'opacity': opacity }\"\r\n      />\r\n    </g>\r\n  </g>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}