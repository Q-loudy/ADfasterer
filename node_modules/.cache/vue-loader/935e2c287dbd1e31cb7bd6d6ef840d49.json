{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\sidebar\\SelectedEffectToggle.vue?vue&type=style&index=0&id=2ff1d8ba&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\sidebar\\SelectedEffectToggle.vue","mtime":1745241597363},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jLXNlbGVjdGVkLWVmZmVjdC10b2dnbGUtaW5kaWNhdG9yLS1hY3RpdmUgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQoNCiAgLyogLTAuMXJlbSA9IC0xcHgsIG5lZWRlZCBiZWNhdXNlIENTUyByZW5kZXJzIGEgYmxhY2sgYm9yZGVyIGJldHdlZW4gdGhlIGNoZWNrIGFuZCB0aGUgYm9yZGVyIG9mIHRoZSBzZWxlY3Rvcg0KICBvdGhlcndpc2UgKi8NCiAgdG9wOiAtMC4xcmVtOw0KICByaWdodDogLTAuMXJlbTsNCiAgZm9udC1zaXplOiAxcmVtOw0KICBjb2xvcjogYmxhY2s7DQogIHRleHQtc2hhZG93OiBub25lOw0KICBib3JkZXItcmFkaXVzOiAwIHZhcigtLXZhci1ib3JkZXItcmFkaXVzLCAwLjRyZW0pOw0KICBwYWRkaW5nOiAwLjJyZW07DQp9DQoNCi5sLWRvY2sgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHRvcDogNTAlOw0KICBtYXJnaW46IDAgNHJlbTsNCiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOw0KfQ0KDQoubC1kb2NrLWxlZnQgew0KICBsZWZ0OiAwOw0KfQ0KDQoubC1kb2NrLXJpZ2h0IHsNCiAgcmlnaHQ6IDA7DQp9DQo="},{"version":3,"sources":["SelectedEffectToggle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"SelectedEffectToggle.vue","sourceRoot":"src/components/tabs/glyphs/sidebar","sourcesContent":["<script>\r\nexport default {\r\n  name: \"SelectedEffectToggle\",\r\n  props: {\r\n    effect: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    glyphType: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isActive: false,\r\n      noExclude: false,\r\n      effarigSettings: {\r\n        effarigrm: false,\r\n        effarigglyph: false\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    color() {\r\n      return GlyphAppearanceHandler.getBorderColor(this.glyphType);\r\n    },\r\n    description() {\r\n      return this.effect.genericDesc;\r\n    },\r\n    classObject() {\r\n      return this.isActive ? \"c-auto-sac-type-tab__effect-desc--active\" : \"c-auto-sac-type-tab__effect-desc--inactive\";\r\n    },\r\n    // This is hardcoded here since there is only one case ever, and that adding generic dynamic support to multiple\r\n    // pairs/groups of effects is both out of design scope and an unacceptable performance hit to amplified realities\r\n    exclusionTooltip() {\r\n      if (this.noExclude) return \"\";\r\n\r\n      const effarigSettings = this.effarigSettings;\r\n      if (effarigSettings.RM && effarigSettings.glyph &&\r\n        (this.effect.id === \"effarigrm\" || this.effect.id === \"effarigglyph\")) {\r\n        return \"RM multiplier and Glyph instability cannot occur together on the same Glyph!\";\r\n      }\r\n      if (this.effect.id === \"effarigrm\" && effarigSettings.glyph) {\r\n        return \"This effect is mutually exclusive with Glyph instability!\";\r\n      }\r\n      if (this.effect.id === \"effarigglyph\" && effarigSettings.RM) {\r\n        return \"This effect is mutually exclusive with RM multiplier!\";\r\n      }\r\n      return \"\";\r\n    },\r\n    isExcluded() {\r\n      return this.exclusionTooltip !== \"\";\r\n    },\r\n    effarigBits() {\r\n      const effectDB = GameDatabase.reality.glyphEffects;\r\n      return {\r\n        RM: effectDB.effarigrm.bitmaskIndex,\r\n        glyph: effectDB.effarigglyph.bitmaskIndex,\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isActive = (AutoGlyphProcessor.types[this.glyphType].specifiedMask & (1 << this.effect.bitmaskIndex)) !== 0;\r\n      const effarigMask = AutoGlyphProcessor.types.effarig.specifiedMask;\r\n      this.effarigSettings = {\r\n        RM: (effarigMask & (1 << this.effarigBits.RM)) !== 0,\r\n        glyph: (effarigMask & (1 << this.effarigBits.glyph)) !== 0\r\n      };\r\n      this.noExclude = Ra.unlocks.glyphEffectCount.canBeApplied;\r\n    },\r\n    toggleSelection() {\r\n      AutoGlyphProcessor.types[this.glyphType].specifiedMask ^= 1 << this.effect.bitmaskIndex;\r\n    },\r\n    setEffectCount(event) {\r\n      const inputValue = event.target.value;\r\n      if (!isNaN(inputValue)) {\r\n        this.autoSacrificeSettings.effectCount = Math.clamp(inputValue, 0, 8);\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-tooltip=\"exclusionTooltip\"\r\n    :class=\"classObject\"\r\n    @click=\"toggleSelection()\"\r\n  >\r\n    <span>\r\n      <i\r\n        v-if=\"isExcluded\"\r\n        class=\"fas fa-exclamation l-dock l-dock-left\"\r\n      />\r\n      {{ description }}\r\n      <i\r\n        v-if=\"isExcluded\"\r\n        class=\"fas fa-exclamation l-dock l-dock-right\"\r\n      />\r\n    </span>\r\n    <i\r\n      v-if=\"isActive\"\r\n      class=\"fas fa-check c-selected-effect-toggle-indicator--active\"\r\n      :style=\"{ 'background-color': color }\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-selected-effect-toggle-indicator--active {\r\n  position: absolute;\r\n\r\n  /* -0.1rem = -1px, needed because CSS renders a black border between the check and the border of the selector\r\n  otherwise */\r\n  top: -0.1rem;\r\n  right: -0.1rem;\r\n  font-size: 1rem;\r\n  color: black;\r\n  text-shadow: none;\r\n  border-radius: 0 var(--var-border-radius, 0.4rem);\r\n  padding: 0.2rem;\r\n}\r\n\r\n.l-dock {\r\n  position: absolute;\r\n  top: 50%;\r\n  margin: 0 4rem;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.l-dock-left {\r\n  left: 0;\r\n}\r\n\r\n.l-dock-right {\r\n  right: 0;\r\n}\r\n</style>\r\n"]}]}