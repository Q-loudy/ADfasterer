{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\SpeedrunStatus.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\SpeedrunStatus.vue","mtime":1745241596805},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJTcGVlZHJ1blN0YXR1cyIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGlzQWN0aXZlOiBmYWxzZSwNCiAgICAgIGlzU2VnbWVudGVkOiBmYWxzZSwNCiAgICAgIHVzZWRTVEQ6IGZhbHNlLA0KICAgICAgaGFzU3RhcnRlZDogZmFsc2UsDQogICAgICBzdGFydERhdGU6IDAsDQogICAgICBzYXZlTmFtZTogIiIsDQogICAgICB0aW1lUGxheWVkU3RyOiAiIiwNCiAgICAgIG9mZmxpbmVQcm9ncmVzczogZmFsc2UsDQogICAgICBvZmZsaW5lRnJhY3Rpb246IDAsDQogICAgICBtb3N0UmVjZW50OiB7fSwNCiAgICAgIGlzQ29sbGFwc2VkOiBmYWxzZSwNCiAgICAgIHRpbWVTaW5jZTogMCwNCiAgICAgIHNlZWRUZXh0OiAwLA0KICAgICAgY2FuTW9kaWZ5U2VlZDogZmFsc2UsDQogICAgICBpc0NvbXBsZXRlOiBmYWxzZSwNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIHN0YXR1c1RleHQoKSB7DQogICAgICBpZiAodGhpcy5pc0NvbXBsZXRlKSByZXR1cm4gYDxzcGFuIHN0eWxlPSJjb2xvcjogdmFyKC0tY29sb3ItZ29vZCkiPkZpbmlzaGVkITwvc3Bhbj5gOw0KICAgICAgcmV0dXJuIHRoaXMuaGFzU3RhcnRlZA0KICAgICAgICA/IGA8c3BhbiBzdHlsZT0iY29sb3I6IHZhcigtLWNvbG9yLWdvb2QpIj5SdW5uaW5nITwvc3Bhbj5gDQogICAgICAgIDogYDxzcGFuIHN0eWxlPSJjb2xvcjogdmFyKC0tY29sb3ItYmFkKSI+Tm90IFN0YXJ0ZWQgWWV0PC9zcGFuPmA7DQogICAgfSwNCiAgICBzZWdtZW50VGV4dCgpIHsNCiAgICAgIHJldHVybiB0aGlzLmlzU2VnbWVudGVkID8gIlNlZ21lbnRlZCBTcGVlZHJ1biAoaW1wb3J0ZWQgc2F2ZSkiIDogIlNpbmdsZS1zZWdtZW50IFNwZWVkcnVuIChubyBzYXZlIGltcG9ydCkiOw0KICAgIH0sDQogICAgaWFwVGV4dCgpIHsNCiAgICAgIHJldHVybiB0aGlzLnVzZWRTVEQgPyAiSUFQcyBoYXZlIGJlZW4gdXNlZCIgOiAiTm8gSUFQcyBVc2VkIjsNCiAgICB9LA0KICAgIG9mZmxpbmVUZXh0KCkgew0KICAgICAgY29uc3Qgc3RhdGVUZXh0ID0gdGhpcy5vZmZsaW5lUHJvZ3Jlc3MNCiAgICAgICAgPyBgPHNwYW4gc3R5bGU9ImNvbG9yOiB2YXIoLS1jb2xvci1nb29kKSI+RW5hYmxlZDwvc3Bhbj5gDQogICAgICAgIDogYDxzcGFuIHN0eWxlPSJjb2xvcjogdmFyKC0tY29sb3ItYmFkKSI+RGlzYWJsZWQ8L3NwYW4+YDsNCiAgICAgIGNvbnN0IGZyYWN0aW9uVGV4dCA9IHRoaXMub2ZmbGluZUZyYWN0aW9uID09PSAwDQogICAgICAgID8gIihObyBvZmZsaW5lIHRpbWUgdXNlZCkiDQogICAgICAgIDogYCgke2Zvcm1hdFBlcmNlbnRzKHRoaXMub2ZmbGluZUZyYWN0aW9uLCAyKX0gdGltZSBzcGVudCBvZmZsaW5lKWA7DQogICAgICByZXR1cm4gYCR7c3RhdGVUZXh0fSAke2ZyYWN0aW9uVGV4dH1gOw0KICAgIH0sDQogICAgY29sbGFwc2VJY29uKCkgew0KICAgICAgcmV0dXJuIHRoaXMuaXNDb2xsYXBzZWQNCiAgICAgICAgPyAiZmFzIGZhLWV4cGFuZC1hcnJvd3MtYWx0Ig0KICAgICAgICA6ICJmYXMgZmEtY29tcHJlc3MtYXJyb3dzLWFsdCI7DQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgdXBkYXRlKCkgew0KICAgICAgY29uc3Qgc3BlZWRydW4gPSBwbGF5ZXIuc3BlZWRydW47DQogICAgICB0aGlzLmlzQWN0aXZlID0gc3BlZWRydW4uaXNBY3RpdmU7DQogICAgICB0aGlzLmNhbk1vZGlmeVNlZWQgPSBTcGVlZHJ1bi5jYW5Nb2RpZnlTZWVkKCk7DQogICAgICAvLyBTaG9ydC1jaXJjdWl0IGlmIHNwZWVkcnVuIGlzbid0IGFjdGl2ZTsgdXBkYXRpbmcgc29tZSBsYXRlciBzdHVmZiBjYW4gY2F1c2UgdnVlIGVycm9ycyBvdXRzaWRlIG9mIHNwZWVkcnVucw0KICAgICAgaWYgKCF0aGlzLmlzQWN0aXZlKSByZXR1cm47DQogICAgICB0aGlzLmlzU2VnbWVudGVkID0gc3BlZWRydW4uaXNTZWdtZW50ZWQ7DQogICAgICB0aGlzLnVzZWRTVEQgPSBzcGVlZHJ1bi51c2VkU1REOw0KICAgICAgdGhpcy5oYXNTdGFydGVkID0gc3BlZWRydW4uaGFzU3RhcnRlZDsNCiAgICAgIHRoaXMuc3RhcnREYXRlID0gc3BlZWRydW4uc3RhcnREYXRlOw0KICAgICAgdGhpcy5zYXZlTmFtZSA9IHNwZWVkcnVuLm5hbWU7DQogICAgICB0aGlzLmlzQ29sbGFwc2VkID0gc3BlZWRydW4uaGlkZUluZm87DQogICAgICB0aGlzLmlzQ29tcGxldGUgPSBBY2hpZXZlbWVudCgxODgpLmlzVW5sb2NrZWQ7DQoNCiAgICAgIHRoaXMudGltZVBsYXllZFN0ciA9IFRpbWUucmVhbFRpbWVQbGF5ZWQudG9TdHJpbmdTaG9ydCgpOw0KICAgICAgdGhpcy5vZmZsaW5lUHJvZ3Jlc3MgPSBwbGF5ZXIub3B0aW9ucy5vZmZsaW5lUHJvZ3Jlc3M7DQogICAgICB0aGlzLm9mZmxpbmVGcmFjdGlvbiA9IHNwZWVkcnVuLm9mZmxpbmVUaW1lVXNlZCAvIE1hdGguY2xhbXBNaW4ocGxheWVyLnJlY29yZHMucmVhbFRpbWVQbGF5ZWQsIDEpOw0KICAgICAgdGhpcy5tb3N0UmVjZW50ID0gU3BlZWRydW4ubW9zdFJlY2VudE1pbGVzdG9uZSgpOw0KICAgICAgdGhpcy50aW1lU2luY2UgPSBUaW1lLnJlYWxUaW1lUGxheWVkLm1pbnVzKFRpbWVTcGFuLmZyb21NaWxsaXNlY29uZHMoc3BlZWRydW4ucmVjb3Jkc1t0aGlzLm1vc3RSZWNlbnRdID8/IDApKQ0KICAgICAgICAudG9TdHJpbmdTaG9ydCgpOw0KICAgICAgdGhpcy5zZWVkVGV4dCA9IFNwZWVkcnVuLnNlZWRNb2RlVGV4dCgpOw0KICAgIH0sDQogICAgbWlsZXN0b25lTmFtZShpZCkgew0KICAgICAgY29uc3QgZGIgPSBHYW1lRGF0YWJhc2Uuc3BlZWRydW5NaWxlc3RvbmVzOw0KICAgICAgcmV0dXJuIGlkID09PSAwID8gIk5vbmUiIDogZGIuZmluZChtID0+IG0uaWQgPT09IGlkKS5uYW1lOw0KICAgIH0sDQogICAgY2hhbmdlTmFtZSgpIHsNCiAgICAgIGlmICh0aGlzLmhhc1N0YXJ0ZWQpIHJldHVybjsNCiAgICAgIE1vZGFsLmNoYW5nZU5hbWUuc2hvdygpOw0KICAgIH0sDQogICAgY29sbGFwc2VUZXh0KCkgew0KICAgICAgcmV0dXJuIHRoaXMuaXNDb2xsYXBzZWQgPyAiRXhwYW5kIiA6IGBDbGljayB0byBjb2xsYXBzZSBTcGVlZHJ1biBpbmZvYDsNCiAgICB9LA0KICAgIHRvZ2dsZUNvbGxhcHNlKCkgew0KICAgICAgcGxheWVyLnNwZWVkcnVuLmhpZGVJbmZvID0gIXRoaXMuaXNDb2xsYXBzZWQ7DQogICAgfSwNCiAgICBvcGVuU2VlZE1vZGFsKCkgew0KICAgICAgaWYgKCF0aGlzLmNhbk1vZGlmeVNlZWQpIHJldHVybjsNCiAgICAgIE1vZGFsLm1vZGlmeVNlZWQuc2hvdygpOw0KICAgIH0NCiAgfSwNCn07DQo="},{"version":3,"sources":["SpeedrunStatus.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SpeedrunStatus.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\nexport default {\r\n  name: \"SpeedrunStatus\",\r\n  data() {\r\n    return {\r\n      isActive: false,\r\n      isSegmented: false,\r\n      usedSTD: false,\r\n      hasStarted: false,\r\n      startDate: 0,\r\n      saveName: \"\",\r\n      timePlayedStr: \"\",\r\n      offlineProgress: false,\r\n      offlineFraction: 0,\r\n      mostRecent: {},\r\n      isCollapsed: false,\r\n      timeSince: 0,\r\n      seedText: 0,\r\n      canModifySeed: false,\r\n      isComplete: false,\r\n    };\r\n  },\r\n  computed: {\r\n    statusText() {\r\n      if (this.isComplete) return `<span style=\"color: var(--color-good)\">Finished!</span>`;\r\n      return this.hasStarted\r\n        ? `<span style=\"color: var(--color-good)\">Running!</span>`\r\n        : `<span style=\"color: var(--color-bad)\">Not Started Yet</span>`;\r\n    },\r\n    segmentText() {\r\n      return this.isSegmented ? \"Segmented Speedrun (imported save)\" : \"Single-segment Speedrun (no save import)\";\r\n    },\r\n    iapText() {\r\n      return this.usedSTD ? \"IAPs have been used\" : \"No IAPs Used\";\r\n    },\r\n    offlineText() {\r\n      const stateText = this.offlineProgress\r\n        ? `<span style=\"color: var(--color-good)\">Enabled</span>`\r\n        : `<span style=\"color: var(--color-bad)\">Disabled</span>`;\r\n      const fractionText = this.offlineFraction === 0\r\n        ? \"(No offline time used)\"\r\n        : `(${formatPercents(this.offlineFraction, 2)} time spent offline)`;\r\n      return `${stateText} ${fractionText}`;\r\n    },\r\n    collapseIcon() {\r\n      return this.isCollapsed\r\n        ? \"fas fa-expand-arrows-alt\"\r\n        : \"fas fa-compress-arrows-alt\";\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      const speedrun = player.speedrun;\r\n      this.isActive = speedrun.isActive;\r\n      this.canModifySeed = Speedrun.canModifySeed();\r\n      // Short-circuit if speedrun isn't active; updating some later stuff can cause vue errors outside of speedruns\r\n      if (!this.isActive) return;\r\n      this.isSegmented = speedrun.isSegmented;\r\n      this.usedSTD = speedrun.usedSTD;\r\n      this.hasStarted = speedrun.hasStarted;\r\n      this.startDate = speedrun.startDate;\r\n      this.saveName = speedrun.name;\r\n      this.isCollapsed = speedrun.hideInfo;\r\n      this.isComplete = Achievement(188).isUnlocked;\r\n\r\n      this.timePlayedStr = Time.realTimePlayed.toStringShort();\r\n      this.offlineProgress = player.options.offlineProgress;\r\n      this.offlineFraction = speedrun.offlineTimeUsed / Math.clampMin(player.records.realTimePlayed, 1);\r\n      this.mostRecent = Speedrun.mostRecentMilestone();\r\n      this.timeSince = Time.realTimePlayed.minus(TimeSpan.fromMilliseconds(speedrun.records[this.mostRecent] ?? 0))\r\n        .toStringShort();\r\n      this.seedText = Speedrun.seedModeText();\r\n    },\r\n    milestoneName(id) {\r\n      const db = GameDatabase.speedrunMilestones;\r\n      return id === 0 ? \"None\" : db.find(m => m.id === id).name;\r\n    },\r\n    changeName() {\r\n      if (this.hasStarted) return;\r\n      Modal.changeName.show();\r\n    },\r\n    collapseText() {\r\n      return this.isCollapsed ? \"Expand\" : `Click to collapse Speedrun info`;\r\n    },\r\n    toggleCollapse() {\r\n      player.speedrun.hideInfo = !this.isCollapsed;\r\n    },\r\n    openSeedModal() {\r\n      if (!this.canModifySeed) return;\r\n      Modal.modifySeed.show();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-if=\"isActive\"\r\n    class=\"c-speedrun-status\"\r\n  >\r\n    <div v-if=\"!isCollapsed\">\r\n      <b>Speedrun Status (<span v-html=\"statusText\" />)</b>\r\n      <br>\r\n      <span\r\n        :class=\"{ 'c-speedrun-status--can-change': !hasStarted }\"\r\n        @click=\"changeName\"\r\n      >\r\n        Player Name: {{ saveName }}\r\n      </span>\r\n      <br>\r\n      <i>{{ segmentText }}</i>\r\n      <br>\r\n      <i>{{ iapText }}</i>\r\n      <br>\r\n      <span\r\n        :class=\"{ 'c-speedrun-status--can-change': canModifySeed }\"\r\n        @click=\"openSeedModal()\"\r\n      >{{ seedText }}</span>\r\n      <br>\r\n      Total real playtime since start: {{ timePlayedStr }}\r\n      <br>\r\n      Offline Progress: <span v-html=\"offlineText\" />\r\n      <br>\r\n      Most Recent Milestone: {{ milestoneName(mostRecent) }} <span v-if=\"mostRecent\">({{ timeSince }} ago)</span>\r\n      <br>\r\n    </div>\r\n    <div\r\n      class=\"c-speedrun-status--collapse\"\r\n      @click=\"toggleCollapse\"\r\n    >\r\n      <i :class=\"collapseIcon\" />\r\n      {{ collapseText() }}\r\n      <i :class=\"collapseIcon\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-speedrun-status {\r\n  white-space: nowrap;\r\n  position: absolute;\r\n  right: 2rem;\r\n  bottom: 1rem;\r\n  z-index: 5;\r\n  font-size: 1.2rem;\r\n  color: var(--color-text);\r\n  background-color: var(--color-base);\r\n  border: var(--var-border-width, 0.2rem) solid var(--color-accent);\r\n  padding: 0.8rem 2rem;\r\n  pointer-events: auto;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.c-speedrun-status--can-change {\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n\r\n.c-speedrun-status--collapse {\r\n  padding: 0.2rem;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}