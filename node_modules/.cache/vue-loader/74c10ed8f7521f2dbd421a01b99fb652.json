{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorDocsCommandList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorDocsCommandList.vue","mtime":1745241597069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQXV0b21hdG9yRG9jc01hblBhZ2UgZnJvbSAiLi9BdXRvbWF0b3JEb2NzTWFuUGFnZSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkF1dG9tYXRvckRvY3NDb21tYW5kTGlzdCIsDQogIGNvbXBvbmVudHM6IHsNCiAgICBBdXRvbWF0b3JEb2NzTWFuUGFnZQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBzZWxlY3RlZENvbW1hbmQ6IC0xLA0KICAgIH07DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgY2F0ZWdvcnlOYW1lczogKCkgPT4gR2FtZURhdGFiYXNlLnJlYWxpdHkuYXV0b21hdG9yLmNhdGVnb3J5TmFtZXMsDQogICAgY29tbWFuZHM6ICgpID0+IEdhbWVEYXRhYmFzZS5yZWFsaXR5LmF1dG9tYXRvci5jb21tYW5kcywNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGNvbW1hbmRzSW5DYXRlZ29yeShjYXRlZ29yeSkgew0KICAgICAgcmV0dXJuIHRoaXMuY29tbWFuZHMuZmlsdGVyKGMgPT4gYy5jYXRlZ29yeSA9PT0gY2F0ZWdvcnkgJiYgYy5pc1VubG9ja2VkKCkpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["AutomatorDocsCommandList.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutomatorDocsCommandList.vue","sourceRoot":"src/components/tabs/automator","sourcesContent":["<script>\r\nimport AutomatorDocsManPage from \"./AutomatorDocsManPage\";\r\n\r\nexport default {\r\n  name: \"AutomatorDocsCommandList\",\r\n  components: {\r\n    AutomatorDocsManPage\r\n  },\r\n  data() {\r\n    return {\r\n      selectedCommand: -1,\r\n    };\r\n  },\r\n  computed: {\r\n    categoryNames: () => GameDatabase.reality.automator.categoryNames,\r\n    commands: () => GameDatabase.reality.automator.commands,\r\n  },\r\n  methods: {\r\n    commandsInCategory(category) {\r\n      return this.commands.filter(c => c.category === category && c.isUnlocked());\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div v-if=\"selectedCommand !== -1\">\r\n      <button\r\n        class=\"c-automator-docs--button l-return-button fas fa-arrow-left\"\r\n        @click=\"selectedCommand = -1\"\r\n      />\r\n      Return to the Command List\r\n    </div>\r\n    <AutomatorDocsManPage\r\n      v-if=\"selectedCommand !== -1\"\r\n      :command=\"commands[selectedCommand]\"\r\n    />\r\n    <div\r\n      v-else\r\n      class=\"c-automator-docs-page\"\r\n    >\r\n      Click on an underlined command to see more details on syntax, usage, and functionality.\r\n      <br>\r\n      <br>\r\n      <span>Command List:</span>\r\n      <br>\r\n      <div\r\n        v-for=\"(category, i) in categoryNames\"\r\n        :key=\"i\"\r\n      >\r\n        {{ category }} ({{ commandsInCategory(i).length }} commands)\r\n        <div\r\n          v-for=\"command in commandsInCategory(i)\"\r\n          :key=\"command.id\"\r\n          class=\"c-automator-docs-page__link l-command-group\"\r\n          @click=\"selectedCommand = command.id\"\r\n        >\r\n          <span v-if=\"command.isUnlocked()\">\r\n            {{ command.keyword }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <br>\r\n      <span>\r\n        Note: In the SYNTAX note on each command, <u>underlined</u> inputs are <i>required</i> inputs which you must\r\n        fill and inputs in [square brackets] are optional (if used, they should be input <i>without</i> the brackets).\r\n        Any other parts should be typed in as they appear. Unless otherwise stated, all of the inputs are\r\n        case-insensitive. Some commands may have more than one valid format, which will appear on separate lines.\r\n      </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-command-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 1rem;\r\n}\r\n\r\n.l-return-button {\r\n  width: 4rem;\r\n  height: 2.6rem;\r\n  font-size: 1.8rem;\r\n  margin-left: 2rem;\r\n}\r\n</style>\r\n"]}]}