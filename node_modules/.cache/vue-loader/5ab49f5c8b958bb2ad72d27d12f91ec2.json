{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorDataTransferSingleEntry.vue?vue&type=style&index=0&id=9bf585a6&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorDataTransferSingleEntry.vue","mtime":1745241597066},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sLWVudHJ5LXBhZGRpbmcgew0KICBib3JkZXI6IHNvbGlkIDAuMXJlbSB2YXIoLS1jb2xvci1hdXRvbWF0b3ItZG9jcy1mb250KTsNCiAgYm9yZGVyLXJhZGl1czogdmFyKC0tdmFyLWJvcmRlci1yYWRpdXMsIDAuNXJlbSk7DQogIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7DQogIHBhZGRpbmc6IDFyZW0gMS41cmVtOw0KfQ0KDQoubC12YWx1ZS1wYWRkaW5nIHsNCiAgcGFkZGluZy1sZWZ0OiAxLjVyZW07DQp9DQoNCi5sLWJ1dHRvbi1tYXJnaW4gew0KICBtYXJnaW4tcmlnaHQ6IDFyZW07DQp9DQo="},{"version":3,"sources":["AutomatorDataTransferSingleEntry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"AutomatorDataTransferSingleEntry.vue","sourceRoot":"src/components/tabs/automator","sourcesContent":["<script>\r\nexport default {\r\n  name: \"AutomatorDataTransferSingleEntry\",\r\n  props: {\r\n    script: {\r\n      type: Object,\r\n      required: true,\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      presets: [],\r\n      constants: [],\r\n      hidePresets: true,\r\n      hideConstants: true,\r\n    };\r\n  },\r\n  computed: {\r\n    presetData: () => player.timestudy.presets,\r\n    constantData: () => player.reality.automator.constants,\r\n    hasPresets() {\r\n      return (this.presets?.length ?? 0) !== 0;\r\n    },\r\n    hasConstants() {\r\n      return (this.constants?.length ?? 0) !== 0;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.presets = AutomatorBackend.getUsedPresets(this.script.id);\r\n      this.constants = AutomatorBackend.getUsedConstants(this.script.id);\r\n    },\r\n    iconClass(state) {\r\n      return state ? \"far fa-plus-square\" : \"far fa-minus-square\";\r\n    },\r\n    exportData(id) {\r\n      const toExport = AutomatorBackend.exportFullScriptData(id);\r\n      if (toExport) {\r\n        copyToClipboard(toExport);\r\n        GameUI.notify.automator(`Exported all data associated with \"${this.script.name}\" to your clipboard`, 6000);\r\n      } else {\r\n        GameUI.notify.error(\"Could not export data from blank Automator script!\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-entry-padding\">\r\n    <button\r\n      v-tooltip=\"'Export Full Script Data'\"\r\n      class=\"l-button-margin fas fa-file-export\"\r\n      @click=\"exportData(script.id)\"\r\n    />\r\n    <b>Script name: {{ script.name }}</b>\r\n    <br>\r\n    <span v-if=\"hasPresets\">\r\n      <span\r\n        :class=\"iconClass(hidePresets)\"\r\n        @click=\"hidePresets = !hidePresets\"\r\n      />\r\n      References {{ quantifyInt(\"recognized study preset\", presets.length) }}\r\n      <span v-if=\"!hidePresets\">\r\n        <div\r\n          v-for=\"id in presets\"\r\n          :key=\"id\"\r\n        >\r\n          <span v-if=\"presetData[id].name\">\"{{ presetData[id].name }}\" (slot {{ id + 1 }}):</span>\r\n          <span v-else>Preset slot {{ id + 1 }}:</span>\r\n          <br>\r\n          <div class=\"l-value-padding\">\r\n            <span v-if=\"presetData[id].studies\">{{ presetData[id].studies }}</span>\r\n            <i v-else>Empty Study Preset</i>\r\n          </div>\r\n        </div>\r\n      </span>\r\n    </span>\r\n    <span v-else>\r\n      Does not reference any study presets.\r\n    </span>\r\n    <br>\r\n    <span v-if=\"hasConstants\">\r\n      <span\r\n        :class=\"iconClass(hideConstants)\"\r\n        @click=\"hideConstants = !hideConstants\"\r\n      />\r\n      References {{ quantifyInt(\"defined constant\", constants.length) }}\r\n      <span v-if=\"!hideConstants\">\r\n        <div\r\n          v-for=\"name in constants\"\r\n          :key=\"name\"\r\n        >\r\n          \"{{ name }}\":\r\n          <br>\r\n          <div class=\"l-value-padding\">\r\n            {{ constantData[name] }}\r\n          </div>\r\n        </div>\r\n      </span>\r\n    </span>\r\n    <span v-else>\r\n      Does not reference any defined constants.\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-entry-padding {\r\n  border: solid 0.1rem var(--color-automator-docs-font);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  overflow-wrap: break-word;\r\n  padding: 1rem 1.5rem;\r\n}\r\n\r\n.l-value-padding {\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n.l-button-margin {\r\n  margin-right: 1rem;\r\n}\r\n</style>\r\n"]}]}