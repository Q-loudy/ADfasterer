{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\normal-achievements\\NormalAchievementsTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\normal-achievements\\NormalAchievementsTab.vue","mtime":1745241597389},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgTm9ybWFsQWNoaWV2ZW1lbnRSb3cgZnJvbSAiLi9Ob3JtYWxBY2hpZXZlbWVudFJvdyI7DQppbXBvcnQgUHJpbWFyeVRvZ2dsZUJ1dHRvbiBmcm9tICJAL2NvbXBvbmVudHMvUHJpbWFyeVRvZ2dsZUJ1dHRvbiI7DQppbXBvcnQgU3dhcEFjaGlldmVtZW50SW1hZ2VzQnV0dG9uIGZyb20gIi4vU3dhcEFjaGlldmVtZW50SW1hZ2VzQnV0dG9uIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiTm9ybWFsQWNoaWV2ZW1lbnRzVGFiIiwNCiAgY29tcG9uZW50czogew0KICAgIFN3YXBBY2hpZXZlbWVudEltYWdlc0J1dHRvbiwNCiAgICBOb3JtYWxBY2hpZXZlbWVudFJvdywNCiAgICBQcmltYXJ5VG9nZ2xlQnV0dG9uDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGFjaGlldmVtZW50UG93ZXI6IDAsDQogICAgICBhY2hUUEVmZmVjdDogMCwNCiAgICAgIGFjaENvdW50ZG93bjogMCwNCiAgICAgIHRvdGFsQ291bnRkb3duOiAwLA0KICAgICAgbWlzc2luZ0FjaGlldmVtZW50czogMCwNCiAgICAgIHNob3dBdXRvQWNoaWV2ZTogZmFsc2UsDQogICAgICBpc0F1dG9BY2hpZXZlQWN0aXZlOiBmYWxzZSwNCiAgICAgIGhpZGVDb21wbGV0ZWRSb3dzOiBmYWxzZSwNCiAgICAgIGFjaE11bHRCcmVhazogZmFsc2UsDQogICAgICBhY2hNdWx0VG9JRFM6IGZhbHNlLA0KICAgICAgYWNoTXVsdFRvVERTOiBmYWxzZSwNCiAgICAgIGFjaE11bHRUb0JIOiBmYWxzZSwNCiAgICAgIGFjaE11bHRUb1RQOiBmYWxzZSwNCiAgICAgIGFjaE11bHRUb1RUOiBmYWxzZSwNCiAgICAgIHJlbmRlcmVkUm93SW5kaWNlczogW10NCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGlzRG9vbWVkOiAoKSA9PiBQZWxsZS5pc0Rvb21lZCwNCiAgICByb3dzOiAoKSA9PiBBY2hpZXZlbWVudHMuYWxsUm93cywNCiAgICByZW5kZXJlZFJvd3MoKSB7DQogICAgICByZXR1cm4gdGhpcy5yb3dzLmZpbHRlcigoXywgaSkgPT4gdGhpcy5yZW5kZXJlZFJvd0luZGljZXMuaW5jbHVkZXMoaSkpOw0KICAgIH0sDQogICAgYm9vc3RUZXh0KCkgew0KICAgICAgY29uc3QgYWNoaWV2ZW1lbnRQb3dlciA9IGZvcm1hdFgodGhpcy5hY2hpZXZlbWVudFBvd2VyLCAyLCAzKTsNCiAgICAgIGNvbnN0IGFjaFRQRWZmZWN0ID0gZm9ybWF0WCh0aGlzLmFjaFRQRWZmZWN0LCAyLCAzKTsNCg0KICAgICAgY29uc3QgYm9vc3RMaXN0ID0gW107DQoNCiAgICAgIGNvbnN0IGRpbU11bHRMaXN0ID0gW107DQogICAgICBkaW1NdWx0TGlzdC5wdXNoKCJBbnRpbWF0dGVyIik7DQogICAgICBpZiAodGhpcy5hY2hNdWx0VG9JRFMpIGRpbU11bHRMaXN0LnB1c2goIkluZmluaXR5Iik7DQogICAgICBpZiAodGhpcy5hY2hNdWx0VG9URFMpIGRpbU11bHRMaXN0LnB1c2goIlRpbWUiKTsNCiAgICAgIGJvb3N0TGlzdC5wdXNoKGAke21ha2VFbnVtZXJhdGlvbihkaW1NdWx0TGlzdCl9IERpbWVuc2lvbnM6ICR7YWNoaWV2ZW1lbnRQb3dlcn1gKTsNCg0KICAgICAgaWYgKHRoaXMuYWNoTXVsdFRvVFApIGJvb3N0TGlzdC5wdXNoKGBUYWNoeW9uIFBhcnRpY2xlczogJHthY2hUUEVmZmVjdH1gKTsNCiAgICAgIGlmICh0aGlzLmFjaE11bHRUb0JIKSBib29zdExpc3QucHVzaChgQmxhY2sgSG9sZSBQb3dlcjogJHthY2hpZXZlbWVudFBvd2VyfWApOw0KICAgICAgaWYgKHRoaXMuYWNoTXVsdFRvVFQpIGJvb3N0TGlzdC5wdXNoKGBUaW1lIFRoZW9yZW0gcHJvZHVjdGlvbjogJHthY2hpZXZlbWVudFBvd2VyfWApOw0KICAgICAgcmV0dXJuIGAke2Jvb3N0TGlzdC5qb2luKCI8YnI+Iil9YDsNCiAgICB9LA0KICB9LA0KICB3YXRjaDogew0KICAgIGlzQXV0b0FjaGlldmVBY3RpdmUobmV3VmFsdWUpIHsNCiAgICAgIHBsYXllci5yZWFsaXR5LmF1dG9BY2hpZXZlID0gbmV3VmFsdWU7DQogICAgfSwNCiAgICBoaWRlQ29tcGxldGVkUm93cyhuZXdWYWx1ZSkgew0KICAgICAgcGxheWVyLm9wdGlvbnMuaGlkZUNvbXBsZXRlZEFjaGlldmVtZW50Um93cyA9IG5ld1ZhbHVlOw0KICAgICAgdGhpcy5zdGFydFJvd1JlbmRlcmluZygpOw0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLnN0YXJ0Um93UmVuZGVyaW5nKCk7DQogIH0sDQogIGJlZm9yZURlc3Ryb3koKSB7DQogICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5yZW5kZXJBbmltYXRpb25JZCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICB1cGRhdGUoKSB7DQogICAgICBjb25zdCBnYW1lU3BlZWR1cEZhY3RvciA9IGdldEdhbWVTcGVlZHVwRmFjdG9yKCk7DQogICAgICB0aGlzLmFjaGlldmVtZW50UG93ZXIgPSBBY2hpZXZlbWVudHMucG93ZXI7DQogICAgICB0aGlzLmFjaFRQRWZmZWN0ID0gUmVhbGl0eVVwZ3JhZGUoOCkuY29uZmlnLmVmZmVjdCgpOw0KICAgICAgdGhpcy5hY2hDb3VudGRvd24gPSBBY2hpZXZlbWVudHMudGltZVRvTmV4dEF1dG9BY2hpZXZlIC8gZ2FtZVNwZWVkdXBGYWN0b3I7DQogICAgICB0aGlzLnRvdGFsQ291bnRkb3duID0gKChBY2hpZXZlbWVudHMucHJlUmVhbGl0eS5jb3VudFdoZXJlKGEgPT4gIWEuaXNVbmxvY2tlZCkgLSAxKSAqIEFjaGlldmVtZW50cy5wZXJpb2QgKw0KICAgICAgICBBY2hpZXZlbWVudHMudGltZVRvTmV4dEF1dG9BY2hpZXZlKSAvIGdhbWVTcGVlZHVwRmFjdG9yOw0KICAgICAgdGhpcy5taXNzaW5nQWNoaWV2ZW1lbnRzID0gQWNoaWV2ZW1lbnRzLnByZVJlYWxpdHkuY291bnRXaGVyZShhID0+ICFhLmlzVW5sb2NrZWQpOw0KICAgICAgdGhpcy5zaG93QXV0b0FjaGlldmUgPSBQbGF5ZXJQcm9ncmVzcy5yZWFsaXR5VW5sb2NrZWQoKSAmJiAhUGVyay5hY2hpZXZlbWVudEdyb3VwNS5pc0JvdWdodDsNCiAgICAgIHRoaXMuaXNBdXRvQWNoaWV2ZUFjdGl2ZSA9IHBsYXllci5yZWFsaXR5LmF1dG9BY2hpZXZlOw0KICAgICAgdGhpcy5oaWRlQ29tcGxldGVkUm93cyA9IHBsYXllci5vcHRpb25zLmhpZGVDb21wbGV0ZWRBY2hpZXZlbWVudFJvd3M7DQogICAgICB0aGlzLmFjaE11bHRCcmVhayA9IEJyZWFrSW5maW5pdHlVcGdyYWRlLmFjaGlldmVtZW50TXVsdC5jYW5CZUFwcGxpZWQ7DQogICAgICB0aGlzLmFjaE11bHRUb0lEUyA9IEFjaGlldmVtZW50KDc1KS5pc1VubG9ja2VkOw0KICAgICAgdGhpcy5hY2hNdWx0VG9URFMgPSBFdGVybml0eVVwZ3JhZGUudGRNdWx0QWNocy5pc0JvdWdodDsNCiAgICAgIHRoaXMuYWNoTXVsdFRvVFAgPSBSZWFsaXR5VXBncmFkZSg4KS5pc0JvdWdodDsNCiAgICAgIHRoaXMuYWNoTXVsdFRvQkggPSBWVW5sb2Nrcy5hY2hpZXZlbWVudEJILmNhbkJlQXBwbGllZDsNCiAgICAgIHRoaXMuYWNoTXVsdFRvVFQgPSBSYS51bmxvY2tzLmFjaGlldmVtZW50VFRNdWx0LmNhbkJlQXBwbGllZDsNCiAgICB9LA0KICAgIHN0YXJ0Um93UmVuZGVyaW5nKCkgew0KICAgICAgY29uc3QgdW5sb2NrZWRSb3dzID0gW107DQogICAgICBjb25zdCBsb2NrZWRSb3dzID0gW107DQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucm93cy5sZW5ndGg7IGkrKykgew0KICAgICAgICBjb25zdCB0YXJnZXRBcnJheSA9IHRoaXMucm93c1tpXS5ldmVyeShhID0+IGEuaXNVbmxvY2tlZCkgPyB1bmxvY2tlZFJvd3MgOiBsb2NrZWRSb3dzOw0KICAgICAgICB0YXJnZXRBcnJheS5wdXNoKGkpOw0KICAgICAgfQ0KICAgICAgY29uc3QgcmVuZGVyZWRMb2NrZWRSb3dzID0gbG9ja2VkUm93cy5maWx0ZXIocm93ID0+IHRoaXMucmVuZGVyZWRSb3dJbmRpY2VzLmluY2x1ZGVzKHJvdykpOw0KICAgICAgY29uc3Qgbm9uUmVuZGVyZWRMb2NrZWRSb3dzID0gbG9ja2VkUm93cy5maWx0ZXIocm93ID0+ICF0aGlzLnJlbmRlcmVkUm93SW5kaWNlcy5pbmNsdWRlcyhyb3cpKTsNCiAgICAgIGxldCByb3dzVG9SZW5kZXI7DQogICAgICBpZiAocGxheWVyLm9wdGlvbnMuaGlkZUNvbXBsZXRlZEFjaGlldmVtZW50Um93cykgew0KICAgICAgICB0aGlzLnJlbmRlcmVkUm93SW5kaWNlcyA9IHVubG9ja2VkUm93cy5jb25jYXQocmVuZGVyZWRMb2NrZWRSb3dzKTsNCiAgICAgICAgcm93c1RvUmVuZGVyID0gbm9uUmVuZGVyZWRMb2NrZWRSb3dzOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy5yZW5kZXJlZFJvd0luZGljZXMgPSByZW5kZXJlZExvY2tlZFJvd3M7DQogICAgICAgIHJvd3NUb1JlbmRlciA9IHVubG9ja2VkUm93cy5jb25jYXQobm9uUmVuZGVyZWRMb2NrZWRSb3dzKTsNCiAgICAgIH0NCiAgICAgIGNvbnN0IHN0ZXBUaHJvdWdoUmVuZGVyaW5nID0gKCkgPT4gew0KICAgICAgICBjb25zdCBST1dTX1BFUl9GUkFNRSA9IDI7DQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgUk9XU19QRVJfRlJBTUU7IGkrKykgew0KICAgICAgICAgIGlmIChyb3dzVG9SZW5kZXIubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgfQ0KICAgICAgICAgIHRoaXMucmVuZGVyZWRSb3dJbmRpY2VzLnB1c2gocm93c1RvUmVuZGVyLnNoaWZ0KCkpOw0KICAgICAgICB9DQogICAgICAgIHRoaXMucmVuZGVyQW5pbWF0aW9uSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcFRocm91Z2hSZW5kZXJpbmcpOw0KICAgICAgfTsNCiAgICAgIHN0ZXBUaHJvdWdoUmVuZGVyaW5nKCk7DQogICAgfSwNCiAgICBpc1JlbmRlcmVkKHJvdykgew0KICAgICAgcmV0dXJuIHRoaXMucmVuZGVyZWRSb3dJbmRpY2VzLmluY2x1ZGVzKHJvdyk7DQogICAgfSwNCiAgICBpc09ic2N1cmVkKHJvdykgew0KICAgICAgcmV0dXJuIHRoaXMuaXNEb29tZWQgPyBmYWxzZSA6IHJvdyA9PT0gMTc7DQogICAgfSwNCiAgICB0aW1lRGlzcGxheSwNCiAgICB0aW1lRGlzcGxheU5vRGVjaW1hbHMsDQogIH0NCn07DQo="},{"version":3,"sources":["NormalAchievementsTab.vue"],"names":[],"mappingsfile":"NormalAchievementsTab.vue","sourceRoot":"src/components/tabs/normal-achievements","sourcesContent":["<script>\r\nimport NormalAchievementRow from \"./NormalAchievementRow\";\r\nimport PrimaryToggleButton from \"@/components/PrimaryToggleButton\";\r\nimport SwapAchievementImagesButton from \"./SwapAchievementImagesButton\";\r\n\r\nexport default {\r\n  name: \"NormalAchievementsTab\",\r\n  components: {\r\n    SwapAchievementImagesButton,\r\n    NormalAchievementRow,\r\n    PrimaryToggleButton\r\n  },\r\n  data() {\r\n    return {\r\n      achievementPower: 0,\r\n      achTPEffect: 0,\r\n      achCountdown: 0,\r\n      totalCountdown: 0,\r\n      missingAchievements: 0,\r\n      showAutoAchieve: false,\r\n      isAutoAchieveActive: false,\r\n      hideCompletedRows: false,\r\n      achMultBreak: false,\r\n      achMultToIDS: false,\r\n      achMultToTDS: false,\r\n      achMultToBH: false,\r\n      achMultToTP: false,\r\n      achMultToTT: false,\r\n      renderedRowIndices: []\r\n    };\r\n  },\r\n  computed: {\r\n    isDoomed: () => Pelle.isDoomed,\r\n    rows: () => Achievements.allRows,\r\n    renderedRows() {\r\n      return this.rows.filter((_, i) => this.renderedRowIndices.includes(i));\r\n    },\r\n    boostText() {\r\n      const achievementPower = formatX(this.achievementPower, 2, 3);\r\n      const achTPEffect = formatX(this.achTPEffect, 2, 3);\r\n\r\n      const boostList = [];\r\n\r\n      const dimMultList = [];\r\n      dimMultList.push(\"Antimatter\");\r\n      if (this.achMultToIDS) dimMultList.push(\"Infinity\");\r\n      if (this.achMultToTDS) dimMultList.push(\"Time\");\r\n      boostList.push(`${makeEnumeration(dimMultList)} Dimensions: ${achievementPower}`);\r\n\r\n      if (this.achMultToTP) boostList.push(`Tachyon Particles: ${achTPEffect}`);\r\n      if (this.achMultToBH) boostList.push(`Black Hole Power: ${achievementPower}`);\r\n      if (this.achMultToTT) boostList.push(`Time Theorem production: ${achievementPower}`);\r\n      return `${boostList.join(\"<br>\")}`;\r\n    },\r\n  },\r\n  watch: {\r\n    isAutoAchieveActive(newValue) {\r\n      player.reality.autoAchieve = newValue;\r\n    },\r\n    hideCompletedRows(newValue) {\r\n      player.options.hideCompletedAchievementRows = newValue;\r\n      this.startRowRendering();\r\n    }\r\n  },\r\n  created() {\r\n    this.startRowRendering();\r\n  },\r\n  beforeDestroy() {\r\n    cancelAnimationFrame(this.renderAnimationId);\r\n  },\r\n  methods: {\r\n    update() {\r\n      const gameSpeedupFactor = getGameSpeedupFactor();\r\n      this.achievementPower = Achievements.power;\r\n      this.achTPEffect = RealityUpgrade(8).config.effect();\r\n      this.achCountdown = Achievements.timeToNextAutoAchieve / gameSpeedupFactor;\r\n      this.totalCountdown = ((Achievements.preReality.countWhere(a => !a.isUnlocked) - 1) * Achievements.period +\r\n        Achievements.timeToNextAutoAchieve) / gameSpeedupFactor;\r\n      this.missingAchievements = Achievements.preReality.countWhere(a => !a.isUnlocked);\r\n      this.showAutoAchieve = PlayerProgress.realityUnlocked() && !Perk.achievementGroup5.isBought;\r\n      this.isAutoAchieveActive = player.reality.autoAchieve;\r\n      this.hideCompletedRows = player.options.hideCompletedAchievementRows;\r\n      this.achMultBreak = BreakInfinityUpgrade.achievementMult.canBeApplied;\r\n      this.achMultToIDS = Achievement(75).isUnlocked;\r\n      this.achMultToTDS = EternityUpgrade.tdMultAchs.isBought;\r\n      this.achMultToTP = RealityUpgrade(8).isBought;\r\n      this.achMultToBH = VUnlocks.achievementBH.canBeApplied;\r\n      this.achMultToTT = Ra.unlocks.achievementTTMult.canBeApplied;\r\n    },\r\n    startRowRendering() {\r\n      const unlockedRows = [];\r\n      const lockedRows = [];\r\n      for (let i = 0; i < this.rows.length; i++) {\r\n        const targetArray = this.rows[i].every(a => a.isUnlocked) ? unlockedRows : lockedRows;\r\n        targetArray.push(i);\r\n      }\r\n      const renderedLockedRows = lockedRows.filter(row => this.renderedRowIndices.includes(row));\r\n      const nonRenderedLockedRows = lockedRows.filter(row => !this.renderedRowIndices.includes(row));\r\n      let rowsToRender;\r\n      if (player.options.hideCompletedAchievementRows) {\r\n        this.renderedRowIndices = unlockedRows.concat(renderedLockedRows);\r\n        rowsToRender = nonRenderedLockedRows;\r\n      } else {\r\n        this.renderedRowIndices = renderedLockedRows;\r\n        rowsToRender = unlockedRows.concat(nonRenderedLockedRows);\r\n      }\r\n      const stepThroughRendering = () => {\r\n        const ROWS_PER_FRAME = 2;\r\n        for (let i = 0; i < ROWS_PER_FRAME; i++) {\r\n          if (rowsToRender.length === 0) {\r\n            return;\r\n          }\r\n          this.renderedRowIndices.push(rowsToRender.shift());\r\n        }\r\n        this.renderAnimationId = requestAnimationFrame(stepThroughRendering);\r\n      };\r\n      stepThroughRendering();\r\n    },\r\n    isRendered(row) {\r\n      return this.renderedRowIndices.includes(row);\r\n    },\r\n    isObscured(row) {\r\n      return this.isDoomed ? false : row === 17;\r\n    },\r\n    timeDisplay,\r\n    timeDisplayNoDecimals,\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-achievements-tab\">\r\n    <div class=\"c-subtab-option-container\">\r\n      <PrimaryToggleButton\r\n        v-model=\"hideCompletedRows\"\r\n        class=\"o-primary-btn--subtab-option\"\r\n        label=\"Hide completed rows:\"\r\n      />\r\n      <PrimaryToggleButton\r\n        v-if=\"showAutoAchieve\"\r\n        v-model=\"isAutoAchieveActive\"\r\n        class=\"o-primary-btn--subtab-option\"\r\n        label=\"Auto Achievements:\"\r\n      />\r\n    </div>\r\n    <div class=\"c-achievements-tab__header c-achievements-tab__header--multipliers\">\r\n      <span v-if=\"isDoomed\">\r\n        All Achievement multipliers have been disabled<SwapAchievementImagesButton />\r\n      </span>\r\n      <span v-else>\r\n        Achievements provide a multiplier to<SwapAchievementImagesButton />\r\n        <div v-html=\"boostText\" />\r\n      </span>\r\n    </div>\r\n    <div class=\"c-achievements-tab__header\">\r\n      Achievements with a <i class=\"fas fa-star\" /> icon also give an additional reward.\r\n    </div>\r\n    <div\r\n      v-if=\"showAutoAchieve\"\r\n      class=\"c-achievements-tab__header\"\r\n    >\r\n      <div v-if=\"achCountdown > 0\">\r\n        Automatically gain the next missing Achievement in\r\n        {{ timeDisplayNoDecimals(achCountdown) }}<span v-if=\"!isAutoAchieveActive\"> once Auto is turned on</span>.\r\n        (left-to-right, top-to-bottom)\r\n      </div>\r\n      <div v-else-if=\"missingAchievements !== 0\">\r\n        Automatically gain the next missing Achievement as soon as you enable Auto Achievements.\r\n        (left-to-right, top-to-bottom)\r\n      </div>\r\n      <div v-if=\"totalCountdown > 0\">\r\n        You will regain all remaining achievements after {{ timeDisplayNoDecimals(totalCountdown) }} if Auto\r\n        Achievement <span v-if=\"isAutoAchieveActive\">stays enabled</span><span v-else>is turned on</span>.\r\n      </div>\r\n      <br>\r\n    </div>\r\n    <div class=\"l-achievement-grid\">\r\n      <NormalAchievementRow\r\n        v-for=\"(row, i) in renderedRows\"\r\n        :key=\"i\"\r\n        :row=\"row\"\r\n        :is-obscured=\"isObscured(i)\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n"]}]}