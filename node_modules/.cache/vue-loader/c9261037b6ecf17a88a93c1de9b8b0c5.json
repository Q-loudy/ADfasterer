{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\sidebar\\GlyphCleanButtonGroup.vue?vue&type=style&index=0&id=143ff634&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\sidebar\\GlyphCleanButtonGroup.vue","mtime":1745241597315},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmwtcmVqZWN0ZWQtdG9vbHRpcCB7DQogIHdpZHRoOiA5MCU7DQogIGxlZnQ6IDUlOw0KfQ0K"},{"version":3,"sources":["GlyphCleanButtonGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA","file":"GlyphCleanButtonGroup.vue","sourceRoot":"src/components/tabs/glyphs/sidebar","sourcesContent":["<script>\r\nexport default {\r\n  name: \"GlyphCleanButtonGroup\",\r\n  data() {\r\n    return {\r\n      glyphSacrificeUnlocked: false,\r\n      hasPerkShop: false,\r\n      hasFilter: false,\r\n      inventory: [],\r\n      isRefining: false,\r\n      removeCount: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    removeString() {\r\n      if (this.isRefining) return \"Refine\";\r\n      if (this.glyphSacrificeUnlocked) return \"Sacrifice\";\r\n      return \"Delete\";\r\n    },\r\n    autoCleanTooltip() {\r\n      return `${this.removeString} Glyphs that are worse in every way than\r\n        enough other Glyphs${this.hasPerkShop ? \" (ignores Music Glyphs)\" : \"\"}`;\r\n    },\r\n    harshAutoCleanTooltip() {\r\n      return `${this.removeString} Glyphs that are worse in every way than\r\n        ANY other Glyph${this.hasPerkShop ? \" (includes Music Glyphs)\" : \"\"}`;\r\n    },\r\n    deleteRejectedTooltip() {\r\n      const negativeWarning = AutoGlyphProcessor.hasNegativeEffectScore()\r\n        ? \" You also have some negative Effect Filter scores; this may remove some Glyphs you normally want to keep!\"\r\n        : \"\";\r\n      return this.removeCount === 0\r\n        ? `This will not remove any Glyphs, adjust your Filter settings to remove some.`\r\n        : `This will remove ${quantifyInt(\"Glyph\", this.removeCount)}!${negativeWarning}`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.glyphSacrificeUnlocked = GlyphSacrificeHandler.canSacrifice && !Pelle.isDoomed;\r\n      this.hasPerkShop = TeresaUnlocks.shop.canBeApplied;\r\n      this.hasFilter = EffarigUnlock.glyphFilter.isUnlocked;\r\n      this.inventory = Glyphs.inventory.map(GlyphGenerator.copy);\r\n      this.isRefining = AutoGlyphProcessor.sacMode === AUTO_GLYPH_REJECT.REFINE ||\r\n        AutoGlyphProcessor.sacMode === AUTO_GLYPH_REJECT.REFINE_TO_CAP;\r\n      this.removeCount = this.inventory\r\n        .filter(g => g !== null && g.idx >= Glyphs.protectedSlots && !AutoGlyphProcessor.wouldKeep(g))\r\n        .length;\r\n    },\r\n    autoClean() {\r\n      if (player.options.confirmations.autoClean) {\r\n        Modal.glyphPurge.show({ harsh: false });\r\n      } else {\r\n        Glyphs.autoClean(5);\r\n      }\r\n    },\r\n    harshAutoClean() {\r\n      if (player.options.confirmations.autoClean) {\r\n        Modal.glyphPurge.show({ harsh: true });\r\n      } else {\r\n        Glyphs.autoClean(1);\r\n      }\r\n    },\r\n    deleteAllUnprotected() {\r\n      if (player.options.confirmations.sacrificeAll) {\r\n        Modal.deleteAllUnprotectedGlyphs.show();\r\n      } else {\r\n        Glyphs.autoClean(0);\r\n      }\r\n    },\r\n    deleteAllRejected() {\r\n      if (player.options.confirmations.sacrificeAll) {\r\n        Modal.deleteAllRejectedGlyphs.show();\r\n      } else {\r\n        Glyphs.deleteAllRejected(true);\r\n      }\r\n    },\r\n    slotClass(index) {\r\n      return index < Glyphs.protectedSlots ? \"c-glyph-inventory__protected-slot\" : \"c-glyph-inventory__slot\";\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-if=\"glyphSacrificeUnlocked\"\r\n    class=\"o-glyph-inventory-management-group\"\r\n  >\r\n    <div class=\"l-glyph-sacrifice-options__header\">\r\n      Remove weaker Glyphs:\r\n    </div>\r\n    <button\r\n      class=\"c-glyph-inventory-option\"\r\n      @click=\"autoClean\"\r\n    >\r\n      Purge Glyphs\r\n      <div class=\"c-glyph-inventory-option__tooltip\">\r\n        {{ autoCleanTooltip }}\r\n      </div>\r\n    </button>\r\n    <button\r\n      class=\"c-glyph-inventory-option\"\r\n      @click=\"harshAutoClean\"\r\n    >\r\n      Harsh Purge Glyphs\r\n      <div class=\"c-glyph-inventory-option__tooltip\">\r\n        {{ harshAutoCleanTooltip }}\r\n      </div>\r\n    </button>\r\n    <button\r\n      class=\"c-glyph-inventory-option\"\r\n      @click=\"deleteAllUnprotected\"\r\n    >\r\n      {{ removeString }} all unprotected Glyphs\r\n    </button>\r\n    <button\r\n      v-if=\"hasFilter\"\r\n      class=\"c-glyph-inventory-option\"\r\n      @click=\"deleteAllRejected\"\r\n    >\r\n      {{ removeString }} all Glyphs rejected by filtering\r\n      <div\r\n        class=\"c-glyph-inventory-option__tooltip l-rejected-tooltip\"\r\n      >\r\n        {{ deleteRejectedTooltip }}\r\n      </div>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-rejected-tooltip {\r\n  width: 90%;\r\n  left: 5%;\r\n}\r\n</style>\r\n"]}]}