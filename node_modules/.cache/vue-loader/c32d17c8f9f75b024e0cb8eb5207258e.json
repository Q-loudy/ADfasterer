{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\modals\\ImportFilterSingleType.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\modals\\ImportFilterSingleType.vue","mtime":1745241596821},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJJbXBvcnRGaWx0ZXJTaW5nbGVUeXBlIiwNCiAgcHJvcHM6IHsNCiAgICB0eXBlOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICByZXF1aXJlZDogdHJ1ZSwNCiAgICB9LA0KICAgIGN1cnJTZXR0aW5nczogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgcmVxdWlyZWQ6IHRydWUsDQogICAgfSwNCiAgICBuZXdTZXR0aW5nczogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgcmVxdWlyZWQ6IHRydWUsDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIHNldHRpbmdzQ2hhbmdlZCgpIHsNCiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLmN1cnJTZXR0aW5ncykgIT09IEpTT04uc3RyaW5naWZ5KHRoaXMubmV3U2V0dGluZ3MpOw0KICAgIH0sDQogICAgc3ltYm9sKCkgew0KICAgICAgcmV0dXJuIEdMWVBIX1NZTUJPTFNbdGhpcy50eXBlXTsNCiAgICB9LA0KICAgIGNhcGl0YWxpemVkKCkgew0KICAgICAgcmV0dXJuIGAke3RoaXMudHlwZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKX0ke3RoaXMudHlwZS5zdWJzdHJpbmcoMSl9YDsNCiAgICB9LA0KICAgIHJhcml0eVN0cigpIHsNCiAgICAgIHJldHVybiB0aGlzLmNoYW5nZWRWYWx1ZSh0aGlzLmN1cnJTZXR0aW5ncy5yYXJpdHksIHRoaXMubmV3U2V0dGluZ3MucmFyaXR5LCB4ID0+IGZvcm1hdFBlcmNlbnRzKHggLyAxMDApKTsNCiAgICB9LA0KICAgIGVmZmVjdFN0cigpIHsNCiAgICAgIHJldHVybiB0aGlzLmNoYW5nZWRWYWx1ZSh0aGlzLmN1cnJTZXR0aW5ncy5lZmZlY3RDb3VudCwgdGhpcy5uZXdTZXR0aW5ncy5lZmZlY3RDb3VudCwgZm9ybWF0SW50KTsNCiAgICB9LA0KICAgIHNjb3JlU3RyKCkgew0KICAgICAgcmV0dXJuIHRoaXMuY2hhbmdlZFZhbHVlKHRoaXMuY3VyclNldHRpbmdzLnNjb3JlLCB0aGlzLm5ld1NldHRpbmdzLnNjb3JlLCBmb3JtYXRJbnQpOw0KICAgIH0sDQogICAgZWZmZWN0RGF0YSgpIHsNCiAgICAgIGNvbnN0IGNoYW5nZXMgPSBbXTsNCiAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLmN1cnJTZXR0aW5ncy5lZmZlY3RTY29yZXMubGVuZ3RoOyBpbmRleCsrKSB7DQogICAgICAgIGNvbnN0IGJpdG1hc2tJbmRleCA9IEF1dG9HbHlwaFByb2Nlc3Nvci5iaXRtYXNrSW5kZXhPZmZzZXQodGhpcy50eXBlKSArIGluZGV4Ow0KICAgICAgICBjaGFuZ2VzLnB1c2goew0KICAgICAgICAgIGJpdG1hc2tJbmRleCwNCiAgICAgICAgICBvbGRSZXE6ICh0aGlzLmN1cnJTZXR0aW5ncy5zcGVjaWZpZWRNYXNrICYgKDEgPDwgYml0bWFza0luZGV4KSkgIT09IDAsDQogICAgICAgICAgbmV3UmVxOiAodGhpcy5uZXdTZXR0aW5ncy5zcGVjaWZpZWRNYXNrICYgKDEgPDwgYml0bWFza0luZGV4KSkgIT09IDAsDQogICAgICAgICAgb2xkU2NvcmU6IHRoaXMuY3VyclNldHRpbmdzLmVmZmVjdFNjb3Jlc1tpbmRleF0sDQogICAgICAgICAgbmV3U2NvcmU6IHRoaXMubmV3U2V0dGluZ3MuZWZmZWN0U2NvcmVzW2luZGV4XSwNCiAgICAgICAgfSk7DQogICAgICB9DQogICAgICByZXR1cm4gY2hhbmdlczsNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBjaGFuZ2VkVmFsdWUob2xkVmFsLCBuZXdWYWwsIGFwcGx5Rm4pIHsNCiAgICAgIGlmIChvbGRWYWwgPT09IG5ld1ZhbCkgcmV0dXJuIGFwcGx5Rm4ob2xkVmFsKTsNCiAgICAgIHJldHVybiBgJHthcHBseUZuKG9sZFZhbCl94p6cJHthcHBseUZuKG5ld1ZhbCl9YDsNCiAgICB9LA0KICAgIGVmZmVjdFNjb3JlU3RyKGVmZmVjdEVudHJ5KSB7DQogICAgICBjb25zdCBmdWxsU3RyID0gKGlzU2VsZWN0ZWQsIHZhbHVlKSA9PiB7DQogICAgICAgIGNvbnN0IGNoZWNrID0gaXNTZWxlY3RlZCA/ICLinJQiIDogIuKcmCI7DQogICAgICAgIHJldHVybiBgJHtjaGVja30ke2Zvcm1hdEludCh2YWx1ZSl9YDsNCiAgICAgIH07DQogICAgICBjb25zdCBvbGRTdHIgPSBmdWxsU3RyKGVmZmVjdEVudHJ5Lm9sZFJlcSwgZWZmZWN0RW50cnkub2xkU2NvcmUpOw0KICAgICAgY29uc3QgbmV3U3RyID0gZnVsbFN0cihlZmZlY3RFbnRyeS5uZXdSZXEsIGVmZmVjdEVudHJ5Lm5ld1Njb3JlKTsNCg0KICAgICAgaWYgKGVmZmVjdEVudHJ5Lm9sZFNjb3JlID09PSBlZmZlY3RFbnRyeS5uZXdTY29yZSkgcmV0dXJuIG9sZFN0cjsNCiAgICAgIHJldHVybiBgJHtvbGRTdHJ94p6cJHtuZXdTdHJ9YDsNCiAgICB9LA0KICAgIHRvcExldmVsQ2xhc3NPYmplY3Qoa2V5KSB7DQogICAgICByZXR1cm4gew0KICAgICAgICAiby1jZWxsIjogdHJ1ZSwNCiAgICAgICAgIm8tY2VsbC0tY2hhbmdlZCI6IHRoaXMuY3VyclNldHRpbmdzW2tleV0gIT09IHRoaXMubmV3U2V0dGluZ3Nba2V5XSwNCiAgICAgIH07DQogICAgfSwNCiAgICBlZmZlY3RDbGFzc09iamVjdChlZmZlY3RFbnRyeSkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgIm8tY2VsbCI6IHRydWUsDQogICAgICAgICJvLWNlbGwtLWNoYW5nZWQiOiBlZmZlY3RFbnRyeS5vbGRSZXEgIT09IGVmZmVjdEVudHJ5Lm5ld1JlcSB8fCBlZmZlY3RFbnRyeS5vbGRTY29yZSAhPT0gZWZmZWN0RW50cnkubmV3U2NvcmUsDQogICAgICB9Ow0KICAgIH0sDQogICAgZ2V0RWZmZWN0RGVzYyhlZmZlY3RFbnRyeSkgew0KICAgICAgcmV0dXJuIEdseXBoRWZmZWN0cy5hbGwuZmluZChlID0+IGUuYml0bWFza0luZGV4ID09PSBlZmZlY3RFbnRyeS5iaXRtYXNrSW5kZXggJiYgZS5pc0dlbmVyYXRlZCkuZ2VuZXJpY0Rlc2M7DQogICAgfQ0KICB9LA0KfTsNCg=="},{"version":3,"sources":["ImportFilterSingleType.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImportFilterSingleType.vue","sourceRoot":"src/components/modals","sourcesContent":["<script>\r\nexport default {\r\n  name: \"ImportFilterSingleType\",\r\n  props: {\r\n    type: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    currSettings: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    newSettings: {\r\n      type: Object,\r\n      required: true,\r\n    }\r\n  },\r\n  computed: {\r\n    settingsChanged() {\r\n      return JSON.stringify(this.currSettings) !== JSON.stringify(this.newSettings);\r\n    },\r\n    symbol() {\r\n      return GLYPH_SYMBOLS[this.type];\r\n    },\r\n    capitalized() {\r\n      return `${this.type.charAt(0).toUpperCase()}${this.type.substring(1)}`;\r\n    },\r\n    rarityStr() {\r\n      return this.changedValue(this.currSettings.rarity, this.newSettings.rarity, x => formatPercents(x / 100));\r\n    },\r\n    effectStr() {\r\n      return this.changedValue(this.currSettings.effectCount, this.newSettings.effectCount, formatInt);\r\n    },\r\n    scoreStr() {\r\n      return this.changedValue(this.currSettings.score, this.newSettings.score, formatInt);\r\n    },\r\n    effectData() {\r\n      const changes = [];\r\n      for (let index = 0; index < this.currSettings.effectScores.length; index++) {\r\n        const bitmaskIndex = AutoGlyphProcessor.bitmaskIndexOffset(this.type) + index;\r\n        changes.push({\r\n          bitmaskIndex,\r\n          oldReq: (this.currSettings.specifiedMask & (1 << bitmaskIndex)) !== 0,\r\n          newReq: (this.newSettings.specifiedMask & (1 << bitmaskIndex)) !== 0,\r\n          oldScore: this.currSettings.effectScores[index],\r\n          newScore: this.newSettings.effectScores[index],\r\n        });\r\n      }\r\n      return changes;\r\n    }\r\n  },\r\n  methods: {\r\n    changedValue(oldVal, newVal, applyFn) {\r\n      if (oldVal === newVal) return applyFn(oldVal);\r\n      return `${applyFn(oldVal)}➜${applyFn(newVal)}`;\r\n    },\r\n    effectScoreStr(effectEntry) {\r\n      const fullStr = (isSelected, value) => {\r\n        const check = isSelected ? \"✔\" : \"✘\";\r\n        return `${check}${formatInt(value)}`;\r\n      };\r\n      const oldStr = fullStr(effectEntry.oldReq, effectEntry.oldScore);\r\n      const newStr = fullStr(effectEntry.newReq, effectEntry.newScore);\r\n\r\n      if (effectEntry.oldScore === effectEntry.newScore) return oldStr;\r\n      return `${oldStr}➜${newStr}`;\r\n    },\r\n    topLevelClassObject(key) {\r\n      return {\r\n        \"o-cell\": true,\r\n        \"o-cell--changed\": this.currSettings[key] !== this.newSettings[key],\r\n      };\r\n    },\r\n    effectClassObject(effectEntry) {\r\n      return {\r\n        \"o-cell\": true,\r\n        \"o-cell--changed\": effectEntry.oldReq !== effectEntry.newReq || effectEntry.oldScore !== effectEntry.newScore,\r\n      };\r\n    },\r\n    getEffectDesc(effectEntry) {\r\n      return GlyphEffects.all.find(e => e.bitmaskIndex === effectEntry.bitmaskIndex && e.isGenerated).genericDesc;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    {{ symbol }}:\r\n    <span v-if=\"settingsChanged\">\r\n      <span class=\"c-single-row\">\r\n        <span\r\n          class=\"c-rarity\"\r\n          :class=\"topLevelClassObject('rarity')\"\r\n          ach-tooltip=\"Setting for Rarity Threshold and Specified Effect\"\r\n        >\r\n          {{ rarityStr }}\r\n        </span>\r\n        <span\r\n          class=\"c-effects-count\"\r\n          :class=\"topLevelClassObject('effectCount')\"\r\n          ach-tooltip=\"Number of effects in Specified Effect\"\r\n        >\r\n          Minimum Effects: {{ effectStr }}\r\n        </span>\r\n        <span\r\n          class=\"c-target-score\"\r\n          :class=\"topLevelClassObject('score')\"\r\n          ach-tooltip=\"Threshold for Effect Score\"\r\n        >\r\n          Score: {{ scoreStr }}\r\n        </span>\r\n      </span>\r\n      <br>\r\n      <span class=\"c-single-row\">\r\n        <span\r\n          v-for=\"effect in effectData.slice(0, 4)\"\r\n          :key=\"effect.bitmaskIndex\"\r\n          class=\"c-single-score\"\r\n          :class=\"effectClassObject(effect)\"\r\n          :ach-tooltip=\"getEffectDesc(effect)\"\r\n        >\r\n          {{ effectScoreStr(effect) }}\r\n        </span>\r\n      </span>\r\n      <span\r\n        v-if=\"effectData.length > 4\"\r\n        class=\"c-single-row c-second-row\"\r\n      >\r\n        <br>\r\n        <span\r\n          v-for=\"effect in effectData.slice(4)\"\r\n          :key=\"effect.bitmaskIndex\"\r\n          class=\"c-single-score o-cell\"\r\n          :class=\"effectClassObject(effect)\"\r\n          :ach-tooltip=\"getEffectDesc(effect)\"\r\n        >\r\n          {{ effectScoreStr(effect) }}\r\n        </span>\r\n      </span>\r\n    </span>\r\n    <span v-else>\r\n      (No changes)\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-single-row {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: -2.15rem 0 0 3rem;\r\n}\r\n\r\n.c-second-row {\r\n  margin: 0 0 0 -9rem;\r\n}\r\n\r\n.o-cell {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: var(--var-border-width, 0.2rem) solid;\r\n  padding: 0.1rem;\r\n}\r\n\r\n.o-cell--changed {\r\n  background-color: var(--color-accent);\r\n}\r\n\r\n.c-rarity {\r\n  width: 10rem;\r\n}\r\n\r\n.c-effects-count {\r\n  width: 20rem;\r\n}\r\n\r\n.c-target-score {\r\n  width: 18rem;\r\n}\r\n\r\n.c-single-score {\r\n  width: 12rem;\r\n}\r\n</style>\r\n"]}]}