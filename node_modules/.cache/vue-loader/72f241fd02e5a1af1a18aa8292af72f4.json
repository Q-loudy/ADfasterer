{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\imaginary-upgrades\\ImaginaryUpgradesTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\imaginary-upgrades\\ImaginaryUpgradesTab.vue","mtime":1745241597365},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgSW1hZ2luYXJ5VXBncmFkZUJ1dHRvbiBmcm9tICIuL0ltYWdpbmFyeVVwZ3JhZGVCdXR0b24iOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJJbWFnaW5hcnlVcGdyYWRlc1RhYiIsDQogIGNvbXBvbmVudHM6IHsNCiAgICBJbWFnaW5hcnlVcGdyYWRlQnV0dG9uDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGJhc2VSTUNhcDogbmV3IERlY2ltYWwoKSwNCiAgICAgIGNhcFJNOiBuZXcgRGVjaW1hbCgpLA0KICAgICAgc2NhbGVUaW1lOiAwLA0KICAgICAgY2FwU3RyOiAiIiwNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIHVwZ3JhZGVzOiAoKSA9PiBJbWFnaW5hcnlVcGdyYWRlcy5hbGwsDQogICAgbG9ja1Rvb2x0aXA6ICgpID0+IGBSZXF1aXJlbWVudCBsb2NrcyBvbmx5IHByZXZlbnQgbWFudWFsIGFuZCBhdXRvbWF0ZWQgYWN0aW9ucy4gQW55IHJlbGF0ZWQgdXBncmFkZXMNCiAgICAgIHdpbGwgbm90IGJlIGRpc2FibGVkIGFuZCBtYXkgc3RpbGwgY2F1c2UgcmVxdWlyZW1lbnRzIHRvIGJlIGZhaWxlZC5gLA0KICB9LA0KICBtZXRob2RzOiB7DQogICAgdXBkYXRlKCkgew0KICAgICAgdGhpcy5iYXNlUk1DYXAuY29weUZyb20oTWFjaGluZUhhbmRsZXIuYmFzZVJNQ2FwKTsNCiAgICAgIHRoaXMuY2FwUk0uY29weUZyb20oTWFjaGluZUhhbmRsZXIuaGFyZGNhcFJNKTsNCiAgICAgIHRoaXMuc2NhbGVUaW1lID0gTWFjaGluZUhhbmRsZXIuc2NhbGVUaW1lRm9ySU07DQogICAgICB0aGlzLmNhcFN0ciA9IGZvcm1hdE1hY2hpbmVzKE1hY2hpbmVIYW5kbGVyLmhhcmRjYXBSTSwgTWFjaGluZUhhbmRsZXIuY3VycmVudElNQ2FwKTsNCiAgICB9LA0KICAgIGlkKHJvdywgY29sdW1uKSB7DQogICAgICByZXR1cm4gKHJvdyAtIDEpICogNSArIGNvbHVtbiAtIDE7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["ImaginaryUpgradesTab.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImaginaryUpgradesTab.vue","sourceRoot":"src/components/tabs/imaginary-upgrades","sourcesContent":["<script>\r\nimport ImaginaryUpgradeButton from \"./ImaginaryUpgradeButton\";\r\n\r\nexport default {\r\n  name: \"ImaginaryUpgradesTab\",\r\n  components: {\r\n    ImaginaryUpgradeButton\r\n  },\r\n  data() {\r\n    return {\r\n      baseRMCap: new Decimal(),\r\n      capRM: new Decimal(),\r\n      scaleTime: 0,\r\n      capStr: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    upgrades: () => ImaginaryUpgrades.all,\r\n    lockTooltip: () => `Requirement locks only prevent manual and automated actions. Any related upgrades\r\n      will not be disabled and may still cause requirements to be failed.`,\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.baseRMCap.copyFrom(MachineHandler.baseRMCap);\r\n      this.capRM.copyFrom(MachineHandler.hardcapRM);\r\n      this.scaleTime = MachineHandler.scaleTimeForIM;\r\n      this.capStr = formatMachines(MachineHandler.hardcapRM, MachineHandler.currentIMCap);\r\n    },\r\n    id(row, column) {\r\n      return (row - 1) * 5 + column - 1;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-reality-upgrade-grid\">\r\n    <div class=\"c-cap-text\">\r\n      Your Machine cap is <span class=\"c-reality-tab__reality-machines\">{{ capStr }}</span>.\r\n    </div>\r\n    <div class=\"c-info-text\">\r\n      You have reached the limits of Reality and cannot hold more than {{ format(capRM) }} Reality Machines.\r\n      <br>\r\n      Machines gained in excess of {{ format(baseRMCap) }} will raise the maximum amount of Imaginary Machines\r\n      you can have.\r\n      <br>\r\n      Imaginary Machines are gained passively over time up to the cap, but gain slows down exponentially\r\n      as you approach the cap.\r\n      <br>\r\n      Every {{ formatInt(scaleTime) }} seconds the difference in iM between your current amount and the cap\r\n      will be cut in half.\r\n      <br>\r\n      <br>\r\n      The first two rows of upgrades can be purchased endlessly and the rest of the upgrades are one-time upgrades\r\n      with requirements.\r\n      <br>\r\n      Upgrades here have the same gameplay and visual behavior as Reality Upgrades, but cost Imaginary Machines instead.\r\n      <span :ach-tooltip=\"lockTooltip\">\r\n        <i class=\"fas fa-question-circle\" />\r\n      </span>\r\n    </div>\r\n    <div\r\n      v-for=\"row in 5\"\r\n      :key=\"row\"\r\n      class=\"l-reality-upgrade-grid__row\"\r\n    >\r\n      <ImaginaryUpgradeButton\r\n        v-for=\"column in 5\"\r\n        :key=\"id(row, column)\"\r\n        :upgrade=\"upgrades[id(row, column)]\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-cap-text {\r\n  color: var(--color-text);\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.c-info-text {\r\n  color: var(--color-text);\r\n  margin: 1.5rem;\r\n}\r\n</style>\r\n"]}]}