{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\time-dilation\\TimeDilationTab.vue?vue&type=style&index=0&id=1003a5b8&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\time-dilation\\TimeDilationTab.vue","mtime":1745241597457},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm1heC1hY2NlbnQgew0KICBjb2xvcjogdmFyKC0tY29sb3ItZGlsYXRpb24pOw0KICBmb250LXNpemU6IDEuNXJlbTsNCiAgdGV4dC1zaGFkb3c6IDAgMCAwLjJyZW0gdmFyKC0tY29sb3ItcmVhbGl0eS1kYXJrKTsNCiAgY3Vyc29yOiBkZWZhdWx0Ow0KfQ0KDQoubC1kaWxhdGlvbi11cGdyYWRlcy1ncmlkIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCn0NCg0KLmwtZGlsYXRpb24tdXBncmFkZXMtZ3JpZF9fcm93IHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IHJvdzsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQoNCi5sLWRpbGF0aW9uLXVwZ3JhZGVzLWdyaWRfX2NlbGwgew0KICBtYXJnaW46IDEuMnJlbSAxLjVyZW07DQp9DQo="},{"version":3,"sources":["TimeDilationTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"TimeDilationTab.vue","sourceRoot":"src/components/tabs/time-dilation","sourcesContent":["<script>\r\nimport DilationButton from \"./DilationButton\";\r\nimport DilationUpgradeButton from \"./DilationUpgradeButton\";\r\n\r\nexport default {\r\n  name: \"TimeDilationTab\",\r\n  components: {\r\n    DilationButton,\r\n    DilationUpgradeButton\r\n  },\r\n  data() {\r\n    return {\r\n      tachyons: new Decimal(),\r\n      dilatedTime: new Decimal(),\r\n      dilatedTimeIncome: new Decimal(),\r\n      galaxyThreshold: new Decimal(),\r\n      baseGalaxies: 0,\r\n      totalGalaxies: 0,\r\n      tachyonGalaxyGain: 1,\r\n      hasPelleDilationUpgrades: false,\r\n      galaxyTimeEstimate: \"\",\r\n      maxDT: new Decimal(),\r\n      toMaxTooltip: \"\",\r\n      isHovering: false,\r\n    };\r\n  },\r\n  computed: {\r\n    rebuyables() {\r\n      return [\r\n        DilationUpgrade.dtGain,\r\n        DilationUpgrade.galaxyThreshold,\r\n        DilationUpgrade.tachyonGain\r\n      ];\r\n    },\r\n    upgrades() {\r\n      return [\r\n        [\r\n          DilationUpgrade.doubleGalaxies,\r\n          DilationUpgrade.tdMultReplicanti,\r\n          DilationUpgrade.ndMultDT\r\n        ],\r\n        [\r\n          DilationUpgrade.ipMultDT,\r\n          DilationUpgrade.timeStudySplit,\r\n          DilationUpgrade.dilationPenalty\r\n        ],\r\n      ];\r\n    },\r\n    // This might be negative due to rift drain, so we need to add \"+\" iff the value is positive. The actual\r\n    // addition of a negative sign (or not) is assumed to be handled in a notation-specific way\r\n    dilatedTimeGainText() {\r\n      const sign = this.dilatedTimeIncome.gte(0) ? \"+\" : \"\";\r\n      return `${sign}${format(this.dilatedTimeIncome, 2, 1)}`;\r\n    },\r\n    pelleRebuyables() {\r\n      return [\r\n        DilationUpgrade.dtGainPelle,\r\n        DilationUpgrade.galaxyMultiplier,\r\n        DilationUpgrade.tickspeedPower\r\n      ];\r\n    },\r\n    pelleUpgrades() {\r\n      return [\r\n        DilationUpgrade.galaxyThresholdPelle,\r\n        DilationUpgrade.flatDilationMult\r\n      ];\r\n    },\r\n    ttGenerator() {\r\n      return DilationUpgrade.ttGenerator;\r\n    },\r\n    baseGalaxyText() {\r\n      return `${formatInt(this.baseGalaxies)} Base`;\r\n    },\r\n    hasMaxText: () => PlayerProgress.realityUnlocked() && !Pelle.isDoomed,\r\n    allRebuyables() {\r\n      const upgradeRows = [];\r\n      upgradeRows.push(this.rebuyables);\r\n      if (this.hasPelleDilationUpgrades) upgradeRows.push(this.pelleRebuyables);\r\n      return upgradeRows;\r\n    },\r\n    allSingleUpgrades() {\r\n      const upgradeRows = [];\r\n      upgradeRows.push(...this.upgrades);\r\n      if (this.hasPelleDilationUpgrades) upgradeRows.push(this.pelleUpgrades);\r\n      upgradeRows.push([this.ttGenerator]);\r\n      return upgradeRows;\r\n    },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.tachyons.copyFrom(Currency.tachyonParticles);\r\n      this.dilatedTime.copyFrom(Currency.dilatedTime);\r\n      const rawDTGain = getDilationGainPerSecond().times(getGameSpeedupForDisplay());\r\n      this.galaxyTimeEstimate = getDilationTimeEstimate(this.galaxyThreshold);\r\n      if (PelleRifts.paradox.isActive) {\r\n        // The number can be small and either positive or negative with the rift active, which means that extra care\r\n        // needs to be taken to get the calculation as close to correct as possible. This relies on some details\r\n        // related to tick microstructure to make things accurate, and it seems to be to roughly 1 part in 5e6\r\n        const tickProp = player.options.updateRate / 1000;\r\n        const drainFactorPerTick = 1 - (1 - Pelle.riftDrainPercent) ** tickProp;\r\n        const drainPerSecond = this.dilatedTime.add(rawDTGain.times(tickProp)).times(drainFactorPerTick / tickProp);\r\n        this.dilatedTimeIncome = rawDTGain.minus(drainPerSecond);\r\n      } else {\r\n        this.dilatedTimeIncome = rawDTGain;\r\n      }\r\n      this.galaxyThreshold.copyFrom(player.dilation.nextThreshold);\r\n      this.baseGalaxies = player.dilation.baseTachyonGalaxies;\r\n      this.totalGalaxies = player.dilation.totalTachyonGalaxies;\r\n      this.hasPelleDilationUpgrades = PelleRifts.paradox.milestones[0].canBeApplied;\r\n      if (this.baseGalaxies < 500 && DilationUpgrade.doubleGalaxies.isBought) {\r\n        this.tachyonGalaxyGain = DilationUpgrade.doubleGalaxies.effectValue;\r\n      } else {\r\n        this.tachyonGalaxyGain = 1;\r\n      }\r\n      this.tachyonGalaxyGain *= DilationUpgrade.galaxyMultiplier.effectValue;\r\n      this.maxDT.copyFrom(player.records.thisReality.maxDT);\r\n\r\n      const estimateText = getDilationTimeEstimate(this.maxDT);\r\n      if (this.dilatedTimeIncome.lte(0)) this.toMaxTooltip = \"No DT gain\";\r\n      else this.toMaxTooltip = estimateText.startsWith(\"<\") ? \"Currently Increasing\" : estimateText;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-dilation-tab\">\r\n    <span>\r\n      You have\r\n      <span class=\"c-dilation-tab__tachyons\">{{ format(tachyons, 2, 1) }}</span>\r\n      {{ pluralize(\"Tachyon Particle\", tachyons) }}.\r\n    </span>\r\n    <div\r\n      @mouseover=\"isHovering = true\"\r\n      @mouseleave=\"isHovering = false\"\r\n    >\r\n      <DilationButton />\r\n    </div>\r\n    <span>\r\n      You have\r\n      <span class=\"c-dilation-tab__dilated-time\">{{ format(dilatedTime, 2, 1) }}</span>\r\n      Dilated Time.\r\n      <span class=\"c-dilation-tab__dilated-time-income\">{{ dilatedTimeGainText }}/s</span>\r\n    </span>\r\n    <span>\r\n      Next\r\n      <span v-if=\"tachyonGalaxyGain > 1\">{{ formatInt(tachyonGalaxyGain) }}</span>\r\n      {{ pluralize(\"Tachyon Galaxy\", tachyonGalaxyGain) }} at\r\n      <span\r\n        class=\"c-dilation-tab__galaxy-threshold\"\r\n        :ach-tooltip=\"galaxyTimeEstimate\"\r\n      >{{ format(galaxyThreshold, 2, 1) }}</span>\r\n      Dilated Time, gained total of\r\n      <span\r\n        class=\"c-dilation-tab__galaxies\"\r\n        :ach-tooltip=\"baseGalaxyText\"\r\n      >{{ formatInt(totalGalaxies) }}</span>\r\n      {{ pluralize(\"Tachyon Galaxy\", totalGalaxies) }}\r\n    </span>\r\n    <span v-if=\"hasMaxText\">\r\n      Your maximum Dilated Time reached this Reality is\r\n      <span\r\n        v-tooltip=\"toMaxTooltip\"\r\n        class=\"max-accent\"\r\n      >{{ format(maxDT, 2, 1) }}</span>.\r\n    </span>\r\n    <div class=\"l-dilation-upgrades-grid\">\r\n      <div\r\n        v-for=\"(upgradeRow, row) in allRebuyables\"\r\n        :key=\"'rebuyable' + row\"\r\n        class=\"l-dilation-upgrades-grid__row\"\r\n      >\r\n        <DilationUpgradeButton\r\n          v-for=\"upgrade in upgradeRow\"\r\n          :key=\"upgrade.id\"\r\n          :upgrade=\"upgrade\"\r\n          :is-rebuyable=\"true\"\r\n          class=\"l-dilation-upgrades-grid__cell\"\r\n          :show-tooltip=\"isHovering\"\r\n        />\r\n      </div>\r\n      <div\r\n        v-for=\"(upgradeRow, row) in allSingleUpgrades\"\r\n        :key=\"'single' + row\"\r\n        class=\"l-dilation-upgrades-grid__row\"\r\n      >\r\n        <DilationUpgradeButton\r\n          v-for=\"upgrade in upgradeRow\"\r\n          :key=\"upgrade.id\"\r\n          :upgrade=\"upgrade\"\r\n          :is-rebuyable=\"false\"\r\n          class=\"l-dilation-upgrades-grid__cell\"\r\n          :show-tooltip=\"isHovering\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.max-accent {\r\n  color: var(--color-dilation);\r\n  font-size: 1.5rem;\r\n  text-shadow: 0 0 0.2rem var(--color-reality-dark);\r\n  cursor: default;\r\n}\r\n\r\n.l-dilation-upgrades-grid {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.l-dilation-upgrades-grid__row {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n}\r\n\r\n.l-dilation-upgrades-grid__cell {\r\n  margin: 1.2rem 1.5rem;\r\n}\r\n</style>\r\n"]}]}