{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\modals\\prestige\\ResetRealityModal.vue?vue&type=style&index=0&id=57c583ae&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\modals\\prestige\\ResetRealityModal.vue","mtime":1745241597007},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYy1oYXMtcmV3YXJkcyB7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KICBmb250LXNpemU6IDEuNXJlbTsNCiAgY29sb3I6IHZhcigtLWNvbG9yLWJhZCk7DQp9DQo="},{"version":3,"sources":["ResetRealityModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA","file":"ResetRealityModal.vue","sourceRoot":"src/components/modals/prestige","sourcesContent":["<script>\r\nimport ModalWrapperChoice from \"@/components/modals/ModalWrapperChoice\";\r\n\r\nexport default {\r\n  name: \"ResetRealityModal\",\r\n  components: {\r\n    ModalWrapperChoice\r\n  },\r\n  data() {\r\n    return {\r\n      isDoomed: false,\r\n      canReality: false,\r\n    };\r\n  },\r\n  computed: {\r\n    resetTerm() { return this.isDoomed ? \"Armageddon\" : \"Reality\"; },\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isDoomed = Pelle.isDoomed;\r\n      this.canReality = isRealityAvailable();\r\n    },\r\n    handleYesClick() {\r\n      beginProcessReality(getRealityProps(true));\r\n      EventHub.ui.offAll(this);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <ModalWrapperChoice\r\n    option=\"resetReality\"\r\n    @confirm=\"handleYesClick\"\r\n  >\r\n    <template #header>\r\n      You are about to reset your {{ resetTerm }}\r\n    </template>\r\n    <div class=\"c-modal-message__text\">\r\n      This will reset you to the start of your {{ resetTerm }},\r\n      giving you no rewards from your progress in your current {{ resetTerm }}.\r\n      <br>\r\n      <br>\r\n      Are you sure you want to do this?\r\n      <div\r\n        v-if=\"canReality\"\r\n        class=\"c-has-rewards\"\r\n      >\r\n        <br>\r\n        You can currently complete a Reality for all its normal rewards, which you will not receive if you\r\n        Reset here. To get rewards, use the \"Make a new Reality\" button.\r\n      </div>\r\n      <br>\r\n    </div>\r\n    <template #confirm-text>\r\n      Reset\r\n    </template>\r\n  </ModalWrapperChoice>\r\n</template>\r\n\r\n<style scoped>\r\n.c-has-rewards {\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n  color: var(--color-bad);\r\n}\r\n</style>\r\n"]}]}