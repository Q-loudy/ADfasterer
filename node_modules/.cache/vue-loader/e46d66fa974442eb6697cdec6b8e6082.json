{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\antimatter-dimensions\\ClassicAntimatterDimensionsTab.vue?vue&type=style&index=0&id=78d3b5bc&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\antimatter-dimensions\\ClassicAntimatterDimensionsTab.vue","mtime":1745241597020},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmwtZmxleCB7DQogIGZsZXg6IDEgMDsNCn0NCg=="},{"version":3,"sources":["ClassicAntimatterDimensionsTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA","file":"ClassicAntimatterDimensionsTab.vue","sourceRoot":"src/components/tabs/antimatter-dimensions","sourcesContent":["<script>\r\nimport AntimatterDimensionProgressBar from \"./AntimatterDimensionProgressBar\";\r\nimport AntimatterDimensionRow from \"./ClassicAntimatterDimensionRow\";\r\nimport AntimatterDimensionsTabHeader from \"./ClassicAntimatterDimensionsTabHeader\";\r\nimport AntimatterGalaxyRow from \"./ClassicAntimatterGalaxyRow\";\r\nimport DimensionBoostRow from \"./ClassicDimensionBoostRow\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\nimport TickspeedRow from \"./TickspeedRow\";\r\n\r\nexport default {\r\n  name: \"ClassicAntimatterDimensionsTab\",\r\n  components: {\r\n    PrimaryButton,\r\n    AntimatterDimensionRow,\r\n    AntimatterDimensionsTabHeader,\r\n    AntimatterGalaxyRow,\r\n    DimensionBoostRow,\r\n    AntimatterDimensionProgressBar,\r\n    TickspeedRow,\r\n  },\r\n  data() {\r\n    return {\r\n      hasDimensionBoosts: false,\r\n      isQuickResetAvailable: false,\r\n      isSacrificeUnlocked: false,\r\n      buy10Mult: new Decimal(0),\r\n      currentSacrifice: new Decimal(0),\r\n      hasRealityButton: false,\r\n      multiplierText: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.hasDimensionBoosts = player.dimensionBoosts > 0;\r\n      this.isQuickResetAvailable = Player.isInAntimatterChallenge && Player.antimatterChallenge.isQuickResettable;\r\n      this.isSacrificeUnlocked = Sacrifice.isVisible;\r\n      this.buy10Mult.copyFrom(AntimatterDimensions.buyTenMultiplier);\r\n      this.currentSacrifice.copyFrom(Sacrifice.totalBoost);\r\n      this.hasRealityButton = PlayerProgress.realityUnlocked() || TimeStudy.reality.isBought;\r\n      const sacText = this.isSacrificeUnlocked\r\n        ? ` | Dimensional Sacrifice multiplier: ${formatX(this.currentSacrifice, 2, 2)}`\r\n        : \"\";\r\n      this.multiplierText = `Buy 10 Dimension purchase multiplier: ${formatX(this.buy10Mult, 2, 2)}${sacText}`;\r\n    },\r\n    quickReset() {\r\n      softReset(-1, true, true);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-old-ui-antimatter-dim-tab\">\r\n    <AntimatterDimensionsTabHeader />\r\n    {{ multiplierText }}\r\n    <TickspeedRow />\r\n    <div class=\"l-dimensions-container\">\r\n      <AntimatterDimensionRow\r\n        v-for=\"tier in 8\"\r\n        :key=\"tier\"\r\n        :tier=\"tier\"\r\n      />\r\n      <DimensionBoostRow />\r\n      <AntimatterGalaxyRow />\r\n    </div>\r\n    <PrimaryButton\r\n      v-if=\"isQuickResetAvailable\"\r\n      class=\"o-primary-btn--quick-reset\"\r\n      @click=\"quickReset\"\r\n    >\r\n      Perform a Dimension Boost reset\r\n      <span v-if=\"hasDimensionBoosts\"> but lose a Dimension Boost</span>\r\n      <span v-else> for no gain</span>\r\n    </PrimaryButton>\r\n    <div class=\"l-flex\" />\r\n    <AntimatterDimensionProgressBar class=\"l-antimatter-dim-tab__progress_bar\" />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.l-flex {\r\n  flex: 1 0;\r\n}\r\n</style>\r\n"]}]}