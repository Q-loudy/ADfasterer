{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\SingleGlyphCustomzationPanel.vue?vue&type=style&index=0&id=36d82b7b&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\glyphs\\SingleGlyphCustomzationPanel.vue","mtime":1745241597310},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmMtc2luZ2xlLWdseXBoLWNvc21ldGljIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICB3aWR0aDogY2FsYygxMDAlIC0gMXJlbSk7DQogIGhlaWdodDogOHJlbTsNCiAgZm9udC1zaXplOiAxLjJyZW07DQogIGJvcmRlcjogMC4xcmVtIHNvbGlkICNiOGI4Yjg7DQogIGJvcmRlci1yYWRpdXM6IHZhcigtLXZhci1ib3JkZXItcmFkaXVzLCAwLjVyZW0pOw0KICBwYWRkaW5nOiAwLjVyZW07DQogIG1hcmdpbi10b3A6IDFyZW07DQogIHVzZXItc2VsZWN0OiBub25lOw0KfQ0KDQouYy1nbHlwaC1pbmZvIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IHJvdzsNCn0NCg0KLmMtZ2x5cGgtaW5mby1zZWN0aW9uIHsNCiAgZGlzcGxheTogZmxleDsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0Ow0KICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICBtYXJnaW46IDFyZW07DQp9DQoNCi5jLWNvc21ldGljLXRleHQgew0KICB3aWR0aDogMThyZW07DQp9DQo="},{"version":3,"sources":["SingleGlyphCustomzationPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"SingleGlyphCustomzationPanel.vue","sourceRoot":"src/components/tabs/glyphs","sourcesContent":["<script>\r\nimport GlyphComponent from \"@/components/GlyphComponent\";\r\nimport PrimaryButton from \"@/components/PrimaryButton\";\r\n\r\nexport default {\r\n  name: \"SingleGlyphCustomzationPanel\",\r\n  components: {\r\n    GlyphComponent,\r\n    PrimaryButton\r\n  },\r\n  data() {\r\n    return {\r\n      glyphID: -1,\r\n      isVisible: true,\r\n    };\r\n  },\r\n  computed: {\r\n    glyph() {\r\n      if (this.glyphID === -1) return null;\r\n      const g = Glyphs.findById(this.glyphID);\r\n      return {\r\n        type: g.type,\r\n        level: g.level,\r\n        strength: g.strength,\r\n        effects: g.effects,\r\n        color: g.color,\r\n        symbol: g.symbol,\r\n        cosmetic: g.cosmetic,\r\n      };\r\n    },\r\n    typeCosmetic() {\r\n      const changes = [];\r\n      if (GlyphAppearanceHandler.symbolMap[this.glyph.type]) changes.push(\"Symbol\");\r\n      if (GlyphAppearanceHandler.colorMap[this.glyph.type]) changes.push(\"Color\");\r\n      if (changes.length === 0) return \"None\";\r\n      return changes.join(\"/\");\r\n    },\r\n    specialCosmetic() {\r\n      if (this.glyph.cosmetic) return this.glyph.cosmetic.capitalize();\r\n      const changes = [];\r\n      if (this.glyph.symbol) changes.push(\"Symbol\");\r\n      if (this.glyph.color) changes.push(\"Color\");\r\n      if (changes.length === 0) return \"None\";\r\n      return changes.join(\"/\");\r\n    }\r\n  },\r\n  created() {\r\n    // Whenever the inventory changes, this glyph might not exist afterwards\r\n    EventHub.logic.on(GAME_EVENT.GLYPHS_CHANGED, () => {\r\n      this.glyphID = -1;\r\n      this.$recompute(\"glyph\");\r\n    });\r\n    EventHub.logic.on(GAME_EVENT.GLYPH_VISUAL_CHANGE, () => {\r\n      this.$recompute(\"glyph\");\r\n    });\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.isVisible = player.reality.glyphs.cosmetics.active && (GlyphAppearanceHandler.availableTypes.length > 0 ||\r\n        CosmeticGlyphTypes.list.some(t => t.isCosmetic && t.isUnlocked()));\r\n    },\r\n    dragover(event) {\r\n      if (!event.dataTransfer.types.includes(GLYPH_MIME_TYPE)) return;\r\n      event.preventDefault();\r\n    },\r\n    drop(event) {\r\n      if (!event.dataTransfer.types.includes(GLYPH_MIME_TYPE)) return;\r\n      const id = parseInt(event.dataTransfer.getData(GLYPH_MIME_TYPE), 10);\r\n      if (isNaN(id)) return;\r\n      EventHub.dispatch(GAME_EVENT.GLYPH_VISUAL_CHANGE);\r\n      this.glyphID = id;\r\n      this.$recompute(\"glyph\");\r\n    },\r\n    openModal() {\r\n      Modal.singleGlyphAppearance.show({ glyphId: this.glyphID });\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-if=\"isVisible\"\r\n    class=\"c-single-glyph-cosmetic\"\r\n    @dragover=\"dragover\"\r\n    @drop=\"drop\"\r\n  >\r\n    <div\r\n      v-if=\"glyph\"\r\n      class=\"c-glyph-info\"\r\n    >\r\n      <div class=\"c-glyph-info-section\">\r\n        <GlyphComponent\r\n          :glyph=\"glyph\"\r\n          :flip-tooltip=\"true\"\r\n        />\r\n      </div>\r\n      <div class=\"c-glyph-info-section c-cosmetic-text\">\r\n        <u>Cosmetic Attributes</u>\r\n        Type: {{ glyph.type.capitalize() }}\r\n        <br>\r\n        All: {{ typeCosmetic }}\r\n        <br>\r\n        Single: {{ specialCosmetic }}\r\n      </div>\r\n      <div class=\"c-glyph-info-section\">\r\n        <PrimaryButton\r\n          class=\"o-primary-btn--subtab-option\"\r\n          @click=\"openModal\"\r\n        >\r\n          Customize!\r\n        </PrimaryButton>\r\n        <PrimaryButton\r\n          class=\"o-primary-btn--subtab-option\"\r\n          @click=\"glyphID = -1\"\r\n        >\r\n          Clear Box\r\n        </PrimaryButton>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      Drag a Glyph over this box to change its appearance! This will make a visual copy of it here,\r\n      but leave the actual Glyph itself in your inventory. Removing, gaining, or moving any Glyphs will clear this box.\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-single-glyph-cosmetic {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: calc(100% - 1rem);\r\n  height: 8rem;\r\n  font-size: 1.2rem;\r\n  border: 0.1rem solid #b8b8b8;\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  padding: 0.5rem;\r\n  margin-top: 1rem;\r\n  user-select: none;\r\n}\r\n\r\n.c-glyph-info {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.c-glyph-info-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  text-align: left;\r\n  margin: 1rem;\r\n}\r\n\r\n.c-cosmetic-text {\r\n  width: 18rem;\r\n}\r\n</style>\r\n"]}]}