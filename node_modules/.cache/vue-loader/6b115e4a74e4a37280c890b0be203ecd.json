{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorDefineSingleEntry.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\automator\\AutomatorDefineSingleEntry.vue","mtime":1745241597067},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBmb3JiaWRkZW5Db25zdGFudFBhdHRlcm5zIH0gZnJvbSAiQC9jb3JlL2F1dG9tYXRvciI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkF1dG9tYXRvckRlZmluZVNpbmdsZUVudHJ5IiwNCiAgcHJvcHM6IHsNCiAgICBjb25zdGFudDogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IHRydWUsDQogICAgfSwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgb2xkQWxpYXM6ICIiLA0KICAgICAgYWxpYXNTdHJpbmc6ICIiLA0KICAgICAgdmFsdWVTdHJpbmc6ICIiLA0KICAgIH07DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgbWF4TmFtZUxlbmd0aCgpIHsNCiAgICAgIHJldHVybiBBdXRvbWF0b3JEYXRhLk1BWF9BTExPV0VEX0NPTlNUQU5UX05BTUVfTEVOR1RIOw0KICAgIH0sDQogICAgbWF4VmFsdWVMZW5ndGgoKSB7DQogICAgICByZXR1cm4gQXV0b21hdG9yRGF0YS5NQVhfQUxMT1dFRF9DT05TVEFOVF9WQUxVRV9MRU5HVEg7DQogICAgfSwNCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmFsaWFzU3RyaW5nID0gdGhpcy5jb25zdGFudDsNCiAgICB0aGlzLm9sZEFsaWFzID0gdGhpcy5hbGlhc1N0cmluZzsNCiAgICB0aGlzLnZhbHVlU3RyaW5nID0gcGxheWVyLnJlYWxpdHkuYXV0b21hdG9yLmNvbnN0YW50c1t0aGlzLmFsaWFzU3RyaW5nXTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8vIFdlIGNvbWJpbmUgZXJyb3IgY2hlY2tpbmcgZnJvbSBib3RoIGlucHV0IGZpZWxkcyB0b2dldGhlciBhbmQgb25seSBzaG93IG9uZSBvZiB0aGVtIGJlY2F1c2Ugc2hvd2luZyBtdWx0aXBsZQ0KICAgIC8vIGVycm9ycyBhdCBvbmNlIGlzIHVubmVjZXNzYXJ5IGFuZCByZXN1bHRzIGluIHNvbWUgYmFkIFVJIG92ZXJsYXBwaW5nDQogICAgY3VycmVudEVycm9yKCkgew0KICAgICAgaWYgKCF0aGlzLmFsaWFzU3RyaW5nKSByZXR1cm4gbnVsbDsNCg0KICAgICAgY29uc3QgaXNWYWxpZE5hbWUgPSB0aGlzLmFsaWFzU3RyaW5nLm1hdGNoKC9eW2EtekEtWl9dW2EtekEtWl8wLTldKiQvdSk7DQogICAgICBjb25zdCBhbHJlYWR5RXhpc3RzID0gT2JqZWN0LmtleXMocGxheWVyLnJlYWxpdHkuYXV0b21hdG9yLmNvbnN0YW50cykuaW5jbHVkZXModGhpcy5hbGlhc1N0cmluZykgJiYNCiAgICAgICAgdGhpcy5hbGlhc1N0cmluZyAhPT0gdGhpcy5vbGRBbGlhczsNCiAgICAgIC8vIFVzZSB0b0xvd2VyQ2FzZSgpIGluIG9yZGVyIHRvIGNoZWNrIGFnYWluc3Qga2V5IHdvcmRzIGluIGEgY2FzZS1pbnNlbnNpdGl2ZSBtYW5uZXI7IGFsbCB0aGUgc3RvcmVkIHJlZ2V4DQogICAgICAvLyBwYXR0ZXJucyBpbiBmb3JiaWRkZW5Db25zdGFudFBhdHRlcm5zIHdoaWNoIGdldCBtZWFuaW5nZnVsbHkgY2hlY2tlZCBhZ2FpbnN0IGFyZSBhIG1peHR1cmUgb2YgbG93ZXJjYXNlDQogICAgICAvLyBsZXR0ZXJzIGFuZCByZWdleCBtZXRhY2hhcmFjdGVycw0KICAgICAgY29uc3QgaGFzQ29tbWFuZENvbmZsaWN0ID0gZm9yYmlkZGVuQ29uc3RhbnRQYXR0ZXJucy5zb21lKHAgPT4gew0KICAgICAgICBjb25zdCBtYXRjaE9iaiA9IHRoaXMuYWxpYXNTdHJpbmcudG9Mb3dlckNhc2UoKS5tYXRjaChwKTsNCiAgICAgICAgcmV0dXJuIG1hdGNoT2JqID8gbWF0Y2hPYmpbMF0gPT09IHRoaXMuYWxpYXNTdHJpbmcudG9Mb3dlckNhc2UoKSA6IGZhbHNlOw0KICAgICAgfSk7DQogICAgICBjb25zdCBzaGFkb3dzUHJvdG90eXBlID0gWyJjb25zdHJ1Y3RvciIsICJoYXNPd25Qcm9wZXJ0eSIsICJpc1Byb3RvdHlwZU9mIiwgInByb3BlcnR5SXNFbnVtZXJhYmxlIiwNCiAgICAgICAgInRvTG9jYWxlU3RyaW5nIiwgInRvU3RyaW5nIiwgInRvVmFsdWVPZiJdLnNvbWUocCA9PiB0aGlzLmFsaWFzU3RyaW5nLm1hdGNoKHApKTsNCg0KICAgICAgaWYgKCFpc1ZhbGlkTmFtZSkgcmV0dXJuICJDb25zdGFudCBuYW1lIG11c3QgYmUgYWxwaGFudW1lcmljIHdpdGhvdXQgc3BhY2VzIGFuZCBjYW5ub3Qgc3RhcnQgd2l0aCBhIG51bWJlciI7DQogICAgICBpZiAoYWxyZWFkeUV4aXN0cykgcmV0dXJuICJZb3UgaGF2ZSBhbHJlYWR5IGRlZmluZWQgYSBjb25zdGFudCB3aXRoIHRoaXMgbmFtZSI7DQogICAgICBpZiAoaGFzQ29tbWFuZENvbmZsaWN0KSByZXR1cm4gIkNvbnN0YW50IG5hbWUgY29uZmxpY3RzIHdpdGggYSBjb21tYW5kIGtleSB3b3JkIjsNCiAgICAgIGlmIChzaGFkb3dzUHJvdG90eXBlKSByZXR1cm4gIkNvbnN0YW50IG5hbWUgY2Fubm90IHNoYWRvdyBhIGJ1aWx0LWluIEphdmFzY3JpcHQgcHJvdG90eXBlIHByb3AiOw0KDQogICAgICBpZiAoIXRoaXMudmFsdWVTdHJpbmcpIHJldHVybiAiQ29uc3RhbnQgdmFsdWUgY2Fubm90IGJlIGVtcHR5IjsNCg0KICAgICAgY29uc3QgaXNOdW1iZXIgPSB0aGlzLnZhbHVlU3RyaW5nLm1hdGNoKC9eLT8oMHxbMS05XVxkKikoXC5cZCspPyhbZUVdWystXT9cZCspPyQvdSk7DQogICAgICAvLyBOb3RlOiBEb2VzIG5vdCBkbyB2YWxpZGF0aW9uIGZvciBzdHVkaWVzIGV4aXN0aW5nDQogICAgICBjb25zdCBpc1N0dWR5U3RyaW5nID0gVGltZVN0dWR5VHJlZS5pc1ZhbGlkSW1wb3J0U3RyaW5nKHRoaXMudmFsdWVTdHJpbmcpOw0KDQogICAgICBpZiAoIWlzTnVtYmVyICYmICFpc1N0dWR5U3RyaW5nKSByZXR1cm4gIkNvbnN0YW50IHZhbHVlIG11c3QgZWl0aGVyIGJlIGEgbnVtYmVyIG9yIFRpbWUgU3R1ZHkgc3RyaW5nIjsNCiAgICAgIHJldHVybiBudWxsOw0KICAgIH0sDQogICAgZXJyb3JUb29sdGlwKCkgew0KICAgICAgY29uc3QgZXJyb3IgPSB0aGlzLmN1cnJlbnRFcnJvcigpOw0KICAgICAgaWYgKCFlcnJvcikgcmV0dXJuIHVuZGVmaW5lZDsNCiAgICAgIHJldHVybiB7DQogICAgICAgIGNvbnRlbnQ6DQogICAgICAgICAgYDxkaXYgY2xhc3M9ImMtYmxvY2stYXV0b21hdG9yLWVycm9yIj4NCiAgICAgICAgICA8ZGl2PiR7ZXJyb3J9PC9kaXY+DQogICAgICAgIDwvZGl2PmAsDQogICAgICAgIGh0bWw6IHRydWUsDQogICAgICAgIHRyaWdnZXI6ICJtYW51YWwiLA0KICAgICAgICBzaG93OiB0cnVlLA0KICAgICAgICBjbGFzc2VzOiBbImdlbmVyYWwtdG9vbHRpcCJdDQogICAgICB9Ow0KICAgIH0sDQogICAgaGFuZGxlRm9jdXMoZm9jdXMpIHsNCiAgICAgIGlmIChmb2N1cyB8fCB0aGlzLmN1cnJlbnRFcnJvcigpKSByZXR1cm47DQogICAgICBpZiAoIXRoaXMuYWxpYXNTdHJpbmcpIEF1dG9tYXRvckJhY2tlbmQuZGVsZXRlQ29uc3RhbnQodGhpcy5vbGRBbGlhcyk7DQogICAgICBlbHNlIGlmICghdGhpcy5vbGRBbGlhcykgQXV0b21hdG9yQmFja2VuZC5hZGRDb25zdGFudCh0aGlzLmFsaWFzU3RyaW5nLCB0aGlzLnZhbHVlU3RyaW5nKTsNCiAgICAgIGVsc2UgaWYgKHRoaXMub2xkQWxpYXMgPT09IHRoaXMuYWxpYXNTdHJpbmcpIEF1dG9tYXRvckJhY2tlbmQubW9kaWZ5Q29uc3RhbnQodGhpcy5hbGlhc1N0cmluZywgdGhpcy52YWx1ZVN0cmluZyk7DQogICAgICBlbHNlIEF1dG9tYXRvckJhY2tlbmQucmVuYW1lQ29uc3RhbnQodGhpcy5vbGRBbGlhcywgdGhpcy5hbGlhc1N0cmluZyk7DQogICAgICB0aGlzLm9sZEFsaWFzID0gdGhpcy5hbGlhc1N0cmluZzsNCg0KICAgICAgLy8gVGhpcyBtYWtlcyBzY3JpcHRzIHJlc3BvbmQgaW1tZWRpYXRlbHkgdG8gbmV3bHktZGVmaW5lZCBjb25zdGFudHMgaWYgdGhlIHBsYXllciB0eXBlcyB0aGVtIGludG8gdGhlDQogICAgICAvLyBzY3JpcHQgYmVmb3JlIGRlZmluaW5nIHRoZW0gaGVyZQ0KICAgICAgQXV0b21hdG9yRGF0YS5yZWNhbGN1bGF0ZUVycm9ycygpOw0KICAgICAgaWYgKHBsYXllci5yZWFsaXR5LmF1dG9tYXRvci50eXBlID09PSBBVVRPTUFUT1JfVFlQRS5CTE9DSykgQmxvY2tBdXRvbWF0b3IucGFyc2VUZXh0RnJvbUJsb2NrcygpOw0KICAgIH0sDQogICAgZGVsZXRlQ29uc3RhbnQoKSB7DQogICAgICBBdXRvbWF0b3JCYWNrZW5kLmRlbGV0ZUNvbnN0YW50KHRoaXMuYWxpYXNTdHJpbmcpOw0KICAgICAgdGhpcy5vbGRBbGlhcyA9ICIiOw0KICAgICAgdGhpcy5hbGlhc1N0cmluZyA9ICIiOw0KICAgICAgdGhpcy52YWx1ZVN0cmluZyA9ICIiOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["AutomatorDefineSingleEntry.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AutomatorDefineSingleEntry.vue","sourceRoot":"src/components/tabs/automator","sourcesContent":["<script>\r\nimport { forbiddenConstantPatterns } from \"@/core/automator\";\r\n\r\nexport default {\r\n  name: \"AutomatorDefineSingleEntry\",\r\n  props: {\r\n    constant: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      oldAlias: \"\",\r\n      aliasString: \"\",\r\n      valueString: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    maxNameLength() {\r\n      return AutomatorData.MAX_ALLOWED_CONSTANT_NAME_LENGTH;\r\n    },\r\n    maxValueLength() {\r\n      return AutomatorData.MAX_ALLOWED_CONSTANT_VALUE_LENGTH;\r\n    },\r\n  },\r\n  created() {\r\n    this.aliasString = this.constant;\r\n    this.oldAlias = this.aliasString;\r\n    this.valueString = player.reality.automator.constants[this.aliasString];\r\n  },\r\n  methods: {\r\n    // We combine error checking from both input fields together and only show one of them because showing multiple\r\n    // errors at once is unnecessary and results in some bad UI overlapping\r\n    currentError() {\r\n      if (!this.aliasString) return null;\r\n\r\n      const isValidName = this.aliasString.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/u);\r\n      const alreadyExists = Object.keys(player.reality.automator.constants).includes(this.aliasString) &&\r\n        this.aliasString !== this.oldAlias;\r\n      // Use toLowerCase() in order to check against key words in a case-insensitive manner; all the stored regex\r\n      // patterns in forbiddenConstantPatterns which get meaningfully checked against are a mixture of lowercase\r\n      // letters and regex metacharacters\r\n      const hasCommandConflict = forbiddenConstantPatterns.some(p => {\r\n        const matchObj = this.aliasString.toLowerCase().match(p);\r\n        return matchObj ? matchObj[0] === this.aliasString.toLowerCase() : false;\r\n      });\r\n      const shadowsPrototype = [\"constructor\", \"hasOwnProperty\", \"isPrototypeOf\", \"propertyIsEnumerable\",\r\n        \"toLocaleString\", \"toString\", \"toValueOf\"].some(p => this.aliasString.match(p));\r\n\r\n      if (!isValidName) return \"Constant name must be alphanumeric without spaces and cannot start with a number\";\r\n      if (alreadyExists) return \"You have already defined a constant with this name\";\r\n      if (hasCommandConflict) return \"Constant name conflicts with a command key word\";\r\n      if (shadowsPrototype) return \"Constant name cannot shadow a built-in Javascript prototype prop\";\r\n\r\n      if (!this.valueString) return \"Constant value cannot be empty\";\r\n\r\n      const isNumber = this.valueString.match(/^-?(0|[1-9]\\d*)(\\.\\d+)?([eE][+-]?\\d+)?$/u);\r\n      // Note: Does not do validation for studies existing\r\n      const isStudyString = TimeStudyTree.isValidImportString(this.valueString);\r\n\r\n      if (!isNumber && !isStudyString) return \"Constant value must either be a number or Time Study string\";\r\n      return null;\r\n    },\r\n    errorTooltip() {\r\n      const error = this.currentError();\r\n      if (!error) return undefined;\r\n      return {\r\n        content:\r\n          `<div class=\"c-block-automator-error\">\r\n          <div>${error}</div>\r\n        </div>`,\r\n        html: true,\r\n        trigger: \"manual\",\r\n        show: true,\r\n        classes: [\"general-tooltip\"]\r\n      };\r\n    },\r\n    handleFocus(focus) {\r\n      if (focus || this.currentError()) return;\r\n      if (!this.aliasString) AutomatorBackend.deleteConstant(this.oldAlias);\r\n      else if (!this.oldAlias) AutomatorBackend.addConstant(this.aliasString, this.valueString);\r\n      else if (this.oldAlias === this.aliasString) AutomatorBackend.modifyConstant(this.aliasString, this.valueString);\r\n      else AutomatorBackend.renameConstant(this.oldAlias, this.aliasString);\r\n      this.oldAlias = this.aliasString;\r\n\r\n      // This makes scripts respond immediately to newly-defined constants if the player types them into the\r\n      // script before defining them here\r\n      AutomatorData.recalculateErrors();\r\n      if (player.reality.automator.type === AUTOMATOR_TYPE.BLOCK) BlockAutomator.parseTextFromBlocks();\r\n    },\r\n    deleteConstant() {\r\n      AutomatorBackend.deleteConstant(this.aliasString);\r\n      this.oldAlias = \"\";\r\n      this.aliasString = \"\";\r\n      this.valueString = \"\";\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-single-definition-container\">\r\n    <input\r\n      v-model=\"aliasString\"\r\n      class=\"c-define-textbox c-alias\"\r\n      :class=\"{ 'l-limit-textbox' : aliasString.length === maxNameLength }\"\r\n      placeholder=\"New constant...\"\r\n      :maxlength=\"maxNameLength\"\r\n      @focusin=\"handleFocus(true)\"\r\n      @focusout=\"handleFocus(false)\"\r\n    >\r\n    <span\r\n      v-if=\"aliasString\"\r\n      v-tooltip=\"errorTooltip()\"\r\n      class=\"o-arrow-padding\"\r\n    >\r\n      🠈\r\n    </span>\r\n    <input\r\n      v-if=\"aliasString\"\r\n      v-model=\"valueString\"\r\n      class=\"c-define-textbox c-value\"\r\n      :class=\"{ 'l-limit-textbox' : valueString && valueString.length === maxValueLength }\"\r\n      placeholder=\"Value for constant...\"\r\n      :maxlength=\"maxValueLength\"\r\n      @focusin=\"handleFocus(true)\"\r\n      @focusout=\"handleFocus(false)\"\r\n    >\r\n    <button\r\n      v-if=\"aliasString\"\r\n      v-tooltip=\"'Delete this constant'\"\r\n      class=\"c-delete-button fas fa-eraser\"\r\n      @click=\"deleteConstant\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.c-delete-button {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: var(--var-border-width, 0.2rem) solid var(--color-automator-controls-border);\r\n  border-radius: var(--var-border-radius, 0.3rem);\r\n  margin: 0.1rem -0.4rem 0.1rem 0.6rem;\r\n  cursor: pointer;\r\n  color: var(--color-automator-docs-font);\r\n  background-color: var(--color-automator-controls-inactive);\r\n}\r\n\r\n.c-delete-button:hover {\r\n  background-color: var(--color-automator-error-background);\r\n}\r\n\r\n.l-single-definition-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.o-arrow-padding {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 0 1rem;\r\n}\r\n\r\n.c-define-textbox {\r\n  display: inline-block;\r\n  font-family: Typewriter, serif;\r\n  font-size: 1.1rem;\r\n  background: var(--color-blockmator-block-background);\r\n  border: 0.1rem solid var(--color-blockmator-block-border);\r\n  border-radius: var(--var-border-radius, 0.5rem);\r\n  padding: 0.5rem;\r\n  color: #00ac00;\r\n}\r\n\r\n.l-error-textbox {\r\n  background: var(--color-automator-error-background);\r\n}\r\n\r\n.l-limit-textbox {\r\n  border-style: dotted;\r\n  border-color: var(--color-automator-error-outline);\r\n}\r\n\r\n.c-alias {\r\n  min-width: 14.5rem;\r\n}\r\n\r\n.c-value {\r\n  width: 100%;\r\n}\r\n</style>\r\n"]}]}