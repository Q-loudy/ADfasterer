{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\ui-modes\\prestige-header\\RealityButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\ui-modes\\prestige-header\\RealityButton.vue","mtime":1745241597595},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\babel-loader\\lib\\index.js","mtime":1745242219290},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJSZWFsaXR5QnV0dG9uIiwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY2FuUmVhbGl0eTogZmFsc2UsDQogICAgICBzaG93U3BlY2lhbEVmZmVjdDogZmFsc2UsDQogICAgICBoYXNSZWFsaXR5U3R1ZHk6IGZhbHNlLA0KICAgICAgbWFjaGluZXNHYWluZWQ6IG5ldyBEZWNpbWFsKCksDQogICAgICBwcm9qZWN0ZWRSTTogbmV3IERlY2ltYWwoKSwNCiAgICAgIG5ld0lNQ2FwOiAwLA0KICAgICAgcmVhbGl0eVRpbWU6IDAsDQogICAgICBnbHlwaExldmVsOiAwLA0KICAgICAgbmV4dEdseXBoUGVyY2VudDogMCwNCiAgICAgIG5leHRNYWNoaW5lRVA6IDAsDQogICAgICBzaGFyZHNHYWluZWQ6IDAsDQogICAgICBjdXJyZW50U2hhcmRzUmF0ZTogMCwNCiAgICAgIGJlc3RTaGFyZFJhdGU6IDAsDQogICAgICBiZXN0U2hhcmRSYXRlVmFsOiAwLA0KICAgICAgcHBHYWluZWQ6IDAsDQogICAgICBjZWxlc3RpYWxSdW5UZXh0OiBbIiIsICIiLCAiIiwgIiIsICIiXQ0KICAgIH07DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgZm9ybWF0TWFjaGluZXNHYWluZWQoKSB7DQogICAgICBpZiAodGhpcy5tYWNoaW5lc0dhaW5lZC5ndCgwKSkgcmV0dXJuIGBNYWNoaW5lcyBnYWluZWQ6ICR7Zm9ybWF0KHRoaXMubWFjaGluZXNHYWluZWQsIDIpfWA7DQogICAgICByZXR1cm4gIk5vIE1hY2hpbmVzIGdhaW5lZCI7DQogICAgfSwNCiAgICBmb3JtYXRNYWNoaW5lU3RhdHMoKSB7DQogICAgICBpZiAoIVBsYXllclByb2dyZXNzLnJlYWxpdHlVbmxvY2tlZCgpICYmIHRoaXMubmV4dE1hY2hpbmVFUC5ndCgiMWU4MDAwIikpIHsNCiAgICAgICAgcmV0dXJuIGAoQ2FwcGVkIHRoaXMgUmVhbGl0eSEpYDsNCiAgICAgIH0NCiAgICAgIGlmICh0aGlzLm1hY2hpbmVzR2FpbmVkLmd0KDApICYmIHRoaXMubWFjaGluZXNHYWluZWQubHQoMTAwKSkgew0KICAgICAgICBpZiAoc2ltdWxhdGVkUmVhbGl0eUNvdW50KGZhbHNlKSA9PT0gMCkgcmV0dXJuIGAoTmV4dCBhdCAke2Zvcm1hdCh0aGlzLm5leHRNYWNoaW5lRVAsIDIpfSBFUClgOw0KICAgICAgICByZXR1cm4gYChOZXh0ICR7Zm9ybWF0SW50KHNpbXVsYXRlZFJlYWxpdHlDb3VudChmYWxzZSkgKyAxKX0gYXQgJHtmb3JtYXQodGhpcy5uZXh0TWFjaGluZUVQLCAyKX0gRVApYDsNCiAgICAgIH0NCiAgICAgIGlmICh0aGlzLm1hY2hpbmVzR2FpbmVkLmVxKDApICYmIHRoaXMubmV3SU1DYXAgPT09IDApIHsNCiAgICAgICAgcmV0dXJuIGAoUHJvamVjdGVkOiAke2Zvcm1hdCh0aGlzLnByb2plY3RlZFJNLCAyKX0gUk0pYDsNCiAgICAgIH0NCiAgICAgIGlmICh0aGlzLm5ld0lNQ2FwICE9PSAwKSB7DQogICAgICAgIHJldHVybiBgKGlNIENhcDogJHtmb3JtYXRNYWNoaW5lcygwLCB0aGlzLm5ld0lNQ2FwKX0pYDsNCiAgICAgIH0NCiAgICAgIGlmICh0aGlzLm1hY2hpbmVzR2FpbmVkLmx0KE51bWJlci5NQVhfVkFMVUUpKSB7DQogICAgICAgIHJldHVybiBgKCR7Zm9ybWF0KHRoaXMubWFjaGluZXNHYWluZWQuZGl2aWRlKHRoaXMucmVhbGl0eVRpbWUpLCAyLCAyKX0gUk0vbWluKWA7DQogICAgICB9DQogICAgICByZXR1cm4gIiI7DQogICAgfSwNCiAgICBmb3JtYXRHbHlwaExldmVsKCkgew0KICAgICAgaWYgKHRoaXMuZ2x5cGhMZXZlbCA+PSAxMDAwMCkgcmV0dXJuIGBHbHlwaCBsZXZlbDogJHtmb3JtYXRJbnQodGhpcy5nbHlwaExldmVsKX1gOw0KICAgICAgcmV0dXJuIGBHbHlwaCBsZXZlbDogJHtmb3JtYXRJbnQodGhpcy5nbHlwaExldmVsKX0gKCR7dGhpcy5uZXh0R2x5cGhQZXJjZW50fSB0byBuZXh0KWA7DQogICAgfSwNCiAgICBzaG93U2hhcmRzUmF0ZSgpIHsNCiAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRTaGFyZHNSYXRlOw0KICAgIH0sDQogICAgc2hhcmRzR2FpbmVkVGV4dCgpIHsNCiAgICAgIHJldHVybiBxdWFudGlmeSgiUmVsaWMgU2hhcmQiLCB0aGlzLnNoYXJkc0dhaW5lZCwgMik7DQogICAgfSwNCiAgICBjbGFzc09iamVjdCgpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgICJjLXJlYWxpdHktYnV0dG9uLS11bmxvY2tlZCI6IHRoaXMuY2FuUmVhbGl0eSwNCiAgICAgICAgImMtcmVhbGl0eS1idXR0b24tLWxvY2tlZCI6ICF0aGlzLmNhblJlYWxpdHksDQogICAgICAgICJjLXJlYWxpdHktYnV0dG9uLS1zcGVjaWFsIjogdGhpcy5zaG93U3BlY2lhbEVmZmVjdCwNCiAgICAgIH07DQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgcGVyY2VudFRvTmV4dEdseXBoTGV2ZWxUZXh0KCkgew0KICAgICAgY29uc3QgZ2x5cGhTdGF0ZSA9IGdldEdseXBoTGV2ZWxJbnB1dHMoKTsNCiAgICAgIGxldCBsZXZlbCA9IGdseXBoU3RhdGUuYWN0dWFsTGV2ZWw7DQogICAgICBpZiAoIWlzRmluaXRlKGxldmVsKSkgbGV2ZWwgPSAwOw0KICAgICAgY29uc3QgZGVjaW1hbFBvaW50cyA9IHRoaXMuZ2x5cGhMZXZlbCA+IDEwMDAgPyAwIDogMTsNCiAgICAgIHJldHVybiBgJHtmb3JtYXRQZXJjZW50cyhNYXRoLm1pbigoKGxldmVsIC0gTWF0aC5mbG9vcihsZXZlbCkpKSwgMC45OTkpLCBkZWNpbWFsUG9pbnRzKX1gOw0KICAgIH0sDQogICAgdXBkYXRlKCkgew0KICAgICAgdGhpcy5oYXNSZWFsaXR5U3R1ZHkgPSBUaW1lU3R1ZHkucmVhbGl0eS5pc0JvdWdodDsNCiAgICAgIHRoaXMuY2FuUmVhbGl0eSA9IGlzUmVhbGl0eUF2YWlsYWJsZSgpOw0KICAgICAgdGhpcy5zaG93U3BlY2lhbEVmZmVjdCA9IHRoaXMuaGFzU3BlY2lhbFJld2FyZCgpOw0KICAgICAgaWYgKCF0aGlzLmNhblJlYWxpdHkpIHsNCiAgICAgICAgdGhpcy5zaGFyZHNHYWluZWQgPSAwOw0KICAgICAgICByZXR1cm47DQogICAgICB9DQogICAgICBmdW5jdGlvbiBFUGZvclJNKHJtKSB7DQogICAgICAgIGNvbnN0IGFkanVzdGVkID0gRGVjaW1hbC5kaXZpZGUocm0sIE1hY2hpbmVIYW5kbGVyLnJlYWxpdHlNYWNoaW5lTXVsdGlwbGllcik7DQogICAgICAgIGlmIChhZGp1c3RlZC5sdGUoMSkpIHJldHVybiBEZWNpbWFsLnBvdzEwKDQwMDApOw0KICAgICAgICBpZiAoYWRqdXN0ZWQubHRlKDEwKSkgcmV0dXJuIERlY2ltYWwucG93MTAoNDAwMCAvIDI3ICogKGFkanVzdGVkLnRvTnVtYmVyKCkgKyAyNikpOw0KICAgICAgICBsZXQgcmVzdWx0ID0gRGVjaW1hbC5wb3cxMCg0MDAwICogKGFkanVzdGVkLmxvZzEwKCkgLyAzICsgMSkpOw0KICAgICAgICBpZiAoIVBsYXllclByb2dyZXNzLnJlYWxpdHlVbmxvY2tlZCgpICYmIHJlc3VsdC5ndGUoIjFlNjAwMCIpKSB7DQogICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LmRpdigiMWU2MDAwIikucG93KDQpLnRpbWVzKCIxZTYwMDAiKTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gcmVzdWx0Ow0KICAgICAgfQ0KDQogICAgICBjb25zdCBtdWx0aXBsaWVyID0gc2ltdWxhdGVkUmVhbGl0eUNvdW50KGZhbHNlKSArIDE7DQogICAgICB0aGlzLnByb2plY3RlZFJNID0gTWFjaGluZUhhbmRsZXIuZ2FpbmVkUmVhbGl0eU1hY2hpbmVzLnRpbWVzKG11bHRpcGxpZXIpDQogICAgICAgIC5jbGFtcE1heChNYWNoaW5lSGFuZGxlci5oYXJkY2FwUk0pOw0KICAgICAgdGhpcy5uZXdJTUNhcCA9IE1hY2hpbmVIYW5kbGVyLnByb2plY3RlZElNQ2FwOw0KICAgICAgdGhpcy5tYWNoaW5lc0dhaW5lZCA9IHRoaXMucHJvamVjdGVkUk0uY2xhbXBNYXgoTWFjaGluZUhhbmRsZXIuZGlzdGFuY2VUb1JNQ2FwKTsNCiAgICAgIHRoaXMucmVhbGl0eVRpbWUgPSBUaW1lLnRoaXNSZWFsaXR5UmVhbFRpbWUudG90YWxNaW51dGVzOw0KICAgICAgdGhpcy5nbHlwaExldmVsID0gZ2FpbmVkR2x5cGhMZXZlbCgpLmFjdHVhbExldmVsOw0KICAgICAgdGhpcy5uZXh0R2x5cGhQZXJjZW50ID0gdGhpcy5wZXJjZW50VG9OZXh0R2x5cGhMZXZlbFRleHQoKTsNCiAgICAgIHRoaXMubmV4dE1hY2hpbmVFUCA9IEVQZm9yUk0oRGVjaW1hbC5kaXZpZGUodGhpcy5tYWNoaW5lc0dhaW5lZCwgbXVsdGlwbGllcikucGx1cygxKSk7DQogICAgICB0aGlzLnBwR2FpbmVkID0gbXVsdGlwbGllcjsNCiAgICAgIHRoaXMuc2hhcmRzR2FpbmVkID0gRWZmYXJpZy5zaGFyZHNHYWluZWQgKiBtdWx0aXBsaWVyOw0KICAgICAgdGhpcy5jdXJyZW50U2hhcmRzUmF0ZSA9ICh0aGlzLnNoYXJkc0dhaW5lZCAvIFRpbWUudGhpc1JlYWxpdHlSZWFsVGltZS50b3RhbE1pbnV0ZXMpOw0KICAgICAgdGhpcy5iZXN0U2hhcmRSYXRlID0gcGxheWVyLnJlY29yZHMudGhpc1JlYWxpdHkuYmVzdFJTbWluICogbXVsdGlwbGllcjsNCiAgICAgIHRoaXMuYmVzdFNoYXJkUmF0ZVZhbCA9IHBsYXllci5yZWNvcmRzLnRoaXNSZWFsaXR5LmJlc3RSU21pblZhbCAqIG11bHRpcGxpZXI7DQoNCiAgICAgIGNvbnN0IHRlcmVzYVJld2FyZCA9IHRoaXMuZm9ybWF0U2NhbGluZ011bHRpcGxpZXJUZXh0KA0KICAgICAgICAiR2x5cGggU2FjcmlmaWNlIiwNCiAgICAgICAgVGVyZXNhLnJ1blJld2FyZE11bHRpcGxpZXIsDQogICAgICAgIE1hdGgubWF4KFRlcmVzYS5ydW5SZXdhcmRNdWx0aXBsaWVyLCBUZXJlc2EucmV3YXJkTXVsdGlwbGllcihDdXJyZW5jeS5hbnRpbWF0dGVyLnZhbHVlKSkpOw0KICAgICAgY29uc3QgdGVyZXNhVGhyZXNob2xkID0gdGhpcy5mb3JtYXRUaHJlc2hvbGRUZXh0KA0KICAgICAgICBUZXJlc2EucmV3YXJkTXVsdGlwbGllcihDdXJyZW5jeS5hbnRpbWF0dGVyLnZhbHVlKSA+IFRlcmVzYS5ydW5SZXdhcmRNdWx0aXBsaWVyLA0KICAgICAgICBwbGF5ZXIuY2VsZXN0aWFscy50ZXJlc2EuYmVzdFJ1bkFNLA0KICAgICAgICAiYW50aW1hdHRlciIpOw0KICAgICAgdGhpcy5jZWxlc3RpYWxSdW5UZXh0ID0gWw0KICAgICAgICBbVGVyZXNhLmlzUnVubmluZywgdGVyZXNhUmV3YXJkLCB0ZXJlc2FUaHJlc2hvbGRdXTsNCiAgICB9LA0KICAgIGhhbmRsZUNsaWNrKCkgew0KICAgICAgaWYgKHRoaXMuY2FuUmVhbGl0eSkgew0KICAgICAgICByZXF1ZXN0TWFudWFsUmVhbGl0eSgpOw0KICAgICAgfQ0KICAgIH0sDQogICAgZm9ybWF0U2NhbGluZ011bHRpcGxpZXJUZXh0KHJlc291cmNlLCBiZWZvcmUsIGFmdGVyKSB7DQogICAgICByZXR1cm4gYCR7cmVzb3VyY2V9ICR7Zm9ybWF0WChiZWZvcmUsIDIsIDIpfSDinpwgJHtmb3JtYXRYKGFmdGVyLCAyLCAyKX1gOw0KICAgIH0sDQogICAgZm9ybWF0VGhyZXNob2xkVGV4dChjb25kaXRpb24sIHRocmVzaG9sZCwgcmVzb3VyY2VOYW1lKSB7DQogICAgICBpZiAoY29uZGl0aW9uKSByZXR1cm4gIiI7DQogICAgICByZXR1cm4gYCgke2Zvcm1hdCh0aHJlc2hvbGQsIDIsIDIpfSAke3Jlc291cmNlTmFtZX0gdG8gaW1wcm92ZSlgOw0KICAgIH0sDQogICAgLy8gTWFrZSB0aGUgYnV0dG9uIGhhdmUgYSB2aXN1YWwgYW5pbWF0aW9uIGlmIFJlYWxpdHlpbmcgd2lsbCBnaXZlIGEgcmV3YXJkDQogICAgaGFzU3BlY2lhbFJld2FyZCgpIHsNCiAgICAgIGlmIChUZXJlc2EuaXNSdW5uaW5nICYmIFRlcmVzYS5yZXdhcmRNdWx0aXBsaWVyKEN1cnJlbmN5LmFudGltYXR0ZXIudmFsdWUpID4gVGVyZXNhLnJ1blJld2FyZE11bHRpcGxpZXIpIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICB9DQogICAgICByZXR1cm4gQ3VycmVuY3kuZXRlcm5pdHlQb2ludHMudmFsdWUuZXhwb25lbnQgPiA0MDAwICYmDQogICAgICAgICgoRWZmYXJpZy5pc1J1bm5pbmcgJiYgIUVmZmFyaWdVbmxvY2sucmVhbGl0eS5pc1VubG9ja2VkKSB8fCAoRW5zbGF2ZWQuaXNSdW5uaW5nICYmICFFbnNsYXZlZC5pc0NvbXBsZXRlZCkpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["RealityButton.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RealityButton.vue","sourceRoot":"src/components/ui-modes/prestige-header","sourcesContent":["<script>\r\nexport default {\r\n  name: \"RealityButton\",\r\n  data() {\r\n    return {\r\n      canReality: false,\r\n      showSpecialEffect: false,\r\n      hasRealityStudy: false,\r\n      machinesGained: new Decimal(),\r\n      projectedRM: new Decimal(),\r\n      newIMCap: 0,\r\n      realityTime: 0,\r\n      glyphLevel: 0,\r\n      nextGlyphPercent: 0,\r\n      nextMachineEP: 0,\r\n      shardsGained: 0,\r\n      currentShardsRate: 0,\r\n      bestShardRate: 0,\r\n      bestShardRateVal: 0,\r\n      ppGained: 0,\r\n      celestialRunText: [\"\", \"\", \"\", \"\", \"\"]\r\n    };\r\n  },\r\n  computed: {\r\n    formatMachinesGained() {\r\n      if (this.machinesGained.gt(0)) return `Machines gained: ${format(this.machinesGained, 2)}`;\r\n      return \"No Machines gained\";\r\n    },\r\n    formatMachineStats() {\r\n      if (!PlayerProgress.realityUnlocked() && this.nextMachineEP.gt(\"1e8000\")) {\r\n        return `(Capped this Reality!)`;\r\n      }\r\n      if (this.machinesGained.gt(0) && this.machinesGained.lt(100)) {\r\n        if (simulatedRealityCount(false) === 0) return `(Next at ${format(this.nextMachineEP, 2)} EP)`;\r\n        return `(Next ${formatInt(simulatedRealityCount(false) + 1)} at ${format(this.nextMachineEP, 2)} EP)`;\r\n      }\r\n      if (this.machinesGained.eq(0) && this.newIMCap === 0) {\r\n        return `(Projected: ${format(this.projectedRM, 2)} RM)`;\r\n      }\r\n      if (this.newIMCap !== 0) {\r\n        return `(iM Cap: ${formatMachines(0, this.newIMCap)})`;\r\n      }\r\n      if (this.machinesGained.lt(Number.MAX_VALUE)) {\r\n        return `(${format(this.machinesGained.divide(this.realityTime), 2, 2)} RM/min)`;\r\n      }\r\n      return \"\";\r\n    },\r\n    formatGlyphLevel() {\r\n      if (this.glyphLevel >= 10000) return `Glyph level: ${formatInt(this.glyphLevel)}`;\r\n      return `Glyph level: ${formatInt(this.glyphLevel)} (${this.nextGlyphPercent} to next)`;\r\n    },\r\n    showShardsRate() {\r\n      return this.currentShardsRate;\r\n    },\r\n    shardsGainedText() {\r\n      return quantify(\"Relic Shard\", this.shardsGained, 2);\r\n    },\r\n    classObject() {\r\n      return {\r\n        \"c-reality-button--unlocked\": this.canReality,\r\n        \"c-reality-button--locked\": !this.canReality,\r\n        \"c-reality-button--special\": this.showSpecialEffect,\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    percentToNextGlyphLevelText() {\r\n      const glyphState = getGlyphLevelInputs();\r\n      let level = glyphState.actualLevel;\r\n      if (!isFinite(level)) level = 0;\r\n      const decimalPoints = this.glyphLevel > 1000 ? 0 : 1;\r\n      return `${formatPercents(Math.min(((level - Math.floor(level))), 0.999), decimalPoints)}`;\r\n    },\r\n    update() {\r\n      this.hasRealityStudy = TimeStudy.reality.isBought;\r\n      this.canReality = isRealityAvailable();\r\n      this.showSpecialEffect = this.hasSpecialReward();\r\n      if (!this.canReality) {\r\n        this.shardsGained = 0;\r\n        return;\r\n      }\r\n      function EPforRM(rm) {\r\n        const adjusted = Decimal.divide(rm, MachineHandler.realityMachineMultiplier);\r\n        if (adjusted.lte(1)) return Decimal.pow10(4000);\r\n        if (adjusted.lte(10)) return Decimal.pow10(4000 / 27 * (adjusted.toNumber() + 26));\r\n        let result = Decimal.pow10(4000 * (adjusted.log10() / 3 + 1));\r\n        if (!PlayerProgress.realityUnlocked() && result.gte(\"1e6000\")) {\r\n          result = result.div(\"1e6000\").pow(4).times(\"1e6000\");\r\n        }\r\n        return result;\r\n      }\r\n\r\n      const multiplier = simulatedRealityCount(false) + 1;\r\n      this.projectedRM = MachineHandler.gainedRealityMachines.times(multiplier)\r\n        .clampMax(MachineHandler.hardcapRM);\r\n      this.newIMCap = MachineHandler.projectedIMCap;\r\n      this.machinesGained = this.projectedRM.clampMax(MachineHandler.distanceToRMCap);\r\n      this.realityTime = Time.thisRealityRealTime.totalMinutes;\r\n      this.glyphLevel = gainedGlyphLevel().actualLevel;\r\n      this.nextGlyphPercent = this.percentToNextGlyphLevelText();\r\n      this.nextMachineEP = EPforRM(Decimal.divide(this.machinesGained, multiplier).plus(1));\r\n      this.ppGained = multiplier;\r\n      this.shardsGained = Effarig.shardsGained * multiplier;\r\n      this.currentShardsRate = (this.shardsGained / Time.thisRealityRealTime.totalMinutes);\r\n      this.bestShardRate = player.records.thisReality.bestRSmin * multiplier;\r\n      this.bestShardRateVal = player.records.thisReality.bestRSminVal * multiplier;\r\n\r\n      const teresaReward = this.formatScalingMultiplierText(\r\n        \"Glyph Sacrifice\",\r\n        Teresa.runRewardMultiplier,\r\n        Math.max(Teresa.runRewardMultiplier, Teresa.rewardMultiplier(Currency.antimatter.value)));\r\n      const teresaThreshold = this.formatThresholdText(\r\n        Teresa.rewardMultiplier(Currency.antimatter.value) > Teresa.runRewardMultiplier,\r\n        player.celestials.teresa.bestRunAM,\r\n        \"antimatter\");\r\n      this.celestialRunText = [\r\n        [Teresa.isRunning, teresaReward, teresaThreshold]];\r\n    },\r\n    handleClick() {\r\n      if (this.canReality) {\r\n        requestManualReality();\r\n      }\r\n    },\r\n    formatScalingMultiplierText(resource, before, after) {\r\n      return `${resource} ${formatX(before, 2, 2)} ➜ ${formatX(after, 2, 2)}`;\r\n    },\r\n    formatThresholdText(condition, threshold, resourceName) {\r\n      if (condition) return \"\";\r\n      return `(${format(threshold, 2, 2)} ${resourceName} to improve)`;\r\n    },\r\n    // Make the button have a visual animation if Realitying will give a reward\r\n    hasSpecialReward() {\r\n      if (Teresa.isRunning && Teresa.rewardMultiplier(Currency.antimatter.value) > Teresa.runRewardMultiplier) {\r\n        return true;\r\n      }\r\n      return Currency.eternityPoints.value.exponent > 4000 &&\r\n        ((Effarig.isRunning && !EffarigUnlock.reality.isUnlocked) || (Enslaved.isRunning && !Enslaved.isCompleted));\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-reality-button\">\r\n    <button\r\n      class=\"c-reality-button infotooltip\"\r\n      :class=\"classObject\"\r\n      @click=\"handleClick\"\r\n    >\r\n      <div class=\"l-reality-button__contents\">\r\n        <template v-if=\"canReality\">\r\n          <div class=\"c-reality-button__header\">\r\n            Make a new Reality\r\n          </div>\r\n          <div>{{ formatMachinesGained }} {{ formatMachineStats }}</div>\r\n          <div>{{ formatGlyphLevel }}</div>\r\n        </template>\r\n        <template v-else-if=\"hasRealityStudy\">\r\n          <div>Get {{ format(\"1e4000\") }} Eternity Points to unlock a new Reality</div>\r\n        </template>\r\n        <template v-else>\r\n          <div>Purchase the study in the Eternity tab to unlock a new Reality</div>\r\n        </template>\r\n        <div\r\n          v-if=\"canReality\"\r\n          class=\"infotooltiptext\"\r\n        >\r\n          <div>Other resources gained:</div>\r\n          <div>{{ quantifyInt(\"Perk Point\", ppGained) }}</div>\r\n          <div v-if=\"shardsGained !== 0\">\r\n            {{ shardsGainedText }} ({{ format(currentShardsRate, 2) }}/min)\r\n            <br>\r\n            Peak: {{ format(bestShardRate, 2) }}/min at {{ format(bestShardRateVal, 2) }} RS\r\n          </div>\r\n          <div\r\n            v-for=\"(celestialInfo, i) in celestialRunText\"\r\n            :key=\"i\"\r\n          >\r\n            <span v-if=\"celestialInfo[0]\">\r\n              {{ celestialInfo[1] }}\r\n              <br>\r\n              {{ celestialInfo[2] }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}