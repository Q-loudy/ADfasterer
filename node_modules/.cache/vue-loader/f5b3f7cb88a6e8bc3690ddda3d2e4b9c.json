{"remainingRequest":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js??vue-loader-options!C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\autobuyers\\AutobuyersTab.vue?vue&type=style&index=0&id=0c5cbe12&scoped=true&lang=css&","dependencies":[{"path":"C:\\Games\\ADFasterer\\ADfasterer\\src\\components\\tabs\\autobuyers\\AutobuyersTab.vue","mtime":1745241597034},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\css-loader\\dist\\cjs.js","mtime":1745242216572},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\loaders\\stylePostLoader.js","mtime":1745242222796},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":1745242214022},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1745242214069},{"path":"C:\\Games\\ADFasterer\\ADfasterer\\node_modules\\@vue\\vue-loader-v15\\lib\\index.js","mtime":1745242220175}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQovKiBUaGlzIGlzIG5lY2Vzc2FyeSBmb3IgdGhlIEV4cGFuZGluZ0NvbnRyb2xCb3ggd2l0aGluIHRoZXNlIGNvbXBvbmVudHMgdG8gcmVuZGVyIGluIHRoZSByaWdodCBzdGFja2luZyBvcmRlcg0Kd2hlbiB0aGV5J3JlIG9wZW4uIEl0IGxvb2tzIHNsaWdodGx5IGhhY2t5IGJ1dCBhY3R1YWxseSBjYW4ndCBiZSBkb25lIGFueSBvdGhlciB3YXk7IGVhY2ggQXV0b2J1eWVyQm94IGNyZWF0ZXMNCml0cyBvd24gc3RhY2tpbmcgY29udGV4dCwgd2hpY2ggbWVhbnMgdGhhdCBhbGwgei1pbmRpY2VzIHNwZWNpZmllZCB3aXRoaW4gYXJlIGVzc2VudGlhbGx5IHNjb3BlZCBhbmQgdGhlDQpBdXRvYnV5ZXJCb3ggY29tcG9uZW50cyB3aWxsIGFsd2F5cyByZW5kZXIgaW4gcGFnZSBvcmRlciByZWdhcmRsZXNzIG9mIGludGVybmFsIHotaW5kaWNlcyB3aXRob3V0IHRoZXNlLiAqLw0KLmMtcmVhbGl0eS1wb3Mgew0KICB6LWluZGV4OiAzOw0KfQ0KDQouYy1ldGVybml0eS1wb3Mgew0KICB6LWluZGV4OiAyOw0KfQ0KDQouYy1pbmZpbml0eS1wb3Mgew0KICB6LWluZGV4OiAxOw0KfQ0K"},{"version":3,"sources":["AutobuyersTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"AutobuyersTab.vue","sourceRoot":"src/components/tabs/autobuyers","sourcesContent":["<script>\r\nimport AutobuyerToggles from \"./AutobuyerToggles\";\r\nimport BigCrunchAutobuyerBox from \"./BigCrunchAutobuyerBox\";\r\nimport DimensionAutobuyerBox from \"./DimensionAutobuyerBox\";\r\nimport DimensionBoostAutobuyerBox from \"./DimensionBoostAutobuyerBox\";\r\nimport EternityAutobuyerBox from \"./EternityAutobuyerBox\";\r\nimport GalaxyAutobuyerBox from \"./GalaxyAutobuyerBox\";\r\nimport OpenModalHotkeysButton from \"@/components/OpenModalHotkeysButton\";\r\nimport RealityAutobuyerBox from \"./RealityAutobuyerBox\";\r\nimport SimpleAutobuyersMultiBox from \"./SimpleAutobuyersMultiBox\";\r\nimport TickspeedAutobuyerBox from \"./TickspeedAutobuyerBox\";\r\n\r\nexport default {\r\n  name: \"AutobuyersTab\",\r\n  components: {\r\n    AutobuyerToggles,\r\n    OpenModalHotkeysButton,\r\n    RealityAutobuyerBox,\r\n    EternityAutobuyerBox,\r\n    BigCrunchAutobuyerBox,\r\n    GalaxyAutobuyerBox,\r\n    DimensionBoostAutobuyerBox,\r\n    TickspeedAutobuyerBox,\r\n    DimensionAutobuyerBox,\r\n    SimpleAutobuyersMultiBox\r\n  },\r\n  data() {\r\n    return {\r\n      hasInfinity: false,\r\n      hasContinuum: false,\r\n      displayADAutobuyersIndividually: false,\r\n      hasInstant: false,\r\n    };\r\n  },\r\n  computed: {\r\n    // It only makes sense to show this if the player has seen gamespeed-altering effects, but we should keep it there\r\n    // permanently as soon as they have\r\n    hasSeenGamespeedAlteringEffects() {\r\n      return PlayerProgress.seenAlteredSpeed();\r\n    },\r\n    gameTickLength() {\r\n      return `${formatInt(player.options.updateRate)} ms`;\r\n    }\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.hasInfinity = PlayerProgress.infinityUnlocked();\r\n      this.hasContinuum = Laitela.continuumActive;\r\n      this.checkADAutoStatus();\r\n    },\r\n    checkADAutoStatus() {\r\n      const ad = Autobuyer.antimatterDimension;\r\n      // Since you don't need to buy autobuyers in Doomed and unbought ones are hidden, we can check if only the\r\n      // autobuyers you can see (ie, have unlocked) have been maxed.\r\n      if (Pelle.isDoomed) {\r\n        this.displayADAutobuyersIndividually = !ad.zeroIndexed.filter(x => x.isUnlocked)\r\n          .every(x => x.hasUnlimitedBulk && x.hasMaxedInterval);\r\n        return;\r\n      }\r\n      this.hasInstant = ad.hasInstant;\r\n      this.displayADAutobuyersIndividually = !ad.collapseDisplay;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"l-autobuyers-tab\">\r\n    <AutobuyerToggles />\r\n    <OpenModalHotkeysButton />\r\n    <div v-if=\"hasSeenGamespeedAlteringEffects\">\r\n      Autobuyer intervals and time-based settings are always <b>real time</b> and therefore\r\n      <br>\r\n      unaffected by anything which may alter how fast the game itself is running.\r\n      <br>\r\n      <br>\r\n    </div>\r\n    <div v-if=\"!hasInfinity\">\r\n      Challenges for upgrading autobuyers are unlocked by reaching Infinity.\r\n    </div>\r\n    <b>Autobuyers with no displayed bulk have unlimited bulk by default.</b>\r\n    <b>\r\n      Antimatter Dimension Autobuyers can have their bulk upgraded once interval is below {{ formatInt(100) }} ms.\r\n    </b>\r\n    <b v-if=\"hasInstant\">Autobuyers with \"Instant\" interval will trigger every game tick ({{ gameTickLength }}).</b>\r\n    <RealityAutobuyerBox class=\"c-reality-pos\" />\r\n    <EternityAutobuyerBox class=\"c-eternity-pos\" />\r\n    <BigCrunchAutobuyerBox class=\"c-infinity-pos\" />\r\n    <GalaxyAutobuyerBox />\r\n    <DimensionBoostAutobuyerBox />\r\n    <TickspeedAutobuyerBox v-if=\"!hasContinuum\" />\r\n    <template v-if=\"displayADAutobuyersIndividually\">\r\n      <DimensionAutobuyerBox\r\n        v-for=\"tier in 8\"\r\n        :key=\"tier\"\r\n        :tier=\"tier\"\r\n      />\r\n    </template>\r\n    <SimpleAutobuyersMultiBox />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n/* This is necessary for the ExpandingControlBox within these components to render in the right stacking order\r\nwhen they're open. It looks slightly hacky but actually can't be done any other way; each AutobuyerBox creates\r\nits own stacking context, which means that all z-indices specified within are essentially scoped and the\r\nAutobuyerBox components will always render in page order regardless of internal z-indices without these. */\r\n.c-reality-pos {\r\n  z-index: 3;\r\n}\r\n\r\n.c-eternity-pos {\r\n  z-index: 2;\r\n}\r\n\r\n.c-infinity-pos {\r\n  z-index: 1;\r\n}\r\n</style>\r\n"]}]}